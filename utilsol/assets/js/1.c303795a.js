(window.webpackJsonp=window.webpackJsonp||[]).push([[1],Array(237).concat([function(t,n,e){"use strict";e.d(n,"b",(function(){return i})),e.d(n,"c",(function(){return o})),e.d(n,"d",(function(){return u})),e.d(n,"e",(function(){return s})),e.d(n,"f",(function(){return a})),e.d(n,"g",(function(){return h})),e.d(n,"h",(function(){return c})),e.d(n,"i",(function(){return f})),e.d(n,"j",(function(){return p})),e.d(n,"k",(function(){return d})),e.d(n,"l",(function(){return g})),e.d(n,"m",(function(){return y})),e.d(n,"n",(function(){return _})),e.d(n,"o",(function(){return v})),e.d(n,"p",(function(){return m})),e.d(n,"q",(function(){return b})),e.d(n,"r",(function(){return x})),e.d(n,"s",(function(){return E})),e.d(n,"t",(function(){return C})),e.d(n,"u",(function(){return O})),e.d(n,"v",(function(){return M})),e.d(n,"w",(function(){return S})),e.d(n,"x",(function(){return I})),e.d(n,"y",(function(){return P})),e.d(n,"B",(function(){return R})),e.d(n,"z",(function(){return T})),e.d(n,"A",(function(){return N})),e.d(n,"C",(function(){return L})),e.d(n,"D",(function(){return A})),e.d(n,"E",(function(){return j})),e.d(n,"F",(function(){return D})),e.d(n,"H",(function(){return k})),e.d(n,"I",(function(){return F})),e.d(n,"G",(function(){return G})),e.d(n,"a",(function(){return z})),e.d(n,"K",(function(){return B})),e.d(n,"J",(function(){return U}));var r=e(331),l=e(244);function i(t){for(var n=p(),e=0,r=t.length;e<r;++e)b(n,t[e]);return n}function o(t,n,e){return e?(e[0]=t[0]-n,e[1]=t[1]-n,e[2]=t[2]+n,e[3]=t[3]+n,e):[t[0]-n,t[1]-n,t[2]+n,t[3]+n]}function u(t,n){return n?(n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n):t.slice()}function s(t,n,e){var r,l;return(r=n<t[0]?t[0]-n:t[2]<n?n-t[2]:0)*r+(l=e<t[1]?t[1]-e:t[3]<e?e-t[3]:0)*l}function a(t,n){return c(t,n[0],n[1])}function h(t,n){return t[0]<=n[0]&&n[2]<=t[2]&&t[1]<=n[1]&&n[3]<=t[3]}function c(t,n,e){return t[0]<=n&&n<=t[2]&&t[1]<=e&&e<=t[3]}function f(t,n){var e=t[0],l=t[1],i=t[2],o=t[3],u=n[0],s=n[1],a=r.a.UNKNOWN;return u<e?a|=r.a.LEFT:u>i&&(a|=r.a.RIGHT),s<l?a|=r.a.BELOW:s>o&&(a|=r.a.ABOVE),a===r.a.UNKNOWN&&(a=r.a.INTERSECTING),a}function p(){return[1/0,1/0,-1/0,-1/0]}function d(t,n,e,r,l){return l?(l[0]=t,l[1]=n,l[2]=e,l[3]=r,l):[t,n,e,r]}function g(t){return d(1/0,1/0,-1/0,-1/0,t)}function y(t,n){var e=t[0],r=t[1];return d(e,r,e,r,n)}function _(t,n,e,r,l){return x(g(l),t,n,e,r)}function v(t,n){return t[0]==n[0]&&t[2]==n[2]&&t[1]==n[1]&&t[3]==n[3]}function m(t,n){return n[0]<t[0]&&(t[0]=n[0]),n[2]>t[2]&&(t[2]=n[2]),n[1]<t[1]&&(t[1]=n[1]),n[3]>t[3]&&(t[3]=n[3]),t}function b(t,n){n[0]<t[0]&&(t[0]=n[0]),n[0]>t[2]&&(t[2]=n[0]),n[1]<t[1]&&(t[1]=n[1]),n[1]>t[3]&&(t[3]=n[1])}function x(t,n,e,r,l){for(;e<r;e+=l)w(t,n[e],n[e+1]);return t}function w(t,n,e){t[0]=Math.min(t[0],n),t[1]=Math.min(t[1],e),t[2]=Math.max(t[2],n),t[3]=Math.max(t[3],e)}function E(t,n){var e;return(e=n(O(t)))||(e=n(M(t)))||(e=n(A(t)))?e:(e=n(L(t)))||!1}function C(t){var n=0;return k(t)||(n=j(t)*T(t)),n}function O(t){return[t[0],t[1]]}function M(t){return[t[2],t[1]]}function S(t){return[(t[0]+t[2])/2,(t[1]+t[3])/2]}function I(t,n){var e;return"bottom-left"===n?e=O(t):"bottom-right"===n?e=M(t):"top-left"===n?e=L(t):"top-right"===n?e=A(t):Object(l.a)(!1,13),e}function P(t,n,e,r,l){var i=R(t,n,e,r),o=i[0],u=i[1],s=i[2],a=i[3],h=i[4],c=i[5],f=i[6],p=i[7];return d(Math.min(o,s,h,f),Math.min(u,a,c,p),Math.max(o,s,h,f),Math.max(u,a,c,p),l)}function R(t,n,e,r){var l=n*r[0]/2,i=n*r[1]/2,o=Math.cos(e),u=Math.sin(e),s=l*o,a=l*u,h=i*o,c=i*u,f=t[0],p=t[1];return[f-s+c,p-a-h,f-s-c,p-a+h,f+s-c,p+a+h,f+s+c,p+a-h,f-s+c,p-a-h]}function T(t){return t[3]-t[1]}function N(t,n,e){var r=e||[1/0,1/0,-1/0,-1/0];return D(t,n)?(t[0]>n[0]?r[0]=t[0]:r[0]=n[0],t[1]>n[1]?r[1]=t[1]:r[1]=n[1],t[2]<n[2]?r[2]=t[2]:r[2]=n[2],t[3]<n[3]?r[3]=t[3]:r[3]=n[3]):g(r),r}function L(t){return[t[0],t[3]]}function A(t){return[t[2],t[3]]}function j(t){return t[2]-t[0]}function D(t,n){return t[0]<=n[2]&&t[2]>=n[0]&&t[1]<=n[3]&&t[3]>=n[1]}function k(t){return t[2]<t[0]||t[3]<t[1]}function F(t,n){return n?(n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n):t}function G(t,n,e){var l=!1,i=f(t,n),o=f(t,e);if(i===r.a.INTERSECTING||o===r.a.INTERSECTING)l=!0;else{var u=t[0],s=t[1],a=t[2],h=t[3],c=n[0],p=n[1],d=e[0],g=e[1],y=(g-p)/(d-c),_=void 0,v=void 0;o&r.a.ABOVE&&!(i&r.a.ABOVE)&&(l=(_=d-(g-h)/y)>=u&&_<=a),l||!(o&r.a.RIGHT)||i&r.a.RIGHT||(l=(v=g-(d-a)*y)>=s&&v<=h),l||!(o&r.a.BELOW)||i&r.a.BELOW||(l=(_=d-(g-s)/y)>=u&&_<=a),l||!(o&r.a.LEFT)||i&r.a.LEFT||(l=(v=g-(d-u)*y)>=s&&v<=h)}return l}function z(t,n,e,r){var l=[];if(r>1)for(var i=t[2]-t[0],o=t[3]-t[1],u=0;u<r;++u)l.push(t[0]+i*u/r,t[1],t[2],t[1]+o*u/r,t[2]-i*u/r,t[3],t[0],t[3]-o*u/r);else l=[t[0],t[1],t[2],t[1],t[2],t[3],t[0],t[3]];n(l,l,2);for(var s=[],a=[],h=(u=0,l.length);u<h;u+=2)s.push(l[u]),a.push(l[u+1]);return function(t,n,e){return d(Math.min.apply(null,t),Math.min.apply(null,n),Math.max.apply(null,t),Math.max.apply(null,n),e)}(s,a,e)}function B(t,n){var e=n.getExtent(),r=S(t);if(n.canWrapX()&&(r[0]<e[0]||r[0]>=e[2])){var l=j(e),i=Math.floor((r[0]-e[0])/l)*l;t[0]-=i,t[2]-=i}return t}function U(t,n){if(n.canWrapX()){var e=n.getExtent();if(!isFinite(t[0])||!isFinite(t[2]))return[[e[0],t[1],e[2],t[3]]];B(t,n);var r=j(e);if(j(t)>r)return[[e[0],t[1],e[2],t[3]]];if(t[0]<e[0])return[[t[0]+r,t[1],e[2],t[3]],[e[0],t[1],t[2],t[3]]];if(t[2]>e[2])return[[t[0],t[1],e[2],t[3]],[e[0],t[1],t[2]-r,t[3]]]}return[t]}},function(t,n,e){"use strict";function r(){return function(){throw new Error("Unimplemented abstract method.")}()}e.d(n,"b",(function(){return r})),e.d(n,"c",(function(){return i})),e.d(n,"a",(function(){return o}));var l=0;function i(t){return t.ol_uid||(t.ol_uid=String(++l))}var o="6.15.1"},function(t,n,e){"use strict";function r(t,n,e){return Math.min(Math.max(t,n),e)}e.d(n,"b",(function(){return r})),e.d(n,"c",(function(){return l})),e.d(n,"f",(function(){return i})),e.d(n,"j",(function(){return o})),e.d(n,"i",(function(){return u})),e.d(n,"h",(function(){return s})),e.d(n,"k",(function(){return a})),e.d(n,"l",(function(){return h})),e.d(n,"g",(function(){return c})),e.d(n,"e",(function(){return f})),e.d(n,"d",(function(){return d})),e.d(n,"a",(function(){return g}));var l="cosh"in Math?Math.cosh:function(t){var n=Math.exp(t);return(n+1/n)/2},i="log2"in Math?Math.log2:function(t){return Math.log(t)*Math.LOG2E};function o(t,n,e,r,l,i){var o=l-e,s=i-r;if(0!==o||0!==s){var a=((t-e)*o+(n-r)*s)/(o*o+s*s);a>1?(e=l,r=i):a>0&&(e+=o*a,r+=s*a)}return u(t,n,e,r)}function u(t,n,e,r){var l=e-t,i=r-n;return l*l+i*i}function s(t){for(var n=t.length,e=0;e<n;e++){for(var r=e,l=Math.abs(t[e][e]),i=e+1;i<n;i++){var o=Math.abs(t[i][e]);o>l&&(l=o,r=i)}if(0===l)return null;var u=t[r];t[r]=t[e],t[e]=u;for(var s=e+1;s<n;s++)for(var a=-t[s][e]/t[e][e],h=e;h<n+1;h++)e==h?t[s][h]=0:t[s][h]+=a*t[e][h]}for(var c=new Array(n),f=n-1;f>=0;f--){c[f]=t[f][n]/t[f][f];for(var p=f-1;p>=0;p--)t[p][n]-=t[p][f]*c[f]}return c}function a(t){return 180*t/Math.PI}function h(t){return t*Math.PI/180}function c(t,n){var e=t%n;return e*n<0?e+n:e}function f(t,n,e){return t+e*(n-t)}function p(t,n){var e=Math.pow(10,n);return Math.round(t*e)/e}function d(t,n){return Math.floor(p(t,n))}function g(t,n){return Math.ceil(p(t,n))}},function(t,n,e){"use strict";n.a={CHANGE:"change",ERROR:"error",BLUR:"blur",CLEAR:"clear",CONTEXTMENU:"contextmenu",CLICK:"click",DBLCLICK:"dblclick",DRAGENTER:"dragenter",DRAGOVER:"dragover",DROP:"drop",FOCUS:"focus",KEYDOWN:"keydown",KEYPRESS:"keypress",LOAD:"load",RESIZE:"resize",TOUCHMOVE:"touchmove",WHEEL:"wheel"}},function(t,n,e){"use strict";e.r(n),e.d(n,"METERS_PER_UNIT",(function(){return i.a})),e.d(n,"Projection",(function(){return l.a})),e.d(n,"disableCoordinateWarning",(function(){return I})),e.d(n,"cloneTransform",(function(){return P})),e.d(n,"identityTransform",(function(){return R})),e.d(n,"addProjection",(function(){return T})),e.d(n,"addProjections",(function(){return N})),e.d(n,"get",(function(){return L})),e.d(n,"getPointResolution",(function(){return A})),e.d(n,"addEquivalentProjections",(function(){return j})),e.d(n,"addEquivalentTransforms",(function(){return D})),e.d(n,"clearAllProjections",(function(){return k})),e.d(n,"createProjection",(function(){return F})),e.d(n,"createTransformFromCoordinateTransform",(function(){return G})),e.d(n,"addCoordinateTransforms",(function(){return z})),e.d(n,"fromLonLat",(function(){return B})),e.d(n,"toLonLat",(function(){return U})),e.d(n,"equivalent",(function(){return q})),e.d(n,"getTransformFromProjections",(function(){return Y})),e.d(n,"getTransform",(function(){return X})),e.d(n,"transform",(function(){return V})),e.d(n,"transformExtent",(function(){return W})),e.d(n,"transformWithProjections",(function(){return Z})),e.d(n,"setUserProjection",(function(){return K})),e.d(n,"clearUserProjection",(function(){return J})),e.d(n,"getUserProjection",(function(){return Q})),e.d(n,"useGeographic",(function(){return $})),e.d(n,"toUserCoordinate",(function(){return tt})),e.d(n,"fromUserCoordinate",(function(){return nt})),e.d(n,"toUserExtent",(function(){return et})),e.d(n,"fromUserExtent",(function(){return rt})),e.d(n,"toUserResolution",(function(){return lt})),e.d(n,"fromUserResolution",(function(){return it})),e.d(n,"createSafeCoordinateTransform",(function(){return ot})),e.d(n,"addCommon",(function(){return ut}));var r,l=e(291),i=e(256),o=e(239),u=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),s=6378137*Math.PI,a=[-s,-s,s,s],h=[-180,-85,180,85],c=6378137*Math.log(Math.tan(Math.PI/2)),f=function(t){function n(n){return t.call(this,{code:n,units:i.b.METERS,extent:a,global:!0,worldExtent:h,getPointResolution:function(t,n){return t/Object(o.c)(n[1]/6378137)}})||this}return u(n,t),n}(l.a),p=[new f("EPSG:3857"),new f("EPSG:102100"),new f("EPSG:102113"),new f("EPSG:900913"),new f("http://www.opengis.net/def/crs/EPSG/0/3857"),new f("http://www.opengis.net/gml/srs/epsg.xml#3857")];function d(t,n,e){var r=t.length,l=e>1?e:2,i=n;void 0===i&&(i=l>2?t.slice():new Array(r));for(var o=0;o<r;o+=l){i[o]=s*t[o]/180;var u=6378137*Math.log(Math.tan(Math.PI*(+t[o+1]+90)/360));u>c?u=c:u<-c&&(u=-c),i[o+1]=u}return i}function g(t,n,e){var r=t.length,l=e>1?e:2,i=n;void 0===i&&(i=l>2?t.slice():new Array(r));for(var o=0;o<r;o+=l)i[o]=180*t[o]/s,i[o+1]=360*Math.atan(Math.exp(t[o+1]/6378137))/Math.PI-90;return i}var y=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),_=[-180,-90,180,90],v=6378137*Math.PI/180,m=function(t){function n(n,e){return t.call(this,{code:n,units:i.b.DEGREES,extent:_,axisOrientation:e,global:!0,metersPerUnit:v,worldExtent:_})||this}return y(n,t),n}(l.a),b=[new m("CRS:84"),new m("EPSG:4326","neu"),new m("urn:ogc:def:crs:OGC:1.3:CRS84"),new m("urn:ogc:def:crs:OGC:2:84"),new m("http://www.opengis.net/def/crs/OGC/1.3/CRS84"),new m("http://www.opengis.net/gml/srs/epsg.xml#4326","neu"),new m("http://www.opengis.net/def/crs/EPSG/0/4326","neu")],x={};e(242);var w={};function E(t,n,e){var r=t.getCode(),l=n.getCode();r in w||(w[r]={}),w[r][l]=e}var C=e(237),O=e(290),M=e(330),S=!0;function I(t){S=!(void 0===t||t)}function P(t,n,e){var r;if(void 0!==n){for(var l=0,i=t.length;l<i;++l)n[l]=t[l];r=n}else r=t.slice();return r}function R(t,n,e){if(void 0!==n&&t!==n){for(var r=0,l=t.length;r<l;++r)n[r]=t[r];t=n}return t}function T(t){!function(t,n){x[t]=n}(t.getCode(),t),E(t,t,P)}function N(t){t.forEach(T)}function L(t){return"string"==typeof t?x[n=t]||x[n.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\w+)$/,"EPSG:$3")]||null:t||null;var n}function A(t,n,e,r){var l,o=(t=L(t)).getPointResolutionFunc();if(o){if(l=o(n,e),r&&r!==t.getUnits())(s=t.getMetersPerUnit())&&(l=l*s/i.a[r])}else{var u=t.getUnits();if(u==i.b.DEGREES&&!r||r==i.b.DEGREES)l=n;else{var s,a=Y(t,L("EPSG:4326"));if(a===R&&u!==i.b.DEGREES)l=n*t.getMetersPerUnit();else{var h=[e[0]-n/2,e[1],e[0]+n/2,e[1],e[0],e[1]-n/2,e[0],e[1]+n/2];h=a(h,h,2),l=(Object(M.a)(h.slice(0,2),h.slice(2,4))+Object(M.a)(h.slice(4,6),h.slice(6,8)))/2}void 0!==(s=r?i.a[r]:t.getMetersPerUnit())&&(l/=s)}}return l}function j(t){N(t),t.forEach((function(n){t.forEach((function(t){n!==t&&E(n,t,P)}))}))}function D(t,n,e,r){t.forEach((function(t){n.forEach((function(n){E(t,n,e),E(n,t,r)}))}))}function k(){x={},w={}}function F(t,n){return t?"string"==typeof t?L(t):t:L(n)}function G(t){return function(n,e,r){for(var l=n.length,i=void 0!==r?r:2,o=void 0!==e?e:new Array(l),u=0;u<l;u+=i)for(var s=t(n.slice(u,u+i)),a=s.length,h=0,c=i;h<c;++h)o[u+h]=h>=a?n[u+h]:s[h];return o}}function z(t,n,e,r){var l=L(t),i=L(n);E(l,i,G(e)),E(i,l,G(r))}function B(t,n){return I(),V(t,"EPSG:4326",void 0!==n?n:"EPSG:3857")}function U(t,n){var e=V(t,void 0!==n?n:"EPSG:3857","EPSG:4326"),r=e[0];return(r<-180||r>180)&&(e[0]=Object(o.g)(r+180,360)-180),e}function q(t,n){if(t===n)return!0;var e=t.getUnits()===n.getUnits();return(t.getCode()===n.getCode()||Y(t,n)===P)&&e}function Y(t,n){var e=function(t,n){var e;return t in w&&n in w[t]&&(e=w[t][n]),e}(t.getCode(),n.getCode());return e||(e=R),e}function X(t,n){return Y(L(t),L(n))}function V(t,n,e){return X(n,e)(t,void 0,t.length)}function W(t,n,e,r){var l=X(n,e);return Object(C.a)(t,l,void 0,r)}function Z(t,n,e){return Y(n,e)(t)}var H=null;function K(t){H=L(t)}function J(){H=null}function Q(){return H}function $(){K("EPSG:4326")}function tt(t,n){return H?V(t,n,H):t}function nt(t,n){return H?V(t,H,n):(S&&!Object(O.b)(t,[0,0])&&t[0]>=-180&&t[0]<=180&&t[1]>=-90&&t[1]<=90&&(S=!1,console.warn("Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.")),t)}function et(t,n){return H?W(t,n,H):t}function rt(t,n){return H?W(t,H,n):t}function lt(t,n){if(!H)return t;var e=L(n).getUnits(),r=H.getUnits();return e&&r?t*i.a[e]/i.a[r]:t}function it(t,n){if(!H)return t;var e=L(n).getUnits(),r=H.getUnits();return e&&r?t*i.a[r]/i.a[e]:t}function ot(t,n,e){return function(r){var l,i;if(t.canWrapX()){var u=t.getExtent(),s=Object(C.E)(u);r=r.slice(0),(i=Object(O.c)(r,t,s))&&(r[0]=r[0]-i*s),r[0]=Object(o.b)(r[0],u[0],u[2]),r[1]=Object(o.b)(r[1],u[1],u[3]),l=e(r)}else l=e(r);return i&&n.canWrapX()&&(l[0]+=i*Object(C.E)(n.getExtent())),l}}function ut(){j(p),j(b),D(b,p,d,g)}ut()},function(t,n,e){"use strict";e.d(n,"a",(function(){return r})),e.d(n,"b",(function(){return l})),e.d(n,"c",(function(){return i})),e.d(n,"d",(function(){return o}));var r="function"==typeof Object.assign?Object.assign:function(t,n){if(null==t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),r=1,l=arguments.length;r<l;++r){var i=arguments[r];if(null!=i)for(var o in i)i.hasOwnProperty(o)&&(e[o]=i[o])}return e};function l(t){for(var n in t)delete t[n]}var i="function"==typeof Object.values?Object.values:function(t){var n=[];for(var e in t)n.push(t[e]);return n};function o(t){var n;for(n in t)return!1;return!n}},function(t,n,e){"use strict";function r(t,n,e){for(var r,i,o=e||l,u=0,s=t.length,a=!1;u<s;)(i=+o(t[r=u+(s-u>>1)],n))<0?u=r+1:(s=r,a=!i);return a?u:~u}function l(t,n){return t>n?1:t<n?-1:0}function i(t,n,e){var r=t.length;if(t[0]<=n)return 0;if(n<=t[r-1])return r-1;var l=void 0;if(e>0){for(l=1;l<r;++l)if(t[l]<n)return l-1}else if(e<0){for(l=1;l<r;++l)if(t[l]<=n)return l}else for(l=1;l<r;++l){if(t[l]==n)return l;if(t[l]<n)return"function"==typeof e?e(n,t[l-1],t[l])>0?l-1:l:t[l-1]-n<n-t[l]?l-1:l}return r-1}function o(t,n,e){for(;n<e;){var r=t[n];t[n]=t[e],t[e]=r,++n,--e}}function u(t,n){for(var e=Array.isArray(n)?n:[n],r=e.length,l=0;l<r;l++)t[t.length]=e[l]}function s(t,n){var e=t.length;if(e!==n.length)return!1;for(var r=0;r<e;r++)if(t[r]!==n[r])return!1;return!0}function a(t,n,e){var r=n||l;return t.every((function(n,l){if(0===l)return!0;var i=r(t[l-1],n);return!(i>0||e&&0===i)}))}e.d(n,"a",(function(){return r})),e.d(n,"f",(function(){return l})),e.d(n,"e",(function(){return i})),e.d(n,"g",(function(){return o})),e.d(n,"c",(function(){return u})),e.d(n,"b",(function(){return s})),e.d(n,"d",(function(){return a}))},function(t,n,e){"use strict";e.d(n,"a",(function(){return l}));var r=e(332);function l(t,n){if(!t)throw new r.a(n)}},function(t,n,e){"use strict";e.d(n,"a",(function(){return l})),e.d(n,"b",(function(){return i})),e.d(n,"c",(function(){return o}));var r=e(242);function l(t,n,e,r,l){if(r&&r!==t&&(e=e.bind(r)),l){var i=e;e=function(){t.removeEventListener(n,e),i.apply(this,arguments)}}var o={target:t,type:n,listener:e};return t.addEventListener(n,e),o}function i(t,n,e,r){return l(t,n,e,r,!0)}function o(t){t&&t.target&&(t.target.removeEventListener(t.type,t.listener),Object(r.b)(t))}},function(t,n,e){"use strict";e.d(n,"a",(function(){return l})),e.d(n,"d",(function(){return i})),e.d(n,"c",(function(){return o})),e.d(n,"b",(function(){return u})),e.d(n,"h",(function(){return s})),e.d(n,"f",(function(){return a})),e.d(n,"e",(function(){return h})),e.d(n,"g",(function(){return c}));var r=e(259);function l(t,n,e,l){var i;return i=e&&e.length?e.shift():r.g?new OffscreenCanvas(t||300,n||300):document.createElement("canvas"),t&&(i.width=t),n&&(i.height=n),i.getContext("2d",l)}function i(t){var n=t.canvas;n.width=1,n.height=1,t.clearRect(0,0,1,1)}function o(t){var n=t.offsetWidth,e=getComputedStyle(t);return n+=parseInt(e.marginLeft,10)+parseInt(e.marginRight,10)}function u(t){var n=t.offsetHeight,e=getComputedStyle(t);return n+=parseInt(e.marginTop,10)+parseInt(e.marginBottom,10)}function s(t,n){var e=n.parentNode;e&&e.replaceChild(t,n)}function a(t){return t&&t.parentNode?t.parentNode.removeChild(t):null}function h(t){for(;t.lastChild;)t.removeChild(t.lastChild)}function c(t,n){for(var e=t.childNodes,r=0;;++r){var l=e[r],i=n[r];if(!l&&!i)break;l!==i&&(l?i?t.insertBefore(i,l):(t.removeChild(l),--r):t.appendChild(i))}}},function(t,n,e){"use strict";e.d(n,"b",(function(){return l})),e.d(n,"a",(function(){return i})),e.d(n,"c",(function(){return o})),e.d(n,"d",(function(){return u}));var r=e(243);function l(){return!0}function i(){return!1}function o(){}function u(t){var n,e,l,i=!1;return function(){var o=Array.prototype.slice.call(arguments);return i&&this===l&&Object(r.b)(o,e)||(i=!0,l=this,e=o,n=t.apply(this,arguments)),n}}},function(t,n,e){"use strict";var r,l=e(249),i=e(294),o=e(304),u=e(242),s=e(238),a=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),h=function(t){function n(n,e,r){var l=t.call(this,n)||this;return l.key=e,l.oldValue=r,l}return a(n,t),n}(l.a),c=function(t){function n(n){var e=t.call(this)||this;return e.on,e.once,e.un,Object(s.c)(e),e.values_=null,void 0!==n&&e.setProperties(n),e}return a(n,t),n.prototype.get=function(t){var n;return this.values_&&this.values_.hasOwnProperty(t)&&(n=this.values_[t]),n},n.prototype.getKeys=function(){return this.values_&&Object.keys(this.values_)||[]},n.prototype.getProperties=function(){return this.values_&&Object(u.a)({},this.values_)||{}},n.prototype.hasProperties=function(){return!!this.values_},n.prototype.notify=function(t,n){var e;e="change:".concat(t),this.hasListener(e)&&this.dispatchEvent(new h(e,t,n)),e=i.a.PROPERTYCHANGE,this.hasListener(e)&&this.dispatchEvent(new h(e,t,n))},n.prototype.addChangeListener=function(t,n){this.addEventListener("change:".concat(t),n)},n.prototype.removeChangeListener=function(t,n){this.removeEventListener("change:".concat(t),n)},n.prototype.set=function(t,n,e){var r=this.values_||(this.values_={});if(e)r[t]=n;else{var l=r[t];r[t]=n,l!==n&&this.notify(t,l)}},n.prototype.setProperties=function(t,n){for(var e in t)this.set(e,t[e],n)},n.prototype.applyProperties=function(t){t.values_&&Object(u.a)(this.values_||(this.values_={}),t.values_)},n.prototype.unset=function(t,n){if(this.values_&&t in this.values_){var e=this.values_[t];delete this.values_[t],Object(u.d)(this.values_)&&(this.values_=null),n||this.notify(t,e)}},n}(o.a);n.a=c},function(t,n,e){"use strict";var r=function(){function t(t){this.propagationStopped,this.defaultPrevented,this.type=t,this.target=null}return t.prototype.preventDefault=function(){this.defaultPrevented=!0},t.prototype.stopPropagation=function(){this.propagationStopped=!0},t}();n.a=r},function(t,n,e){"use strict";var r=function(){function t(t){var n=t||{};this.color_=void 0!==n.color?n.color:null}return t.prototype.clone=function(){var n=this.getColor();return new t({color:Array.isArray(n)?n.slice():n||void 0})},t.prototype.getColor=function(){return this.color_},t.prototype.setColor=function(t){this.color_=t},t}();n.a=r},function(t,n,e){"use strict";var r=e(238),l=e(279),i=function(){function t(t){this.opacity_=t.opacity,this.rotateWithView_=t.rotateWithView,this.rotation_=t.rotation,this.scale_=t.scale,this.scaleArray_=Object(l.c)(t.scale),this.displacement_=t.displacement,this.declutterMode_=t.declutterMode}return t.prototype.clone=function(){var n=this.getScale();return new t({opacity:this.getOpacity(),scale:Array.isArray(n)?n.slice():n,rotation:this.getRotation(),rotateWithView:this.getRotateWithView(),displacement:this.getDisplacement().slice(),declutterMode:this.getDeclutterMode()})},t.prototype.getOpacity=function(){return this.opacity_},t.prototype.getRotateWithView=function(){return this.rotateWithView_},t.prototype.getRotation=function(){return this.rotation_},t.prototype.getScale=function(){return this.scale_},t.prototype.getScaleArray=function(){return this.scaleArray_},t.prototype.getDisplacement=function(){return this.displacement_},t.prototype.getDeclutterMode=function(){return this.declutterMode_},t.prototype.getAnchor=function(){return Object(r.b)()},t.prototype.getImage=function(t){return Object(r.b)()},t.prototype.getHitDetectionImage=function(){return Object(r.b)()},t.prototype.getPixelRatio=function(t){return 1},t.prototype.getImageState=function(){return Object(r.b)()},t.prototype.getImageSize=function(){return Object(r.b)()},t.prototype.getOrigin=function(){return Object(r.b)()},t.prototype.getSize=function(){return Object(r.b)()},t.prototype.setDisplacement=function(t){this.displacement_=t},t.prototype.setOpacity=function(t){this.opacity_=t},t.prototype.setRotateWithView=function(t){this.rotateWithView_=t},t.prototype.setRotation=function(t){this.rotation_=t},t.prototype.setScale=function(t){this.scale_=t,this.scaleArray_=Object(l.c)(t)},t.prototype.listenImageChange=function(t){Object(r.b)()},t.prototype.load=function(){Object(r.b)()},t.prototype.unlistenImageChange=function(t){Object(r.b)()},t}();n.a=i},function(t,n,e){"use strict";e.r(n);var r,l=e(289),i=e(339),o=e.n(i),u=e(242),s=e(260),a=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),h="renderOrder",c=function(t){function n(n){var e=this,r=n||{},l=Object(u.a)({},r);return delete l.style,delete l.renderBuffer,delete l.updateWhileAnimating,delete l.updateWhileInteracting,(e=t.call(this,l)||this).declutter_=void 0!==r.declutter&&r.declutter,e.renderBuffer_=void 0!==r.renderBuffer?r.renderBuffer:100,e.style_=null,e.styleFunction_=void 0,e.setStyle(r.style),e.updateWhileAnimating_=void 0!==r.updateWhileAnimating&&r.updateWhileAnimating,e.updateWhileInteracting_=void 0!==r.updateWhileInteracting&&r.updateWhileInteracting,e}return a(n,t),n.prototype.getDeclutter=function(){return this.declutter_},n.prototype.getFeatures=function(n){return t.prototype.getFeatures.call(this,n)},n.prototype.getRenderBuffer=function(){return this.renderBuffer_},n.prototype.getRenderOrder=function(){return this.get(h)},n.prototype.getStyle=function(){return this.style_},n.prototype.getStyleFunction=function(){return this.styleFunction_},n.prototype.getUpdateWhileAnimating=function(){return this.updateWhileAnimating_},n.prototype.getUpdateWhileInteracting=function(){return this.updateWhileInteracting_},n.prototype.renderDeclutter=function(t){t.declutterTree||(t.declutterTree=new o.a(9)),this.getRenderer().renderDeclutter(t)},n.prototype.setRenderOrder=function(t){this.set(h,t)},n.prototype.setStyle=function(t){this.style_=void 0!==t?t:s.a,this.styleFunction_=null===t?void 0:Object(s.c)(this.style_),this.changed()},n}(l.a),f={BEGIN_GEOMETRY:0,BEGIN_PATH:1,CIRCLE:2,CLOSE_PATH:3,CUSTOM:4,DRAW_CHARS:5,DRAW_IMAGE:6,END_GEOMETRY:7,FILL:8,MOVE_TO_LINE_TO:9,SET_FILL_STYLE:10,SET_STROKE_STYLE:11,STROKE:12},p=[f.FILL],d=[f.STROKE],g=[f.BEGIN_PATH],y=[f.CLOSE_PATH],_=f,v=e(331),m=function(){function t(){}return t.prototype.drawCustom=function(t,n,e,r){},t.prototype.drawGeometry=function(t){},t.prototype.setStyle=function(t){},t.prototype.drawCircle=function(t,n){},t.prototype.drawFeature=function(t,n){},t.prototype.drawGeometryCollection=function(t,n){},t.prototype.drawLineString=function(t,n){},t.prototype.drawMultiLineString=function(t,n){},t.prototype.drawMultiPoint=function(t,n){},t.prototype.drawMultiPolygon=function(t,n){},t.prototype.drawPoint=function(t,n){},t.prototype.drawPolygon=function(t,n){},t.prototype.drawText=function(t,n){},t.prototype.setFillStrokeStyle=function(t,n){},t.prototype.setImageStyle=function(t,n){},t.prototype.setTextStyle=function(t,n){},t}(),b=e(301),x=e(237),w=e(271),E=e(243),C=e(277),O=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),M=function(t){function n(n,e,r,l){var i=t.call(this)||this;return i.tolerance=n,i.maxExtent=e,i.pixelRatio=l,i.maxLineWidth=0,i.resolution=r,i.beginGeometryInstruction1_=null,i.beginGeometryInstruction2_=null,i.bufferedMaxExtent_=null,i.instructions=[],i.coordinates=[],i.tmpCoordinate_=[],i.hitDetectionInstructions=[],i.state={},i}return O(n,t),n.prototype.applyPixelRatio=function(t){var n=this.pixelRatio;return 1==n?t:t.map((function(t){return t*n}))},n.prototype.appendFlatPointCoordinates=function(t,n){for(var e=this.getBufferedMaxExtent(),r=this.tmpCoordinate_,l=this.coordinates,i=l.length,o=0,u=t.length;o<u;o+=n)r[0]=t[o],r[1]=t[o+1],Object(x.f)(e,r)&&(l[i++]=r[0],l[i++]=r[1]);return i},n.prototype.appendFlatLineCoordinates=function(t,n,e,r,l,i){var o=this.coordinates,u=o.length,s=this.getBufferedMaxExtent();i&&(n+=r);var a,h,c,f=t[n],p=t[n+1],d=this.tmpCoordinate_,g=!0;for(a=n+r;a<e;a+=r)d[0]=t[a],d[1]=t[a+1],(c=Object(x.i)(s,d))!==h?(g&&(o[u++]=f,o[u++]=p,g=!1),o[u++]=d[0],o[u++]=d[1]):c===v.a.INTERSECTING?(o[u++]=d[0],o[u++]=d[1],g=!1):g=!0,f=d[0],p=d[1],h=c;return(l&&g||a===n+r)&&(o[u++]=f,o[u++]=p),u},n.prototype.drawCustomCoordinates_=function(t,n,e,r,l){for(var i=0,o=e.length;i<o;++i){var u=e[i],s=this.appendFlatLineCoordinates(t,n,u,r,!1,!1);l.push(s),n=u}return n},n.prototype.drawCustom=function(t,n,e,r){this.beginGeometry(t,n);var l,i,o,u,s,a=t.getType(),h=t.getStride(),c=this.coordinates.length;switch(a){case"MultiPolygon":l=t.getOrientedFlatCoordinates(),u=[];var f=t.getEndss();s=0;for(var p=0,d=f.length;p<d;++p){var g=[];s=this.drawCustomCoordinates_(l,s,f[p],h,g),u.push(g)}this.instructions.push([_.CUSTOM,c,u,t,e,C.c]),this.hitDetectionInstructions.push([_.CUSTOM,c,u,t,r||e,C.c]);break;case"Polygon":case"MultiLineString":o=[],l="Polygon"==a?t.getOrientedFlatCoordinates():t.getFlatCoordinates(),s=this.drawCustomCoordinates_(l,0,t.getEnds(),h,o),this.instructions.push([_.CUSTOM,c,o,t,e,C.b]),this.hitDetectionInstructions.push([_.CUSTOM,c,o,t,r||e,C.b]);break;case"LineString":case"Circle":l=t.getFlatCoordinates(),i=this.appendFlatLineCoordinates(l,0,l.length,h,!1,!1),this.instructions.push([_.CUSTOM,c,i,t,e,C.a]),this.hitDetectionInstructions.push([_.CUSTOM,c,i,t,r||e,C.a]);break;case"MultiPoint":l=t.getFlatCoordinates(),(i=this.appendFlatPointCoordinates(l,h))>c&&(this.instructions.push([_.CUSTOM,c,i,t,e,C.a]),this.hitDetectionInstructions.push([_.CUSTOM,c,i,t,r||e,C.a]));break;case"Point":l=t.getFlatCoordinates(),this.coordinates.push(l[0],l[1]),i=this.coordinates.length,this.instructions.push([_.CUSTOM,c,i,t,e]),this.hitDetectionInstructions.push([_.CUSTOM,c,i,t,r||e])}this.endGeometry(n)},n.prototype.beginGeometry=function(t,n){this.beginGeometryInstruction1_=[_.BEGIN_GEOMETRY,n,0,t],this.instructions.push(this.beginGeometryInstruction1_),this.beginGeometryInstruction2_=[_.BEGIN_GEOMETRY,n,0,t],this.hitDetectionInstructions.push(this.beginGeometryInstruction2_)},n.prototype.finish=function(){return{instructions:this.instructions,hitDetectionInstructions:this.hitDetectionInstructions,coordinates:this.coordinates}},n.prototype.reverseHitDetectionInstructions=function(){var t,n=this.hitDetectionInstructions;n.reverse();var e,r,l=n.length,i=-1;for(t=0;t<l;++t)(r=(e=n[t])[0])==_.END_GEOMETRY?i=t:r==_.BEGIN_GEOMETRY&&(e[2]=t,Object(E.g)(this.hitDetectionInstructions,i,t),i=-1)},n.prototype.setFillStrokeStyle=function(t,n){var e=this.state;if(t){var r=t.getColor();e.fillStyle=Object(b.a)(r||w.b)}else e.fillStyle=void 0;if(n){var l=n.getColor();e.strokeStyle=Object(b.a)(l||w.k);var i=n.getLineCap();e.lineCap=void 0!==i?i:w.d;var o=n.getLineDash();e.lineDash=o?o.slice():w.e;var u=n.getLineDashOffset();e.lineDashOffset=u||w.f;var s=n.getLineJoin();e.lineJoin=void 0!==s?s:w.g;var a=n.getWidth();e.lineWidth=void 0!==a?a:w.h;var h=n.getMiterLimit();e.miterLimit=void 0!==h?h:w.i,e.lineWidth>this.maxLineWidth&&(this.maxLineWidth=e.lineWidth,this.bufferedMaxExtent_=null)}else e.strokeStyle=void 0,e.lineCap=void 0,e.lineDash=null,e.lineDashOffset=void 0,e.lineJoin=void 0,e.lineWidth=void 0,e.miterLimit=void 0},n.prototype.createFill=function(t){var n=t.fillStyle,e=[_.SET_FILL_STYLE,n];return"string"!=typeof n&&e.push(!0),e},n.prototype.applyStroke=function(t){this.instructions.push(this.createStroke(t))},n.prototype.createStroke=function(t){return[_.SET_STROKE_STYLE,t.strokeStyle,t.lineWidth*this.pixelRatio,t.lineCap,t.lineJoin,t.miterLimit,this.applyPixelRatio(t.lineDash),t.lineDashOffset*this.pixelRatio]},n.prototype.updateFillStyle=function(t,n){var e=t.fillStyle;"string"==typeof e&&t.currentFillStyle==e||(void 0!==e&&this.instructions.push(n.call(this,t)),t.currentFillStyle=e)},n.prototype.updateStrokeStyle=function(t,n){var e=t.strokeStyle,r=t.lineCap,l=t.lineDash,i=t.lineDashOffset,o=t.lineJoin,u=t.lineWidth,s=t.miterLimit;(t.currentStrokeStyle!=e||t.currentLineCap!=r||l!=t.currentLineDash&&!Object(E.b)(t.currentLineDash,l)||t.currentLineDashOffset!=i||t.currentLineJoin!=o||t.currentLineWidth!=u||t.currentMiterLimit!=s)&&(void 0!==e&&n.call(this,t),t.currentStrokeStyle=e,t.currentLineCap=r,t.currentLineDash=l,t.currentLineDashOffset=i,t.currentLineJoin=o,t.currentLineWidth=u,t.currentMiterLimit=s)},n.prototype.endGeometry=function(t){this.beginGeometryInstruction1_[2]=this.instructions.length,this.beginGeometryInstruction1_=null,this.beginGeometryInstruction2_[2]=this.hitDetectionInstructions.length,this.beginGeometryInstruction2_=null;var n=[_.END_GEOMETRY,t];this.instructions.push(n),this.hitDetectionInstructions.push(n)},n.prototype.getBufferedMaxExtent=function(){if(!this.bufferedMaxExtent_&&(this.bufferedMaxExtent_=Object(x.d)(this.maxExtent),this.maxLineWidth>0)){var t=this.resolution*(this.maxLineWidth+1)/2;Object(x.c)(this.bufferedMaxExtent_,t,this.bufferedMaxExtent_)}return this.bufferedMaxExtent_},n}(m),S=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),I=function(t){function n(n,e,r,l){var i=t.call(this,n,e,r,l)||this;return i.hitDetectionImage_=null,i.image_=null,i.imagePixelRatio_=void 0,i.anchorX_=void 0,i.anchorY_=void 0,i.height_=void 0,i.opacity_=void 0,i.originX_=void 0,i.originY_=void 0,i.rotateWithView_=void 0,i.rotation_=void 0,i.scale_=void 0,i.width_=void 0,i.declutterMode_=void 0,i.declutterImageWithText_=void 0,i}return S(n,t),n.prototype.drawPoint=function(t,n){if(this.image_){this.beginGeometry(t,n);var e=t.getFlatCoordinates(),r=t.getStride(),l=this.coordinates.length,i=this.appendFlatPointCoordinates(e,r);this.instructions.push([_.DRAW_IMAGE,l,i,this.image_,this.anchorX_*this.imagePixelRatio_,this.anchorY_*this.imagePixelRatio_,Math.ceil(this.height_*this.imagePixelRatio_),this.opacity_,this.originX_*this.imagePixelRatio_,this.originY_*this.imagePixelRatio_,this.rotateWithView_,this.rotation_,[this.scale_[0]*this.pixelRatio/this.imagePixelRatio_,this.scale_[1]*this.pixelRatio/this.imagePixelRatio_],Math.ceil(this.width_*this.imagePixelRatio_),this.declutterMode_,this.declutterImageWithText_]),this.hitDetectionInstructions.push([_.DRAW_IMAGE,l,i,this.hitDetectionImage_,this.anchorX_,this.anchorY_,this.height_,this.opacity_,this.originX_,this.originY_,this.rotateWithView_,this.rotation_,this.scale_,this.width_,this.declutterMode_,this.declutterImageWithText_]),this.endGeometry(n)}},n.prototype.drawMultiPoint=function(t,n){if(this.image_){this.beginGeometry(t,n);var e=t.getFlatCoordinates(),r=t.getStride(),l=this.coordinates.length,i=this.appendFlatPointCoordinates(e,r);this.instructions.push([_.DRAW_IMAGE,l,i,this.image_,this.anchorX_*this.imagePixelRatio_,this.anchorY_*this.imagePixelRatio_,Math.ceil(this.height_*this.imagePixelRatio_),this.opacity_,this.originX_*this.imagePixelRatio_,this.originY_*this.imagePixelRatio_,this.rotateWithView_,this.rotation_,[this.scale_[0]*this.pixelRatio/this.imagePixelRatio_,this.scale_[1]*this.pixelRatio/this.imagePixelRatio_],Math.ceil(this.width_*this.imagePixelRatio_),this.declutterMode_,this.declutterImageWithText_]),this.hitDetectionInstructions.push([_.DRAW_IMAGE,l,i,this.hitDetectionImage_,this.anchorX_,this.anchorY_,this.height_,this.opacity_,this.originX_,this.originY_,this.rotateWithView_,this.rotation_,this.scale_,this.width_,this.declutterMode_,this.declutterImageWithText_]),this.endGeometry(n)}},n.prototype.finish=function(){return this.reverseHitDetectionInstructions(),this.anchorX_=void 0,this.anchorY_=void 0,this.hitDetectionImage_=null,this.image_=null,this.imagePixelRatio_=void 0,this.height_=void 0,this.scale_=void 0,this.opacity_=void 0,this.originX_=void 0,this.originY_=void 0,this.rotateWithView_=void 0,this.rotation_=void 0,this.width_=void 0,t.prototype.finish.call(this)},n.prototype.setImageStyle=function(t,n){var e=t.getAnchor(),r=t.getSize(),l=t.getOrigin();this.imagePixelRatio_=t.getPixelRatio(this.pixelRatio),this.anchorX_=e[0],this.anchorY_=e[1],this.hitDetectionImage_=t.getHitDetectionImage(),this.image_=t.getImage(this.pixelRatio),this.height_=r[1],this.opacity_=t.getOpacity(),this.originX_=l[0],this.originY_=l[1],this.rotateWithView_=t.getRotateWithView(),this.rotation_=t.getRotation(),this.scale_=t.getScaleArray(),this.width_=r[0],this.declutterMode_=t.getDeclutterMode(),this.declutterImageWithText_=n},n}(M),P=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),R=function(t){function n(n,e,r,l){return t.call(this,n,e,r,l)||this}return P(n,t),n.prototype.drawFlatCoordinates_=function(t,n,e,r){var l=this.coordinates.length,i=this.appendFlatLineCoordinates(t,n,e,r,!1,!1),o=[_.MOVE_TO_LINE_TO,l,i];return this.instructions.push(o),this.hitDetectionInstructions.push(o),e},n.prototype.drawLineString=function(t,n){var e=this.state,r=e.strokeStyle,l=e.lineWidth;if(void 0!==r&&void 0!==l){this.updateStrokeStyle(e,this.applyStroke),this.beginGeometry(t,n),this.hitDetectionInstructions.push([_.SET_STROKE_STYLE,e.strokeStyle,e.lineWidth,e.lineCap,e.lineJoin,e.miterLimit,w.e,w.f],g);var i=t.getFlatCoordinates(),o=t.getStride();this.drawFlatCoordinates_(i,0,i.length,o),this.hitDetectionInstructions.push(d),this.endGeometry(n)}},n.prototype.drawMultiLineString=function(t,n){var e=this.state,r=e.strokeStyle,l=e.lineWidth;if(void 0!==r&&void 0!==l){this.updateStrokeStyle(e,this.applyStroke),this.beginGeometry(t,n),this.hitDetectionInstructions.push([_.SET_STROKE_STYLE,e.strokeStyle,e.lineWidth,e.lineCap,e.lineJoin,e.miterLimit,e.lineDash,e.lineDashOffset],g);for(var i=t.getEnds(),o=t.getFlatCoordinates(),u=t.getStride(),s=0,a=0,h=i.length;a<h;++a)s=this.drawFlatCoordinates_(o,s,i[a],u);this.hitDetectionInstructions.push(d),this.endGeometry(n)}},n.prototype.finish=function(){var n=this.state;return null!=n.lastStroke&&n.lastStroke!=this.coordinates.length&&this.instructions.push(d),this.reverseHitDetectionInstructions(),this.state=null,t.prototype.finish.call(this)},n.prototype.applyStroke=function(n){null!=n.lastStroke&&n.lastStroke!=this.coordinates.length&&(this.instructions.push(d),n.lastStroke=this.coordinates.length),n.lastStroke=0,t.prototype.applyStroke.call(this,n),this.instructions.push(g)},n}(M),T=e(283),N=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),L=function(t){function n(n,e,r,l){return t.call(this,n,e,r,l)||this}return N(n,t),n.prototype.drawFlatCoordinatess_=function(t,n,e,r){var l=this.state,i=void 0!==l.fillStyle,o=void 0!==l.strokeStyle,u=e.length;this.instructions.push(g),this.hitDetectionInstructions.push(g);for(var s=0;s<u;++s){var a=e[s],h=this.coordinates.length,c=this.appendFlatLineCoordinates(t,n,a,r,!0,!o),f=[_.MOVE_TO_LINE_TO,h,c];this.instructions.push(f),this.hitDetectionInstructions.push(f),o&&(this.instructions.push(y),this.hitDetectionInstructions.push(y)),n=a}return i&&(this.instructions.push(p),this.hitDetectionInstructions.push(p)),o&&(this.instructions.push(d),this.hitDetectionInstructions.push(d)),n},n.prototype.drawCircle=function(t,n){var e=this.state,r=e.fillStyle,l=e.strokeStyle;if(void 0!==r||void 0!==l){this.setFillStrokeStyles_(),this.beginGeometry(t,n),void 0!==e.fillStyle&&this.hitDetectionInstructions.push([_.SET_FILL_STYLE,w.b]),void 0!==e.strokeStyle&&this.hitDetectionInstructions.push([_.SET_STROKE_STYLE,e.strokeStyle,e.lineWidth,e.lineCap,e.lineJoin,e.miterLimit,e.lineDash,e.lineDashOffset]);var i=t.getFlatCoordinates(),o=t.getStride(),u=this.coordinates.length;this.appendFlatLineCoordinates(i,0,i.length,o,!1,!1);var s=[_.CIRCLE,u];this.instructions.push(g,s),this.hitDetectionInstructions.push(g,s),void 0!==e.fillStyle&&(this.instructions.push(p),this.hitDetectionInstructions.push(p)),void 0!==e.strokeStyle&&(this.instructions.push(d),this.hitDetectionInstructions.push(d)),this.endGeometry(n)}},n.prototype.drawPolygon=function(t,n){var e=this.state,r=e.fillStyle,l=e.strokeStyle;if(void 0!==r||void 0!==l){this.setFillStrokeStyles_(),this.beginGeometry(t,n),void 0!==e.fillStyle&&this.hitDetectionInstructions.push([_.SET_FILL_STYLE,w.b]),void 0!==e.strokeStyle&&this.hitDetectionInstructions.push([_.SET_STROKE_STYLE,e.strokeStyle,e.lineWidth,e.lineCap,e.lineJoin,e.miterLimit,e.lineDash,e.lineDashOffset]);var i=t.getEnds(),o=t.getOrientedFlatCoordinates(),u=t.getStride();this.drawFlatCoordinatess_(o,0,i,u),this.endGeometry(n)}},n.prototype.drawMultiPolygon=function(t,n){var e=this.state,r=e.fillStyle,l=e.strokeStyle;if(void 0!==r||void 0!==l){this.setFillStrokeStyles_(),this.beginGeometry(t,n),void 0!==e.fillStyle&&this.hitDetectionInstructions.push([_.SET_FILL_STYLE,w.b]),void 0!==e.strokeStyle&&this.hitDetectionInstructions.push([_.SET_STROKE_STYLE,e.strokeStyle,e.lineWidth,e.lineCap,e.lineJoin,e.miterLimit,e.lineDash,e.lineDashOffset]);for(var i=t.getEndss(),o=t.getOrientedFlatCoordinates(),u=t.getStride(),s=0,a=0,h=i.length;a<h;++a)s=this.drawFlatCoordinatess_(o,s,i[a],u);this.endGeometry(n)}},n.prototype.finish=function(){this.reverseHitDetectionInstructions(),this.state=null;var n=this.tolerance;if(0!==n)for(var e=this.coordinates,r=0,l=e.length;r<l;++r)e[r]=Object(T.e)(e[r],n);return t.prototype.finish.call(this)},n.prototype.setFillStrokeStyles_=function(){var t=this.state;void 0!==t.fillStyle&&this.updateFillStyle(t,this.createFill),void 0!==t.strokeStyle&&this.updateStrokeStyle(t,this.applyStroke)},n}(M),A=e(344),j=e(238);function D(t,n,e,r,l){var i,o,u,s,a,h,c,f,p,d=e,g=e,y=0,_=0,v=e;for(i=e;i<r;i+=l){var m=n[i],b=n[i+1];void 0!==s&&(f=m-s,p=b-a,u=Math.sqrt(f*f+p*p),void 0!==h&&(_+=o,Math.acos((h*f+c*p)/(o*u))>t&&(_>y&&(y=_,d=v,g=i),_=0,v=i-l)),o=u,h=f,c=p),s=m,a=b}return(_+=u)>y?[v,i]:[d,g]}var k=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),F={left:0,end:0,center:.5,right:1,start:1,top:0,middle:.5,hanging:.2,alphabetic:.8,ideographic:.8,bottom:1},G={Circle:L,Default:M,Image:I,LineString:R,Polygon:L,Text:function(t){function n(n,e,r,l){var i=t.call(this,n,e,r,l)||this;return i.labels_=null,i.text_="",i.textOffsetX_=0,i.textOffsetY_=0,i.textRotateWithView_=void 0,i.textRotation_=0,i.textFillState_=null,i.fillStates={},i.textStrokeState_=null,i.strokeStates={},i.textState_={},i.textStates={},i.textKey_="",i.fillKey_="",i.strokeKey_="",i.declutterImageWithText_=void 0,i}return k(n,t),n.prototype.finish=function(){var n=t.prototype.finish.call(this);return n.textStates=this.textStates,n.fillStates=this.fillStates,n.strokeStates=this.strokeStates,n},n.prototype.drawText=function(t,n){var e=this.textFillState_,r=this.textStrokeState_,l=this.textState_;if(""!==this.text_&&l&&(e||r)){var i=this.coordinates,o=i.length,u=t.getType(),s=null,a=t.getStride();if(l.placement!==A.a.LINE||"LineString"!=u&&"MultiLineString"!=u&&"Polygon"!=u&&"MultiPolygon"!=u){var h=l.overflow?null:[];switch(u){case"Point":case"MultiPoint":s=t.getFlatCoordinates();break;case"LineString":s=t.getFlatMidpoint();break;case"Circle":s=t.getCenter();break;case"MultiLineString":s=t.getFlatMidpoints(),a=2;break;case"Polygon":s=t.getFlatInteriorPoint(),l.overflow||h.push(s[2]/this.resolution),a=3;break;case"MultiPolygon":var c=t.getFlatInteriorPoints();s=[];for(O=0,M=c.length;O<M;O+=3)l.overflow||h.push(c[O+2]/this.resolution),s.push(c[O],c[O+1]);if(0===s.length)return;a=2}if((L=this.appendFlatPointCoordinates(s,a))===o)return;if(h&&(L-o)/2!=s.length/a){var f=o/2;h=h.filter((function(t,n){var e=i[2*(f+n)]===s[n*a]&&i[2*(f+n)+1]===s[n*a+1];return e||--f,e}))}this.saveTextStates_(),(l.backgroundFill||l.backgroundStroke)&&(this.setFillStrokeStyle(l.backgroundFill,l.backgroundStroke),l.backgroundFill&&(this.updateFillStyle(this.state,this.createFill),this.hitDetectionInstructions.push(this.createFill(this.state))),l.backgroundStroke&&(this.updateStrokeStyle(this.state,this.applyStroke),this.hitDetectionInstructions.push(this.createStroke(this.state)))),this.beginGeometry(t,n);var p=l.padding;if(p!=w.j&&(l.scale[0]<0||l.scale[1]<0)){var d=l.padding[0],g=l.padding[1],y=l.padding[2],v=l.padding[3];l.scale[0]<0&&(g=-g,v=-v),l.scale[1]<0&&(d=-d,y=-y),p=[d,g,y,v]}var m=this.pixelRatio;this.instructions.push([_.DRAW_IMAGE,o,L,null,NaN,NaN,NaN,1,0,0,this.textRotateWithView_,this.textRotation_,[1,1],NaN,void 0,this.declutterImageWithText_,p==w.j?w.j:p.map((function(t){return t*m})),!!l.backgroundFill,!!l.backgroundStroke,this.text_,this.textKey_,this.strokeKey_,this.fillKey_,this.textOffsetX_,this.textOffsetY_,h]);var b=1/m;this.hitDetectionInstructions.push([_.DRAW_IMAGE,o,L,null,NaN,NaN,NaN,1,0,0,this.textRotateWithView_,this.textRotation_,[b,b],NaN,void 0,this.declutterImageWithText_,p,!!l.backgroundFill,!!l.backgroundStroke,this.text_,this.textKey_,this.strokeKey_,this.fillKey_,this.textOffsetX_,this.textOffsetY_,h]),this.endGeometry(n)}else{if(!Object(x.F)(this.getBufferedMaxExtent(),t.getExtent()))return;var E=void 0;if(s=t.getFlatCoordinates(),"LineString"==u)E=[s.length];else if("MultiLineString"==u)E=t.getEnds();else if("Polygon"==u)E=t.getEnds().slice(0,1);else if("MultiPolygon"==u){var C=t.getEndss();E=[];for(var O=0,M=C.length;O<M;++O)E.push(C[O][0])}this.beginGeometry(t,n);for(var S=l.textAlign,I=0,P=void 0,R=0,T=E.length;R<T;++R){if(null==S){var N=D(l.maxAngle,s,I,E[R],a);I=N[0],P=N[1]}else P=E[R];for(var O=I;O<P;O+=a)i.push(s[O],s[O+1]);var L=i.length;I=E[R],this.drawChars_(o,L),o=L}this.endGeometry(n)}}},n.prototype.saveTextStates_=function(){var t=this.textStrokeState_,n=this.textState_,e=this.textFillState_,r=this.strokeKey_;t&&(r in this.strokeStates||(this.strokeStates[r]={strokeStyle:t.strokeStyle,lineCap:t.lineCap,lineDashOffset:t.lineDashOffset,lineWidth:t.lineWidth,lineJoin:t.lineJoin,miterLimit:t.miterLimit,lineDash:t.lineDash}));var l=this.textKey_;l in this.textStates||(this.textStates[l]={font:n.font,textAlign:n.textAlign||w.l,justify:n.justify,textBaseline:n.textBaseline||w.m,scale:n.scale});var i=this.fillKey_;e&&(i in this.fillStates||(this.fillStates[i]={fillStyle:e.fillStyle}))},n.prototype.drawChars_=function(t,n){var e=this.textStrokeState_,r=this.textState_,l=this.strokeKey_,i=this.textKey_,o=this.fillKey_;this.saveTextStates_();var u=this.pixelRatio,s=F[r.textBaseline],a=this.textOffsetY_*u,h=this.text_,c=e?e.lineWidth*Math.abs(r.scale[0])/2:0;this.instructions.push([_.DRAW_CHARS,t,n,s,r.overflow,o,r.maxAngle,u,a,l,c*u,h,i,1]),this.hitDetectionInstructions.push([_.DRAW_CHARS,t,n,s,r.overflow,o,r.maxAngle,1,a,l,c,h,i,1/u])},n.prototype.setTextStyle=function(t,n){var e,r,l;if(t){var i=t.getFill();i?((r=this.textFillState_)||(r={},this.textFillState_=r),r.fillStyle=Object(b.a)(i.getColor()||w.b)):(r=null,this.textFillState_=r);var o=t.getStroke();if(o){(l=this.textStrokeState_)||(l={},this.textStrokeState_=l);var u=o.getLineDash(),s=o.getLineDashOffset(),a=o.getWidth(),h=o.getMiterLimit();l.lineCap=o.getLineCap()||w.d,l.lineDash=u?u.slice():w.e,l.lineDashOffset=void 0===s?w.f:s,l.lineJoin=o.getLineJoin()||w.g,l.lineWidth=void 0===a?w.h:a,l.miterLimit=void 0===h?w.i:h,l.strokeStyle=Object(b.a)(o.getColor()||w.k)}else l=null,this.textStrokeState_=l;e=this.textState_;var c=t.getFont()||w.c;Object(w.q)(c);var f=t.getScaleArray();e.overflow=t.getOverflow(),e.font=c,e.maxAngle=t.getMaxAngle(),e.placement=t.getPlacement(),e.textAlign=t.getTextAlign(),e.justify=t.getJustify(),e.textBaseline=t.getTextBaseline()||w.m,e.backgroundFill=t.getBackgroundFill(),e.backgroundStroke=t.getBackgroundStroke(),e.padding=t.getPadding()||w.j,e.scale=void 0===f?[1,1]:f;var p=t.getOffsetX(),d=t.getOffsetY(),g=t.getRotateWithView(),y=t.getRotation();this.text_=t.getText()||"",this.textOffsetX_=void 0===p?0:p,this.textOffsetY_=void 0===d?0:d,this.textRotateWithView_=void 0!==g&&g,this.textRotation_=void 0===y?0:y,this.strokeKey_=l?("string"==typeof l.strokeStyle?l.strokeStyle:Object(j.c)(l.strokeStyle))+l.lineCap+l.lineDashOffset+"|"+l.lineWidth+l.lineJoin+l.miterLimit+"["+l.lineDash.join()+"]":"",this.textKey_=e.font+e.scale+(e.textAlign||"?")+(e.justify||"?")+(e.textBaseline||"?"),this.fillKey_=r?"string"==typeof r.fillStyle?r.fillStyle:"|"+Object(j.c)(r.fillStyle):""}else this.text_="";this.declutterImageWithText_=n},n}(M)},z=function(){function t(t,n,e,r){this.tolerance_=t,this.maxExtent_=n,this.pixelRatio_=r,this.resolution_=e,this.buildersByZIndex_={}}return t.prototype.finish=function(){var t={};for(var n in this.buildersByZIndex_){t[n]=t[n]||{};var e=this.buildersByZIndex_[n];for(var r in e){var l=e[r].finish();t[n][r]=l}}return t},t.prototype.getBuilder=function(t,n){var e=void 0!==t?t.toString():"0",r=this.buildersByZIndex_[e];void 0===r&&(r={},this.buildersByZIndex_[e]=r);var l=r[n];void 0===l&&(l=new(0,G[n])(this.tolerance_,this.maxExtent_,this.resolution_,this.pixelRatio_),r[n]=l);return l},t}(),B=e(363),U=e(259),q=e(258),Y=e(239),X=e(278);function V(t,n,e,r,l,i,o,u,s,a,h,c){var f=t[n],p=t[n+1],d=0,g=0,y=0,_=0;function v(){d=f,g=p,f=t[n+=r],p=t[n+1],_+=y,y=Math.sqrt((f-d)*(f-d)+(p-g)*(p-g))}do{v()}while(n<e-r&&_+y<i);for(var m=0===y?0:(i-_)/y,b=Object(Y.e)(d,f,m),x=Object(Y.e)(g,p,m),w=n-r,E=_,C=i+u*s(a,l,h);n<e-r&&_+y<C;)v();m=0===y?0:(C-_)/y;var O,M=Object(Y.e)(d,f,m),S=Object(Y.e)(g,p,m);if(c){var I=[b,x,M,S];Object(X.a)(I,0,4,2,c,I,I),O=I[0]>I[2]}else O=b>M;var P,R=Math.PI,T=[],N=w+r===n;if(y=0,_=E,f=t[n=w],p=t[n+1],N){v(),P=Math.atan2(p-g,f-d),O&&(P+=P>0?-R:R);var L=(M+b)/2,A=(S+x)/2;return T[0]=[L,A,(C-i)/2,P,l],T}for(var j=0,D=(l=l.replace(/\n/g," ")).length;j<D;){v();var k=Math.atan2(p-g,f-d);if(O&&(k+=k>0?-R:R),void 0!==P){var F=k-P;if(F+=F>R?-2*R:F<-R?2*R:0,Math.abs(F)>o)return null}P=k;for(var G=j,z=0;j<D;++j){var B=u*s(a,l[O?D-j-1:j],h);if(n+r<e&&_+y<i+z+B/2)break;z+=B}if(j!==G){var U=O?l.substring(D-G,D-j):l.substring(G,j);m=0===y?0:(i+z/2-_)/y;L=Object(Y.e)(d,f,m),A=Object(Y.e)(g,p,m);T.push([L,A,z/2,k,U]),i+=z}}return T}var W=e(336),Z=Object(x.j)(),H=[],K=[],J=[],Q=[];function $(t){return t[3].declutterBox}var tt=new RegExp("["+String.fromCharCode(1425)+"-"+String.fromCharCode(2303)+String.fromCharCode(64285)+"-"+String.fromCharCode(65023)+String.fromCharCode(65136)+"-"+String.fromCharCode(65276)+String.fromCharCode(67584)+"-"+String.fromCharCode(69631)+String.fromCharCode(124928)+"-"+String.fromCharCode(126975)+"]");function nt(t,n){return"start"!==n&&"end"!==n||tt.test(t)||(n="start"===n?"left":"right"),F[n]}function et(t,n,e){return e>0&&t.push("\n",""),t.push(n,""),t}var rt=function(){function t(t,n,e,r){this.overlaps=e,this.pixelRatio=n,this.resolution=t,this.alignFill_,this.instructions=r.instructions,this.coordinates=r.coordinates,this.coordinateCache_={},this.renderedTransform_=Object(q.c)(),this.hitDetectionInstructions=r.hitDetectionInstructions,this.pixelCoordinates_=null,this.viewRotation_=0,this.fillStates=r.fillStates||{},this.strokeStates=r.strokeStates||{},this.textStates=r.textStates||{},this.widths_={},this.labels_={}}return t.prototype.createLabel=function(t,n,e,r){var l=t+n+e+r;if(this.labels_[l])return this.labels_[l];var i=r?this.strokeStates[r]:null,o=e?this.fillStates[e]:null,u=this.textStates[n],s=this.pixelRatio,a=[u.scale[0]*s,u.scale[1]*s],h=Array.isArray(t),c=u.justify?F[u.justify]:nt(Array.isArray(t)?t[0]:t,u.textAlign||w.l),f=r&&i.lineWidth?i.lineWidth:0,p=h?t:t.split("\n").reduce(et,[]),d=Object(w.o)(u,p),g=d.width,y=d.height,_=d.widths,v=d.heights,m=d.lineWidths,b=g+f,x=[],E=(b+2)*a[0],C=(y+f)*a[1],O={width:E<0?Math.floor(E):Math.ceil(E),height:C<0?Math.floor(C):Math.ceil(C),contextInstructions:x};(1==a[0]&&1==a[1]||x.push("scale",a),r)&&(x.push("strokeStyle",i.strokeStyle),x.push("lineWidth",f),x.push("lineCap",i.lineCap),x.push("lineJoin",i.lineJoin),x.push("miterLimit",i.miterLimit),(U.g?OffscreenCanvasRenderingContext2D:CanvasRenderingContext2D).prototype.setLineDash&&(x.push("setLineDash",[i.lineDash]),x.push("lineDashOffset",i.lineDashOffset)));e&&x.push("fillStyle",o.fillStyle),x.push("textBaseline","middle"),x.push("textAlign","center");for(var M,S=.5-c,I=c*b+S*f,P=[],R=[],T=0,N=0,L=0,A=0,j=0,D=p.length;j<D;j+=2){var k=p[j];if("\n"!==k){var G=p[j+1]||u.font;G!==M&&(r&&P.push("font",G),e&&R.push("font",G),M=G),T=Math.max(T,v[L]);var z=[k,I+S*_[L]+c*(_[L]-m[A]),.5*(f+T)+N];I+=_[L],r&&P.push("strokeText",z),e&&R.push("fillText",z),++L}else N+=T,T=0,I=c*b+S*f,++A}return Array.prototype.push.apply(x,P),Array.prototype.push.apply(x,R),this.labels_[l]=O,O},t.prototype.replayTextBackground_=function(t,n,e,r,l,i,o){t.beginPath(),t.moveTo.apply(t,n),t.lineTo.apply(t,e),t.lineTo.apply(t,r),t.lineTo.apply(t,l),t.lineTo.apply(t,n),i&&(this.alignFill_=i[2],this.fill_(t)),o&&(this.setStrokeStyle_(t,o),t.stroke())},t.prototype.calculateImageOrLabelDimensions_=function(t,n,e,r,l,i,o,u,s,a,h,c,f,p,d,g){var y,_=e-(o*=c[0]),v=r-(u*=c[1]),m=l+s>t?t-s:l,b=i+a>n?n-a:i,w=p[3]+m*c[0]+p[1],E=p[0]+b*c[1]+p[2],C=_-p[3],O=v-p[0];return(d||0!==h)&&(H[0]=C,Q[0]=C,H[1]=O,K[1]=O,K[0]=C+w,J[0]=K[0],J[1]=O+E,Q[1]=J[1]),0!==h?(y=Object(q.b)(Object(q.c)(),e,r,1,1,h,-e,-r),Object(q.a)(y,H),Object(q.a)(y,K),Object(q.a)(y,J),Object(q.a)(y,Q),Object(x.k)(Math.min(H[0],K[0],J[0],Q[0]),Math.min(H[1],K[1],J[1],Q[1]),Math.max(H[0],K[0],J[0],Q[0]),Math.max(H[1],K[1],J[1],Q[1]),Z)):Object(x.k)(Math.min(C,C+w),Math.min(O,O+E),Math.max(C,C+w),Math.max(O,O+E),Z),f&&(_=Math.round(_),v=Math.round(v)),{drawImageX:_,drawImageY:v,drawImageW:m,drawImageH:b,originX:s,originY:a,declutterBox:{minX:Z[0],minY:Z[1],maxX:Z[2],maxY:Z[3],value:g},canvasTransform:y,scale:c}},t.prototype.replayImageOrLabel_=function(t,n,e,r,l,i,o){var u=!(!i&&!o),s=r.declutterBox,a=t.canvas,h=o?o[2]*r.scale[0]/2:0;return s.minX-h<=a.width/n&&s.maxX+h>=0&&s.minY-h<=a.height/n&&s.maxY+h>=0&&(u&&this.replayTextBackground_(t,H,K,J,Q,i,o),Object(w.n)(t,r.canvasTransform,l,e,r.originX,r.originY,r.drawImageW,r.drawImageH,r.drawImageX,r.drawImageY,r.scale)),!0},t.prototype.fill_=function(t){if(this.alignFill_){var n=Object(q.a)(this.renderedTransform_,[0,0]),e=512*this.pixelRatio;t.save(),t.translate(n[0]%e,n[1]%e),t.rotate(this.viewRotation_)}t.fill(),this.alignFill_&&t.restore()},t.prototype.setStrokeStyle_=function(t,n){t.strokeStyle=n[1],t.lineWidth=n[2],t.lineCap=n[3],t.lineJoin=n[4],t.miterLimit=n[5],t.setLineDash&&(t.lineDashOffset=n[7],t.setLineDash(n[6]))},t.prototype.drawLabelWithPointPlacement_=function(t,n,e,r){var l=this.textStates[n],i=this.createLabel(t,n,r,e),o=this.strokeStates[e],u=this.pixelRatio,s=nt(Array.isArray(t)?t[0]:t,l.textAlign||w.l),a=F[l.textBaseline||w.m],h=o&&o.lineWidth?o.lineWidth:0;return{label:i,anchorX:s*(i.width/u-2*l.scale[0])+2*(.5-s)*h,anchorY:a*i.height/u+2*(.5-a)*h}},t.prototype.execute_=function(t,n,e,r,l,i,o,u){var s;this.pixelCoordinates_&&Object(E.b)(e,this.renderedTransform_)?s=this.pixelCoordinates_:(this.pixelCoordinates_||(this.pixelCoordinates_=[]),s=Object(X.c)(this.coordinates,0,this.coordinates.length,2,e,this.pixelCoordinates_),Object(q.f)(this.renderedTransform_,e));for(var a,h,c,f,p,d,g,y,v,m,b,C,O,M,S,I,P=0,R=r.length,T=0,N=0,L=0,A=null,j=null,D=this.coordinateCache_,k=this.viewRotation_,G=Math.round(1e12*Math.atan2(-e[1],e[0]))/1e12,z={context:t,pixelRatio:this.pixelRatio,resolution:this.resolution,rotation:k},B=this.instructions!=r||this.overlaps?0:200;P<R;){var U=r[P];switch(U[0]){case _.BEGIN_GEOMETRY:O=U[1],I=U[3],O.getGeometry()?void 0===o||Object(x.F)(o,I.getExtent())?++P:P=U[2]+1:P=U[2];break;case _.BEGIN_PATH:N>B&&(this.fill_(t),N=0),L>B&&(t.stroke(),L=0),N||L||(t.beginPath(),f=NaN,p=NaN),++P;break;case _.CIRCLE:var Y=s[T=U[1]],Z=s[T+1],H=s[T+2]-Y,K=s[T+3]-Z,J=Math.sqrt(H*H+K*K);t.moveTo(Y+J,Z),t.arc(Y,Z,J,0,2*Math.PI,!0),++P;break;case _.CLOSE_PATH:t.closePath(),++P;break;case _.CUSTOM:T=U[1],a=U[2];var Q=U[3],tt=U[4],nt=6==U.length?U[5]:void 0;z.geometry=Q,z.feature=O,P in D||(D[P]=[]);var et=D[P];nt?nt(s,T,a,2,et):(et[0]=s[T],et[1]=s[T+1],et.length=2),tt(et,z),++P;break;case _.DRAW_IMAGE:T=U[1],a=U[2],y=U[3],h=U[4],c=U[5];var rt=U[6],lt=U[7],it=U[8],ot=U[9],ut=U[10],st=U[11],at=U[12],ht=U[13],ct=U[14],ft=U[15];if(!y&&U.length>=20){v=U[19],m=U[20],b=U[21],C=U[22];var pt=this.drawLabelWithPointPlacement_(v,m,b,C);y=pt.label,U[3]=y;var dt=U[23];h=(pt.anchorX-dt)*this.pixelRatio,U[4]=h;var gt=U[24];c=(pt.anchorY-gt)*this.pixelRatio,U[5]=c,rt=y.height,U[6]=rt,ht=y.width,U[13]=ht}var yt=void 0;U.length>25&&(yt=U[25]);var _t=void 0,vt=void 0,mt=void 0;U.length>17?(_t=U[16],vt=U[17],mt=U[18]):(_t=w.j,vt=!1,mt=!1),ut&&G?st+=k:ut||G||(st-=k);for(var bt=0;T<a;T+=2)if(!(yt&&yt[bt++]<ht/this.pixelRatio)){var xt=[t,n,y,Zt=this.calculateImageOrLabelDimensions_(y.width,y.height,s[T],s[T+1],ht,rt,h,c,it,ot,st,at,l,_t,vt||mt,O),lt,vt?A:null,mt?j:null];if(u){if("none"===ct)continue;if("obstacle"===ct){u.insert(Zt.declutterBox);continue}var wt=void 0,Et=void 0;if(ft){var Ct=a-T;if(!ft[Ct]){ft[Ct]=xt;continue}if(wt=ft[Ct],delete ft[Ct],Et=$(wt),u.collides(Et))continue}if(u.collides(Zt.declutterBox))continue;wt&&(u.insert(Et),this.replayImageOrLabel_.apply(this,wt)),u.insert(Zt.declutterBox)}this.replayImageOrLabel_.apply(this,xt)}++P;break;case _.DRAW_CHARS:var Ot=U[1],Mt=U[2],St=U[3],It=U[4];C=U[5];var Pt=U[6],Rt=U[7],Tt=U[8];b=U[9];var Nt=U[10];v=U[11],m=U[12];var Lt=[U[13],U[13]],At=this.textStates[m],jt=At.font,Dt=[At.scale[0]*Rt,At.scale[1]*Rt],kt=void 0;jt in this.widths_?kt=this.widths_[jt]:(kt={},this.widths_[jt]=kt);var Ft=Object(W.a)(s,Ot,Mt,2),Gt=Math.abs(Dt[0])*Object(w.p)(jt,v,kt);if(It||Gt<=Ft){var zt=this.textStates[m].textAlign,Bt=V(s,Ot,Mt,2,v,(Ft-Gt)*F[zt],Pt,Math.abs(Dt[0]),w.p,jt,kt,G?0:this.viewRotation_);t:if(Bt){var Ut=[],qt=void 0,Yt=void 0,Xt=void 0,Vt=void 0,Wt=void 0;if(b)for(qt=0,Yt=Bt.length;qt<Yt;++qt){Xt=(Wt=Bt[qt])[4],Vt=this.createLabel(Xt,m,"",b),h=Wt[2]+(Dt[0]<0?-Nt:Nt),c=St*Vt.height+2*(.5-St)*Nt*Dt[1]/Dt[0]-Tt;var Zt=this.calculateImageOrLabelDimensions_(Vt.width,Vt.height,Wt[0],Wt[1],Vt.width,Vt.height,h,c,0,0,Wt[3],Lt,!1,w.j,!1,O);if(u&&u.collides(Zt.declutterBox))break t;Ut.push([t,n,Vt,Zt,1,null,null])}if(C)for(qt=0,Yt=Bt.length;qt<Yt;++qt){Xt=(Wt=Bt[qt])[4],Vt=this.createLabel(Xt,m,C,""),h=Wt[2],c=St*Vt.height-Tt;Zt=this.calculateImageOrLabelDimensions_(Vt.width,Vt.height,Wt[0],Wt[1],Vt.width,Vt.height,h,c,0,0,Wt[3],Lt,!1,w.j,!1,O);if(u&&u.collides(Zt.declutterBox))break t;Ut.push([t,n,Vt,Zt,1,null,null])}u&&u.load(Ut.map($));for(var Ht=0,Kt=Ut.length;Ht<Kt;++Ht)this.replayImageOrLabel_.apply(this,Ut[Ht])}}++P;break;case _.END_GEOMETRY:if(void 0!==i){var Jt=i(O=U[1],I);if(Jt)return Jt}++P;break;case _.FILL:B?N++:this.fill_(t),++P;break;case _.MOVE_TO_LINE_TO:for(T=U[1],a=U[2],M=s[T],g=(S=s[T+1])+.5|0,(d=M+.5|0)===f&&g===p||(t.moveTo(M,S),f=d,p=g),T+=2;T<a;T+=2)d=(M=s[T])+.5|0,g=(S=s[T+1])+.5|0,T!=a-2&&d===f&&g===p||(t.lineTo(M,S),f=d,p=g);++P;break;case _.SET_FILL_STYLE:A=U,this.alignFill_=U[2],N&&(this.fill_(t),N=0,L&&(t.stroke(),L=0)),t.fillStyle=U[1],++P;break;case _.SET_STROKE_STYLE:j=U,L&&(t.stroke(),L=0),this.setStrokeStyle_(t,U),++P;break;case _.STROKE:B?L++:t.stroke(),++P;break;default:++P}}N&&this.fill_(t),L&&t.stroke()},t.prototype.execute=function(t,n,e,r,l,i){this.viewRotation_=r,this.execute_(t,n,e,this.instructions,l,void 0,void 0,i)},t.prototype.executeHitDetection=function(t,n,e,r,l){return this.viewRotation_=e,this.execute_(t,1,n,this.hitDetectionInstructions,!0,r,l)},t}(),lt=e(246),it=["Polygon","Circle","LineString","Image","Text","Default"],ot=function(){function t(t,n,e,r,l,i){this.maxExtent_=t,this.overlaps_=r,this.pixelRatio_=e,this.resolution_=n,this.renderBuffer_=i,this.executorsByZIndex_={},this.hitDetectionContext_=null,this.hitDetectionTransform_=Object(q.c)(),this.createExecutors_(l)}return t.prototype.clip=function(t,n){var e=this.getClipCoords(n);t.beginPath(),t.moveTo(e[0],e[1]),t.lineTo(e[2],e[3]),t.lineTo(e[4],e[5]),t.lineTo(e[6],e[7]),t.clip()},t.prototype.createExecutors_=function(t){for(var n in t){var e=this.executorsByZIndex_[n];void 0===e&&(e={},this.executorsByZIndex_[n]=e);var r=t[n];for(var l in r){var i=r[l];e[l]=new rt(this.resolution_,this.pixelRatio_,this.overlaps_,i)}}},t.prototype.hasExecutors=function(t){for(var n in this.executorsByZIndex_)for(var e=this.executorsByZIndex_[n],r=0,l=t.length;r<l;++r)if(t[r]in e)return!0;return!1},t.prototype.forEachFeatureAtCoordinate=function(t,n,e,r,l,i){var o=2*(r=Math.round(r))+1,u=Object(q.b)(this.hitDetectionTransform_,r+.5,r+.5,1/n,-1/n,-e,-t[0],-t[1]),s=!this.hitDetectionContext_;s&&(this.hitDetectionContext_=Object(lt.a)(o,o));var a,h=this.hitDetectionContext_;h.canvas.width!==o||h.canvas.height!==o?(h.canvas.width=o,h.canvas.height=o):s||h.clearRect(0,0,o,o),void 0!==this.renderBuffer_&&(a=Object(x.j)(),Object(x.q)(a,t),Object(x.c)(a,n*(this.renderBuffer_+r),a));var c,f=function(t){if(void 0!==ut[t])return ut[t];for(var n=2*t+1,e=t*t,r=new Array(e+1),l=0;l<=t;++l)for(var i=0;i<=t;++i){var o=l*l+i*i;if(o>e)break;var u=r[o];u||(u=[],r[o]=u),u.push(4*((t+l)*n+(t+i))+3),l>0&&u.push(4*((t-l)*n+(t+i))+3),i>0&&(u.push(4*((t+l)*n+(t-i))+3),l>0&&u.push(4*((t-l)*n+(t-i))+3))}for(var s=[],a=(l=0,r.length);l<a;++l)r[l]&&s.push.apply(s,r[l]);return ut[t]=s,s}(r);function p(t,n){for(var e=h.getImageData(0,0,o,o).data,u=0,s=f.length;u<s;u++)if(e[f[u]]>0){if(!i||"Image"!==c&&"Text"!==c||-1!==i.indexOf(t)){var a=(f[u]-3)/4,p=r-a%o,d=r-(a/o|0),g=l(t,n,p*p+d*d);if(g)return g}h.clearRect(0,0,o,o);break}}var d,g,y,_,v,m=Object.keys(this.executorsByZIndex_).map(Number);for(m.sort(E.f),d=m.length-1;d>=0;--d){var b=m[d].toString();for(y=this.executorsByZIndex_[b],g=it.length-1;g>=0;--g)if(void 0!==(_=y[c=it[g]])&&(v=_.executeHitDetection(h,u,e,p,a)))return v}},t.prototype.getClipCoords=function(t){var n=this.maxExtent_;if(!n)return null;var e=n[0],r=n[1],l=n[2],i=n[3],o=[e,r,e,i,l,i,l,r];return Object(X.c)(o,0,8,2,t,o),o},t.prototype.isEmpty=function(){return Object(u.d)(this.executorsByZIndex_)},t.prototype.execute=function(t,n,e,r,l,i,o){var u=Object.keys(this.executorsByZIndex_).map(Number);u.sort(E.f),this.maxExtent_&&(t.save(),this.clip(t,e));var s,a,h,c,f,p,d=i||it;for(o&&u.reverse(),s=0,a=u.length;s<a;++s){var g=u[s].toString();for(f=this.executorsByZIndex_[g],h=0,c=d.length;h<c;++h){void 0!==(p=f[d[h]])&&p.execute(t,n,e,r,l,o)}}this.maxExtent_&&t.restore()},t}(),ut={};var st=ot,at=e(307),ht=e(257),ct=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),ft=function(t){function n(n,e,r,l,i,o,u){var s=t.call(this)||this;return s.context_=n,s.pixelRatio_=e,s.extent_=r,s.transform_=l,s.viewRotation_=i,s.squaredTolerance_=o,s.userTransform_=u,s.contextFillState_=null,s.contextStrokeState_=null,s.contextTextState_=null,s.fillState_=null,s.strokeState_=null,s.image_=null,s.imageAnchorX_=0,s.imageAnchorY_=0,s.imageHeight_=0,s.imageOpacity_=0,s.imageOriginX_=0,s.imageOriginY_=0,s.imageRotateWithView_=!1,s.imageRotation_=0,s.imageScale_=[0,0],s.imageWidth_=0,s.text_="",s.textOffsetX_=0,s.textOffsetY_=0,s.textRotateWithView_=!1,s.textRotation_=0,s.textScale_=[0,0],s.textFillState_=null,s.textStrokeState_=null,s.textState_=null,s.pixelCoordinates_=[],s.tmpLocalTransform_=Object(q.c)(),s}return ct(n,t),n.prototype.drawImages_=function(t,n,e,r){if(this.image_){var l=Object(X.c)(t,n,e,r,this.transform_,this.pixelCoordinates_),i=this.context_,o=this.tmpLocalTransform_,u=i.globalAlpha;1!=this.imageOpacity_&&(i.globalAlpha=u*this.imageOpacity_);var s=this.imageRotation_;this.imageRotateWithView_&&(s+=this.viewRotation_);for(var a=0,h=l.length;a<h;a+=2){var c=l[a]-this.imageAnchorX_,f=l[a+1]-this.imageAnchorY_;if(0!==s||1!=this.imageScale_[0]||1!=this.imageScale_[1]){var p=c+this.imageAnchorX_,d=f+this.imageAnchorY_;Object(q.b)(o,p,d,1,1,s,-p,-d),i.setTransform.apply(i,o),i.translate(p,d),i.scale(this.imageScale_[0],this.imageScale_[1]),i.drawImage(this.image_,this.imageOriginX_,this.imageOriginY_,this.imageWidth_,this.imageHeight_,-this.imageAnchorX_,-this.imageAnchorY_,this.imageWidth_,this.imageHeight_),i.setTransform(1,0,0,1,0,0)}else i.drawImage(this.image_,this.imageOriginX_,this.imageOriginY_,this.imageWidth_,this.imageHeight_,c,f,this.imageWidth_,this.imageHeight_)}1!=this.imageOpacity_&&(i.globalAlpha=u)}},n.prototype.drawText_=function(t,n,e,r){if(this.textState_&&""!==this.text_){this.textFillState_&&this.setContextFillState_(this.textFillState_),this.textStrokeState_&&this.setContextStrokeState_(this.textStrokeState_),this.setContextTextState_(this.textState_);var l=Object(X.c)(t,n,e,r,this.transform_,this.pixelCoordinates_),i=this.context_,o=this.textRotation_;for(this.textRotateWithView_&&(o+=this.viewRotation_);n<e;n+=r){var u=l[n]+this.textOffsetX_,s=l[n+1]+this.textOffsetY_;if(0!==o||1!=this.textScale_[0]||1!=this.textScale_[1]){var a=Object(q.b)(this.tmpLocalTransform_,u,s,1,1,o,-u,-s);i.setTransform.apply(i,a),i.translate(u,s),i.scale(this.textScale_[0],this.textScale_[1]),this.textStrokeState_&&i.strokeText(this.text_,0,0),this.textFillState_&&i.fillText(this.text_,0,0),i.setTransform(1,0,0,1,0,0)}else this.textStrokeState_&&i.strokeText(this.text_,u,s),this.textFillState_&&i.fillText(this.text_,u,s)}}},n.prototype.moveToLineTo_=function(t,n,e,r,l){var i=this.context_,o=Object(X.c)(t,n,e,r,this.transform_,this.pixelCoordinates_);i.moveTo(o[0],o[1]);var u=o.length;l&&(u-=2);for(var s=2;s<u;s+=2)i.lineTo(o[s],o[s+1]);return l&&i.closePath(),e},n.prototype.drawRings_=function(t,n,e,r){for(var l=0,i=e.length;l<i;++l)n=this.moveToLineTo_(t,n,e[l],r,!0);return n},n.prototype.drawCircle=function(t){if(Object(x.F)(this.extent_,t.getExtent())){if(this.fillState_||this.strokeState_){this.fillState_&&this.setContextFillState_(this.fillState_),this.strokeState_&&this.setContextStrokeState_(this.strokeState_);var n=Object(ht.b)(t,this.transform_,this.pixelCoordinates_),e=n[2]-n[0],r=n[3]-n[1],l=Math.sqrt(e*e+r*r),i=this.context_;i.beginPath(),i.arc(n[0],n[1],l,0,2*Math.PI),this.fillState_&&i.fill(),this.strokeState_&&i.stroke()}""!==this.text_&&this.drawText_(t.getCenter(),0,2,2)}},n.prototype.setStyle=function(t){this.setFillStrokeStyle(t.getFill(),t.getStroke()),this.setImageStyle(t.getImage()),this.setTextStyle(t.getText())},n.prototype.setTransform=function(t){this.transform_=t},n.prototype.drawGeometry=function(t){switch(t.getType()){case"Point":this.drawPoint(t);break;case"LineString":this.drawLineString(t);break;case"Polygon":this.drawPolygon(t);break;case"MultiPoint":this.drawMultiPoint(t);break;case"MultiLineString":this.drawMultiLineString(t);break;case"MultiPolygon":this.drawMultiPolygon(t);break;case"GeometryCollection":this.drawGeometryCollection(t);break;case"Circle":this.drawCircle(t)}},n.prototype.drawFeature=function(t,n){var e=n.getGeometryFunction()(t);e&&Object(x.F)(this.extent_,e.getExtent())&&(this.setStyle(n),this.drawGeometry(e))},n.prototype.drawGeometryCollection=function(t){for(var n=t.getGeometriesArray(),e=0,r=n.length;e<r;++e)this.drawGeometry(n[e])},n.prototype.drawPoint=function(t){this.squaredTolerance_&&(t=t.simplifyTransformed(this.squaredTolerance_,this.userTransform_));var n=t.getFlatCoordinates(),e=t.getStride();this.image_&&this.drawImages_(n,0,n.length,e),""!==this.text_&&this.drawText_(n,0,n.length,e)},n.prototype.drawMultiPoint=function(t){this.squaredTolerance_&&(t=t.simplifyTransformed(this.squaredTolerance_,this.userTransform_));var n=t.getFlatCoordinates(),e=t.getStride();this.image_&&this.drawImages_(n,0,n.length,e),""!==this.text_&&this.drawText_(n,0,n.length,e)},n.prototype.drawLineString=function(t){if(this.squaredTolerance_&&(t=t.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),Object(x.F)(this.extent_,t.getExtent())){if(this.strokeState_){this.setContextStrokeState_(this.strokeState_);var n=this.context_,e=t.getFlatCoordinates();n.beginPath(),this.moveToLineTo_(e,0,e.length,t.getStride(),!1),n.stroke()}if(""!==this.text_){var r=t.getFlatMidpoint();this.drawText_(r,0,2,2)}}},n.prototype.drawMultiLineString=function(t){this.squaredTolerance_&&(t=t.simplifyTransformed(this.squaredTolerance_,this.userTransform_));var n=t.getExtent();if(Object(x.F)(this.extent_,n)){if(this.strokeState_){this.setContextStrokeState_(this.strokeState_);var e=this.context_,r=t.getFlatCoordinates(),l=0,i=t.getEnds(),o=t.getStride();e.beginPath();for(var u=0,s=i.length;u<s;++u)l=this.moveToLineTo_(r,l,i[u],o,!1);e.stroke()}if(""!==this.text_){var a=t.getFlatMidpoints();this.drawText_(a,0,a.length,2)}}},n.prototype.drawPolygon=function(t){if(this.squaredTolerance_&&(t=t.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),Object(x.F)(this.extent_,t.getExtent())){if(this.strokeState_||this.fillState_){this.fillState_&&this.setContextFillState_(this.fillState_),this.strokeState_&&this.setContextStrokeState_(this.strokeState_);var n=this.context_;n.beginPath(),this.drawRings_(t.getOrientedFlatCoordinates(),0,t.getEnds(),t.getStride()),this.fillState_&&n.fill(),this.strokeState_&&n.stroke()}if(""!==this.text_){var e=t.getFlatInteriorPoint();this.drawText_(e,0,2,2)}}},n.prototype.drawMultiPolygon=function(t){if(this.squaredTolerance_&&(t=t.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),Object(x.F)(this.extent_,t.getExtent())){if(this.strokeState_||this.fillState_){this.fillState_&&this.setContextFillState_(this.fillState_),this.strokeState_&&this.setContextStrokeState_(this.strokeState_);var n=this.context_,e=t.getOrientedFlatCoordinates(),r=0,l=t.getEndss(),i=t.getStride();n.beginPath();for(var o=0,u=l.length;o<u;++o){var s=l[o];r=this.drawRings_(e,r,s,i)}this.fillState_&&n.fill(),this.strokeState_&&n.stroke()}if(""!==this.text_){var a=t.getFlatInteriorPoints();this.drawText_(a,0,a.length,2)}}},n.prototype.setContextFillState_=function(t){var n=this.context_,e=this.contextFillState_;e?e.fillStyle!=t.fillStyle&&(e.fillStyle=t.fillStyle,n.fillStyle=t.fillStyle):(n.fillStyle=t.fillStyle,this.contextFillState_={fillStyle:t.fillStyle})},n.prototype.setContextStrokeState_=function(t){var n=this.context_,e=this.contextStrokeState_;e?(e.lineCap!=t.lineCap&&(e.lineCap=t.lineCap,n.lineCap=t.lineCap),n.setLineDash&&(Object(E.b)(e.lineDash,t.lineDash)||n.setLineDash(e.lineDash=t.lineDash),e.lineDashOffset!=t.lineDashOffset&&(e.lineDashOffset=t.lineDashOffset,n.lineDashOffset=t.lineDashOffset)),e.lineJoin!=t.lineJoin&&(e.lineJoin=t.lineJoin,n.lineJoin=t.lineJoin),e.lineWidth!=t.lineWidth&&(e.lineWidth=t.lineWidth,n.lineWidth=t.lineWidth),e.miterLimit!=t.miterLimit&&(e.miterLimit=t.miterLimit,n.miterLimit=t.miterLimit),e.strokeStyle!=t.strokeStyle&&(e.strokeStyle=t.strokeStyle,n.strokeStyle=t.strokeStyle)):(n.lineCap=t.lineCap,n.setLineDash&&(n.setLineDash(t.lineDash),n.lineDashOffset=t.lineDashOffset),n.lineJoin=t.lineJoin,n.lineWidth=t.lineWidth,n.miterLimit=t.miterLimit,n.strokeStyle=t.strokeStyle,this.contextStrokeState_={lineCap:t.lineCap,lineDash:t.lineDash,lineDashOffset:t.lineDashOffset,lineJoin:t.lineJoin,lineWidth:t.lineWidth,miterLimit:t.miterLimit,strokeStyle:t.strokeStyle})},n.prototype.setContextTextState_=function(t){var n=this.context_,e=this.contextTextState_,r=t.textAlign?t.textAlign:w.l;e?(e.font!=t.font&&(e.font=t.font,n.font=t.font),e.textAlign!=r&&(e.textAlign=r,n.textAlign=r),e.textBaseline!=t.textBaseline&&(e.textBaseline=t.textBaseline,n.textBaseline=t.textBaseline)):(n.font=t.font,n.textAlign=r,n.textBaseline=t.textBaseline,this.contextTextState_={font:t.font,textAlign:r,textBaseline:t.textBaseline})},n.prototype.setFillStrokeStyle=function(t,n){var e=this;if(t){var r=t.getColor();this.fillState_={fillStyle:Object(b.a)(r||w.b)}}else this.fillState_=null;if(n){var l=n.getColor(),i=n.getLineCap(),o=n.getLineDash(),u=n.getLineDashOffset(),s=n.getLineJoin(),a=n.getWidth(),h=n.getMiterLimit(),c=o||w.e;this.strokeState_={lineCap:void 0!==i?i:w.d,lineDash:1===this.pixelRatio_?c:c.map((function(t){return t*e.pixelRatio_})),lineDashOffset:(u||w.f)*this.pixelRatio_,lineJoin:void 0!==s?s:w.g,lineWidth:(void 0!==a?a:w.h)*this.pixelRatio_,miterLimit:void 0!==h?h:w.i,strokeStyle:Object(b.a)(l||w.k)}}else this.strokeState_=null},n.prototype.setImageStyle=function(t){var n;if(t&&(n=t.getSize())){var e=t.getAnchor(),r=t.getOrigin();this.image_=t.getImage(this.pixelRatio_),this.imageAnchorX_=e[0]*this.pixelRatio_,this.imageAnchorY_=e[1]*this.pixelRatio_,this.imageHeight_=n[1]*this.pixelRatio_,this.imageOpacity_=t.getOpacity(),this.imageOriginX_=r[0],this.imageOriginY_=r[1],this.imageRotateWithView_=t.getRotateWithView(),this.imageRotation_=t.getRotation(),this.imageScale_=t.getScaleArray(),this.imageWidth_=n[0]*this.pixelRatio_}else this.image_=null},n.prototype.setTextStyle=function(t){if(t){var n=t.getFill();if(n){var e=n.getColor();this.textFillState_={fillStyle:Object(b.a)(e||w.b)}}else this.textFillState_=null;var r=t.getStroke();if(r){var l=r.getColor(),i=r.getLineCap(),o=r.getLineDash(),u=r.getLineDashOffset(),s=r.getLineJoin(),a=r.getWidth(),h=r.getMiterLimit();this.textStrokeState_={lineCap:void 0!==i?i:w.d,lineDash:o||w.e,lineDashOffset:u||w.f,lineJoin:void 0!==s?s:w.g,lineWidth:void 0!==a?a:w.h,miterLimit:void 0!==h?h:w.i,strokeStyle:Object(b.a)(l||w.k)}}else this.textStrokeState_=null;var c=t.getFont(),f=t.getOffsetX(),p=t.getOffsetY(),d=t.getRotateWithView(),g=t.getRotation(),y=t.getScaleArray(),_=t.getText(),v=t.getTextAlign(),m=t.getTextBaseline();this.textState_={font:void 0!==c?c:w.c,textAlign:void 0!==v?v:w.l,textBaseline:void 0!==m?m:w.m},this.text_=void 0!==_?Array.isArray(_)?_.reduce((function(t,n,e){return t+(e%2?" ":n)}),""):_:"",this.textOffsetX_=void 0!==f?this.pixelRatio_*f:0,this.textOffsetY_=void 0!==p?this.pixelRatio_*p:0,this.textRotateWithView_=void 0!==d&&d,this.textRotation_=void 0!==g?g:0,this.textScale_=[this.pixelRatio_*y[0],this.pixelRatio_*y[1]]}else this.text_=""},n}(m),pt=e(342),dt=e(276);var gt=e(285),yt={Point:function(t,n,e,r,l){var i,o=e.getImage(),u=e.getText();if(o){if(o.getImageState()!=gt.a.LOADED)return;var s=t;if(l){var a=o.getDeclutterMode();if("none"!==a)if(s=l,"obstacle"===a){var h=t.getBuilder(e.getZIndex(),"Image");h.setImageStyle(o,i),h.drawPoint(n,r)}else u&&u.getText()&&(i={})}var c=s.getBuilder(e.getZIndex(),"Image");c.setImageStyle(o,i),c.drawPoint(n,r)}if(u&&u.getText()){var f=t;l&&(f=l);var p=f.getBuilder(e.getZIndex(),"Text");p.setTextStyle(u,i),p.drawText(n,r)}},LineString:function(t,n,e,r,l){var i=e.getStroke();if(i){var o=t.getBuilder(e.getZIndex(),"LineString");o.setFillStrokeStyle(null,i),o.drawLineString(n,r)}var u=e.getText();if(u&&u.getText()){var s=(l||t).getBuilder(e.getZIndex(),"Text");s.setTextStyle(u),s.drawText(n,r)}},Polygon:function(t,n,e,r,l){var i=e.getFill(),o=e.getStroke();if(i||o){var u=t.getBuilder(e.getZIndex(),"Polygon");u.setFillStrokeStyle(i,o),u.drawPolygon(n,r)}var s=e.getText();if(s&&s.getText()){var a=(l||t).getBuilder(e.getZIndex(),"Text");a.setTextStyle(s),a.drawText(n,r)}},MultiPoint:function(t,n,e,r,l){var i,o=e.getImage(),u=e.getText();if(o){if(o.getImageState()!=gt.a.LOADED)return;var s=t;if(l){var a=o.getDeclutterMode();if("none"!==a)if(s=l,"obstacle"===a){var h=t.getBuilder(e.getZIndex(),"Image");h.setImageStyle(o,i),h.drawMultiPoint(n,r)}else u&&u.getText()&&(i={})}var c=s.getBuilder(e.getZIndex(),"Image");c.setImageStyle(o,i),c.drawMultiPoint(n,r)}if(u&&u.getText()){var f=t;l&&(f=l);var p=f.getBuilder(e.getZIndex(),"Text");p.setTextStyle(u,i),p.drawText(n,r)}},MultiLineString:function(t,n,e,r,l){var i=e.getStroke();if(i){var o=t.getBuilder(e.getZIndex(),"LineString");o.setFillStrokeStyle(null,i),o.drawMultiLineString(n,r)}var u=e.getText();if(u&&u.getText()){var s=(l||t).getBuilder(e.getZIndex(),"Text");s.setTextStyle(u),s.drawText(n,r)}},MultiPolygon:function(t,n,e,r,l){var i=e.getFill(),o=e.getStroke();if(o||i){var u=t.getBuilder(e.getZIndex(),"Polygon");u.setFillStrokeStyle(i,o),u.drawMultiPolygon(n,r)}var s=e.getText();if(s&&s.getText()){var a=(l||t).getBuilder(e.getZIndex(),"Text");a.setTextStyle(s),a.drawText(n,r)}},GeometryCollection:function(t,n,e,r,l){var i,o,u=n.getGeometriesArray();for(i=0,o=u.length;i<o;++i){(0,yt[u[i].getType()])(t,u[i],e,r,l)}},Circle:function(t,n,e,r,l){var i=e.getFill(),o=e.getStroke();if(i||o){var u=t.getBuilder(e.getZIndex(),"Circle");u.setFillStrokeStyle(i,o),u.drawCircle(n,r)}var s=e.getText();if(s&&s.getText()){var a=(l||t).getBuilder(e.getZIndex(),"Text");a.setTextStyle(s),a.drawText(n,r)}}};function _t(t,n){return parseInt(Object(j.c)(t),10)-parseInt(Object(j.c)(n),10)}function vt(t,n){return.5*t/n}function mt(t,n,e,r,l,i,o){var u=!1,s=e.getImage();if(s){var a=s.getImageState();a==gt.a.LOADED||a==gt.a.ERROR?s.unlistenImageChange(l):(a==gt.a.IDLE&&s.load(),s.listenImageChange(l),u=!0)}return function(t,n,e,r,l,i){var o=e.getGeometryFunction()(n);if(!o)return;var u=o.simplifyTransformed(r,l);if(e.getRenderer())!function t(n,e,r,l){if("GeometryCollection"==e.getType()){for(var i=e.getGeometries(),o=0,u=i.length;o<u;++o)t(n,i[o],r,l);return}n.getBuilder(r.getZIndex(),"Default").drawCustom(e,l,r.getRenderer(),r.getHitDetectionRenderer())}(t,u,e,n);else{(0,yt[u.getType()])(t,u,e,n,i)}}(t,n,e,r,i,o),u}var bt=e(241),xt=e(290),wt=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),Et=function(t){function n(n){var e=t.call(this,n)||this;return e.boundHandleStyleImageChange_=e.handleStyleImageChange_.bind(e),e.animatingOrInteracting_,e.hitDetectionImageData_=null,e.renderedFeatures_=null,e.renderedRevision_=-1,e.renderedResolution_=NaN,e.renderedExtent_=Object(x.j)(),e.wrappedRenderedExtent_=Object(x.j)(),e.renderedRotation_,e.renderedCenter_=null,e.renderedProjection_=null,e.renderedRenderOrder_=null,e.replayGroup_=null,e.replayGroupChanged=!0,e.declutterExecutorGroup=null,e.clipping=!0,e.compositionContext_=null,e.opacity_=1,e}return wt(n,t),n.prototype.renderWorlds=function(t,n,e){var r=n.extent,l=n.viewState,i=l.center,o=l.resolution,u=l.projection,s=l.rotation,a=u.getExtent(),h=this.getLayer().getSource(),c=n.pixelRatio,f=n.viewHints,p=!(f[at.a.ANIMATING]||f[at.a.INTERACTING]),d=this.compositionContext_,g=Math.round(n.size[0]*c),y=Math.round(n.size[1]*c),_=h.getWrapX()&&u.canWrapX(),v=_?Object(x.E)(a):null,m=_?Math.ceil((r[2]-a[2])/v)+1:1,b=_?Math.floor((r[0]-a[0])/v):0;do{var w=this.getRenderTransform(i,o,s,c,g,y,b*v);t.execute(d,1,w,s,p,void 0,e)}while(++b<m)},n.prototype.setupCompositionContext_=function(){if(1!==this.opacity_){var t=Object(lt.a)(this.context.canvas.width,this.context.canvas.height,B.a);this.compositionContext_=t}else this.compositionContext_=this.context},n.prototype.releaseCompositionContext_=function(){if(1!==this.opacity_){var t=this.context.globalAlpha;this.context.globalAlpha=this.opacity_,this.context.drawImage(this.compositionContext_.canvas,0,0),this.context.globalAlpha=t,Object(lt.d)(this.compositionContext_),B.a.push(this.compositionContext_.canvas),this.compositionContext_=null}},n.prototype.renderDeclutter=function(t){this.declutterExecutorGroup&&(this.setupCompositionContext_(),this.renderWorlds(this.declutterExecutorGroup,t,t.declutterTree),this.releaseCompositionContext_())},n.prototype.renderFrame=function(t,n){var e=t.pixelRatio,r=t.layerStatesArray[t.layerIndex];Object(q.e)(this.pixelTransform,1/e,1/e),Object(q.d)(this.inversePixelTransform,this.pixelTransform);var l=Object(q.g)(this.pixelTransform);this.useContainer(n,l,this.getBackground(t));var i=this.context,o=i.canvas,u=this.replayGroup_,s=this.declutterExecutorGroup;if((!u||u.isEmpty())&&(!s||s.isEmpty()))return null;var a=Math.round(t.size[0]*e),h=Math.round(t.size[1]*e);o.width!=a||o.height!=h?(o.width=a,o.height=h,o.style.transform!==l&&(o.style.transform=l)):this.containerReused||i.clearRect(0,0,a,h),this.preRender(i,t);var c=t.viewState,f=c.projection;this.opacity_=r.opacity,this.setupCompositionContext_();var p=!1,d=!0;if(r.extent&&this.clipping){var g=Object(bt.fromUserExtent)(r.extent,f);(p=(d=Object(x.F)(g,t.extent))&&!Object(x.g)(g,t.extent))&&this.clipUnrotated(this.compositionContext_,t,g)}return d&&this.renderWorlds(u,t),p&&this.compositionContext_.restore(),this.releaseCompositionContext_(),this.postRender(i,t),this.renderedRotation_!==c.rotation&&(this.renderedRotation_=c.rotation,this.hitDetectionImageData_=null),this.container},n.prototype.getFeatures=function(t){return new Promise(function(n){if(!this.hitDetectionImageData_&&!this.animatingOrInteracting_){var e=[this.context.canvas.width,this.context.canvas.height];Object(q.a)(this.pixelTransform,e);var r=this.renderedCenter_,l=this.renderedResolution_,i=this.renderedRotation_,o=this.renderedProjection_,u=this.wrappedRenderedExtent_,s=this.getLayer(),a=[],h=.5*e[0],c=.5*e[1];a.push(this.getRenderTransform(r,l,i,.5,h,c,0).slice());var f=s.getSource(),p=o.getExtent();if(f.getWrapX()&&o.canWrapX()&&!Object(x.g)(p,u)){for(var d=u[0],g=Object(x.E)(p),y=0,_=void 0;d<p[0];)_=g*--y,a.push(this.getRenderTransform(r,l,i,.5,h,c,_).slice()),d+=g;for(y=0,d=u[2];d>p[2];)_=g*++y,a.push(this.getRenderTransform(r,l,i,.5,h,c,_).slice()),d-=g}this.hitDetectionImageData_=function(t,n,e,r,l,i,o){var u=.5*t[0],s=.5*t[1],a=Object(lt.a)(u,s);a.imageSmoothingEnabled=!1;for(var h=a.canvas,c=new ft(a,.5,l,null,o),f=e.length,p=Math.floor(16777215/f),d={},g=1;g<=f;++g){var y=e[g-1],_=y.getStyleFunction()||r;if(r){var v=_(y,i);if(v){Array.isArray(v)||(v=[v]);for(var m="#"+("000000"+(g*p).toString(16)).slice(-6),b=0,w=v.length;b<w;++b){var C=v[b],O=C.getGeometryFunction()(y);if(O&&Object(x.F)(l,O.getExtent())){var M=C.clone(),S=M.getFill();S&&S.setColor(m);var I=M.getStroke();I&&(I.setColor(m),I.setLineDash(null)),M.setText(void 0);var P=C.getImage();if(P&&0!==P.getOpacity()){var R=P.getImageSize();if(!R)continue;var T=Object(lt.a)(R[0],R[1],void 0,{alpha:!1}),N=T.canvas;T.fillStyle=m,T.fillRect(0,0,N.width,N.height),M.setImage(new dt.a({img:N,imgSize:R,anchor:P.getAnchor(),anchorXUnits:pt.a.PIXELS,anchorYUnits:pt.a.PIXELS,offset:P.getOrigin(),opacity:1,size:P.getSize(),scale:P.getScale(),rotation:P.getRotation(),rotateWithView:P.getRotateWithView()}))}var L=M.getZIndex()||0;(D=d[L])||(D={},d[L]=D,D.Polygon=[],D.Circle=[],D.LineString=[],D.Point=[]),D[O.getType().replace("Multi","")].push(O,M)}}}}}for(var A=Object.keys(d).map(Number).sort(E.f),j=(g=0,A.length);g<j;++g){var D=d[A[g]];for(var k in D){var F=D[k];for(b=0,w=F.length;b<w;b+=2){c.setStyle(F[b+1]);for(var G=0,z=n.length;G<z;++G)c.setTransform(n[G]),c.drawGeometry(F[b])}}}return a.getImageData(0,0,h.width,h.height)}(e,a,this.renderedFeatures_,s.getStyleFunction(),u,l,i)}n(function(t,n,e){var r=[];if(e){var l=Math.floor(.5*Math.round(t[0])),i=Math.floor(.5*Math.round(t[1])),o=4*(Object(Y.b)(l,0,e.width-1)+Object(Y.b)(i,0,e.height-1)*e.width),u=e.data[o],s=e.data[o+1],a=e.data[o+2]+256*(s+256*u),h=Math.floor(16777215/n.length);a&&a%h==0&&r.push(n[a/h-1])}return r}(t,this.renderedFeatures_,this.hitDetectionImageData_))}.bind(this))},n.prototype.forEachFeatureAtCoordinate=function(t,n,e,r,l){var i=this;if(this.replayGroup_){var o,u=n.viewState.resolution,s=n.viewState.rotation,a=this.getLayer(),h={},c=function(t,n,e){var i=Object(j.c)(t),o=h[i];if(o){if(!0!==o&&e<o.distanceSq){if(0===e)return h[i]=!0,l.splice(l.lastIndexOf(o),1),r(t,a,n);o.geometry=n,o.distanceSq=e}}else{if(0===e)return h[i]=!0,r(t,a,n);l.push(h[i]={feature:t,layer:a,geometry:n,distanceSq:e,callback:r})}},f=[this.replayGroup_];return this.declutterExecutorGroup&&f.push(this.declutterExecutorGroup),f.some((function(r){return o=r.forEachFeatureAtCoordinate(t,u,s,e,c,r===i.declutterExecutorGroup&&n.declutterTree?n.declutterTree.all().map((function(t){return t.value})):null)})),o}},n.prototype.handleFontsChanged=function(){var t=this.getLayer();t.getVisible()&&this.replayGroup_&&t.changed()},n.prototype.handleStyleImageChange_=function(t){this.renderIfReadyAndVisible()},n.prototype.prepareFrame=function(t){var n=this.getLayer(),e=n.getSource();if(!e)return!1;var r=t.viewHints[at.a.ANIMATING],l=t.viewHints[at.a.INTERACTING],i=n.getUpdateWhileAnimating(),o=n.getUpdateWhileInteracting();if(this.ready&&!i&&r||!o&&l)return this.animatingOrInteracting_=!0,!0;this.animatingOrInteracting_=!1;var u=t.extent,s=t.viewState,a=s.projection,h=s.resolution,c=t.pixelRatio,f=n.getRevision(),p=n.getRenderBuffer(),d=n.getRenderOrder();void 0===d&&(d=_t);var g=s.center.slice(),y=Object(x.c)(u,p*h),_=y.slice(),v=[y.slice()],m=a.getExtent();if(e.getWrapX()&&a.canWrapX()&&!Object(x.g)(m,t.extent)){var b=Object(x.E)(m),w=Math.max(Object(x.E)(y)/2,b);y[0]=m[0]-w,y[2]=m[2]+w,Object(xt.f)(g,a);var C=Object(x.K)(v[0],a);C[0]<m[0]&&C[2]<m[2]?v.push([C[0]+b,C[1],C[2]+b,C[3]]):C[0]>m[0]&&C[2]>m[2]&&v.push([C[0]-b,C[1],C[2]-b,C[3]])}if(this.ready&&this.renderedResolution_==h&&this.renderedRevision_==f&&this.renderedRenderOrder_==d&&Object(x.g)(this.wrappedRenderedExtent_,y))return Object(E.b)(this.renderedExtent_,_)||(this.hitDetectionImageData_=null,this.renderedExtent_=_),this.renderedCenter_=g,this.replayGroupChanged=!1,!0;this.replayGroup_=null;var O,M=new z(vt(h,c),y,h,c);this.getLayer().getDeclutter()&&(O=new z(vt(h,c),y,h,c));var S,I=Object(bt.getUserProjection)();if(I){for(var P=0,R=v.length;P<R;++P){var T=v[P],N=Object(bt.toUserExtent)(T,a);e.loadFeatures(N,Object(bt.toUserResolution)(h,a),I)}S=Object(bt.getTransformFromProjections)(I,a)}else for(P=0,R=v.length;P<R;++P)e.loadFeatures(v[P],h,a);var L=function(t,n){var e=vt(t,n);return e*e}(h,c),A=!0,j=function(t){var e,r=t.getStyleFunction()||n.getStyleFunction();if(r&&(e=r(t,h)),e){var l=this.renderFeature(t,L,e,M,S,O);A=A&&!l}}.bind(this),D=Object(bt.toUserExtent)(y,a),k=e.getFeaturesInExtent(D);d&&k.sort(d);for(P=0,R=k.length;P<R;++P)j(k[P]);this.renderedFeatures_=k,this.ready=A;var F=M.finish(),G=new st(y,h,c,e.getOverlaps(),F,n.getRenderBuffer());return O&&(this.declutterExecutorGroup=new st(y,h,c,e.getOverlaps(),O.finish(),n.getRenderBuffer())),this.renderedResolution_=h,this.renderedRevision_=f,this.renderedRenderOrder_=d,this.renderedExtent_=_,this.wrappedRenderedExtent_=y,this.renderedCenter_=g,this.renderedProjection_=a,this.replayGroup_=G,this.hitDetectionImageData_=null,this.replayGroupChanged=!0,!0},n.prototype.renderFeature=function(t,n,e,r,l,i){if(!e)return!1;var o=!1;if(Array.isArray(e))for(var u=0,s=e.length;u<s;++u)o=mt(r,t,e[u],n,this.boundHandleStyleImageChange_,l,i)||o;else o=mt(r,t,e,n,this.boundHandleStyleImageChange_,l,i);return o},n}(B.b),Ct=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),Ot=function(t){function n(n){return t.call(this,n)||this}return Ct(n,t),n.prototype.createRenderer=function(){return new Et(this)},n}(c);n.default=Ot},function(t,n,e){"use strict";e.r(n),e.d(n,"VectorSourceEvent",(function(){return T}));var r=e(288),l=e(302),i=e(249),o=e(240),u=e(294),s=e(339),a=e.n(s),h=e(237),c=e(238),f=e(242),p=function(){function t(t){this.rbush_=new a.a(t),this.items_={}}return t.prototype.insert=function(t,n){var e={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3],value:n};this.rbush_.insert(e),this.items_[Object(c.c)(n)]=e},t.prototype.load=function(t,n){for(var e=new Array(n.length),r=0,l=n.length;r<l;r++){var i=t[r],o=n[r],u={minX:i[0],minY:i[1],maxX:i[2],maxY:i[3],value:o};e[r]=u,this.items_[Object(c.c)(o)]=u}this.rbush_.load(e)},t.prototype.remove=function(t){var n=Object(c.c)(t),e=this.items_[n];return delete this.items_[n],null!==this.rbush_.remove(e)},t.prototype.update=function(t,n){var e=this.items_[Object(c.c)(n)],r=[e.minX,e.minY,e.maxX,e.maxY];Object(h.o)(r,t)||(this.remove(n),this.insert(t,n))},t.prototype.getAll=function(){return this.rbush_.all().map((function(t){return t.value}))},t.prototype.getInExtent=function(t){var n={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3]};return this.rbush_.search(n).map((function(t){return t.value}))},t.prototype.forEach=function(t){return this.forEach_(this.getAll(),t)},t.prototype.forEachInExtent=function(t,n){return this.forEach_(this.getInExtent(t),n)},t.prototype.forEach_=function(t,n){for(var e,r=0,l=t.length;r<l;r++)if(e=n(t[r]))return e;return e},t.prototype.isEmpty=function(){return Object(f.d)(this.items_)},t.prototype.clear=function(){this.rbush_.clear(),this.items_={}},t.prototype.getExtent=function(t){var n=this.rbush_.toJSON();return Object(h.k)(n.minX,n.minY,n.maxX,n.maxY,t)},t.prototype.concat=function(t){for(var n in this.rbush_.load(t.rbush_.all()),t.items_)this.items_[n]=t.items_[n]},t}(),d=e(340),g="addfeature",y="changefeature",_="clear",v="removefeature",m="featuresloadstart",b="featuresloadend",x="featuresloaderror",w=e(247);e(241);function E(t,n){return[[-1/0,-1/0,1/0,1/0]]}var C=e(244),O=e(243),M=e(245),S=!1;function I(t,n){return function(e,r,l,i,o){var u=this;!function(t,n,e,r,l,i,o){var u=new XMLHttpRequest;u.open("GET","function"==typeof t?t(e,r,l):t,!0),"arraybuffer"==n.getType()&&(u.responseType="arraybuffer"),u.withCredentials=S,u.onload=function(t){if(!u.status||u.status>=200&&u.status<300){var r=n.getType(),s=void 0;"json"==r||"text"==r?s=u.responseText:"xml"==r?(s=u.responseXML)||(s=(new DOMParser).parseFromString(u.responseText,"application/xml")):"arraybuffer"==r&&(s=u.response),s?i(n.readFeatures(s,{extent:e,featureProjection:l}),n.readProjection(s)):o()}else o()},u.onerror=o,u.send()}(t,n,e,r,l,(function(t,n){u.addFeatures(t),void 0!==i&&i(t)}),o||w.c)}}var P,R=(P=function(t,n){return(P=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}P(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),T=function(t){function n(n,e,r){var l=t.call(this,n)||this;return l.feature=e,l.features=r,l}return R(n,t),n}(i.a),N=function(t){function n(n){var e=this,l=n||{};(e=t.call(this,{attributions:l.attributions,interpolate:!0,projection:void 0,state:"ready",wrapX:void 0===l.wrapX||l.wrapX})||this).on,e.once,e.un,e.loader_=w.c,e.format_=l.format,e.overlaps_=void 0===l.overlaps||l.overlaps,e.url_=l.url,void 0!==l.loader?e.loader_=l.loader:void 0!==e.url_&&(Object(C.a)(e.format_,7),e.loader_=I(e.url_,e.format_)),e.strategy_=void 0!==l.strategy?l.strategy:E;var i,o,u=void 0===l.useSpatialIndex||l.useSpatialIndex;return e.featuresRtree_=u?new p:null,e.loadedExtentsRtree_=new p,e.loadingExtentsCount_=0,e.nullGeometryFeatures_={},e.idIndex_={},e.uidIndex_={},e.featureChangeKeys_={},e.featuresCollection_=null,Array.isArray(l.features)?o=l.features:l.features&&(o=(i=l.features).getArray()),u||void 0!==i||(i=new r.a(o)),void 0!==o&&e.addFeaturesInternal(o),void 0!==i&&e.bindFeaturesCollection_(i),e}return R(n,t),n.prototype.addFeature=function(t){this.addFeatureInternal(t),this.changed()},n.prototype.addFeatureInternal=function(t){var n=Object(c.c)(t);if(this.addToIndex_(n,t)){this.setupChangeEvents_(n,t);var e=t.getGeometry();if(e){var r=e.getExtent();this.featuresRtree_&&this.featuresRtree_.insert(r,t)}else this.nullGeometryFeatures_[n]=t;this.dispatchEvent(new T(g,t))}else this.featuresCollection_&&this.featuresCollection_.remove(t)},n.prototype.setupChangeEvents_=function(t,n){this.featureChangeKeys_[t]=[Object(M.a)(n,o.a.CHANGE,this.handleFeatureChange_,this),Object(M.a)(n,u.a.PROPERTYCHANGE,this.handleFeatureChange_,this)]},n.prototype.addToIndex_=function(t,n){var e=!0,r=n.getId();return void 0!==r&&(r.toString()in this.idIndex_?e=!1:this.idIndex_[r.toString()]=n),e&&(Object(C.a)(!(t in this.uidIndex_),30),this.uidIndex_[t]=n),e},n.prototype.addFeatures=function(t){this.addFeaturesInternal(t),this.changed()},n.prototype.addFeaturesInternal=function(t){for(var n=[],e=[],r=[],l=0,i=t.length;l<i;l++){var o=t[l],u=Object(c.c)(o);this.addToIndex_(u,o)&&e.push(o)}l=0;for(var s=e.length;l<s;l++){o=e[l],u=Object(c.c)(o);this.setupChangeEvents_(u,o);var a=o.getGeometry();if(a){var h=a.getExtent();n.push(h),r.push(o)}else this.nullGeometryFeatures_[u]=o}if(this.featuresRtree_&&this.featuresRtree_.load(n,r),this.hasListener(g)){l=0;for(var f=e.length;l<f;l++)this.dispatchEvent(new T(g,e[l]))}},n.prototype.bindFeaturesCollection_=function(t){var n=!1;this.addEventListener(g,(function(e){n||(n=!0,t.push(e.feature),n=!1)})),this.addEventListener(v,(function(e){n||(n=!0,t.remove(e.feature),n=!1)})),t.addEventListener(l.a.ADD,function(t){n||(n=!0,this.addFeature(t.element),n=!1)}.bind(this)),t.addEventListener(l.a.REMOVE,function(t){n||(n=!0,this.removeFeature(t.element),n=!1)}.bind(this)),this.featuresCollection_=t},n.prototype.clear=function(t){if(t){for(var n in this.featureChangeKeys_){this.featureChangeKeys_[n].forEach(M.c)}this.featuresCollection_||(this.featureChangeKeys_={},this.idIndex_={},this.uidIndex_={})}else if(this.featuresRtree_){var e=function(t){this.removeFeatureInternal(t)}.bind(this);for(var r in this.featuresRtree_.forEach(e),this.nullGeometryFeatures_)this.removeFeatureInternal(this.nullGeometryFeatures_[r])}this.featuresCollection_&&this.featuresCollection_.clear(),this.featuresRtree_&&this.featuresRtree_.clear(),this.nullGeometryFeatures_={};var l=new T(_);this.dispatchEvent(l),this.changed()},n.prototype.forEachFeature=function(t){if(this.featuresRtree_)return this.featuresRtree_.forEach(t);this.featuresCollection_&&this.featuresCollection_.forEach(t)},n.prototype.forEachFeatureAtCoordinateDirect=function(t,n){var e=[t[0],t[1],t[0],t[1]];return this.forEachFeatureInExtent(e,(function(e){return e.getGeometry().intersectsCoordinate(t)?n(e):void 0}))},n.prototype.forEachFeatureInExtent=function(t,n){if(this.featuresRtree_)return this.featuresRtree_.forEachInExtent(t,n);this.featuresCollection_&&this.featuresCollection_.forEach(n)},n.prototype.forEachFeatureIntersectingExtent=function(t,n){return this.forEachFeatureInExtent(t,(function(e){if(e.getGeometry().intersectsExtent(t)){var r=n(e);if(r)return r}}))},n.prototype.getFeaturesCollection=function(){return this.featuresCollection_},n.prototype.getFeatures=function(){var t;return this.featuresCollection_?t=this.featuresCollection_.getArray().slice(0):this.featuresRtree_&&(t=this.featuresRtree_.getAll(),Object(f.d)(this.nullGeometryFeatures_)||Object(O.c)(t,Object(f.c)(this.nullGeometryFeatures_))),t},n.prototype.getFeaturesAtCoordinate=function(t){var n=[];return this.forEachFeatureAtCoordinateDirect(t,(function(t){n.push(t)})),n},n.prototype.getFeaturesInExtent=function(t,n){var e=this;if(this.featuresRtree_){if(!(n&&n.canWrapX()&&this.getWrapX()))return this.featuresRtree_.getInExtent(t);var r=Object(h.J)(t,n);return[].concat.apply([],r.map((function(t){return e.featuresRtree_.getInExtent(t)})))}return this.featuresCollection_?this.featuresCollection_.getArray().slice(0):[]},n.prototype.getClosestFeatureToCoordinate=function(t,n){var e=t[0],r=t[1],l=null,i=[NaN,NaN],o=1/0,u=[-1/0,-1/0,1/0,1/0],s=n||w.b;return this.featuresRtree_.forEachInExtent(u,(function(t){if(s(t)){var n=t.getGeometry(),a=o;if((o=n.closestPointXY(e,r,i,o))<a){l=t;var h=Math.sqrt(o);u[0]=e-h,u[1]=r-h,u[2]=e+h,u[3]=r+h}}})),l},n.prototype.getExtent=function(t){return this.featuresRtree_.getExtent(t)},n.prototype.getFeatureById=function(t){var n=this.idIndex_[t.toString()];return void 0!==n?n:null},n.prototype.getFeatureByUid=function(t){var n=this.uidIndex_[t];return void 0!==n?n:null},n.prototype.getFormat=function(){return this.format_},n.prototype.getOverlaps=function(){return this.overlaps_},n.prototype.getUrl=function(){return this.url_},n.prototype.handleFeatureChange_=function(t){var n=t.target,e=Object(c.c)(n),r=n.getGeometry();if(r){var l=r.getExtent();e in this.nullGeometryFeatures_?(delete this.nullGeometryFeatures_[e],this.featuresRtree_&&this.featuresRtree_.insert(l,n)):this.featuresRtree_&&this.featuresRtree_.update(l,n)}else e in this.nullGeometryFeatures_||(this.featuresRtree_&&this.featuresRtree_.remove(n),this.nullGeometryFeatures_[e]=n);var i=n.getId();if(void 0!==i){var o=i.toString();this.idIndex_[o]!==n&&(this.removeFromIdIndex_(n),this.idIndex_[o]=n)}else this.removeFromIdIndex_(n),this.uidIndex_[e]=n;this.changed(),this.dispatchEvent(new T(y,n))},n.prototype.hasFeature=function(t){var n=t.getId();return void 0!==n?n in this.idIndex_:Object(c.c)(t)in this.uidIndex_},n.prototype.isEmpty=function(){return this.featuresRtree_?this.featuresRtree_.isEmpty()&&Object(f.d)(this.nullGeometryFeatures_):!this.featuresCollection_||0===this.featuresCollection_.getLength()},n.prototype.loadFeatures=function(t,n,e){for(var r=this.loadedExtentsRtree_,l=this.strategy_(t,n,e),i=function(t,i){var u=l[t];r.forEachInExtent(u,(function(t){return Object(h.g)(t.extent,u)}))||(++o.loadingExtentsCount_,o.dispatchEvent(new T(m)),o.loader_.call(o,u,n,e,function(t){--this.loadingExtentsCount_,this.dispatchEvent(new T(b,void 0,t))}.bind(o),function(){--this.loadingExtentsCount_,this.dispatchEvent(new T(x))}.bind(o)),r.insert(u,{extent:u.slice()}))},o=this,u=0,s=l.length;u<s;++u)i(u);this.loading=!(this.loader_.length<4)&&this.loadingExtentsCount_>0},n.prototype.refresh=function(){this.clear(!0),this.loadedExtentsRtree_.clear(),t.prototype.refresh.call(this)},n.prototype.removeLoadedExtent=function(t){var n,e=this.loadedExtentsRtree_;e.forEachInExtent(t,(function(e){if(Object(h.o)(e.extent,t))return n=e,!0})),n&&e.remove(n)},n.prototype.removeFeature=function(t){if(t){var n=Object(c.c)(t);n in this.nullGeometryFeatures_?delete this.nullGeometryFeatures_[n]:this.featuresRtree_&&this.featuresRtree_.remove(t),this.removeFeatureInternal(t)&&this.changed()}},n.prototype.removeFeatureInternal=function(t){var n=Object(c.c)(t),e=this.featureChangeKeys_[n];if(e){e.forEach(M.c),delete this.featureChangeKeys_[n];var r=t.getId();return void 0!==r&&delete this.idIndex_[r.toString()],delete this.uidIndex_[n],this.dispatchEvent(new T(v,t)),t}},n.prototype.removeFromIdIndex_=function(t){var n=!1;for(var e in this.idIndex_)if(this.idIndex_[e]===t){delete this.idIndex_[e],n=!0;break}return n},n.prototype.setLoader=function(t){this.loader_=t},n.prototype.setUrl=function(t){Object(C.a)(this.format_,7),this.url_=t,this.setLoader(I(t,this.format_))},n}(d.a);n.default=N},function(t,n,e){"use strict";e.r(n),e.d(n,"createCenterConstraint",(function(){return I})),e.d(n,"createResolutionConstraint",(function(){return P})),e.d(n,"createRotationConstraint",(function(){return R})),e.d(n,"isNoopAnimation",(function(){return T}));var r=e(248),l=e(256),i=e(307),o={CENTER:"center",RESOLUTION:"resolution",ROTATION:"rotation"},u=e(313),s=e(241),a=e(247),h=e(290),c=e(244),f=e(242),p=e(239);function d(t,n,e){return function(r,l,i,o,u){if(r){if(!l&&!n)return r;var s=n?0:i[0]*l,a=n?0:i[1]*l,h=u?u[0]:0,c=u?u[1]:0,f=t[0]+s/2+h,d=t[2]-s/2+h,g=t[1]+a/2+c,y=t[3]-a/2+c;f>d&&(d=f=(d+f)/2),g>y&&(y=g=(y+g)/2);var _=Object(p.b)(r[0],f,d),v=Object(p.b)(r[1],g,y);if(o&&e&&l){var m=30*l;_+=-m*Math.log(1+Math.max(0,f-r[0])/m)+m*Math.log(1+Math.max(0,r[0]-d)/m),v+=-m*Math.log(1+Math.max(0,g-r[1])/m)+m*Math.log(1+Math.max(0,r[1]-y)/m)}return[_,v]}}}function g(t){return t}var y=e(237),_=e(243);function v(t,n,e,r){var l=Object(y.E)(n)/e[0],i=Object(y.z)(n)/e[1];return r?Math.min(t,Math.max(l,i)):Math.min(t,Math.min(l,i))}function m(t,n,e){var r=Math.min(t,n);return r*=Math.log(1+50*Math.max(0,t/n-1))/50+1,e&&(r=Math.max(r,e),r/=Math.log(1+50*Math.max(0,e/t-1))/50+1),Object(p.b)(r,e/2,2*n)}function b(t,n,e,r,l){return function(i,o,u,s){if(void 0!==i){var a=r?v(t,r,u,l):t;return(void 0===e||e)&&s?m(i,a,n):Object(p.b)(i,n,a)}}}var x,w=e(312),E=e(272),C=e(296),O=(x=function(t,n){return(x=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}x(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),M=function(t){function n(n){var e=t.call(this)||this;e.on,e.once,e.un;var r=Object(f.a)({},n);return e.hints_=[0,0],e.animations_=[],e.updateAnimationKey_,e.projection_=Object(s.createProjection)(r.projection,"EPSG:3857"),e.viewportSize_=[100,100],e.targetCenter_=null,e.targetResolution_,e.targetRotation_,e.nextCenter_=null,e.nextResolution_,e.nextRotation_,e.cancelAnchor_=void 0,r.projection&&Object(s.disableCoordinateWarning)(),r.center&&(r.center=Object(s.fromUserCoordinate)(r.center,e.projection_)),r.extent&&(r.extent=Object(s.fromUserExtent)(r.extent,e.projection_)),e.applyOptions_(r),e}return O(n,t),n.prototype.applyOptions_=function(t){var n=Object(f.a)({},t);for(var e in o)delete n[e];this.setProperties(n,!0);var r=P(t);this.maxResolution_=r.maxResolution,this.minResolution_=r.minResolution,this.zoomFactor_=r.zoomFactor,this.resolutions_=t.resolutions,this.padding_=t.padding,this.minZoom_=r.minZoom;var l=I(t),i=r.constraint,u=R(t);this.constraints_={center:l,resolution:i,rotation:u},this.setRotation(void 0!==t.rotation?t.rotation:0),this.setCenterInternal(void 0!==t.center?t.center:null),void 0!==t.resolution?this.setResolution(t.resolution):void 0!==t.zoom&&this.setZoom(t.zoom)},Object.defineProperty(n.prototype,"padding",{get:function(){return this.padding_},set:function(t){var n=this.padding_;this.padding_=t;var e=this.getCenter();if(e){var r=t||[0,0,0,0];n=n||[0,0,0,0];var l=this.getResolution(),i=l/2*(r[3]-n[3]+n[1]-r[1]),o=l/2*(r[0]-n[0]+n[2]-r[2]);this.setCenterInternal([e[0]+i,e[1]-o])}},enumerable:!1,configurable:!0}),n.prototype.getUpdatedOptions_=function(t){var n=this.getProperties();return void 0!==n.resolution?n.resolution=this.getResolution():n.zoom=this.getZoom(),n.center=this.getCenterInternal(),n.rotation=this.getRotation(),Object(f.a)({},n,t)},n.prototype.animate=function(t){this.isDef()&&!this.getAnimating()&&this.resolveConstraints(0);for(var n=new Array(arguments.length),e=0;e<n.length;++e){var r=arguments[e];r.center&&((r=Object(f.a)({},r)).center=Object(s.fromUserCoordinate)(r.center,this.getProjection())),r.anchor&&((r=Object(f.a)({},r)).anchor=Object(s.fromUserCoordinate)(r.anchor,this.getProjection())),n[e]=r}this.animateInternal.apply(this,n)},n.prototype.animateInternal=function(t){var n,e=arguments.length;e>1&&"function"==typeof arguments[e-1]&&(n=arguments[e-1],--e);for(var r=0;r<e&&!this.isDef();++r){var l=arguments[r];l.center&&this.setCenterInternal(l.center),void 0!==l.zoom?this.setZoom(l.zoom):l.resolution&&this.setResolution(l.resolution),void 0!==l.rotation&&this.setRotation(l.rotation)}if(r!==e){for(var o=Date.now(),u=this.targetCenter_.slice(),s=this.targetResolution_,a=this.targetRotation_,h=[];r<e;++r){var c=arguments[r],f={start:o,complete:!1,anchor:c.anchor,duration:void 0!==c.duration?c.duration:1e3,easing:c.easing||E.c,callback:n};if(c.center&&(f.sourceCenter=u,f.targetCenter=c.center.slice(),u=f.targetCenter),void 0!==c.zoom?(f.sourceResolution=s,f.targetResolution=this.getResolutionForZoom(c.zoom),s=f.targetResolution):c.resolution&&(f.sourceResolution=s,f.targetResolution=c.resolution,s=f.targetResolution),void 0!==c.rotation){f.sourceRotation=a;var d=Object(p.g)(c.rotation-a+Math.PI,2*Math.PI)-Math.PI;f.targetRotation=a+d,a=f.targetRotation}T(f)?f.complete=!0:o+=f.duration,h.push(f)}this.animations_.push(h),this.setHint(i.a.ANIMATING,1),this.updateAnimations_()}else n&&S(n,!0)},n.prototype.getAnimating=function(){return this.hints_[i.a.ANIMATING]>0},n.prototype.getInteracting=function(){return this.hints_[i.a.INTERACTING]>0},n.prototype.cancelAnimations=function(){var t;this.setHint(i.a.ANIMATING,-this.hints_[i.a.ANIMATING]);for(var n=0,e=this.animations_.length;n<e;++n){var r=this.animations_[n];if(r[0].callback&&S(r[0].callback,!1),!t)for(var l=0,o=r.length;l<o;++l){var u=r[l];if(!u.complete){t=u.anchor;break}}}this.animations_.length=0,this.cancelAnchor_=t,this.nextCenter_=null,this.nextResolution_=NaN,this.nextRotation_=NaN},n.prototype.updateAnimations_=function(){if(void 0!==this.updateAnimationKey_&&(cancelAnimationFrame(this.updateAnimationKey_),this.updateAnimationKey_=void 0),this.getAnimating()){for(var t=Date.now(),n=!1,e=this.animations_.length-1;e>=0;--e){for(var r=this.animations_[e],l=!0,o=0,u=r.length;o<u;++o){var s=r[o];if(!s.complete){var a=t-s.start,h=s.duration>0?a/s.duration:1;h>=1?(s.complete=!0,h=1):l=!1;var c=s.easing(h);if(s.sourceCenter){var f=s.sourceCenter[0],d=s.sourceCenter[1],g=s.targetCenter[0],y=s.targetCenter[1];this.nextCenter_=s.targetCenter;var _=f+c*(g-f),v=d+c*(y-d);this.targetCenter_=[_,v]}if(s.sourceResolution&&s.targetResolution){var m=1===c?s.targetResolution:s.sourceResolution+c*(s.targetResolution-s.sourceResolution);if(s.anchor){var b=this.getViewportSize_(this.getRotation()),x=this.constraints_.resolution(m,0,b,!0);this.targetCenter_=this.calculateCenterZoom(x,s.anchor)}this.nextResolution_=s.targetResolution,this.targetResolution_=m,this.applyTargetState_(!0)}if(void 0!==s.sourceRotation&&void 0!==s.targetRotation){var w=1===c?Object(p.g)(s.targetRotation+Math.PI,2*Math.PI)-Math.PI:s.sourceRotation+c*(s.targetRotation-s.sourceRotation);if(s.anchor){var E=this.constraints_.rotation(w,!0);this.targetCenter_=this.calculateCenterRotate(E,s.anchor)}this.nextRotation_=s.targetRotation,this.targetRotation_=w}if(this.applyTargetState_(!0),n=!0,!s.complete)break}}if(l){this.animations_[e]=null,this.setHint(i.a.ANIMATING,-1),this.nextCenter_=null,this.nextResolution_=NaN,this.nextRotation_=NaN;var C=r[0].callback;C&&S(C,!0)}}this.animations_=this.animations_.filter(Boolean),n&&void 0===this.updateAnimationKey_&&(this.updateAnimationKey_=requestAnimationFrame(this.updateAnimations_.bind(this)))}},n.prototype.calculateCenterRotate=function(t,n){var e,r=this.getCenterInternal();return void 0!==r&&(e=[r[0]-n[0],r[1]-n[1]],Object(h.d)(e,t-this.getRotation()),Object(h.a)(e,n)),e},n.prototype.calculateCenterZoom=function(t,n){var e,r=this.getCenterInternal(),l=this.getResolution();void 0!==r&&void 0!==l&&(e=[n[0]-t*(n[0]-r[0])/l,n[1]-t*(n[1]-r[1])/l]);return e},n.prototype.getViewportSize_=function(t){var n=this.viewportSize_;if(t){var e=n[0],r=n[1];return[Math.abs(e*Math.cos(t))+Math.abs(r*Math.sin(t)),Math.abs(e*Math.sin(t))+Math.abs(r*Math.cos(t))]}return n},n.prototype.setViewportSize=function(t){this.viewportSize_=Array.isArray(t)?t.slice():[100,100],this.getAnimating()||this.resolveConstraints(0)},n.prototype.getCenter=function(){var t=this.getCenterInternal();return t?Object(s.toUserCoordinate)(t,this.getProjection()):t},n.prototype.getCenterInternal=function(){return this.get(o.CENTER)},n.prototype.getConstraints=function(){return this.constraints_},n.prototype.getConstrainResolution=function(){return this.get("constrainResolution")},n.prototype.getHints=function(t){return void 0!==t?(t[0]=this.hints_[0],t[1]=this.hints_[1],t):this.hints_.slice()},n.prototype.calculateExtent=function(t){var n=this.calculateExtentInternal(t);return Object(s.toUserExtent)(n,this.getProjection())},n.prototype.calculateExtentInternal=function(t){var n=t||this.getViewportSizeMinusPadding_(),e=this.getCenterInternal();Object(c.a)(e,1);var r=this.getResolution();Object(c.a)(void 0!==r,2);var l=this.getRotation();return Object(c.a)(void 0!==l,3),Object(y.y)(e,r,l,n)},n.prototype.getMaxResolution=function(){return this.maxResolution_},n.prototype.getMinResolution=function(){return this.minResolution_},n.prototype.getMaxZoom=function(){return this.getZoomForResolution(this.minResolution_)},n.prototype.setMaxZoom=function(t){this.applyOptions_(this.getUpdatedOptions_({maxZoom:t}))},n.prototype.getMinZoom=function(){return this.getZoomForResolution(this.maxResolution_)},n.prototype.setMinZoom=function(t){this.applyOptions_(this.getUpdatedOptions_({minZoom:t}))},n.prototype.setConstrainResolution=function(t){this.applyOptions_(this.getUpdatedOptions_({constrainResolution:t}))},n.prototype.getProjection=function(){return this.projection_},n.prototype.getResolution=function(){return this.get(o.RESOLUTION)},n.prototype.getResolutions=function(){return this.resolutions_},n.prototype.getResolutionForExtent=function(t,n){return this.getResolutionForExtentInternal(Object(s.fromUserExtent)(t,this.getProjection()),n)},n.prototype.getResolutionForExtentInternal=function(t,n){var e=n||this.getViewportSizeMinusPadding_(),r=Object(y.E)(t)/e[0],l=Object(y.z)(t)/e[1];return Math.max(r,l)},n.prototype.getResolutionForValueFunction=function(t){var n=t||2,e=this.getConstrainedResolution(this.maxResolution_),r=this.minResolution_,l=Math.log(e/r)/Math.log(n);return function(t){return e/Math.pow(n,t*l)}},n.prototype.getRotation=function(){return this.get(o.ROTATION)},n.prototype.getValueForResolutionFunction=function(t){var n=Math.log(t||2),e=this.getConstrainedResolution(this.maxResolution_),r=this.minResolution_,l=Math.log(e/r)/n;return function(t){return Math.log(e/t)/n/l}},n.prototype.getViewportSizeMinusPadding_=function(t){var n=this.getViewportSize_(t),e=this.padding_;return e&&(n=[n[0]-e[1]-e[3],n[1]-e[0]-e[2]]),n},n.prototype.getState=function(){var t=this.getProjection(),n=this.getResolution(),e=this.getRotation(),r=this.getCenterInternal(),l=this.padding_;if(l){var i=this.getViewportSizeMinusPadding_();r=N(r,this.getViewportSize_(),[i[0]/2+l[3],i[1]/2+l[0]],n,e)}return{center:r.slice(0),projection:void 0!==t?t:null,resolution:n,nextCenter:this.nextCenter_,nextResolution:this.nextResolution_,nextRotation:this.nextRotation_,rotation:e,zoom:this.getZoom()}},n.prototype.getZoom=function(){var t,n=this.getResolution();return void 0!==n&&(t=this.getZoomForResolution(n)),t},n.prototype.getZoomForResolution=function(t){var n,e,r=this.minZoom_||0;if(this.resolutions_){var l=Object(_.e)(this.resolutions_,t,1);r=l,n=this.resolutions_[l],e=l==this.resolutions_.length-1?2:n/this.resolutions_[l+1]}else n=this.maxResolution_,e=this.zoomFactor_;return r+Math.log(n/t)/Math.log(e)},n.prototype.getResolutionForZoom=function(t){if(this.resolutions_){if(this.resolutions_.length<=1)return 0;var n=Object(p.b)(Math.floor(t),0,this.resolutions_.length-2),e=this.resolutions_[n]/this.resolutions_[n+1];return this.resolutions_[n]/Math.pow(e,Object(p.b)(t-n,0,1))}return this.maxResolution_/Math.pow(this.zoomFactor_,t-this.minZoom_)},n.prototype.fit=function(t,n){var e;if(Object(c.a)(Array.isArray(t)||"function"==typeof t.getSimplifiedGeometry,24),Array.isArray(t)){Object(c.a)(!Object(y.H)(t),25);var r=Object(s.fromUserExtent)(t,this.getProjection());e=Object(C.b)(r)}else if("Circle"===t.getType()){r=Object(s.fromUserExtent)(t.getExtent(),this.getProjection());(e=Object(C.b)(r)).rotate(this.getRotation(),Object(y.w)(r))}else{var l=Object(s.getUserProjection)();e=l?t.clone().transform(l,this.getProjection()):t}this.fitInternal(e,n)},n.prototype.rotatedExtentForGeometry=function(t){for(var n=this.getRotation(),e=Math.cos(n),r=Math.sin(-n),l=t.getFlatCoordinates(),i=t.getStride(),o=1/0,u=1/0,s=-1/0,a=-1/0,h=0,c=l.length;h<c;h+=i){var f=l[h]*e-l[h+1]*r,p=l[h]*r+l[h+1]*e;o=Math.min(o,f),u=Math.min(u,p),s=Math.max(s,f),a=Math.max(a,p)}return[o,u,s,a]},n.prototype.fitInternal=function(t,n){var e=n||{},r=e.size;r||(r=this.getViewportSizeMinusPadding_());var l,i=void 0!==e.padding?e.padding:[0,0,0,0],o=void 0!==e.nearest&&e.nearest;l=void 0!==e.minResolution?e.minResolution:void 0!==e.maxZoom?this.getResolutionForZoom(e.maxZoom):0;var u=this.rotatedExtentForGeometry(t),s=this.getResolutionForExtentInternal(u,[r[0]-i[1]-i[3],r[1]-i[0]-i[2]]);s=isNaN(s)?l:Math.max(s,l),s=this.getConstrainedResolution(s,o?0:1);var h=this.getRotation(),c=Math.sin(h),f=Math.cos(h),p=Object(y.w)(u);p[0]+=(i[1]-i[3])/2*s,p[1]+=(i[0]-i[2])/2*s;var d=p[0]*f-p[1]*c,g=p[1]*f+p[0]*c,_=this.getConstrainedCenter([d,g],s),v=e.callback?e.callback:a.c;void 0!==e.duration?this.animateInternal({resolution:s,center:_,duration:e.duration,easing:e.easing},v):(this.targetResolution_=s,this.targetCenter_=_,this.applyTargetState_(!1,!0),S(v,!0))},n.prototype.centerOn=function(t,n,e){this.centerOnInternal(Object(s.fromUserCoordinate)(t,this.getProjection()),n,e)},n.prototype.centerOnInternal=function(t,n,e){this.setCenterInternal(N(t,n,e,this.getResolution(),this.getRotation()))},n.prototype.calculateCenterShift=function(t,n,e,r){var l,i=this.padding_;if(i&&t){var o=this.getViewportSizeMinusPadding_(-e),u=N(t,r,[o[0]/2+i[3],o[1]/2+i[0]],n,e);l=[t[0]-u[0],t[1]-u[1]]}return l},n.prototype.isDef=function(){return!!this.getCenterInternal()&&void 0!==this.getResolution()},n.prototype.adjustCenter=function(t){var n=Object(s.toUserCoordinate)(this.targetCenter_,this.getProjection());this.setCenter([n[0]+t[0],n[1]+t[1]])},n.prototype.adjustCenterInternal=function(t){var n=this.targetCenter_;this.setCenterInternal([n[0]+t[0],n[1]+t[1]])},n.prototype.adjustResolution=function(t,n){var e=n&&Object(s.fromUserCoordinate)(n,this.getProjection());this.adjustResolutionInternal(t,e)},n.prototype.adjustResolutionInternal=function(t,n){var e=this.getAnimating()||this.getInteracting(),r=this.getViewportSize_(this.getRotation()),l=this.constraints_.resolution(this.targetResolution_*t,0,r,e);n&&(this.targetCenter_=this.calculateCenterZoom(l,n)),this.targetResolution_*=t,this.applyTargetState_()},n.prototype.adjustZoom=function(t,n){this.adjustResolution(Math.pow(this.zoomFactor_,-t),n)},n.prototype.adjustRotation=function(t,n){n&&(n=Object(s.fromUserCoordinate)(n,this.getProjection())),this.adjustRotationInternal(t,n)},n.prototype.adjustRotationInternal=function(t,n){var e=this.getAnimating()||this.getInteracting(),r=this.constraints_.rotation(this.targetRotation_+t,e);n&&(this.targetCenter_=this.calculateCenterRotate(r,n)),this.targetRotation_+=t,this.applyTargetState_()},n.prototype.setCenter=function(t){this.setCenterInternal(t?Object(s.fromUserCoordinate)(t,this.getProjection()):t)},n.prototype.setCenterInternal=function(t){this.targetCenter_=t,this.applyTargetState_()},n.prototype.setHint=function(t,n){return this.hints_[t]+=n,this.changed(),this.hints_[t]},n.prototype.setResolution=function(t){this.targetResolution_=t,this.applyTargetState_()},n.prototype.setRotation=function(t){this.targetRotation_=t,this.applyTargetState_()},n.prototype.setZoom=function(t){this.setResolution(this.getResolutionForZoom(t))},n.prototype.applyTargetState_=function(t,n){var e=this.getAnimating()||this.getInteracting()||n,r=this.constraints_.rotation(this.targetRotation_,e),l=this.getViewportSize_(r),i=this.constraints_.resolution(this.targetResolution_,0,l,e),u=this.constraints_.center(this.targetCenter_,i,l,e,this.calculateCenterShift(this.targetCenter_,i,r,l));this.get(o.ROTATION)!==r&&this.set(o.ROTATION,r),this.get(o.RESOLUTION)!==i&&(this.set(o.RESOLUTION,i),this.set("zoom",this.getZoom(),!0)),u&&this.get(o.CENTER)&&Object(h.b)(this.get(o.CENTER),u)||this.set(o.CENTER,u),this.getAnimating()&&!t&&this.cancelAnimations(),this.cancelAnchor_=void 0},n.prototype.resolveConstraints=function(t,n,e){var r=void 0!==t?t:200,l=n||0,i=this.constraints_.rotation(this.targetRotation_),o=this.getViewportSize_(i),u=this.constraints_.resolution(this.targetResolution_,l,o),s=this.constraints_.center(this.targetCenter_,u,o,!1,this.calculateCenterShift(this.targetCenter_,u,i,o));if(0===r&&!this.cancelAnchor_)return this.targetResolution_=u,this.targetRotation_=i,this.targetCenter_=s,void this.applyTargetState_();var a=e||(0===r?this.cancelAnchor_:void 0);this.cancelAnchor_=void 0,this.getResolution()===u&&this.getRotation()===i&&this.getCenterInternal()&&Object(h.b)(this.getCenterInternal(),s)||(this.getAnimating()&&this.cancelAnimations(),this.animateInternal({rotation:i,center:s,resolution:u,duration:r,easing:E.b,anchor:a}))},n.prototype.beginInteraction=function(){this.resolveConstraints(0),this.setHint(i.a.INTERACTING,1)},n.prototype.endInteraction=function(t,n,e){var r=e&&Object(s.fromUserCoordinate)(e,this.getProjection());this.endInteractionInternal(t,n,r)},n.prototype.endInteractionInternal=function(t,n,e){this.setHint(i.a.INTERACTING,-1),this.resolveConstraints(t,n,e)},n.prototype.getConstrainedCenter=function(t,n){var e=this.getViewportSize_(this.getRotation());return this.constraints_.center(t,n||this.getResolution(),e)},n.prototype.getConstrainedZoom=function(t,n){var e=this.getResolutionForZoom(t);return this.getZoomForResolution(this.getConstrainedResolution(e,n))},n.prototype.getConstrainedResolution=function(t,n){var e=n||0,r=this.getViewportSize_(this.getRotation());return this.constraints_.resolution(t,e,r)},n}(r.a);function S(t,n){setTimeout((function(){t(n)}),0)}function I(t){if(void 0!==t.extent){var n=void 0===t.smoothExtentConstraint||t.smoothExtentConstraint;return d(t.extent,t.constrainOnlyCenter,n)}var e=Object(s.createProjection)(t.projection,"EPSG:3857");if(!0!==t.multiWorld&&e.isGlobal()){var r=e.getExtent().slice();return r[0]=-1/0,r[2]=1/0,d(r,!1,!1)}return g}function P(t){var n,e,r,i=void 0!==t.minZoom?t.minZoom:0,o=void 0!==t.maxZoom?t.maxZoom:28,a=void 0!==t.zoomFactor?t.zoomFactor:2,h=void 0!==t.multiWorld&&t.multiWorld,c=void 0===t.smoothResolutionConstraint||t.smoothResolutionConstraint,f=void 0!==t.showFullExtent&&t.showFullExtent,d=Object(s.createProjection)(t.projection,"EPSG:3857"),g=d.getExtent(),x=t.constrainOnlyCenter,w=t.extent;if(h||w||!d.isGlobal()||(x=!1,w=g),void 0!==t.resolutions){var E=t.resolutions;e=E[i],r=void 0!==E[o]?E[o]:E[E.length-1],n=t.constrainResolution?function(t,n,e,r){return function(l,i,o,u){if(void 0!==l){var s=t[0],a=t[t.length-1],h=e?v(s,e,o,r):s;if(u)return void 0===n||n?m(l,h,a):Object(p.b)(l,a,h);var c=Math.min(h,l),f=Math.floor(Object(_.e)(t,c,i));return t[f]>h&&f<t.length-1?t[f+1]:t[f]}}}(E,c,!x&&w,f):b(e,r,c,!x&&w,f)}else{var C=(g?Math.max(Object(y.E)(g),Object(y.z)(g)):360*s.METERS_PER_UNIT[l.b.DEGREES]/d.getMetersPerUnit())/u.b/Math.pow(2,0),O=C/Math.pow(2,28);void 0!==(e=t.maxResolution)?i=0:e=C/Math.pow(a,i),void 0===(r=t.minResolution)&&(r=void 0!==t.maxZoom?void 0!==t.maxResolution?e/Math.pow(a,o):C/Math.pow(a,o):O),o=i+Math.floor(Math.log(e/r)/Math.log(a)),r=e/Math.pow(a,o-i),n=t.constrainResolution?function(t,n,e,r,l,i){return function(o,u,s,a){if(void 0!==o){var h=l?v(n,l,s,i):n,c=void 0!==e?e:0;if(a)return void 0===r||r?m(o,h,c):Object(p.b)(o,c,h);var f=Math.ceil(Math.log(n/h)/Math.log(t)-1e-9),d=-u*(.5-1e-9)+.5,g=Math.min(h,o),y=Math.floor(Math.log(n/g)/Math.log(t)+d),_=Math.max(f,y),b=n/Math.pow(t,_);return Object(p.b)(b,c,h)}}}(a,e,r,c,!x&&w,f):b(e,r,c,!x&&w,f)}return{constraint:n,maxResolution:e,minResolution:r,minZoom:i,zoomFactor:a}}function R(t){if(void 0===t.enableRotation||t.enableRotation){var n=t.constrainRotation;return void 0===n||!0===n?Object(w.b)():!1===n?w.d:"number"==typeof n?Object(w.a)(n):w.d}return w.c}function T(t){return!(t.sourceCenter&&t.targetCenter&&!Object(h.b)(t.sourceCenter,t.targetCenter))&&(t.sourceResolution===t.targetResolution&&t.sourceRotation===t.targetRotation)}function N(t,n,e,r,l){var i=Math.cos(-l),o=Math.sin(-l),u=t[0]*i-t[1]*o,s=t[1]*i+t[0]*o;return[(u+=(n[0]/2-e[0])*r)*i-(s+=(e[1]-n[1]/2)*r)*(o=-o),s*i+u*o]}n.default=M},,function(t,n,e){"use strict";e.d(n,"a",(function(){return l}));var r={RADIANS:"radians",DEGREES:"degrees",FEET:"ft",METERS:"m",PIXELS:"pixels",TILE_PIXELS:"tile-pixels",USFEET:"us-ft"};var l={};l[r.RADIANS]=6370997/(2*Math.PI),l[r.DEGREES]=2*Math.PI*6370997/360,l[r.FEET]=.3048,l[r.METERS]=1,l[r.USFEET]=1200/3937,n.b=r},function(t,n,e){"use strict";e.d(n,"b",(function(){return f}));var r,l=e(337),i=e(282),o=e(238),u=e(237),s=e(278),a=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),h=function(t){function n(){var n=t.call(this)||this;return n.layout=i.a.XY,n.stride=2,n.flatCoordinates=null,n}return a(n,t),n.prototype.computeExtent=function(t){return Object(u.n)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t)},n.prototype.getCoordinates=function(){return Object(o.b)()},n.prototype.getFirstCoordinate=function(){return this.flatCoordinates.slice(0,this.stride)},n.prototype.getFlatCoordinates=function(){return this.flatCoordinates},n.prototype.getLastCoordinate=function(){return this.flatCoordinates.slice(this.flatCoordinates.length-this.stride)},n.prototype.getLayout=function(){return this.layout},n.prototype.getSimplifiedGeometry=function(t){if(this.simplifiedGeometryRevision!==this.getRevision()&&(this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),t<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&t<=this.simplifiedGeometryMaxMinSquaredTolerance)return this;var n=this.getSimplifiedGeometryInternal(t);return n.getFlatCoordinates().length<this.flatCoordinates.length?n:(this.simplifiedGeometryMaxMinSquaredTolerance=t,this)},n.prototype.getSimplifiedGeometryInternal=function(t){return this},n.prototype.getStride=function(){return this.stride},n.prototype.setFlatCoordinates=function(t,n){this.stride=c(t),this.layout=t,this.flatCoordinates=n},n.prototype.setCoordinates=function(t,n){Object(o.b)()},n.prototype.setLayout=function(t,n,e){var r;if(t)r=c(t);else{for(var l=0;l<e;++l){if(0===n.length)return this.layout=i.a.XY,void(this.stride=2);n=n[0]}t=function(t){var n;2==t?n=i.a.XY:3==t?n=i.a.XYZ:4==t&&(n=i.a.XYZM);return n}(r=n.length)}this.layout=t,this.stride=r},n.prototype.applyTransform=function(t){this.flatCoordinates&&(t(this.flatCoordinates,this.flatCoordinates,this.stride),this.changed())},n.prototype.rotate=function(t,n){var e=this.getFlatCoordinates();if(e){var r=this.getStride();Object(s.a)(e,0,e.length,r,t,n,e),this.changed()}},n.prototype.scale=function(t,n,e){var r=n;void 0===r&&(r=t);var l=e;l||(l=Object(u.w)(this.getExtent()));var i=this.getFlatCoordinates();if(i){var o=this.getStride();Object(s.b)(i,0,i.length,o,t,r,l,i),this.changed()}},n.prototype.translate=function(t,n){var e=this.getFlatCoordinates();if(e){var r=this.getStride();Object(s.d)(e,0,e.length,r,t,n,e),this.changed()}},n}(l.a);function c(t){var n;return t==i.a.XY?n=2:t==i.a.XYZ||t==i.a.XYM?n=3:t==i.a.XYZM&&(n=4),n}function f(t,n,e){var r=t.getFlatCoordinates();if(r){var l=t.getStride();return Object(s.c)(r,0,r.length,l,n,e)}return null}n.a=h},function(t,n,e){"use strict";e.d(n,"c",(function(){return o})),e.d(n,"f",(function(){return s})),e.d(n,"a",(function(){return a})),e.d(n,"e",(function(){return h})),e.d(n,"b",(function(){return c})),e.d(n,"d",(function(){return f})),e.d(n,"g",(function(){return p}));var r,l=e(259),i=e(244);new Array(6);function o(){return[1,0,0,1,0,0]}function u(t,n,e,r,l,i,o){return t[0]=n,t[1]=e,t[2]=r,t[3]=l,t[4]=i,t[5]=o,t}function s(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t}function a(t,n){var e=n[0],r=n[1];return n[0]=t[0]*e+t[2]*r+t[4],n[1]=t[1]*e+t[3]*r+t[5],n}function h(t,n,e){return u(t,n,0,0,e,0,0)}function c(t,n,e,r,l,i,o,u){var s=Math.sin(i),a=Math.cos(i);return t[0]=r*a,t[1]=l*s,t[2]=-r*s,t[3]=l*a,t[4]=o*r*a-u*r*s+n,t[5]=o*l*s+u*l*a+e,t}function f(t,n){var e,r=(e=n)[0]*e[3]-e[1]*e[2];Object(i.a)(0!==r,32);var l=n[0],o=n[1],u=n[2],s=n[3],a=n[4],h=n[5];return t[0]=s/r,t[1]=-o/r,t[2]=-u/r,t[3]=l/r,t[4]=(u*h-s*a)/r,t[5]=-(l*h-o*a)/r,t}function p(t){var n="matrix("+t.join(", ")+")";if(l.g)return n;var e=r||(r=document.createElement("div"));return e.style.transform=n,e.style.transform}},function(t,n,e){"use strict";e.d(n,"b",(function(){return l})),e.d(n,"f",(function(){return i})),e.d(n,"d",(function(){return o})),e.d(n,"a",(function(){return u})),e.d(n,"g",(function(){return s})),e.d(n,"c",(function(){return a})),e.d(n,"e",(function(){return h}));var r="undefined"!=typeof navigator&&void 0!==navigator.userAgent?navigator.userAgent.toLowerCase():"",l=-1!==r.indexOf("firefox"),i=(-1!==r.indexOf("safari")&&-1==r.indexOf("chrom")&&(r.indexOf("version/15.4")>=0||r.match(/cpu (os|iphone os) 15_4 like mac os x/)),-1!==r.indexOf("webkit")&&-1==r.indexOf("edge")),o=-1!==r.indexOf("macintosh"),u="undefined"!=typeof devicePixelRatio?devicePixelRatio:1,s="undefined"!=typeof WorkerGlobalScope&&"undefined"!=typeof OffscreenCanvas&&self instanceof WorkerGlobalScope,a="undefined"!=typeof Image&&Image.prototype.decode,h=function(){var t=!1;try{var n=Object.defineProperty({},"passive",{get:function(){t=!0}});window.addEventListener("_",null,n),window.removeEventListener("_",null,n)}catch(t){}return t}()},function(t,n,e){"use strict";e.d(n,"c",(function(){return s})),e.d(n,"a",(function(){return h}));var r=e(262),l=e(250),i=e(261),o=e(244),u=function(){function t(t){var n=t||{};this.geometry_=null,this.geometryFunction_=c,void 0!==n.geometry&&this.setGeometry(n.geometry),this.fill_=void 0!==n.fill?n.fill:null,this.image_=void 0!==n.image?n.image:null,this.renderer_=void 0!==n.renderer?n.renderer:null,this.hitDetectionRenderer_=void 0!==n.hitDetectionRenderer?n.hitDetectionRenderer:null,this.stroke_=void 0!==n.stroke?n.stroke:null,this.text_=void 0!==n.text?n.text:null,this.zIndex_=n.zIndex}return t.prototype.clone=function(){var n=this.getGeometry();return n&&"object"==typeof n&&(n=n.clone()),new t({geometry:n,fill:this.getFill()?this.getFill().clone():void 0,image:this.getImage()?this.getImage().clone():void 0,renderer:this.getRenderer(),stroke:this.getStroke()?this.getStroke().clone():void 0,text:this.getText()?this.getText().clone():void 0,zIndex:this.getZIndex()})},t.prototype.getRenderer=function(){return this.renderer_},t.prototype.setRenderer=function(t){this.renderer_=t},t.prototype.setHitDetectionRenderer=function(t){this.hitDetectionRenderer_=t},t.prototype.getHitDetectionRenderer=function(){return this.hitDetectionRenderer_},t.prototype.getGeometry=function(){return this.geometry_},t.prototype.getGeometryFunction=function(){return this.geometryFunction_},t.prototype.getFill=function(){return this.fill_},t.prototype.setFill=function(t){this.fill_=t},t.prototype.getImage=function(){return this.image_},t.prototype.setImage=function(t){this.image_=t},t.prototype.getStroke=function(){return this.stroke_},t.prototype.setStroke=function(t){this.stroke_=t},t.prototype.getText=function(){return this.text_},t.prototype.setText=function(t){this.text_=t},t.prototype.getZIndex=function(){return this.zIndex_},t.prototype.setGeometry=function(t){"function"==typeof t?this.geometryFunction_=t:"string"==typeof t?this.geometryFunction_=function(n){return n.get(t)}:t?void 0!==t&&(this.geometryFunction_=function(){return t}):this.geometryFunction_=c,this.geometry_=t},t.prototype.setZIndex=function(t){this.zIndex_=t},t}();function s(t){var n;if("function"==typeof t)n=t;else{var e;if(Array.isArray(t))e=t;else Object(o.a)("function"==typeof t.getZIndex,41),e=[t];n=function(){return e}}return n}var a=null;function h(t,n){if(!a){var e=new l.a({color:"rgba(255,255,255,0.4)"}),o=new i.a({color:"#3399CC",width:1.25});a=[new u({image:new r.a({fill:e,stroke:o,radius:5}),fill:e,stroke:o})]}return a}function c(t){return t.getGeometry()}n.b=u},function(t,n,e){"use strict";var r=function(){function t(t){var n=t||{};this.color_=void 0!==n.color?n.color:null,this.lineCap_=n.lineCap,this.lineDash_=void 0!==n.lineDash?n.lineDash:null,this.lineDashOffset_=n.lineDashOffset,this.lineJoin_=n.lineJoin,this.miterLimit_=n.miterLimit,this.width_=n.width}return t.prototype.clone=function(){var n=this.getColor();return new t({color:Array.isArray(n)?n.slice():n||void 0,lineCap:this.getLineCap(),lineDash:this.getLineDash()?this.getLineDash().slice():void 0,lineDashOffset:this.getLineDashOffset(),lineJoin:this.getLineJoin(),miterLimit:this.getMiterLimit(),width:this.getWidth()})},t.prototype.getColor=function(){return this.color_},t.prototype.getLineCap=function(){return this.lineCap_},t.prototype.getLineDash=function(){return this.lineDash_},t.prototype.getLineDashOffset=function(){return this.lineDashOffset_},t.prototype.getLineJoin=function(){return this.lineJoin_},t.prototype.getMiterLimit=function(){return this.miterLimit_},t.prototype.getWidth=function(){return this.width_},t.prototype.setColor=function(t){this.color_=t},t.prototype.setLineCap=function(t){this.lineCap_=t},t.prototype.setLineDash=function(t){this.lineDash_=t},t.prototype.setLineDashOffset=function(t){this.lineDashOffset_=t},t.prototype.setLineJoin=function(t){this.lineJoin_=t},t.prototype.setMiterLimit=function(t){this.miterLimit_=t},t.prototype.setWidth=function(t){this.width_=t},t}();n.a=r},function(t,n,e){"use strict";var r,l=e(263),i=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),o=function(t){function n(n){var e=n||{};return t.call(this,{points:1/0,fill:e.fill,radius:e.radius,stroke:e.stroke,scale:void 0!==e.scale?e.scale:1,rotation:void 0!==e.rotation?e.rotation:0,rotateWithView:void 0!==e.rotateWithView&&e.rotateWithView,displacement:void 0!==e.displacement?e.displacement:[0,0],declutterMode:e.declutterMode})||this}return i(n,t),n.prototype.clone=function(){var t=this.getScale(),e=new n({fill:this.getFill()?this.getFill().clone():void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,radius:this.getRadius(),scale:Array.isArray(t)?t.slice():t,rotation:this.getRotation(),rotateWithView:this.getRotateWithView(),displacement:this.getDisplacement().slice(),declutterMode:this.getDeclutterMode()});return e.setOpacity(this.getOpacity()),e},n.prototype.setRadius=function(t){this.radius_=t,this.render()},n}(l.a);n.a=o},function(t,n,e){"use strict";var r,l=e(285),i=e(251),o=e(287),u=e(301),s=e(246),a=e(271),h=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),c=function(t){function n(n){var e=this,r=void 0!==n.rotateWithView&&n.rotateWithView;return(e=t.call(this,{opacity:1,rotateWithView:r,rotation:void 0!==n.rotation?n.rotation:0,scale:void 0!==n.scale?n.scale:1,displacement:void 0!==n.displacement?n.displacement:[0,0],declutterMode:n.declutterMode})||this).canvas_=void 0,e.hitDetectionCanvas_=null,e.fill_=void 0!==n.fill?n.fill:null,e.origin_=[0,0],e.points_=n.points,e.radius_=void 0!==n.radius?n.radius:n.radius1,e.radius2_=n.radius2,e.angle_=void 0!==n.angle?n.angle:0,e.stroke_=void 0!==n.stroke?n.stroke:null,e.size_=null,e.renderOptions_=null,e.render(),e}return h(n,t),n.prototype.clone=function(){var t=this.getScale(),e=new n({fill:this.getFill()?this.getFill().clone():void 0,points:this.getPoints(),radius:this.getRadius(),radius2:this.getRadius2(),angle:this.getAngle(),stroke:this.getStroke()?this.getStroke().clone():void 0,rotation:this.getRotation(),rotateWithView:this.getRotateWithView(),scale:Array.isArray(t)?t.slice():t,displacement:this.getDisplacement().slice(),declutterMode:this.getDeclutterMode()});return e.setOpacity(this.getOpacity()),e},n.prototype.getAnchor=function(){var t=this.size_;if(!t)return null;var n=this.getDisplacement();return[t[0]/2-n[0],t[1]/2+n[1]]},n.prototype.getAngle=function(){return this.angle_},n.prototype.getFill=function(){return this.fill_},n.prototype.setFill=function(t){this.fill_=t,this.render()},n.prototype.getHitDetectionImage=function(){return this.hitDetectionCanvas_||this.createHitDetectionCanvas_(this.renderOptions_),this.hitDetectionCanvas_},n.prototype.getImage=function(t){var n=this.canvas_[t];if(!n){var e=this.renderOptions_,r=Object(s.a)(e.size*t,e.size*t);this.draw_(e,r,t),n=r.canvas,this.canvas_[t]=n}return n},n.prototype.getPixelRatio=function(t){return t},n.prototype.getImageSize=function(){return this.size_},n.prototype.getImageState=function(){return l.a.LOADED},n.prototype.getOrigin=function(){return this.origin_},n.prototype.getPoints=function(){return this.points_},n.prototype.getRadius=function(){return this.radius_},n.prototype.getRadius2=function(){return this.radius2_},n.prototype.getSize=function(){return this.size_},n.prototype.getStroke=function(){return this.stroke_},n.prototype.setStroke=function(t){this.stroke_=t,this.render()},n.prototype.listenImageChange=function(t){},n.prototype.load=function(){},n.prototype.unlistenImageChange=function(t){},n.prototype.calculateLineJoinSize_=function(t,n,e){if(0===n||this.points_===1/0||"bevel"!==t&&"miter"!==t)return n;var r=this.radius_,l=void 0===this.radius2_?r:this.radius2_;if(r<l){var i=r;r=l,l=i}var o=void 0===this.radius2_?this.points_:2*this.points_,u=2*Math.PI/o,s=l*Math.sin(u),a=r-Math.sqrt(l*l-s*s),h=Math.sqrt(s*s+a*a),c=h/s;if("miter"===t&&c<=e)return c*n;var f=n/2/c,p=n/2*(a/h),d=Math.sqrt((r+f)*(r+f)+p*p)-r;if(void 0===this.radius2_||"bevel"===t)return 2*d;var g=r*Math.sin(u),y=l-Math.sqrt(r*r-g*g),_=Math.sqrt(g*g+y*y)/g;if(_<=e){var v=_*n/2-l-r;return 2*Math.max(d,v)}return 2*d},n.prototype.createRenderOptions=function(){var t,n=a.g,e=0,r=null,l=0,i=0;this.stroke_&&(null===(t=this.stroke_.getColor())&&(t=a.k),t=Object(u.a)(t),void 0===(i=this.stroke_.getWidth())&&(i=a.h),r=this.stroke_.getLineDash(),l=this.stroke_.getLineDashOffset(),void 0===(n=this.stroke_.getLineJoin())&&(n=a.g),void 0===(e=this.stroke_.getMiterLimit())&&(e=a.i));var o=this.calculateLineJoinSize_(n,i,e),s=Math.max(this.radius_,this.radius2_||0);return{strokeStyle:t,strokeWidth:i,size:Math.ceil(2*s+o),lineDash:r,lineDashOffset:l,lineJoin:n,miterLimit:e}},n.prototype.render=function(){this.renderOptions_=this.createRenderOptions();var t=this.renderOptions_.size;this.canvas_={},this.size_=[t,t]},n.prototype.draw_=function(t,n,e){if(n.scale(e,e),n.translate(t.size/2,t.size/2),this.createPath_(n),this.fill_){var r=this.fill_.getColor();null===r&&(r=a.b),n.fillStyle=Object(u.a)(r),n.fill()}this.stroke_&&(n.strokeStyle=t.strokeStyle,n.lineWidth=t.strokeWidth,n.setLineDash&&t.lineDash&&(n.setLineDash(t.lineDash),n.lineDashOffset=t.lineDashOffset),n.lineJoin=t.lineJoin,n.miterLimit=t.miterLimit,n.stroke())},n.prototype.createHitDetectionCanvas_=function(t){if(this.fill_){var n=this.fill_.getColor(),e=0;if("string"==typeof n&&(n=Object(o.a)(n)),null===n?e=1:Array.isArray(n)&&(e=4===n.length?n[3]:1),0===e){var r=Object(s.a)(t.size,t.size);this.hitDetectionCanvas_=r.canvas,this.drawHitDetectionCanvas_(t,r)}}this.hitDetectionCanvas_||(this.hitDetectionCanvas_=this.getImage(1))},n.prototype.createPath_=function(t){var n=this.points_,e=this.radius_;if(n===1/0)t.arc(0,0,e,0,2*Math.PI);else{var r=void 0===this.radius2_?e:this.radius2_;void 0!==this.radius2_&&(n*=2);for(var l=this.angle_-Math.PI/2,i=2*Math.PI/n,o=0;o<n;o++){var u=l+o*i,s=o%2==0?e:r;t.lineTo(s*Math.cos(u),s*Math.sin(u))}t.closePath()}},n.prototype.drawHitDetectionCanvas_=function(t,n){n.translate(t.size/2,t.size/2),this.createPath_(n),n.fillStyle=a.b,n.fill(),this.stroke_&&(n.strokeStyle=t.strokeStyle,n.lineWidth=t.strokeWidth,t.lineDash&&(n.setLineDash(t.lineDash),n.lineDashOffset=t.lineDashOffset),n.lineJoin=t.lineJoin,n.miterLimit=t.miterLimit,n.stroke())},n}(i.a);n.a=c},function(t,n,e){"use strict";e.d(n,"b",(function(){return d}));var r,l=e(284),i=e(240),o=e(285),u=e(287),s=e(246),a=e(343),h=e(364),c=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),f=null,p=function(t){function n(n,e,r,l,i,o){var u=t.call(this)||this;return u.hitDetectionImage_=null,u.image_=n||new Image,null!==l&&(u.image_.crossOrigin=l),u.canvas_={},u.color_=o,u.unlisten_=null,u.imageState_=i,u.size_=r,u.src_=e,u.tainted_,u}return c(n,t),n.prototype.isTainted_=function(){if(void 0===this.tainted_&&this.imageState_===o.a.LOADED){f||(f=Object(s.a)(1,1)),f.drawImage(this.image_,0,0);try{f.getImageData(0,0,1,1),this.tainted_=!1}catch(t){f=null,this.tainted_=!0}}return!0===this.tainted_},n.prototype.dispatchChangeEvent_=function(){this.dispatchEvent(i.a.CHANGE)},n.prototype.handleImageError_=function(){this.imageState_=o.a.ERROR,this.unlistenImage_(),this.dispatchChangeEvent_()},n.prototype.handleImageLoad_=function(){this.imageState_=o.a.LOADED,this.size_?(this.image_.width=this.size_[0],this.image_.height=this.size_[1]):this.size_=[this.image_.width,this.image_.height],this.unlistenImage_(),this.dispatchChangeEvent_()},n.prototype.getImage=function(t){return this.replaceColor_(t),this.canvas_[t]?this.canvas_[t]:this.image_},n.prototype.getPixelRatio=function(t){return this.replaceColor_(t),this.canvas_[t]?t:1},n.prototype.getImageState=function(){return this.imageState_},n.prototype.getHitDetectionImage=function(){if(!this.hitDetectionImage_)if(this.isTainted_()){var t=this.size_[0],n=this.size_[1],e=Object(s.a)(t,n);e.fillRect(0,0,t,n),this.hitDetectionImage_=e.canvas}else this.hitDetectionImage_=this.image_;return this.hitDetectionImage_},n.prototype.getSize=function(){return this.size_},n.prototype.getSrc=function(){return this.src_},n.prototype.load=function(){if(this.imageState_==o.a.IDLE){this.imageState_=o.a.LOADING;try{this.image_.src=this.src_}catch(t){this.handleImageError_()}this.unlisten_=Object(h.a)(this.image_,this.handleImageLoad_.bind(this),this.handleImageError_.bind(this))}},n.prototype.replaceColor_=function(t){if(this.color_&&!this.canvas_[t]&&this.imageState_===o.a.LOADED){var n=document.createElement("canvas");this.canvas_[t]=n,n.width=Math.ceil(this.image_.width*t),n.height=Math.ceil(this.image_.height*t);var e=n.getContext("2d");if(e.scale(t,t),e.drawImage(this.image_,0,0),e.globalCompositeOperation="multiply","multiply"===e.globalCompositeOperation||this.isTainted_())e.fillStyle=Object(u.b)(this.color_),e.fillRect(0,0,n.width/t,n.height/t),e.globalCompositeOperation="destination-in",e.drawImage(this.image_,0,0);else{for(var r=e.getImageData(0,0,n.width,n.height),l=r.data,i=this.color_[0]/255,s=this.color_[1]/255,a=this.color_[2]/255,h=this.color_[3],c=0,f=l.length;c<f;c+=4)l[c]*=i,l[c+1]*=s,l[c+2]*=a,l[c+3]*=h;e.putImageData(r,0,0)}}},n.prototype.unlistenImage_=function(){this.unlisten_&&(this.unlisten_(),this.unlisten_=null)},n}(l.a);function d(t,n,e,r,l,i){var o=a.a.get(n,r,i);return o||(o=new p(t,n,e,r,l,i),a.a.set(n,r,i,o)),o}n.a=p},,function(t,n,e){"use strict";e.r(n);var r,l=e(305),i=e(247),o=e(238),u=e(258),s=e(237),a=e(343),h=e(289),c=e(290),f=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)});function p(t,n){a.a.expire()}var d=function(t){function n(n){var e=t.call(this)||this;return e.map_=n,e}return f(n,t),n.prototype.dispatchRenderEvent=function(t,n){Object(o.b)()},n.prototype.calculateMatrices2D=function(t){var n=t.viewState,e=t.coordinateToPixelTransform,r=t.pixelToCoordinateTransform;Object(u.b)(e,t.size[0]/2,t.size[1]/2,1/n.resolution,-1/n.resolution,-n.rotation,-n.center[0],-n.center[1]),Object(u.d)(r,e)},n.prototype.forEachFeatureAtCoordinate=function(t,n,e,r,l,i,o,u){var a,f=n.viewState;function p(t,n,e,r){return l.call(i,n,t?e:null,r)}var d=f.projection,g=Object(c.f)(t.slice(),d),y=[[0,0]];if(d.canWrapX()&&r){var _=d.getExtent(),v=Object(s.E)(_);y.push([-v,0],[v,0])}for(var m=n.layerStatesArray,b=m.length,x=[],w=[],E=0;E<y.length;E++)for(var C=b-1;C>=0;--C){var O=m[C],M=O.layer;if(M.hasRenderer()&&Object(h.b)(O,f)&&o.call(u,M)){var S=M.getRenderer(),I=M.getSource();if(S&&I){var P=I.getWrapX()?g:t,R=p.bind(null,O.managed);w[0]=P[0]+y[E][0],w[1]=P[1]+y[E][1],a=S.forEachFeatureAtCoordinate(w,n,e,R,x)}if(a)return a}}if(0!==x.length){var T=1/x.length;return x.forEach((function(t,n){return t.distanceSq+=n*T})),x.sort((function(t,n){return t.distanceSq-n.distanceSq})),x.some((function(t){return a=t.callback(t.feature,t.layer,t.geometry)})),a}},n.prototype.forEachLayerAtPixel=function(t,n,e,r,l){return Object(o.b)()},n.prototype.hasFeatureAtCoordinate=function(t,n,e,r,l,o){return void 0!==this.forEachFeatureAtCoordinate(t,n,e,r,i.b,this,l,o)},n.prototype.getMap=function(){return this.map_},n.prototype.renderFrame=function(t){Object(o.b)()},n.prototype.scheduleExpireIconCache=function(t){a.a.canExpireCache()&&t.postRenderFunctions.push(p)},n}(l.a),g=e(294),y=e(341),_=e(303),v=e(286),m=e(271),b=e(245),x=e(246),w=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),E=function(t){function n(n){var e=t.call(this,n)||this;e.fontChangeListenerKey_=Object(b.a)(m.a,g.a.PROPERTYCHANGE,n.redrawText.bind(n)),e.element_=document.createElement("div");var r=e.element_.style;r.position="absolute",r.width="100%",r.height="100%",r.zIndex="0",e.element_.className=v.e+" ol-layers";var l=n.getViewport();return l.insertBefore(e.element_,l.firstChild||null),e.children_=[],e.renderedVisible_=!0,e}return w(n,t),n.prototype.dispatchRenderEvent=function(t,n){var e=this.getMap();if(e.hasListener(t)){var r=new y.a(t,void 0,n);e.dispatchEvent(r)}},n.prototype.disposeInternal=function(){Object(b.c)(this.fontChangeListenerKey_),this.element_.parentNode.removeChild(this.element_),t.prototype.disposeInternal.call(this)},n.prototype.renderFrame=function(t){if(t){this.calculateMatrices2D(t),this.dispatchRenderEvent(_.a.PRECOMPOSE,t);var n=t.layerStatesArray.sort((function(t,n){return t.zIndex-n.zIndex})),e=t.viewState;this.children_.length=0;for(var r=[],l=null,i=0,o=n.length;i<o;++i){var u=n[i];t.layerIndex=i;var s=u.layer,a=s.getSourceState();if(!Object(h.b)(u,e)||"ready"!=a&&"undefined"!=a)s.unrender();else{var c=s.render(t,l);c&&(c!==l&&(this.children_.push(c),l=c),"getDeclutter"in s&&r.push(s))}}for(i=r.length-1;i>=0;--i)r[i].renderDeclutter(t);Object(x.g)(this.element_,this.children_),this.dispatchRenderEvent(_.a.POSTCOMPOSE,t),this.renderedVisible_||(this.element_.style.display="",this.renderedVisible_=!0),this.scheduleExpireIconCache(t)}else this.renderedVisible_&&(this.element_.style.display="none",this.renderedVisible_=!1)},n.prototype.forEachLayerAtPixel=function(t,n,e,r,l){for(var i=n.viewState,o=n.layerStatesArray,u=o.length-1;u>=0;--u){var s=o[u],a=s.layer;if(a.hasRenderer()&&Object(h.b)(s,i)&&l(a)){var c=a.getRenderer().getDataAtPixel(t,n,e);if(c){var f=r(a,c);if(f)return f}}}},n}(d),C=e(248),O=e(288),M=e(302),S=e(240),I=e(346),P=e(249),R=e(244),T=e(242),N=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),L=function(t){function n(n,e){var r=t.call(this,n)||this;return r.layer=e,r}return N(n,t),n}(P.a),A="layers",j=function(t){function n(n){var e=this,r=n||{},l=Object(T.a)({},r);delete l.layers;var i=r.layers;return(e=t.call(this,l)||this).on,e.once,e.un,e.layersListenerKeys_=[],e.listenerKeys_={},e.addChangeListener(A,e.handleLayersChanged_),i?Array.isArray(i)?i=new O.a(i.slice(),{unique:!0}):Object(R.a)("function"==typeof i.getArray,43):i=new O.a(void 0,{unique:!0}),e.setLayers(i),e}return N(n,t),n.prototype.handleLayerChange_=function(){this.changed()},n.prototype.handleLayersChanged_=function(){this.layersListenerKeys_.forEach(b.c),this.layersListenerKeys_.length=0;var t=this.getLayers();for(var n in this.layersListenerKeys_.push(Object(b.a)(t,M.a.ADD,this.handleLayersAdd_,this),Object(b.a)(t,M.a.REMOVE,this.handleLayersRemove_,this)),this.listenerKeys_)this.listenerKeys_[n].forEach(b.c);Object(T.b)(this.listenerKeys_);for(var e=t.getArray(),r=0,l=e.length;r<l;r++){var i=e[r];this.registerLayerListeners_(i),this.dispatchEvent(new L("addlayer",i))}this.changed()},n.prototype.registerLayerListeners_=function(t){var e=[Object(b.a)(t,g.a.PROPERTYCHANGE,this.handleLayerChange_,this),Object(b.a)(t,S.a.CHANGE,this.handleLayerChange_,this)];t instanceof n&&e.push(Object(b.a)(t,"addlayer",this.handleLayerGroupAdd_,this),Object(b.a)(t,"removelayer",this.handleLayerGroupRemove_,this)),this.listenerKeys_[Object(o.c)(t)]=e},n.prototype.handleLayerGroupAdd_=function(t){this.dispatchEvent(new L("addlayer",t.layer))},n.prototype.handleLayerGroupRemove_=function(t){this.dispatchEvent(new L("removelayer",t.layer))},n.prototype.handleLayersAdd_=function(t){var n=t.element;this.registerLayerListeners_(n),this.dispatchEvent(new L("addlayer",n)),this.changed()},n.prototype.handleLayersRemove_=function(t){var n=t.element,e=Object(o.c)(n);this.listenerKeys_[e].forEach(b.c),delete this.listenerKeys_[e],this.dispatchEvent(new L("removelayer",n)),this.changed()},n.prototype.getLayers=function(){return this.get(A)},n.prototype.setLayers=function(t){var n=this.getLayers();if(n)for(var e=n.getArray(),r=0,l=e.length;r<l;++r)this.dispatchEvent(new L("removelayer",e[r]));this.set(A,t)},n.prototype.getLayersArray=function(t){var n=void 0!==t?t:[];return this.getLayers().forEach((function(t){t.getLayersArray(n)})),n},n.prototype.getLayerStatesArray=function(t){var n=void 0!==t?t:[],e=n.length;this.getLayers().forEach((function(t){t.getLayerStatesArray(n)}));var r=this.getLayerState(),l=r.zIndex;t||void 0!==r.zIndex||(l=0);for(var i=e,o=n.length;i<o;i++){var u=n[i];u.opacity*=r.opacity,u.visible=u.visible&&r.visible,u.maxResolution=Math.min(u.maxResolution,r.maxResolution),u.minResolution=Math.max(u.minResolution,r.minResolution),u.minZoom=Math.max(u.minZoom,r.minZoom),u.maxZoom=Math.min(u.maxZoom,r.maxZoom),void 0!==r.extent&&(void 0!==u.extent?u.extent=Object(s.A)(u.extent,r.extent):u.extent=r.extent),void 0===u.zIndex&&(u.zIndex=l)}return n},n.prototype.getSourceState=function(){return"ready"},n}(I.a),D=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),k=function(t){function n(n,e,r){var l=t.call(this,n)||this;return l.map=e,l.frameState=void 0!==r?r:null,l}return D(n,t),n}(P.a),F=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),G=function(t){function n(n,e,r,l,i,o){var u=t.call(this,n,e,i)||this;return u.originalEvent=r,u.pixel_=null,u.coordinate_=null,u.dragging=void 0!==l&&l,u.activePointers=o,u}return F(n,t),Object.defineProperty(n.prototype,"pixel",{get:function(){return this.pixel_||(this.pixel_=this.map.getEventPixel(this.originalEvent)),this.pixel_},set:function(t){this.pixel_=t},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"coordinate",{get:function(){return this.coordinate_||(this.coordinate_=this.map.getCoordinateFromPixel(this.pixel)),this.coordinate_},set:function(t){this.coordinate_=t},enumerable:!1,configurable:!0}),n.prototype.preventDefault=function(){t.prototype.preventDefault.call(this),"preventDefault"in this.originalEvent&&this.originalEvent.preventDefault()},n.prototype.stopPropagation=function(){t.prototype.stopPropagation.call(this),"stopPropagation"in this.originalEvent&&this.originalEvent.stopPropagation()},n}(k),z=e(295),B="pointermove",U="pointerdown",q=e(284),Y=e(259),X=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),V=function(t){function n(n,e){var r=t.call(this,n)||this;r.map_=n,r.clickTimeoutId_,r.emulateClicks_=!1,r.dragging_=!1,r.dragListenerKeys_=[],r.moveTolerance_=void 0===e?1:e,r.down_=null;var l=r.map_.getViewport();return r.activePointers_=[],r.trackedTouches_={},r.element_=l,r.pointerdownListenerKey_=Object(b.a)(l,U,r.handlePointerDown_,r),r.originalPointerMoveEvent_,r.relayedListenerKey_=Object(b.a)(l,B,r.relayMoveEvent_,r),r.boundHandleTouchMove_=r.handleTouchMove_.bind(r),r.element_.addEventListener(S.a.TOUCHMOVE,r.boundHandleTouchMove_,!!Y.e&&{passive:!1}),r}return X(n,t),n.prototype.emulateClick_=function(t){var n=new G(z.a.CLICK,this.map_,t);this.dispatchEvent(n),void 0!==this.clickTimeoutId_?(clearTimeout(this.clickTimeoutId_),this.clickTimeoutId_=void 0,n=new G(z.a.DBLCLICK,this.map_,t),this.dispatchEvent(n)):this.clickTimeoutId_=setTimeout(function(){this.clickTimeoutId_=void 0;var n=new G(z.a.SINGLECLICK,this.map_,t);this.dispatchEvent(n)}.bind(this),250)},n.prototype.updateActivePointers_=function(t){var n=t,e=n.pointerId;if(n.type==z.a.POINTERUP||n.type==z.a.POINTERCANCEL){for(var r in delete this.trackedTouches_[e],this.trackedTouches_)if(this.trackedTouches_[r].target!==n.target){delete this.trackedTouches_[r];break}}else n.type!=z.a.POINTERDOWN&&n.type!=z.a.POINTERMOVE||(this.trackedTouches_[e]=n);this.activePointers_=Object(T.c)(this.trackedTouches_)},n.prototype.handlePointerUp_=function(t){this.updateActivePointers_(t);var n=new G(z.a.POINTERUP,this.map_,t,void 0,void 0,this.activePointers_);this.dispatchEvent(n),this.emulateClicks_&&!n.defaultPrevented&&!this.dragging_&&this.isMouseActionButton_(t)&&this.emulateClick_(this.down_),0===this.activePointers_.length&&(this.dragListenerKeys_.forEach(b.c),this.dragListenerKeys_.length=0,this.dragging_=!1,this.down_=null)},n.prototype.isMouseActionButton_=function(t){return 0===t.button},n.prototype.handlePointerDown_=function(t){this.emulateClicks_=0===this.activePointers_.length,this.updateActivePointers_(t);var n=new G(z.a.POINTERDOWN,this.map_,t,void 0,void 0,this.activePointers_);for(var e in this.dispatchEvent(n),this.down_={},t){var r=t[e];this.down_[e]="function"==typeof r?i.c:r}if(0===this.dragListenerKeys_.length){var l=this.map_.getOwnerDocument();this.dragListenerKeys_.push(Object(b.a)(l,z.a.POINTERMOVE,this.handlePointerMove_,this),Object(b.a)(l,z.a.POINTERUP,this.handlePointerUp_,this),Object(b.a)(this.element_,z.a.POINTERCANCEL,this.handlePointerUp_,this)),this.element_.getRootNode&&this.element_.getRootNode()!==l&&this.dragListenerKeys_.push(Object(b.a)(this.element_.getRootNode(),z.a.POINTERUP,this.handlePointerUp_,this))}},n.prototype.handlePointerMove_=function(t){if(this.isMoving_(t)){this.updateActivePointers_(t),this.dragging_=!0;var n=new G(z.a.POINTERDRAG,this.map_,t,this.dragging_,void 0,this.activePointers_);this.dispatchEvent(n)}},n.prototype.relayMoveEvent_=function(t){this.originalPointerMoveEvent_=t;var n=!(!this.down_||!this.isMoving_(t));this.dispatchEvent(new G(z.a.POINTERMOVE,this.map_,t,n))},n.prototype.handleTouchMove_=function(t){var n=this.originalPointerMoveEvent_;n&&!n.defaultPrevented||"boolean"==typeof t.cancelable&&!0!==t.cancelable||t.preventDefault()},n.prototype.isMoving_=function(t){return this.dragging_||Math.abs(t.clientX-this.down_.clientX)>this.moveTolerance_||Math.abs(t.clientY-this.down_.clientY)>this.moveTolerance_},n.prototype.disposeInternal=function(){this.relayedListenerKey_&&(Object(b.c)(this.relayedListenerKey_),this.relayedListenerKey_=null),this.element_.removeEventListener(S.a.TOUCHMOVE,this.boundHandleTouchMove_),this.pointerdownListenerKey_&&(Object(b.c)(this.pointerdownListenerKey_),this.pointerdownListenerKey_=null),this.dragListenerKeys_.forEach(b.c),this.dragListenerKeys_.length=0,this.element_=null,t.prototype.disposeInternal.call(this)},n}(q.a),W=e(310),Z="layergroup",H="size",K="target",J="view",Q=function(){function t(t,n){this.priorityFunction_=t,this.keyFunction_=n,this.elements_=[],this.priorities_=[],this.queuedElements_={}}return t.prototype.clear=function(){this.elements_.length=0,this.priorities_.length=0,Object(T.b)(this.queuedElements_)},t.prototype.dequeue=function(){var t=this.elements_,n=this.priorities_,e=t[0];1==t.length?(t.length=0,n.length=0):(t[0]=t.pop(),n[0]=n.pop(),this.siftUp_(0));var r=this.keyFunction_(e);return delete this.queuedElements_[r],e},t.prototype.enqueue=function(t){Object(R.a)(!(this.keyFunction_(t)in this.queuedElements_),31);var n=this.priorityFunction_(t);return n!=1/0&&(this.elements_.push(t),this.priorities_.push(n),this.queuedElements_[this.keyFunction_(t)]=!0,this.siftDown_(0,this.elements_.length-1),!0)},t.prototype.getCount=function(){return this.elements_.length},t.prototype.getLeftChildIndex_=function(t){return 2*t+1},t.prototype.getRightChildIndex_=function(t){return 2*t+2},t.prototype.getParentIndex_=function(t){return t-1>>1},t.prototype.heapify_=function(){var t;for(t=(this.elements_.length>>1)-1;t>=0;t--)this.siftUp_(t)},t.prototype.isEmpty=function(){return 0===this.elements_.length},t.prototype.isKeyQueued=function(t){return t in this.queuedElements_},t.prototype.isQueued=function(t){return this.isKeyQueued(this.keyFunction_(t))},t.prototype.siftUp_=function(t){for(var n=this.elements_,e=this.priorities_,r=n.length,l=n[t],i=e[t],o=t;t<r>>1;){var u=this.getLeftChildIndex_(t),s=this.getRightChildIndex_(t),a=s<r&&e[s]<e[u]?s:u;n[t]=n[a],e[t]=e[a],t=a}n[t]=l,e[t]=i,this.siftDown_(o,t)},t.prototype.siftDown_=function(t,n){for(var e=this.elements_,r=this.priorities_,l=e[n],i=r[n];n>t;){var o=this.getParentIndex_(n);if(!(r[o]>i))break;e[n]=e[o],r[n]=r[o],n=o}e[n]=l,r[n]=i},t.prototype.reprioritize=function(){var t,n,e,r=this.priorityFunction_,l=this.elements_,i=this.priorities_,o=0,u=l.length;for(n=0;n<u;++n)(e=r(t=l[n]))==1/0?delete this.queuedElements_[this.keyFunction_(t)]:(i[o]=e,l[o++]=t);l.length=o,i.length=o,this.heapify_()},t}(),$=e(275),tt=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),nt=function(t){function n(n,e){var r=t.call(this,(function(t){return n.apply(null,t)}),(function(t){return t[0].getKey()}))||this;return r.boundHandleTileChange_=r.handleTileChange.bind(r),r.tileChangeCallback_=e,r.tilesLoading_=0,r.tilesLoadingKeys_={},r}return tt(n,t),n.prototype.enqueue=function(n){var e=t.prototype.enqueue.call(this,n);e&&n[0].addEventListener(S.a.CHANGE,this.boundHandleTileChange_);return e},n.prototype.getTilesLoading=function(){return this.tilesLoading_},n.prototype.handleTileChange=function(t){var n=t.target,e=n.getState();if(e===$.a.LOADED||e===$.a.ERROR||e===$.a.EMPTY){n.removeEventListener(S.a.CHANGE,this.boundHandleTileChange_);var r=n.getKey();r in this.tilesLoadingKeys_&&(delete this.tilesLoadingKeys_[r],--this.tilesLoading_),this.tileChangeCallback_()}},n.prototype.loadMoreTiles=function(t,n){for(var e,r,l=0;this.tilesLoading_<t&&l<n&&this.getCount()>0;)r=(e=this.dequeue()[0]).getKey(),e.getState()!==$.a.IDLE||r in this.tilesLoadingKeys_||(this.tilesLoadingKeys_[r]=!0,++this.tilesLoading_,++l,e.load())},n}(Q);var et=e(254),rt=e(307),lt=e(241),it=e(279),ot=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}();function ut(t){t instanceof h.a?t.setMapInternal(null):t instanceof j&&t.getLayers().forEach(ut)}var st=function(t){function n(n){var e=t.call(this)||this;e.on,e.once,e.un;var r=function(t){var n=null;void 0!==t.keyboardEventTarget&&(n="string"==typeof t.keyboardEventTarget?document.getElementById(t.keyboardEventTarget):t.keyboardEventTarget);var e,r,l,i={},o=t.layers&&"function"==typeof t.layers.getLayers?t.layers:new j({layers:t.layers});i[Z]=o,i[K]=t.target,i[J]=t.view instanceof et.default?t.view:new et.default,void 0!==t.controls&&(Array.isArray(t.controls)?e=new O.a(t.controls.slice()):(Object(R.a)("function"==typeof t.controls.getArray,47),e=t.controls));void 0!==t.interactions&&(Array.isArray(t.interactions)?r=new O.a(t.interactions.slice()):(Object(R.a)("function"==typeof t.interactions.getArray,48),r=t.interactions));void 0!==t.overlays?Array.isArray(t.overlays)?l=new O.a(t.overlays.slice()):(Object(R.a)("function"==typeof t.overlays.getArray,49),l=t.overlays):l=new O.a;return{controls:e,interactions:r,keyboardEventTarget:n,overlays:l,values:i}}(n);e.renderComplete_,e.loaded_=!0,e.boundHandleBrowserEvent_=e.handleBrowserEvent.bind(e),e.maxTilesLoading_=void 0!==n.maxTilesLoading?n.maxTilesLoading:16,e.pixelRatio_=void 0!==n.pixelRatio?n.pixelRatio:Y.a,e.postRenderTimeoutHandle_,e.animationDelayKey_,e.animationDelay_=function(){this.animationDelayKey_=void 0,this.renderFrame_(Date.now())}.bind(e),e.coordinateToPixelTransform_=Object(u.c)(),e.pixelToCoordinateTransform_=Object(u.c)(),e.frameIndex_=0,e.frameState_=null,e.previousExtent_=null,e.viewPropertyListenerKey_=null,e.viewChangeListenerKey_=null,e.layerGroupPropertyListenerKeys_=null,e.viewport_=document.createElement("div"),e.viewport_.className="ol-viewport"+("ontouchstart"in window?" ol-touch":""),e.viewport_.style.position="relative",e.viewport_.style.overflow="hidden",e.viewport_.style.width="100%",e.viewport_.style.height="100%",e.overlayContainer_=document.createElement("div"),e.overlayContainer_.style.position="absolute",e.overlayContainer_.style.zIndex="0",e.overlayContainer_.style.width="100%",e.overlayContainer_.style.height="100%",e.overlayContainer_.style.pointerEvents="none",e.overlayContainer_.className="ol-overlaycontainer",e.viewport_.appendChild(e.overlayContainer_),e.overlayContainerStopEvent_=document.createElement("div"),e.overlayContainerStopEvent_.style.position="absolute",e.overlayContainerStopEvent_.style.zIndex="0",e.overlayContainerStopEvent_.style.width="100%",e.overlayContainerStopEvent_.style.height="100%",e.overlayContainerStopEvent_.style.pointerEvents="none",e.overlayContainerStopEvent_.className="ol-overlaycontainer-stopevent",e.viewport_.appendChild(e.overlayContainerStopEvent_),e.mapBrowserEventHandler_=null,e.moveTolerance_=n.moveTolerance,e.keyboardEventTarget_=r.keyboardEventTarget,e.targetChangeHandlerKeys_=null,e.controls=r.controls||new O.a,e.interactions=r.interactions||new O.a,e.overlays_=r.overlays,e.overlayIdIndex_={},e.renderer_=null,e.postRenderFunctions_=[],e.tileQueue_=new nt(e.getTilePriority.bind(e),e.handleTileChange_.bind(e)),e.addChangeListener(Z,e.handleLayerGroupChanged_),e.addChangeListener(J,e.handleViewChanged_),e.addChangeListener(H,e.handleSizeChanged_),e.addChangeListener(K,e.handleTargetChanged_),e.setProperties(r.values);var l=e;return!n.view||n.view instanceof et.default||n.view.then((function(t){l.setView(new et.default(t))})),e.controls.addEventListener(M.a.ADD,function(t){t.element.setMap(this)}.bind(e)),e.controls.addEventListener(M.a.REMOVE,function(t){t.element.setMap(null)}.bind(e)),e.interactions.addEventListener(M.a.ADD,function(t){t.element.setMap(this)}.bind(e)),e.interactions.addEventListener(M.a.REMOVE,function(t){t.element.setMap(null)}.bind(e)),e.overlays_.addEventListener(M.a.ADD,function(t){this.addOverlayInternal_(t.element)}.bind(e)),e.overlays_.addEventListener(M.a.REMOVE,function(t){var n=t.element.getId();void 0!==n&&delete this.overlayIdIndex_[n.toString()],t.element.setMap(null)}.bind(e)),e.controls.forEach(function(t){t.setMap(this)}.bind(e)),e.interactions.forEach(function(t){t.setMap(this)}.bind(e)),e.overlays_.forEach(e.addOverlayInternal_.bind(e)),e}return ot(n,t),n.prototype.createRenderer=function(){throw new Error("Use a map type that has a createRenderer method")},n.prototype.addControl=function(t){this.getControls().push(t)},n.prototype.addInteraction=function(t){this.getInteractions().push(t)},n.prototype.addLayer=function(t){this.getLayerGroup().getLayers().push(t)},n.prototype.handleLayerAdd_=function(t){!function t(n,e){if(n instanceof h.a)n.setMapInternal(e);else if(n instanceof j)for(var r=n.getLayers().getArray(),l=0,i=r.length;l<i;++l)t(r[l],e)}(t.layer,this)},n.prototype.addOverlay=function(t){this.getOverlays().push(t)},n.prototype.addOverlayInternal_=function(t){var n=t.getId();void 0!==n&&(this.overlayIdIndex_[n.toString()]=t),t.setMap(this)},n.prototype.disposeInternal=function(){this.controls.clear(),this.interactions.clear(),this.overlays_.clear(),this.setTarget(null),t.prototype.disposeInternal.call(this)},n.prototype.forEachFeatureAtPixel=function(t,n,e){if(this.frameState_&&this.renderer_){var r=this.getCoordinateFromPixelInternal(t),l=void 0!==(e=void 0!==e?e:{}).hitTolerance?e.hitTolerance:0,o=void 0!==e.layerFilter?e.layerFilter:i.b,u=!1!==e.checkWrapped;return this.renderer_.forEachFeatureAtCoordinate(r,this.frameState_,l,u,n,null,o,null)}},n.prototype.getFeaturesAtPixel=function(t,n){var e=[];return this.forEachFeatureAtPixel(t,(function(t){e.push(t)}),n),e},n.prototype.getAllLayers=function(){var t=[];return function n(e){e.forEach((function(e){e instanceof j?n(e.getLayers()):t.push(e)}))}(this.getLayers()),t},n.prototype.forEachLayerAtPixel=function(t,n,e){if(this.frameState_&&this.renderer_){var r=e||{},l=void 0!==r.hitTolerance?r.hitTolerance:0,o=r.layerFilter||i.b;return this.renderer_.forEachLayerAtPixel(t,this.frameState_,l,n,o)}},n.prototype.hasFeatureAtPixel=function(t,n){if(!this.frameState_||!this.renderer_)return!1;var e=this.getCoordinateFromPixelInternal(t),r=void 0!==(n=void 0!==n?n:{}).layerFilter?n.layerFilter:i.b,l=void 0!==n.hitTolerance?n.hitTolerance:0,o=!1!==n.checkWrapped;return this.renderer_.hasFeatureAtCoordinate(e,this.frameState_,l,o,r,null)},n.prototype.getEventCoordinate=function(t){return this.getCoordinateFromPixel(this.getEventPixel(t))},n.prototype.getEventCoordinateInternal=function(t){return this.getCoordinateFromPixelInternal(this.getEventPixel(t))},n.prototype.getEventPixel=function(t){var n=this.viewport_.getBoundingClientRect(),e="changedTouches"in t?t.changedTouches[0]:t;return[e.clientX-n.left,e.clientY-n.top]},n.prototype.getTarget=function(){return this.get(K)},n.prototype.getTargetElement=function(){var t=this.getTarget();return void 0!==t?"string"==typeof t?document.getElementById(t):t:null},n.prototype.getCoordinateFromPixel=function(t){return Object(lt.toUserCoordinate)(this.getCoordinateFromPixelInternal(t),this.getView().getProjection())},n.prototype.getCoordinateFromPixelInternal=function(t){var n=this.frameState_;return n?Object(u.a)(n.pixelToCoordinateTransform,t.slice()):null},n.prototype.getControls=function(){return this.controls},n.prototype.getOverlays=function(){return this.overlays_},n.prototype.getOverlayById=function(t){var n=this.overlayIdIndex_[t.toString()];return void 0!==n?n:null},n.prototype.getInteractions=function(){return this.interactions},n.prototype.getLayerGroup=function(){return this.get(Z)},n.prototype.setLayers=function(t){var n=this.getLayerGroup();if(t instanceof O.a)n.setLayers(t);else{var e=n.getLayers();e.clear(),e.extend(t)}},n.prototype.getLayers=function(){return this.getLayerGroup().getLayers()},n.prototype.getLoadingOrNotReady=function(){for(var t=this.getLayerGroup().getLayerStatesArray(),n=0,e=t.length;n<e;++n){var r=t[n];if(r.visible){var l=r.layer.getRenderer();if(l&&!l.ready)return!0;var i=r.layer.getSource();if(i&&i.loading)return!0}}return!1},n.prototype.getPixelFromCoordinate=function(t){var n=Object(lt.fromUserCoordinate)(t,this.getView().getProjection());return this.getPixelFromCoordinateInternal(n)},n.prototype.getPixelFromCoordinateInternal=function(t){var n=this.frameState_;return n?Object(u.a)(n.coordinateToPixelTransform,t.slice(0,2)):null},n.prototype.getRenderer=function(){return this.renderer_},n.prototype.getSize=function(){return this.get(H)},n.prototype.getView=function(){return this.get(J)},n.prototype.getViewport=function(){return this.viewport_},n.prototype.getOverlayContainer=function(){return this.overlayContainer_},n.prototype.getOverlayContainerStopEvent=function(){return this.overlayContainerStopEvent_},n.prototype.getOwnerDocument=function(){var t=this.getTargetElement();return t?t.ownerDocument:document},n.prototype.getTilePriority=function(t,n,e,r){return function(t,n,e,r,l){if(!t||!(e in t.wantedTiles))return 1/0;if(!t.wantedTiles[e][n.getKey()])return 1/0;var i=t.viewState.center,o=r[0]-i[0],u=r[1]-i[1];return 65536*Math.log(l)+Math.sqrt(o*o+u*u)/l}(this.frameState_,t,n,e,r)},n.prototype.handleBrowserEvent=function(t,n){var e=n||t.type,r=new G(e,this,t);this.handleMapBrowserEvent(r)},n.prototype.handleMapBrowserEvent=function(t){if(this.frameState_){var n=t.originalEvent,e=n.type;if(e===U||e===S.a.WHEEL||e===S.a.KEYDOWN){var r=this.getOwnerDocument(),l=this.viewport_.getRootNode?this.viewport_.getRootNode():r,i=n.target;if(this.overlayContainerStopEvent_.contains(i)||!(l===r?r.documentElement:l).contains(i))return}if(t.frameState=this.frameState_,!1!==this.dispatchEvent(t))for(var o=this.getInteractions().getArray().slice(),u=o.length-1;u>=0;u--){var s=o[u];if(s.getMap()===this&&s.getActive()&&this.getTargetElement())if(!s.handleEvent(t)||t.propagationStopped)break}}},n.prototype.handlePostRender=function(){var t=this.frameState_,n=this.tileQueue_;if(!n.isEmpty()){var e=this.maxTilesLoading_,r=e;if(t){var l=t.viewHints;if(l[rt.a.ANIMATING]||l[rt.a.INTERACTING]){var i=Date.now()-t.time>8;e=i?0:8,r=i?0:2}}n.getTilesLoading()<e&&(n.reprioritize(),n.loadMoreTiles(e,r))}t&&this.renderer_&&!t.animate&&(!0===this.renderComplete_?(this.hasListener(_.a.RENDERCOMPLETE)&&this.renderer_.dispatchRenderEvent(_.a.RENDERCOMPLETE,t),!1===this.loaded_&&(this.loaded_=!0,this.dispatchEvent(new k(W.a.LOADEND,this,t)))):!0===this.loaded_&&(this.loaded_=!1,this.dispatchEvent(new k(W.a.LOADSTART,this,t))));for(var o=this.postRenderFunctions_,u=0,s=o.length;u<s;++u)o[u](this,t);o.length=0},n.prototype.handleSizeChanged_=function(){this.getView()&&!this.getView().getAnimating()&&this.getView().resolveConstraints(0),this.render()},n.prototype.handleTargetChanged_=function(){if(this.mapBrowserEventHandler_){for(var t=0,n=this.targetChangeHandlerKeys_.length;t<n;++t)Object(b.c)(this.targetChangeHandlerKeys_[t]);this.targetChangeHandlerKeys_=null,this.viewport_.removeEventListener(S.a.CONTEXTMENU,this.boundHandleBrowserEvent_),this.viewport_.removeEventListener(S.a.WHEEL,this.boundHandleBrowserEvent_),this.mapBrowserEventHandler_.dispose(),this.mapBrowserEventHandler_=null,Object(x.f)(this.viewport_)}var e=this.getTargetElement();if(e){for(var r in e.appendChild(this.viewport_),this.renderer_||(this.renderer_=this.createRenderer()),this.mapBrowserEventHandler_=new V(this,this.moveTolerance_),z.a)this.mapBrowserEventHandler_.addEventListener(z.a[r],this.handleMapBrowserEvent.bind(this));this.viewport_.addEventListener(S.a.CONTEXTMENU,this.boundHandleBrowserEvent_,!1),this.viewport_.addEventListener(S.a.WHEEL,this.boundHandleBrowserEvent_,!!Y.e&&{passive:!1});var l=this.getOwnerDocument().defaultView,i=this.keyboardEventTarget_?this.keyboardEventTarget_:e;this.targetChangeHandlerKeys_=[Object(b.a)(i,S.a.KEYDOWN,this.handleBrowserEvent,this),Object(b.a)(i,S.a.KEYPRESS,this.handleBrowserEvent,this),Object(b.a)(l,S.a.RESIZE,this.updateSize,this)]}else this.renderer_&&(clearTimeout(this.postRenderTimeoutHandle_),this.postRenderTimeoutHandle_=void 0,this.postRenderFunctions_.length=0,this.renderer_.dispose(),this.renderer_=null),this.animationDelayKey_&&(cancelAnimationFrame(this.animationDelayKey_),this.animationDelayKey_=void 0);this.updateSize()},n.prototype.handleTileChange_=function(){this.render()},n.prototype.handleViewPropertyChanged_=function(){this.render()},n.prototype.handleViewChanged_=function(){this.viewPropertyListenerKey_&&(Object(b.c)(this.viewPropertyListenerKey_),this.viewPropertyListenerKey_=null),this.viewChangeListenerKey_&&(Object(b.c)(this.viewChangeListenerKey_),this.viewChangeListenerKey_=null);var t=this.getView();t&&(this.updateViewportSize_(),this.viewPropertyListenerKey_=Object(b.a)(t,g.a.PROPERTYCHANGE,this.handleViewPropertyChanged_,this),this.viewChangeListenerKey_=Object(b.a)(t,S.a.CHANGE,this.handleViewPropertyChanged_,this),t.resolveConstraints(0)),this.render()},n.prototype.handleLayerGroupChanged_=function(){this.layerGroupPropertyListenerKeys_&&(this.layerGroupPropertyListenerKeys_.forEach(b.c),this.layerGroupPropertyListenerKeys_=null);var t=this.getLayerGroup();t&&(this.handleLayerAdd_(new L("addlayer",t)),this.layerGroupPropertyListenerKeys_=[Object(b.a)(t,g.a.PROPERTYCHANGE,this.render,this),Object(b.a)(t,S.a.CHANGE,this.render,this),Object(b.a)(t,"addlayer",this.handleLayerAdd_,this),Object(b.a)(t,"removelayer",this.handleLayerRemove_,this)]),this.render()},n.prototype.isRendered=function(){return!!this.frameState_},n.prototype.renderSync=function(){this.animationDelayKey_&&cancelAnimationFrame(this.animationDelayKey_),this.animationDelay_()},n.prototype.redrawText=function(){for(var t=this.getLayerGroup().getLayerStatesArray(),n=0,e=t.length;n<e;++n){var r=t[n].layer;r.hasRenderer()&&r.getRenderer().handleFontsChanged()}},n.prototype.render=function(){this.renderer_&&void 0===this.animationDelayKey_&&(this.animationDelayKey_=requestAnimationFrame(this.animationDelay_))},n.prototype.removeControl=function(t){return this.getControls().remove(t)},n.prototype.removeInteraction=function(t){return this.getInteractions().remove(t)},n.prototype.removeLayer=function(t){return this.getLayerGroup().getLayers().remove(t)},n.prototype.handleLayerRemove_=function(t){ut(t.layer)},n.prototype.removeOverlay=function(t){return this.getOverlays().remove(t)},n.prototype.renderFrame_=function(t){var n=this,e=this.getSize(),r=this.getView(),l=this.frameState_,i=null;if(void 0!==e&&Object(it.a)(e)&&r&&r.isDef()){var u=r.getHints(this.frameState_?this.frameState_.viewHints:void 0),a=r.getState();if(i={animate:!1,coordinateToPixelTransform:this.coordinateToPixelTransform_,declutterTree:null,extent:Object(s.y)(a.center,a.resolution,a.rotation,e),index:this.frameIndex_++,layerIndex:0,layerStatesArray:this.getLayerGroup().getLayerStatesArray(),pixelRatio:this.pixelRatio_,pixelToCoordinateTransform:this.pixelToCoordinateTransform_,postRenderFunctions:[],size:e,tileQueue:this.tileQueue_,time:t,usedTiles:{},viewState:a,viewHints:u,wantedTiles:{},mapId:Object(o.c)(this),renderTargets:{}},a.nextCenter&&a.nextResolution){var h=isNaN(a.nextRotation)?a.rotation:a.nextRotation;i.nextExtent=Object(s.y)(a.nextCenter,a.nextResolution,h,e)}}if(this.frameState_=i,this.renderer_.renderFrame(i),i){if(i.animate&&this.render(),Array.prototype.push.apply(this.postRenderFunctions_,i.postRenderFunctions),l)(!this.previousExtent_||!Object(s.H)(this.previousExtent_)&&!Object(s.o)(i.extent,this.previousExtent_))&&(this.dispatchEvent(new k(W.a.MOVESTART,this,l)),this.previousExtent_=Object(s.l)(this.previousExtent_));this.previousExtent_&&!i.viewHints[rt.a.ANIMATING]&&!i.viewHints[rt.a.INTERACTING]&&!Object(s.o)(i.extent,this.previousExtent_)&&(this.dispatchEvent(new k(W.a.MOVEEND,this,i)),Object(s.d)(i.extent,this.previousExtent_))}this.dispatchEvent(new k(W.a.POSTRENDER,this,i)),this.renderComplete_=this.hasListener(W.a.LOADSTART)||this.hasListener(W.a.LOADEND)||this.hasListener(_.a.RENDERCOMPLETE)?!this.tileQueue_.getTilesLoading()&&!this.tileQueue_.getCount()&&!this.getLoadingOrNotReady():void 0,this.postRenderTimeoutHandle_||(this.postRenderTimeoutHandle_=setTimeout((function(){n.postRenderTimeoutHandle_=void 0,n.handlePostRender()}),0))},n.prototype.setLayerGroup=function(t){var n=this.getLayerGroup();n&&this.handleLayerRemove_(new L("removelayer",n)),this.set(Z,t)},n.prototype.setSize=function(t){this.set(H,t)},n.prototype.setTarget=function(t){this.set(K,t)},n.prototype.setView=function(t){if(!t||t instanceof et.default)this.set(J,t);else{this.set(J,new et.default);var n=this;t.then((function(t){n.setView(new et.default(t))}))}},n.prototype.updateSize=function(){var t=this.getTargetElement(),n=void 0;if(t){var e=getComputedStyle(t),r=t.offsetWidth-parseFloat(e.borderLeftWidth)-parseFloat(e.paddingLeft)-parseFloat(e.paddingRight)-parseFloat(e.borderRightWidth),l=t.offsetHeight-parseFloat(e.borderTopWidth)-parseFloat(e.paddingTop)-parseFloat(e.paddingBottom)-parseFloat(e.borderBottomWidth);isNaN(r)||isNaN(l)||(n=[r,l],!Object(it.a)(n)&&(t.offsetWidth||t.offsetHeight||t.getClientRects().length)&&console.warn("No map visible because the map container's width or height are 0."))}this.setSize(n),this.updateViewportSize_()},n.prototype.updateViewportSize_=function(){var t=this.getView();if(t){var n=void 0,e=getComputedStyle(this.viewport_);e.width&&e.height&&(n=[parseInt(e.width,10),parseInt(e.height,10)]),t.setViewportSize(n)}},n}(C.a),at=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),ht=function(t){function n(n){var e=t.call(this)||this,r=n.element;return!r||n.target||r.style.pointerEvents||(r.style.pointerEvents="auto"),e.element=r||null,e.target_=null,e.map_=null,e.listenerKeys=[],n.render&&(e.render=n.render),n.target&&e.setTarget(n.target),e}return at(n,t),n.prototype.disposeInternal=function(){Object(x.f)(this.element),t.prototype.disposeInternal.call(this)},n.prototype.getMap=function(){return this.map_},n.prototype.setMap=function(t){this.map_&&Object(x.f)(this.element);for(var n=0,e=this.listenerKeys.length;n<e;++n)Object(b.c)(this.listenerKeys[n]);(this.listenerKeys.length=0,this.map_=t,t)&&((this.target_?this.target_:t.getOverlayContainerStopEvent()).appendChild(this.element),this.render!==i.c&&this.listenerKeys.push(Object(b.a)(t,W.a.POSTRENDER,this.render,this)),t.render())},n.prototype.render=function(t){},n.prototype.setTarget=function(t){this.target_="string"==typeof t?document.getElementById(t):t},n}(C.a),ct=e(243),ft=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),pt=function(t){function n(n){var e=this,r=n||{};(e=t.call(this,{element:document.createElement("div"),render:r.render,target:r.target})||this).ulElement_=document.createElement("ul"),e.collapsed_=void 0===r.collapsed||r.collapsed,e.userCollapsed_=e.collapsed_,e.overrideCollapsible_=void 0!==r.collapsible,e.collapsible_=void 0===r.collapsible||r.collapsible,e.collapsible_||(e.collapsed_=!1);var l=void 0!==r.className?r.className:"ol-attribution",i=void 0!==r.tipLabel?r.tipLabel:"Attributions",o=void 0!==r.expandClassName?r.expandClassName:l+"-expand",u=void 0!==r.collapseLabel?r.collapseLabel:"›",s=void 0!==r.collapseClassName?r.collapseClassName:l+"-collapse";"string"==typeof u?(e.collapseLabel_=document.createElement("span"),e.collapseLabel_.textContent=u,e.collapseLabel_.className=s):e.collapseLabel_=u;var a=void 0!==r.label?r.label:"i";"string"==typeof a?(e.label_=document.createElement("span"),e.label_.textContent=a,e.label_.className=o):e.label_=a;var h=e.collapsible_&&!e.collapsed_?e.collapseLabel_:e.label_;e.toggleButton_=document.createElement("button"),e.toggleButton_.setAttribute("type","button"),e.toggleButton_.setAttribute("aria-expanded",String(!e.collapsed_)),e.toggleButton_.title=i,e.toggleButton_.appendChild(h),e.toggleButton_.addEventListener(S.a.CLICK,e.handleClick_.bind(e),!1);var c=l+" "+v.e+" "+v.b+(e.collapsed_&&e.collapsible_?" "+v.a:"")+(e.collapsible_?"":" ol-uncollapsible"),f=e.element;return f.className=c,f.appendChild(e.toggleButton_),f.appendChild(e.ulElement_),e.renderedAttributions_=[],e.renderedVisible_=!0,e}return ft(n,t),n.prototype.collectSourceAttributions_=function(t){for(var n={},e=[],r=!0,l=t.layerStatesArray,i=0,o=l.length;i<o;++i){var u=l[i];if(Object(h.b)(u,t.viewState)){var s=u.layer.getSource();if(s){var a=s.getAttributions();if(a){var c=a(t);if(c)if(r=r&&!1!==s.getAttributionsCollapsible(),Array.isArray(c))for(var f=0,p=c.length;f<p;++f)c[f]in n||(e.push(c[f]),n[c[f]]=!0);else c in n||(e.push(c),n[c]=!0)}}}}return this.overrideCollapsible_||this.setCollapsible(r),e},n.prototype.updateElement_=function(t){if(t){var n=this.collectSourceAttributions_(t),e=n.length>0;if(this.renderedVisible_!=e&&(this.element.style.display=e?"":"none",this.renderedVisible_=e),!Object(ct.b)(n,this.renderedAttributions_)){Object(x.e)(this.ulElement_);for(var r=0,l=n.length;r<l;++r){var i=document.createElement("li");i.innerHTML=n[r],this.ulElement_.appendChild(i)}this.renderedAttributions_=n}}else this.renderedVisible_&&(this.element.style.display="none",this.renderedVisible_=!1)},n.prototype.handleClick_=function(t){t.preventDefault(),this.handleToggle_(),this.userCollapsed_=this.collapsed_},n.prototype.handleToggle_=function(){this.element.classList.toggle(v.a),this.collapsed_?Object(x.h)(this.collapseLabel_,this.label_):Object(x.h)(this.label_,this.collapseLabel_),this.collapsed_=!this.collapsed_,this.toggleButton_.setAttribute("aria-expanded",String(!this.collapsed_))},n.prototype.getCollapsible=function(){return this.collapsible_},n.prototype.setCollapsible=function(t){this.collapsible_!==t&&(this.collapsible_=t,this.element.classList.toggle("ol-uncollapsible"),this.userCollapsed_&&this.handleToggle_())},n.prototype.setCollapsed=function(t){this.userCollapsed_=t,this.collapsible_&&this.collapsed_!==t&&this.handleToggle_()},n.prototype.getCollapsed=function(){return this.collapsed_},n.prototype.render=function(t){this.updateElement_(t.frameState)},n}(ht),dt=e(272),gt=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),yt=function(t){function n(n){var e=this,r=n||{};e=t.call(this,{element:document.createElement("div"),render:r.render,target:r.target})||this;var l=void 0!==r.className?r.className:"ol-rotate",i=void 0!==r.label?r.label:"⇧",o=void 0!==r.compassClassName?r.compassClassName:"ol-compass";e.label_=null,"string"==typeof i?(e.label_=document.createElement("span"),e.label_.className=o,e.label_.textContent=i):(e.label_=i,e.label_.classList.add(o));var u=r.tipLabel?r.tipLabel:"Reset rotation",s=document.createElement("button");s.className=l+"-reset",s.setAttribute("type","button"),s.title=u,s.appendChild(e.label_),s.addEventListener(S.a.CLICK,e.handleClick_.bind(e),!1);var a=l+" "+v.e+" "+v.b,h=e.element;return h.className=a,h.appendChild(s),e.callResetNorth_=r.resetNorth?r.resetNorth:void 0,e.duration_=void 0!==r.duration?r.duration:250,e.autoHide_=void 0===r.autoHide||r.autoHide,e.rotation_=void 0,e.autoHide_&&e.element.classList.add(v.c),e}return gt(n,t),n.prototype.handleClick_=function(t){t.preventDefault(),void 0!==this.callResetNorth_?this.callResetNorth_():this.resetNorth_()},n.prototype.resetNorth_=function(){var t=this.getMap().getView();if(t){var n=t.getRotation();void 0!==n&&(this.duration_>0&&n%(2*Math.PI)!=0?t.animate({rotation:0,duration:this.duration_,easing:dt.b}):t.setRotation(0))}},n.prototype.render=function(t){var n=t.frameState;if(n){var e=n.viewState.rotation;if(e!=this.rotation_){var r="rotate("+e+"rad)";if(this.autoHide_){var l=this.element.classList.contains(v.c);l||0!==e?l&&0!==e&&this.element.classList.remove(v.c):this.element.classList.add(v.c)}this.label_.style.transform=r}this.rotation_=e}},n}(ht),_t=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),vt=function(t){function n(n){var e=this,r=n||{};e=t.call(this,{element:document.createElement("div"),target:r.target})||this;var l=void 0!==r.className?r.className:"ol-zoom",i=void 0!==r.delta?r.delta:1,o=void 0!==r.zoomInClassName?r.zoomInClassName:l+"-in",u=void 0!==r.zoomOutClassName?r.zoomOutClassName:l+"-out",s=void 0!==r.zoomInLabel?r.zoomInLabel:"+",a=void 0!==r.zoomOutLabel?r.zoomOutLabel:"–",h=void 0!==r.zoomInTipLabel?r.zoomInTipLabel:"Zoom in",c=void 0!==r.zoomOutTipLabel?r.zoomOutTipLabel:"Zoom out",f=document.createElement("button");f.className=o,f.setAttribute("type","button"),f.title=h,f.appendChild("string"==typeof s?document.createTextNode(s):s),f.addEventListener(S.a.CLICK,e.handleClick_.bind(e,i),!1);var p=document.createElement("button");p.className=u,p.setAttribute("type","button"),p.title=c,p.appendChild("string"==typeof a?document.createTextNode(a):a),p.addEventListener(S.a.CLICK,e.handleClick_.bind(e,-i),!1);var d=l+" "+v.e+" "+v.b,g=e.element;return g.className=d,g.appendChild(f),g.appendChild(p),e.duration_=void 0!==r.duration?r.duration:250,e}return _t(n,t),n.prototype.handleClick_=function(t,n){n.preventDefault(),this.zoomByDelta_(t)},n.prototype.zoomByDelta_=function(t){var n=this.getMap().getView();if(n){var e=n.getZoom();if(void 0!==e){var r=n.getConstrainedZoom(e+t);this.duration_>0?(n.getAnimating()&&n.cancelAnimations(),n.animate({zoom:r,duration:this.duration_,easing:dt.b})):n.setZoom(r)}}},n}(ht);var mt=e(314),bt=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),xt=function(t){function n(n){return(n=Object(T.a)({},n)).controls||(n.controls=function(t){var n=t||{},e=new O.a;return(void 0===n.zoom||n.zoom)&&e.push(new vt(n.zoomOptions)),(void 0===n.rotate||n.rotate)&&e.push(new yt(n.rotateOptions)),(void 0===n.attribution||n.attribution)&&e.push(new pt(n.attributionOptions)),e}()),n.interactions||(n.interactions=Object(mt.a)({onFocusOnly:!0})),t.call(this,n)||this}return bt(n,t),n.prototype.createRenderer=function(){return new E(this)},n}(st);n.default=xt},function(t,n,e){"use strict";e.r(n);var r=e(240),l=e(348),i=e(361),o=e(244),u=function(){function t(t){this.highWaterMark=void 0!==t?t:2048,this.count_=0,this.entries_={},this.oldest_=null,this.newest_=null}return t.prototype.canExpireCache=function(){return this.highWaterMark>0&&this.getCount()>this.highWaterMark},t.prototype.expireCache=function(t){for(;this.canExpireCache();)this.pop()},t.prototype.clear=function(){this.count_=0,this.entries_={},this.oldest_=null,this.newest_=null},t.prototype.containsKey=function(t){return this.entries_.hasOwnProperty(t)},t.prototype.forEach=function(t){for(var n=this.oldest_;n;)t(n.value_,n.key_,this),n=n.newer},t.prototype.get=function(t,n){var e=this.entries_[t];return Object(o.a)(void 0!==e,15),e===this.newest_||(e===this.oldest_?(this.oldest_=this.oldest_.newer,this.oldest_.older=null):(e.newer.older=e.older,e.older.newer=e.newer),e.newer=null,e.older=this.newest_,this.newest_.newer=e,this.newest_=e),e.value_},t.prototype.remove=function(t){var n=this.entries_[t];return Object(o.a)(void 0!==n,15),n===this.newest_?(this.newest_=n.older,this.newest_&&(this.newest_.newer=null)):n===this.oldest_?(this.oldest_=n.newer,this.oldest_&&(this.oldest_.older=null)):(n.newer.older=n.older,n.older.newer=n.newer),delete this.entries_[t],--this.count_,n.value_},t.prototype.getCount=function(){return this.count_},t.prototype.getKeys=function(){var t,n=new Array(this.count_),e=0;for(t=this.newest_;t;t=t.older)n[e++]=t.key_;return n},t.prototype.getValues=function(){var t,n=new Array(this.count_),e=0;for(t=this.newest_;t;t=t.older)n[e++]=t.value_;return n},t.prototype.peekLast=function(){return this.oldest_.value_},t.prototype.peekLastKey=function(){return this.oldest_.key_},t.prototype.peekFirstKey=function(){return this.newest_.key_},t.prototype.peek=function(t){if(this.containsKey(t))return this.entries_[t].value_},t.prototype.pop=function(){var t=this.oldest_;return delete this.entries_[t.key_],t.newer&&(t.newer.older=null),this.oldest_=t.newer,this.oldest_||(this.newest_=null),--this.count_,t.value_},t.prototype.replace=function(t,n){this.get(t),this.entries_[t].value_=n},t.prototype.set=function(t,n){Object(o.a)(!(t in this.entries_),16);var e={key_:t,newer:null,older:this.newest_,value_:n};this.newest_?this.newest_.newer=e:this.oldest_=e,this.newest_=e,this.entries_[t]=e,++this.count_},t.prototype.setSize=function(t){this.highWaterMark=t},t}();function s(t,n,e,r){return void 0!==r?(r[0]=t,r[1]=n,r[2]=e,r):[t,n,e]}function a(t,n,e){return t+"/"+n+"/"+e}function h(t){return a(t[0],t[1],t[2])}var c,f=(c=function(t,n){return(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}c(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),p=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return f(n,t),n.prototype.expireCache=function(t){for(;this.canExpireCache();){if(this.peekLast().getKey()in t)break;this.pop().release()}},n.prototype.pruneExceptNewestZ=function(){if(0!==this.getCount()){var t=function(t){return t.split("/").map(Number)}(this.peekFirstKey())[0];this.forEach(function(n){n.tileCoord[0]!==t&&(this.remove(h(n.tileCoord)),n.release())}.bind(this))}},n}(u),d=e(275),g="tileloadstart",y="tileloadend",_="tileloaderror",v=e(249),m=e(340),b=e(238),x=e(241),w=e(347),E=e(313),C=e(239),O=e(237),M=e(293),S=e(243),I=e(279),P=[0,0,0],R=function(){function t(t){var n;if(this.minZoom=void 0!==t.minZoom?t.minZoom:0,this.resolutions_=t.resolutions,Object(o.a)(Object(S.d)(this.resolutions_,(function(t,n){return n-t}),!0),17),!t.origins)for(var e=0,r=this.resolutions_.length-1;e<r;++e)if(n){if(this.resolutions_[e]/this.resolutions_[e+1]!==n){n=void 0;break}}else n=this.resolutions_[e]/this.resolutions_[e+1];this.zoomFactor_=n,this.maxZoom=this.resolutions_.length-1,this.origin_=void 0!==t.origin?t.origin:null,this.origins_=null,void 0!==t.origins&&(this.origins_=t.origins,Object(o.a)(this.origins_.length==this.resolutions_.length,20));var l=t.extent;void 0===l||this.origin_||this.origins_||(this.origin_=Object(O.C)(l)),Object(o.a)(!this.origin_&&this.origins_||this.origin_&&!this.origins_,18),this.tileSizes_=null,void 0!==t.tileSizes&&(this.tileSizes_=t.tileSizes,Object(o.a)(this.tileSizes_.length==this.resolutions_.length,19)),this.tileSize_=void 0!==t.tileSize?t.tileSize:this.tileSizes_?null:E.b,Object(o.a)(!this.tileSize_&&this.tileSizes_||this.tileSize_&&!this.tileSizes_,22),this.extent_=void 0!==l?l:null,this.fullTileRanges_=null,this.tmpSize_=[0,0],this.tmpExtent_=[0,0,0,0],void 0!==t.sizes?this.fullTileRanges_=t.sizes.map((function(t,n){var e=new w.b(Math.min(0,t[0]),Math.max(t[0]-1,-1),Math.min(0,t[1]),Math.max(t[1]-1,-1));if(l){var r=this.getTileRangeForExtentAndZ(l,n);e.minX=Math.max(r.minX,e.minX),e.maxX=Math.min(r.maxX,e.maxX),e.minY=Math.max(r.minY,e.minY),e.maxY=Math.min(r.maxY,e.maxY)}return e}),this):l&&this.calculateTileRanges_(l)}return t.prototype.forEachTileCoord=function(t,n,e){for(var r=this.getTileRangeForExtentAndZ(t,n),l=r.minX,i=r.maxX;l<=i;++l)for(var o=r.minY,u=r.maxY;o<=u;++o)e([n,l,o])},t.prototype.forEachTileCoordParentTileRange=function(t,n,e,r){var l,i,o,u=null,s=t[0]-1;for(2===this.zoomFactor_?(i=t[1],o=t[2]):u=this.getTileCoordExtent(t,r);s>=this.minZoom;){if(2===this.zoomFactor_?(i=Math.floor(i/2),o=Math.floor(o/2),l=Object(w.a)(i,i,o,o,e)):l=this.getTileRangeForExtentAndZ(u,s,e),n(s,l))return!0;--s}return!1},t.prototype.getExtent=function(){return this.extent_},t.prototype.getMaxZoom=function(){return this.maxZoom},t.prototype.getMinZoom=function(){return this.minZoom},t.prototype.getOrigin=function(t){return this.origin_?this.origin_:this.origins_[t]},t.prototype.getResolution=function(t){return this.resolutions_[t]},t.prototype.getResolutions=function(){return this.resolutions_},t.prototype.getTileCoordChildTileRange=function(t,n,e){if(t[0]<this.maxZoom){if(2===this.zoomFactor_){var r=2*t[1],l=2*t[2];return Object(w.a)(r,r+1,l,l+1,n)}var i=this.getTileCoordExtent(t,e||this.tmpExtent_);return this.getTileRangeForExtentAndZ(i,t[0]+1,n)}return null},t.prototype.getTileRangeForTileCoordAndZ=function(t,n,e){if(n>this.maxZoom||n<this.minZoom)return null;var r=t[0],l=t[1],i=t[2];if(n===r)return Object(w.a)(l,i,l,i,e);if(this.zoomFactor_){var o=Math.pow(this.zoomFactor_,n-r),u=Math.floor(l*o),s=Math.floor(i*o);if(n<r)return Object(w.a)(u,u,s,s,e);var a=Math.floor(o*(l+1))-1,h=Math.floor(o*(i+1))-1;return Object(w.a)(u,a,s,h,e)}var c=this.getTileCoordExtent(t,this.tmpExtent_);return this.getTileRangeForExtentAndZ(c,n,e)},t.prototype.getTileRangeExtent=function(t,n,e){var r=this.getOrigin(t),l=this.getResolution(t),i=Object(I.c)(this.getTileSize(t),this.tmpSize_),o=r[0]+n.minX*i[0]*l,u=r[0]+(n.maxX+1)*i[0]*l,s=r[1]+n.minY*i[1]*l,a=r[1]+(n.maxY+1)*i[1]*l;return Object(O.k)(o,s,u,a,e)},t.prototype.getTileRangeForExtentAndZ=function(t,n,e){var r=P;this.getTileCoordForXYAndZ_(t[0],t[3],n,!1,r);var l=r[1],i=r[2];return this.getTileCoordForXYAndZ_(t[2],t[1],n,!0,r),Object(w.a)(l,r[1],i,r[2],e)},t.prototype.getTileCoordCenter=function(t){var n=this.getOrigin(t[0]),e=this.getResolution(t[0]),r=Object(I.c)(this.getTileSize(t[0]),this.tmpSize_);return[n[0]+(t[1]+.5)*r[0]*e,n[1]-(t[2]+.5)*r[1]*e]},t.prototype.getTileCoordExtent=function(t,n){var e=this.getOrigin(t[0]),r=this.getResolution(t[0]),l=Object(I.c)(this.getTileSize(t[0]),this.tmpSize_),i=e[0]+t[1]*l[0]*r,o=e[1]-(t[2]+1)*l[1]*r,u=i+l[0]*r,s=o+l[1]*r;return Object(O.k)(i,o,u,s,n)},t.prototype.getTileCoordForCoordAndResolution=function(t,n,e){return this.getTileCoordForXYAndResolution_(t[0],t[1],n,!1,e)},t.prototype.getTileCoordForXYAndResolution_=function(t,n,e,r,l){var i=this.getZForResolution(e),o=e/this.getResolution(i),u=this.getOrigin(i),a=Object(I.c)(this.getTileSize(i),this.tmpSize_),h=o*(t-u[0])/e/a[0],c=o*(u[1]-n)/e/a[1];return r?(h=Object(C.a)(h,5)-1,c=Object(C.a)(c,5)-1):(h=Object(C.d)(h,5),c=Object(C.d)(c,5)),s(i,h,c,l)},t.prototype.getTileCoordForXYAndZ_=function(t,n,e,r,l){var i=this.getOrigin(e),o=this.getResolution(e),u=Object(I.c)(this.getTileSize(e),this.tmpSize_),a=(t-i[0])/o/u[0],h=(i[1]-n)/o/u[1];return r?(a=Object(C.a)(a,5)-1,h=Object(C.a)(h,5)-1):(a=Object(C.d)(a,5),h=Object(C.d)(h,5)),s(e,a,h,l)},t.prototype.getTileCoordForCoordAndZ=function(t,n,e){return this.getTileCoordForXYAndZ_(t[0],t[1],n,!1,e)},t.prototype.getTileCoordResolution=function(t){return this.resolutions_[t[0]]},t.prototype.getTileSize=function(t){return this.tileSize_?this.tileSize_:this.tileSizes_[t]},t.prototype.getFullTileRange=function(t){return this.fullTileRanges_?this.fullTileRanges_[t]:this.extent_?this.getTileRangeForExtentAndZ(this.extent_,t):null},t.prototype.getZForResolution=function(t,n){var e=Object(S.e)(this.resolutions_,t,n||0);return Object(C.b)(e,this.minZoom,this.maxZoom)},t.prototype.tileCoordIntersectsViewport=function(t,n){return Object(M.c)(n,0,n.length,2,this.getTileCoordExtent(t))},t.prototype.calculateTileRanges_=function(t){for(var n=this.resolutions_.length,e=new Array(n),r=this.minZoom;r<n;++r)e[r]=this.getTileRangeForExtentAndZ(t,r);this.fullTileRanges_=e},t}(),T=e(256);function N(t){var n=t.getDefaultTileGrid();return n||(n=function(t,n,e,r){return function(t,n,e,r){var l=void 0!==r?r:"top-left",i=L(t,n,e);return new R({extent:t,origin:Object(O.x)(t,l),resolutions:i,tileSize:e})}(A(t),n,e,r)}(t),t.setDefaultTileGrid(n)),n}function L(t,n,e,r){for(var l=void 0!==n?n:E.a,i=Object(O.z)(t),o=Object(O.E)(t),u=Object(I.c)(void 0!==e?e:E.b),s=r>0?r:Math.max(o/u[0],i/u[1]),a=l+1,h=new Array(a),c=0;c<a;++c)h[c]=s/Math.pow(2,c);return h}function A(t){var n=(t=Object(x.get)(t)).getExtent();if(!n){var e=180*x.METERS_PER_UNIT[T.b.DEGREES]/t.getMetersPerUnit();n=Object(O.k)(-e,-e,e,e)}return n}var j=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),D=function(t){function n(n){var e=t.call(this,{attributions:n.attributions,attributionsCollapsible:n.attributionsCollapsible,projection:n.projection,state:n.state,wrapX:n.wrapX,interpolate:n.interpolate})||this;e.on,e.once,e.un,e.opaque_=void 0!==n.opaque&&n.opaque,e.tilePixelRatio_=void 0!==n.tilePixelRatio?n.tilePixelRatio:1,e.tileGrid=void 0!==n.tileGrid?n.tileGrid:null;return e.tileGrid&&Object(I.c)(e.tileGrid.getTileSize(e.tileGrid.getMinZoom()),[256,256]),e.tileCache=new p(n.cacheSize||0),e.tmpSize=[0,0],e.key_=n.key||"",e.tileOptions={transition:n.transition,interpolate:n.interpolate},e.zDirection=n.zDirection?n.zDirection:0,e}return j(n,t),n.prototype.canExpireCache=function(){return this.tileCache.canExpireCache()},n.prototype.expireCache=function(t,n){var e=this.getTileCacheForProjection(t);e&&e.expireCache(n)},n.prototype.forEachLoadedTile=function(t,n,e,r){var l=this.getTileCacheForProjection(t);if(!l)return!1;for(var i,o,u,s=!0,h=e.minX;h<=e.maxX;++h)for(var c=e.minY;c<=e.maxY;++c)o=a(n,h,c),u=!1,l.containsKey(o)&&(u=(i=l.get(o)).getState()===d.a.LOADED)&&(u=!1!==r(i)),u||(s=!1);return s},n.prototype.getGutterForProjection=function(t){return 0},n.prototype.getKey=function(){return this.key_},n.prototype.setKey=function(t){this.key_!==t&&(this.key_=t,this.changed())},n.prototype.getOpaque=function(t){return this.opaque_},n.prototype.getResolutions=function(){return this.tileGrid?this.tileGrid.getResolutions():null},n.prototype.getTile=function(t,n,e,r,l){return Object(b.b)()},n.prototype.getTileGrid=function(){return this.tileGrid},n.prototype.getTileGridForProjection=function(t){return this.tileGrid?this.tileGrid:N(t)},n.prototype.getTileCacheForProjection=function(t){var n=this.getProjection();return Object(o.a)(null===n||Object(x.equivalent)(n,t),68),this.tileCache},n.prototype.getTilePixelRatio=function(t){return this.tilePixelRatio_},n.prototype.getTilePixelSize=function(t,n,e){var r=this.getTileGridForProjection(e),l=this.getTilePixelRatio(n),i=Object(I.c)(r.getTileSize(t),this.tmpSize);return 1==l?i:Object(I.b)(i,l,this.tmpSize)},n.prototype.getTileCoordForTileUrlFunction=function(t,n){var e=void 0!==n?n:this.getProjection(),r=this.getTileGridForProjection(e);return this.getWrapX()&&e.isGlobal()&&(t=function(t,n,e){var r=n[0],l=t.getTileCoordCenter(n),i=A(e);if(Object(O.f)(i,l))return n;var o=Object(O.E)(i),u=Math.ceil((i[0]-l[0])/o);return l[0]+=o*u,t.getTileCoordForCoordAndZ(l,r)}(r,t,e)),function(t,n){var e=t[0],r=t[1],l=t[2];if(n.getMinZoom()>e||e>n.getMaxZoom())return!1;var i=n.getFullTileRange(e);return!i||i.containsXY(r,l)}(t,r)?t:null},n.prototype.clear=function(){this.tileCache.clear()},n.prototype.refresh=function(){this.clear(),t.prototype.refresh.call(this)},n.prototype.updateCacheSize=function(t,n){var e=this.getTileCacheForProjection(n);t>e.highWaterMark&&(e.highWaterMark=t)},n.prototype.useTile=function(t,n,e,r){},n}(m.a),k=function(t){function n(n,e){var r=t.call(this,n)||this;return r.tile=e,r}return j(n,t),n}(v.a),F=D;function G(t,n){var e=/\{z\}/g,r=/\{x\}/g,l=/\{y\}/g,i=/\{-y\}/g;return function(u,s,a){return u?t.replace(e,u[0].toString()).replace(r,u[1].toString()).replace(l,u[2].toString()).replace(i,(function(){var t=u[0],e=n.getFullTileRange(t);return Object(o.a)(e,55),(e.getHeight()-u[2]-1).toString()})):void 0}}function z(t,n){for(var e=t.length,r=new Array(e),l=0;l<e;++l)r[l]=G(t[l],n);return function(t){if(1===t.length)return t[0];return function(n,e,r){if(n){var l=function(t){return(t[1]<<t[0])+t[2]}(n),i=Object(C.g)(l,t.length);return t[i](n,e,r)}}}(r)}var B=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),U=function(t){function n(e){var r=t.call(this,{attributions:e.attributions,cacheSize:e.cacheSize,opaque:e.opaque,projection:e.projection,state:e.state,tileGrid:e.tileGrid,tilePixelRatio:e.tilePixelRatio,wrapX:e.wrapX,transition:e.transition,interpolate:e.interpolate,key:e.key,attributionsCollapsible:e.attributionsCollapsible,zDirection:e.zDirection})||this;return r.generateTileUrlFunction_=r.tileUrlFunction===n.prototype.tileUrlFunction,r.tileLoadFunction=e.tileLoadFunction,e.tileUrlFunction&&(r.tileUrlFunction=e.tileUrlFunction),r.urls=null,e.urls?r.setUrls(e.urls):e.url&&r.setUrl(e.url),r.tileLoadingKeys_={},r}return B(n,t),n.prototype.getTileLoadFunction=function(){return this.tileLoadFunction},n.prototype.getTileUrlFunction=function(){return Object.getPrototypeOf(this).tileUrlFunction===this.tileUrlFunction?this.tileUrlFunction.bind(this):this.tileUrlFunction},n.prototype.getUrls=function(){return this.urls},n.prototype.handleTileChange=function(t){var n,e=t.target,r=Object(b.c)(e),l=e.getState();l==d.a.LOADING?(this.tileLoadingKeys_[r]=!0,n=g):r in this.tileLoadingKeys_&&(delete this.tileLoadingKeys_[r],n=l==d.a.ERROR?_:l==d.a.LOADED?y:void 0),null!=n&&this.dispatchEvent(new k(n,e))},n.prototype.setTileLoadFunction=function(t){this.tileCache.clear(),this.tileLoadFunction=t,this.changed()},n.prototype.setTileUrlFunction=function(t,n){this.tileUrlFunction=t,this.tileCache.pruneExceptNewestZ(),void 0!==n?this.setKey(n):this.changed()},n.prototype.setUrl=function(t){var n=function(t){var n=[],e=/\{([a-z])-([a-z])\}/.exec(t);if(e){var r=e[1].charCodeAt(0),l=e[2].charCodeAt(0),i=void 0;for(i=r;i<=l;++i)n.push(t.replace(e[0],String.fromCharCode(i)));return n}if(e=/\{(\d+)-(\d+)\}/.exec(t)){for(var o=parseInt(e[2],10),u=parseInt(e[1],10);u<=o;u++)n.push(t.replace(e[0],u.toString()));return n}return n.push(t),n}(t);this.urls=n,this.setUrls(n)},n.prototype.setUrls=function(t){this.urls=t;var n=t.join("\n");this.generateTileUrlFunction_?this.setTileUrlFunction(z(t,this.tileGrid),n):this.setKey(n)},n.prototype.tileUrlFunction=function(t,n,e){},n.prototype.useTile=function(t,n,e){var r=a(t,n,e);this.tileCache.containsKey(r)&&this.tileCache.get(r)},n}(F),q=e(350),Y=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}();function X(t,n){t.getImage().src=n}var V=function(t){function n(n){var e=this,r=void 0===n.imageSmoothing||n.imageSmoothing;return void 0!==n.interpolate&&(r=n.interpolate),(e=t.call(this,{attributions:n.attributions,cacheSize:n.cacheSize,opaque:n.opaque,projection:n.projection,state:n.state,tileGrid:n.tileGrid,tileLoadFunction:n.tileLoadFunction?n.tileLoadFunction:X,tilePixelRatio:n.tilePixelRatio,tileUrlFunction:n.tileUrlFunction,url:n.url,urls:n.urls,wrapX:n.wrapX,transition:n.transition,interpolate:r,key:n.key,attributionsCollapsible:n.attributionsCollapsible,zDirection:n.zDirection})||this).crossOrigin=void 0!==n.crossOrigin?n.crossOrigin:null,e.tileClass=void 0!==n.tileClass?n.tileClass:l.a,e.tileCacheForProjection={},e.tileGridForProjection={},e.reprojectionErrorThreshold_=n.reprojectionErrorThreshold,e.renderReprojectionEdges_=!1,e}return Y(n,t),n.prototype.canExpireCache=function(){if(!q.a)return t.prototype.canExpireCache.call(this);if(this.tileCache.canExpireCache())return!0;for(var n in this.tileCacheForProjection)if(this.tileCacheForProjection[n].canExpireCache())return!0;return!1},n.prototype.expireCache=function(n,e){if(q.a){var r=this.getTileCacheForProjection(n);for(var l in this.tileCache.expireCache(this.tileCache==r?e:{}),this.tileCacheForProjection){var i=this.tileCacheForProjection[l];i.expireCache(i==r?e:{})}}else t.prototype.expireCache.call(this,n,e)},n.prototype.getGutterForProjection=function(t){return q.a&&this.getProjection()&&t&&!Object(x.equivalent)(this.getProjection(),t)?0:this.getGutter()},n.prototype.getGutter=function(){return 0},n.prototype.getKey=function(){var n=t.prototype.getKey.call(this);return this.getInterpolate()||(n+=":disable-interpolation"),n},n.prototype.getOpaque=function(n){return!(q.a&&this.getProjection()&&n&&!Object(x.equivalent)(this.getProjection(),n))&&t.prototype.getOpaque.call(this,n)},n.prototype.getTileGridForProjection=function(n){if(!q.a)return t.prototype.getTileGridForProjection.call(this,n);var e=this.getProjection();if(!this.tileGrid||e&&!Object(x.equivalent)(e,n)){var r=Object(b.c)(n);return r in this.tileGridForProjection||(this.tileGridForProjection[r]=N(n)),this.tileGridForProjection[r]}return this.tileGrid},n.prototype.getTileCacheForProjection=function(n){if(!q.a)return t.prototype.getTileCacheForProjection.call(this,n);var e=this.getProjection();if(!e||Object(x.equivalent)(e,n))return this.tileCache;var r=Object(b.c)(n);return r in this.tileCacheForProjection||(this.tileCacheForProjection[r]=new p(this.tileCache.highWaterMark)),this.tileCacheForProjection[r]},n.prototype.createTile_=function(t,n,e,l,i,o){var u=[t,n,e],s=this.getTileCoordForTileUrlFunction(u,i),a=s?this.tileUrlFunction(s,l,i):void 0,h=new this.tileClass(u,void 0!==a?d.a.IDLE:d.a.EMPTY,void 0!==a?a:"",this.crossOrigin,this.tileLoadFunction,this.tileOptions);return h.key=o,h.addEventListener(r.a.CHANGE,this.handleTileChange.bind(this)),h},n.prototype.getTile=function(t,n,e,r,l){var o=this.getProjection();if(q.a&&o&&l&&!Object(x.equivalent)(o,l)){var u=this.getTileCacheForProjection(l),s=[t,n,e],a=void 0,c=h(s);u.containsKey(c)&&(a=u.get(c));var f=this.getKey();if(a&&a.key==f)return a;var p=this.getTileGridForProjection(o),d=this.getTileGridForProjection(l),g=this.getTileCoordForTileUrlFunction(s,l),y=new i.a(o,p,l,d,s,g,this.getTilePixelRatio(r),this.getGutter(),function(t,n,e,r){return this.getTileInternal(t,n,e,r,o)}.bind(this),this.reprojectionErrorThreshold_,this.renderReprojectionEdges_,this.getInterpolate());return y.key=f,a?(y.interimTile=a,y.refreshInterimChain(),u.replace(c,y)):u.set(c,y),y}return this.getTileInternal(t,n,e,r,o||l)},n.prototype.getTileInternal=function(t,n,e,r,l){var i=null,o=a(t,n,e),u=this.getKey();if(this.tileCache.containsKey(o)){if((i=this.tileCache.get(o)).key!=u){var s=i;i=this.createTile_(t,n,e,r,l,u),s.getState()==d.a.IDLE?i.interimTile=s.interimTile:i.interimTile=s,i.refreshInterimChain(),this.tileCache.replace(o,i)}}else i=this.createTile_(t,n,e,r,l,u),this.tileCache.set(o,i);return i},n.prototype.setRenderReprojectionEdges=function(t){if(q.a&&this.renderReprojectionEdges_!=t){for(var n in this.renderReprojectionEdges_=t,this.tileCacheForProjection)this.tileCacheForProjection[n].clear();this.changed()}},n.prototype.setTileGridForProjection=function(t,n){if(q.a){var e=Object(x.get)(t);if(e){var r=Object(b.c)(e);r in this.tileGridForProjection||(this.tileGridForProjection[r]=n)}}},n}(U),W=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),Z=function(t){function n(n){var e=this,r=n||{},l=void 0===r.imageSmoothing||r.imageSmoothing;void 0!==r.interpolate&&(l=r.interpolate);var i=void 0!==r.projection?r.projection:"EPSG:3857",o=void 0!==r.tileGrid?r.tileGrid:function(t){var n=t||{},e=n.extent||Object(x.get)("EPSG:3857").getExtent(),r={extent:e,minZoom:n.minZoom,tileSize:n.tileSize,resolutions:L(e,n.maxZoom,n.tileSize,n.maxResolution)};return new R(r)}({extent:A(i),maxResolution:r.maxResolution,maxZoom:r.maxZoom,minZoom:r.minZoom,tileSize:r.tileSize});return(e=t.call(this,{attributions:r.attributions,cacheSize:r.cacheSize,crossOrigin:r.crossOrigin,interpolate:l,opaque:r.opaque,projection:i,reprojectionErrorThreshold:r.reprojectionErrorThreshold,tileGrid:o,tileLoadFunction:r.tileLoadFunction,tilePixelRatio:r.tilePixelRatio,tileUrlFunction:r.tileUrlFunction,url:r.url,urls:r.urls,wrapX:void 0===r.wrapX||r.wrapX,transition:r.transition,attributionsCollapsible:r.attributionsCollapsible,zDirection:r.zDirection})||this).gutter_=void 0!==r.gutter?r.gutter:0,e}return W(n,t),n.prototype.getGutter=function(){return this.gutter_},n}(V),H=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),K='&#169; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> contributors.',J=(function(t){function n(n){var e,r=n||{},l=void 0===r.imageSmoothing||r.imageSmoothing;void 0!==r.interpolate&&(l=r.interpolate),e=void 0!==r.attributions?r.attributions:[K];var i=void 0!==r.crossOrigin?r.crossOrigin:"anonymous",o=void 0!==r.url?r.url:"https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png";return t.call(this,{attributions:e,attributionsCollapsible:!1,cacheSize:r.cacheSize,crossOrigin:i,interpolate:l,maxZoom:void 0!==r.maxZoom?r.maxZoom:19,opaque:void 0===r.opaque||r.opaque,reprojectionErrorThreshold:r.reprojectionErrorThreshold,tileLoadFunction:r.tileLoadFunction,transition:r.transition,url:o,wrapX:r.wrapX,zDirection:r.zDirection})||this}H(n,t)}(Z),function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}()),Q=['Map tiles by <a href="https://stamen.com/" target="_blank">Stamen Design</a>, under <a href="https://creativecommons.org/licenses/by/3.0/" target="_blank">CC BY 3.0</a>.',K],$={terrain:{extension:"jpg",opaque:!0},"terrain-background":{extension:"jpg",opaque:!0},"terrain-labels":{extension:"png",opaque:!1},"terrain-lines":{extension:"png",opaque:!1},"toner-background":{extension:"png",opaque:!0},toner:{extension:"png",opaque:!0},"toner-hybrid":{extension:"png",opaque:!1},"toner-labels":{extension:"png",opaque:!1},"toner-lines":{extension:"png",opaque:!1},"toner-lite":{extension:"png",opaque:!0},watercolor:{extension:"jpg",opaque:!0}},tt={terrain:{minZoom:0,maxZoom:18},toner:{minZoom:0,maxZoom:20},watercolor:{minZoom:0,maxZoom:18}},nt=function(t){function n(n){var e=void 0===n.imageSmoothing||n.imageSmoothing;void 0!==n.interpolate&&(e=n.interpolate);var r=n.layer.indexOf("-"),l=-1==r?n.layer:n.layer.slice(0,r),i=tt[l],o=$[n.layer],u=void 0!==n.url?n.url:"https://stamen-tiles-{a-d}.a.ssl.fastly.net/"+n.layer+"/{z}/{x}/{y}."+o.extension;return t.call(this,{attributions:Q,cacheSize:n.cacheSize,crossOrigin:"anonymous",interpolate:e,maxZoom:null!=n.maxZoom?n.maxZoom:i.maxZoom,minZoom:null!=n.minZoom?n.minZoom:i.minZoom,opaque:o.opaque,reprojectionErrorThreshold:n.reprojectionErrorThreshold,tileLoadFunction:n.tileLoadFunction,transition:n.transition,url:u,wrapX:n.wrapX,zDirection:n.zDirection})||this}return J(n,t),n}(Z);n.default=nt},function(t,n,e){"use strict";e.r(n);var r,l=e(289),i="preload",o="useInterimTilesOnError",u=e(242),s=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),a=function(t){function n(n){var e=this,r=n||{},l=Object(u.a)({},r);return delete l.preload,delete l.useInterimTilesOnError,(e=t.call(this,l)||this).on,e.once,e.un,e.setPreload(void 0!==r.preload?r.preload:0),e.setUseInterimTilesOnError(void 0===r.useInterimTilesOnError||r.useInterimTilesOnError),e}return s(n,t),n.prototype.getPreload=function(){return this.get(i)},n.prototype.setPreload=function(t){this.set(i,t)},n.prototype.getUseInterimTilesOnError=function(){return this.get(o)},n.prototype.setUseInterimTilesOnError=function(t){this.set(o,t)},n.prototype.getData=function(n){return t.prototype.getData.call(this,n)},n}(l.a),h=e(363),c=e(348),f=e(361),p=e(347),d=e(275),g=e(351),y=e(258),_=e(237),v=e(241),m=e(238),b=e(243),x=e(279),w=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),E=function(t){function n(n){var e=t.call(this,n)||this;return e.extentChanged=!0,e.renderedExtent_=null,e.renderedPixelRatio,e.renderedProjection=null,e.renderedRevision,e.renderedTiles=[],e.newTiles_=!1,e.tmpExtent=Object(_.j)(),e.tmpTileRange_=new p.b(0,0,0,0),e}return w(n,t),n.prototype.isDrawableTile=function(t){var n=this.getLayer(),e=t.getState(),r=n.getUseInterimTilesOnError();return e==d.a.LOADED||e==d.a.EMPTY||e==d.a.ERROR&&!r},n.prototype.getTile=function(t,n,e,r){var l=r.pixelRatio,i=r.viewState.projection,o=this.getLayer(),u=o.getSource().getTile(t,n,e,l,i);return u.getState()==d.a.ERROR&&(o.getUseInterimTilesOnError()?o.getPreload()>0&&(this.newTiles_=!0):u.setState(d.a.LOADED)),this.isDrawableTile(u)||(u=u.getInterimTile()),u},n.prototype.getData=function(t){var n=this.frameState;if(!n)return null;var e=this.getLayer(),r=Object(y.a)(n.pixelToCoordinateTransform,t.slice()),l=e.getExtent();if(l&&!Object(_.f)(l,r))return null;for(var i=n.pixelRatio,o=n.viewState.projection,u=n.viewState,s=e.getRenderSource(),a=s.getTileGridForProjection(u.projection),h=s.getTilePixelRatio(n.pixelRatio),p=a.getZForResolution(u.resolution);p>=a.getMinZoom();--p){var g=a.getTileCoordForCoordAndZ(r,p),v=s.getTile(p,g[1],g[2],i,o);if(!(v instanceof c.a||v instanceof f.a))return null;if(v.getState()===d.a.LOADED){var m=a.getOrigin(p),b=Object(x.c)(a.getTileSize(p)),w=a.getResolution(p),E=Math.floor(h*((r[0]-m[0])/w-g[1]*b[0])),C=Math.floor(h*((m[1]-r[1])/w-g[2]*b[1])),O=Math.round(h*s.getGutterForProjection(u.projection));return this.getImageData(v.getImage(),E+O,C+O)}}return null},n.prototype.loadedTileCallback=function(n,e,r){return!!this.isDrawableTile(r)&&t.prototype.loadedTileCallback.call(this,n,e,r)},n.prototype.prepareFrame=function(t){return!!this.getLayer().getSource()},n.prototype.renderFrame=function(t,n){var e=t.layerStatesArray[t.layerIndex],r=t.viewState,l=r.projection,i=r.resolution,o=r.center,s=r.rotation,a=t.pixelRatio,h=this.getLayer(),c=h.getSource(),f=c.getRevision(),p=c.getTileGridForProjection(l),x=p.getZForResolution(i,c.zDirection),w=p.getResolution(x),E=t.extent,C=t.viewState.resolution,O=c.getTilePixelRatio(a),M=Math.round(Object(_.E)(E)/C*a),S=Math.round(Object(_.z)(E)/C*a),I=e.extent&&Object(v.fromUserExtent)(e.extent,l);I&&(E=Object(_.A)(E,Object(v.fromUserExtent)(e.extent,l)));var P=w*M/2/O,R=w*S/2/O,T=[o[0]-P,o[1]-R,o[0]+P,o[1]+R],N=p.getTileRangeForExtentAndZ(E,x),L={};L[x]={};var A=this.createLoadedTileFinder(c,l,L),j=this.tmpExtent,D=this.tmpTileRange_;this.newTiles_=!1;for(var k=s?Object(_.B)(r.center,C,s,t.size):void 0,F=N.minX;F<=N.maxX;++F)for(var G=N.minY;G<=N.maxY;++G)if(!s||p.tileCoordIntersectsViewport([x,F,G],k)){var z=this.getTile(x,F,G,t);if(this.isDrawableTile(z)){var B=Object(m.c)(this);if(z.getState()==d.a.LOADED)L[x][z.tileCoord.toString()]=z,(ht=z.inTransition(B))&&1!==e.opacity&&(z.endTransition(B),ht=!1),this.newTiles_||!ht&&-1!==this.renderedTiles.indexOf(z)||(this.newTiles_=!0);if(1===z.getAlpha(B,t.time))continue}var U=p.getTileCoordChildTileRange(z.tileCoord,D,j),q=!1;U&&(q=A(x+1,U)),q||p.forEachTileCoordParentTileRange(z.tileCoord,A,D,j)}var Y=w/i*a/O;Object(y.b)(this.pixelTransform,t.size[0]/2,t.size[1]/2,1/a,1/a,s,-M/2,-S/2);var X=Object(y.g)(this.pixelTransform);this.useContainer(n,X,this.getBackground(t));var V=this.context,W=V.canvas;Object(y.d)(this.inversePixelTransform,this.pixelTransform),Object(y.b)(this.tempTransform,M/2,S/2,Y,Y,0,-M/2,-S/2),W.width!=M||W.height!=S?(W.width=M,W.height=S):this.containerReused||V.clearRect(0,0,M,S),I&&this.clipUnrotated(V,t,I),c.getInterpolate()||Object(u.a)(V,g.a),this.preRender(V,t),this.renderedTiles.length=0;var Z,H,K,J=Object.keys(L).map(Number);J.sort(b.f),1!==e.opacity||this.containerReused&&!c.getOpaque(t.viewState.projection)?(Z=[],H=[]):J=J.reverse();for(var Q=J.length-1;Q>=0;--Q){var $=J[Q],tt=c.getTilePixelSize($,a,l),nt=p.getResolution($)/w,et=tt[0]*nt*Y,rt=tt[1]*nt*Y,lt=p.getTileCoordForCoordAndZ(Object(_.C)(T),$),it=p.getTileCoordExtent(lt),ot=Object(y.a)(this.tempTransform,[O*(it[0]-T[0])/w,O*(T[3]-it[3])/w]),ut=O*c.getGutterForProjection(l),st=L[$];for(var at in st){var ht,ct=(z=st[at]).tileCoord,ft=lt[1]-ct[1],pt=Math.round(ot[0]-(ft-1)*et),dt=lt[2]-ct[2],gt=Math.round(ot[1]-(dt-1)*rt),yt=pt-(F=Math.round(ot[0]-ft*et)),_t=gt-(G=Math.round(ot[1]-dt*rt)),vt=x===$,mt=!1;if(!(ht=vt&&1!==z.getAlpha(Object(m.c)(this),t.time)))if(Z){K=[F,G,F+yt,G,F+yt,G+_t,F,G+_t];for(var bt=0,xt=Z.length;bt<xt;++bt)if(x!==$&&$<H[bt]){var wt=Z[bt];Object(_.F)([F,G,F+yt,G+_t],[wt[0],wt[3],wt[4],wt[7]])&&(mt||(V.save(),mt=!0),V.beginPath(),V.moveTo(K[0],K[1]),V.lineTo(K[2],K[3]),V.lineTo(K[4],K[5]),V.lineTo(K[6],K[7]),V.moveTo(wt[6],wt[7]),V.lineTo(wt[4],wt[5]),V.lineTo(wt[2],wt[3]),V.lineTo(wt[0],wt[1]),V.clip())}Z.push(K),H.push($)}else V.clearRect(F,G,yt,_t);this.drawTileImage(z,t,F,G,yt,_t,ut,vt),Z&&!ht?(mt&&V.restore(),this.renderedTiles.unshift(z)):this.renderedTiles.push(z),this.updateUsedTiles(t.usedTiles,c,z)}}return this.renderedRevision=f,this.renderedResolution=w,this.extentChanged=!this.renderedExtent_||!Object(_.o)(this.renderedExtent_,T),this.renderedExtent_=T,this.renderedPixelRatio=a,this.renderedProjection=l,this.manageTilePyramid(t,c,p,a,l,E,x,h.getPreload()),this.scheduleExpireCache(t,c),this.postRender(V,t),e.extent&&V.restore(),Object(u.a)(V,g.b),X!==W.style.transform&&(W.style.transform=X),this.container},n.prototype.drawTileImage=function(t,n,e,r,l,i,o,u){var s=this.getTileImage(t);if(s){var a=Object(m.c)(this),h=n.layerStatesArray[n.layerIndex],c=h.opacity*(u?t.getAlpha(a,n.time):1),f=c!==this.context.globalAlpha;f&&(this.context.save(),this.context.globalAlpha=c),this.context.drawImage(s,o,o,s.width-2*o,s.height-2*o,e,r,l,i),f&&this.context.restore(),c!==h.opacity?n.animate=!0:u&&t.endTransition(a)}},n.prototype.getImage=function(){var t=this.context;return t?t.canvas:null},n.prototype.getTileImage=function(t){return t.getImage()},n.prototype.scheduleExpireCache=function(t,n){if(n.canExpireCache()){var e=function(t,n,e){var r=Object(m.c)(t);r in e.usedTiles&&t.expireCache(e.viewState.projection,e.usedTiles[r])}.bind(null,n);t.postRenderFunctions.push(e)}},n.prototype.updateUsedTiles=function(t,n,e){var r=Object(m.c)(n);r in t||(t[r]={}),t[r][e.getKey()]=!0},n.prototype.manageTilePyramid=function(t,n,e,r,l,i,o,u,s){var a=Object(m.c)(n);a in t.wantedTiles||(t.wantedTiles[a]={});var h,c,f,p,g,y,v=t.wantedTiles[a],b=t.tileQueue,x=e.getMinZoom(),w=t.viewState.rotation,E=w?Object(_.B)(t.viewState.center,t.viewState.resolution,w,t.size):void 0,C=0;for(y=x;y<=o;++y)for(c=e.getTileRangeForExtentAndZ(i,y,c),f=e.getResolution(y),p=c.minX;p<=c.maxX;++p)for(g=c.minY;g<=c.maxY;++g)w&&!e.tileCoordIntersectsViewport([y,p,g],E)||(o-y<=u?(++C,(h=n.getTile(y,p,g,r,l)).getState()==d.a.IDLE&&(v[h.getKey()]=!0,b.isKeyQueued(h.getKey())||b.enqueue([h,a,e.getTileCoordCenter(h.tileCoord),f])),void 0!==s&&s(h)):n.useTile(y,p,g,l));n.updateCacheSize(C,l)},n}(h.b),C=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),O=function(t){function n(n){return t.call(this,n)||this}return C(n,t),n.prototype.createRenderer=function(){return new E(this)},n}(a);n.default=O},,function(t,n,e){"use strict";function r(t,n,e,r){for(var l=0,i=e.length;l<i;++l)t[n++]=e[l];return n}function l(t,n,e,r){for(var l=0,i=e.length;l<i;++l)for(var o=e[l],u=0;u<r;++u)t[n++]=o[u];return n}function i(t,n,e,r,i){for(var o=i||[],u=0,s=0,a=e.length;s<a;++s){var h=l(t,n,e[s],r);o[u++]=h,n=h}return o.length=u,o}function o(t,n,e,r,l){for(var o=l||[],u=0,s=0,a=e.length;s<a;++s){var h=i(t,n,e[s],r,o[u]);o[u++]=h,n=h[h.length-1]}return o.length=u,o}e.d(n,"a",(function(){return r})),e.d(n,"b",(function(){return l})),e.d(n,"c",(function(){return i})),e.d(n,"d",(function(){return o}))},function(t,n,e){"use strict";e.d(n,"c",(function(){return a})),e.d(n,"b",(function(){return h})),e.d(n,"d",(function(){return c})),e.d(n,"e",(function(){return f})),e.d(n,"f",(function(){return p})),e.d(n,"g",(function(){return d})),e.d(n,"i",(function(){return g})),e.d(n,"k",(function(){return y})),e.d(n,"l",(function(){return _})),e.d(n,"m",(function(){return v})),e.d(n,"j",(function(){return m})),e.d(n,"h",(function(){return b})),e.d(n,"a",(function(){return x})),e.d(n,"q",(function(){return M})),e.d(n,"p",(function(){return R})),e.d(n,"o",(function(){return T})),e.d(n,"n",(function(){return N}));var r=e(248),l=e(284),i=e(259),o=e(242),u=e(246),s=e(286),a="10px sans-serif",h="#000",c="round",f=[],p=0,d="round",g=10,y="#000",_="center",v="middle",m=[0,0,0,0],b=1,x=new r.a;(new l.a).setSize=function(){console.warn("labelCache is deprecated.")};var w,E,C=null,O={},M=function(){var t,n,e=["monospace","serif"],r=e.length,l="wmytzilWMYTZIL@#/&?$%10";function i(t,i,o){for(var u=!0,s=0;s<r;++s){var a=e[s];if(n=P(t+" "+i+" 32px "+a,l),o!=a){var h=P(t+" "+i+" 32px "+o+","+a,l);u=u&&h!=n}}return!!u}function u(){for(var n=!0,e=x.getKeys(),r=0,l=e.length;r<l;++r){var u=e[r];x.get(u)<100&&(i.apply(this,u.split("\n"))?(Object(o.b)(O),C=null,w=void 0,x.set(u,100)):(x.set(u,x.get(u)+1,!0),n=!1))}n&&(clearInterval(t),t=void 0)}return function(n){var e=Object(s.f)(n);if(e)for(var r=e.families,l=0,o=r.length;l<o;++l){var a=r[l],h=e.style+"\n"+e.weight+"\n"+a;void 0===x.get(h)&&(x.set(h,100,!0),i(e.style,e.weight,a)||(x.set(h,0,!0),void 0===t&&(t=setInterval(u,32))))}}}(),S=function(t){var n=O[t];if(null==n){if(i.g){var e=Object(s.f)(t),r=I(t,"Žg");n=(isNaN(Number(e.lineHeight))?1.2:Number(e.lineHeight))*(r.actualBoundingBoxAscent+r.actualBoundingBoxDescent)}else E||((E=document.createElement("div")).innerHTML="M",E.style.minHeight="0",E.style.maxHeight="none",E.style.height="auto",E.style.padding="0",E.style.border="none",E.style.position="absolute",E.style.display="block",E.style.left="-99999px"),E.style.font=t,document.body.appendChild(E),n=E.offsetHeight,document.body.removeChild(E);O[t]=n}return n};function I(t,n){return C||(C=Object(u.a)(1,1)),t!=w&&(C.font=t,w=C.font),C.measureText(n)}function P(t,n){return I(t,n).width}function R(t,n,e){if(n in e)return e[n];var r=n.split("\n").reduce((function(n,e){return Math.max(n,P(t,e))}),0);return e[n]=r,r}function T(t,n){for(var e=[],r=[],l=[],i=0,o=0,u=0,s=0,a=0,h=n.length;a<=h;a+=2){var c=n[a];if("\n"!==c&&a!==h){var f=n[a+1]||t.font,p=P(f,c);e.push(p),o+=p;var d=S(f);r.push(d),s=Math.max(s,d)}else i=Math.max(i,o),l.push(o),o=0,u+=s}return{width:i,height:u,widths:e,heights:r,lineWidths:l}}function N(t,n,e,r,l,i,o,u,s,a,h){t.save(),1!==e&&(t.globalAlpha*=e),n&&t.setTransform.apply(t,n),r.contextInstructions?(t.translate(s,a),t.scale(h[0],h[1]),function(t,n){for(var e=t.contextInstructions,r=0,l=e.length;r<l;r+=2)Array.isArray(e[r+1])?n[e[r]].apply(n,e[r+1]):n[e[r]]=e[r+1]}(r,t)):h[0]<0||h[1]<0?(t.translate(s,a),t.scale(h[0],h[1]),t.drawImage(r,l,i,o,u,0,0,o,u)):t.drawImage(r,l,i,o,u,s,a,o*h[0],u*h[1]),t.restore()}},function(t,n,e){"use strict";function r(t){return Math.pow(t,3)}function l(t){return 1-r(1-t)}function i(t){return 3*t*t-2*t*t*t}function o(t){return t}e.d(n,"a",(function(){return r})),e.d(n,"b",(function(){return l})),e.d(n,"c",(function(){return i})),e.d(n,"d",(function(){return o}))},function(t,n,e){"use strict";e.d(n,"a",(function(){return s}));var r,l=e(281),i=e(295),o=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),u=function(t){function n(n){var e=this,r=n||{};return e=t.call(this,r)||this,r.handleDownEvent&&(e.handleDownEvent=r.handleDownEvent),r.handleDragEvent&&(e.handleDragEvent=r.handleDragEvent),r.handleMoveEvent&&(e.handleMoveEvent=r.handleMoveEvent),r.handleUpEvent&&(e.handleUpEvent=r.handleUpEvent),r.stopDown&&(e.stopDown=r.stopDown),e.handlingDownUpSequence=!1,e.targetPointers=[],e}return o(n,t),n.prototype.getPointerCount=function(){return this.targetPointers.length},n.prototype.handleDownEvent=function(t){return!1},n.prototype.handleDragEvent=function(t){},n.prototype.handleEvent=function(t){if(!t.originalEvent)return!0;var n=!1;if(this.updateTrackedPointers_(t),this.handlingDownUpSequence){if(t.type==i.a.POINTERDRAG)this.handleDragEvent(t),t.originalEvent.preventDefault();else if(t.type==i.a.POINTERUP){var e=this.handleUpEvent(t);this.handlingDownUpSequence=e&&this.targetPointers.length>0}}else if(t.type==i.a.POINTERDOWN){var r=this.handleDownEvent(t);this.handlingDownUpSequence=r,n=this.stopDown(r)}else t.type==i.a.POINTERMOVE&&this.handleMoveEvent(t);return!n},n.prototype.handleMoveEvent=function(t){},n.prototype.handleUpEvent=function(t){return!1},n.prototype.stopDown=function(t){return t},n.prototype.updateTrackedPointers_=function(t){t.activePointers&&(this.targetPointers=t.activePointers)},n}(l.a);function s(t){for(var n=t.length,e=0,r=0,l=0;l<n;l++)e+=t[l].clientX,r+=t[l].clientY;return[e/n,r/n]}n.b=u},function(t,n,e){"use strict";var r=e(250),l=e(344),i=e(279),o=function(){function t(t){var n=t||{};this.font_=n.font,this.rotation_=n.rotation,this.rotateWithView_=n.rotateWithView,this.scale_=n.scale,this.scaleArray_=Object(i.c)(void 0!==n.scale?n.scale:1),this.text_=n.text,this.textAlign_=n.textAlign,this.justify_=n.justify,this.textBaseline_=n.textBaseline,this.fill_=void 0!==n.fill?n.fill:new r.a({color:"#333"}),this.maxAngle_=void 0!==n.maxAngle?n.maxAngle:Math.PI/4,this.placement_=void 0!==n.placement?n.placement:l.a.POINT,this.overflow_=!!n.overflow,this.stroke_=void 0!==n.stroke?n.stroke:null,this.offsetX_=void 0!==n.offsetX?n.offsetX:0,this.offsetY_=void 0!==n.offsetY?n.offsetY:0,this.backgroundFill_=n.backgroundFill?n.backgroundFill:null,this.backgroundStroke_=n.backgroundStroke?n.backgroundStroke:null,this.padding_=void 0===n.padding?null:n.padding}return t.prototype.clone=function(){var n=this.getScale();return new t({font:this.getFont(),placement:this.getPlacement(),maxAngle:this.getMaxAngle(),overflow:this.getOverflow(),rotation:this.getRotation(),rotateWithView:this.getRotateWithView(),scale:Array.isArray(n)?n.slice():n,text:this.getText(),textAlign:this.getTextAlign(),justify:this.getJustify(),textBaseline:this.getTextBaseline(),fill:this.getFill()?this.getFill().clone():void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,offsetX:this.getOffsetX(),offsetY:this.getOffsetY(),backgroundFill:this.getBackgroundFill()?this.getBackgroundFill().clone():void 0,backgroundStroke:this.getBackgroundStroke()?this.getBackgroundStroke().clone():void 0,padding:this.getPadding()||void 0})},t.prototype.getOverflow=function(){return this.overflow_},t.prototype.getFont=function(){return this.font_},t.prototype.getMaxAngle=function(){return this.maxAngle_},t.prototype.getPlacement=function(){return this.placement_},t.prototype.getOffsetX=function(){return this.offsetX_},t.prototype.getOffsetY=function(){return this.offsetY_},t.prototype.getFill=function(){return this.fill_},t.prototype.getRotateWithView=function(){return this.rotateWithView_},t.prototype.getRotation=function(){return this.rotation_},t.prototype.getScale=function(){return this.scale_},t.prototype.getScaleArray=function(){return this.scaleArray_},t.prototype.getStroke=function(){return this.stroke_},t.prototype.getText=function(){return this.text_},t.prototype.getTextAlign=function(){return this.textAlign_},t.prototype.getJustify=function(){return this.justify_},t.prototype.getTextBaseline=function(){return this.textBaseline_},t.prototype.getBackgroundFill=function(){return this.backgroundFill_},t.prototype.getBackgroundStroke=function(){return this.backgroundStroke_},t.prototype.getPadding=function(){return this.padding_},t.prototype.setOverflow=function(t){this.overflow_=t},t.prototype.setFont=function(t){this.font_=t},t.prototype.setMaxAngle=function(t){this.maxAngle_=t},t.prototype.setOffsetX=function(t){this.offsetX_=t},t.prototype.setOffsetY=function(t){this.offsetY_=t},t.prototype.setPlacement=function(t){this.placement_=t},t.prototype.setRotateWithView=function(t){this.rotateWithView_=t},t.prototype.setFill=function(t){this.fill_=t},t.prototype.setRotation=function(t){this.rotation_=t},t.prototype.setScale=function(t){this.scale_=t,this.scaleArray_=Object(i.c)(void 0!==t?t:1)},t.prototype.setStroke=function(t){this.stroke_=t},t.prototype.setText=function(t){this.text_=t},t.prototype.setTextAlign=function(t){this.textAlign_=t},t.prototype.setJustify=function(t){this.justify_=t},t.prototype.setTextBaseline=function(t){this.textBaseline_=t},t.prototype.setBackgroundFill=function(t){this.backgroundFill_=t},t.prototype.setBackgroundStroke=function(t){this.backgroundStroke_=t},t.prototype.setPadding=function(t){this.padding_=t},t}();n.a=o},function(t,n,e){"use strict";n.a={IDLE:0,LOADING:1,LOADED:2,ERROR:3,EMPTY:4}},function(t,n,e){"use strict";var r,l=e(240),i=e(342),o="bottom-left",u="bottom-right",s="top-left",a="top-right",h=e(285),c=e(251),f=e(287),p=e(244),d=e(264),g=e(238),y=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),_=function(t){function n(n){var e=this,r=n||{},l=void 0!==r.opacity?r.opacity:1,o=void 0!==r.rotation?r.rotation:0,u=void 0!==r.scale?r.scale:1,a=void 0!==r.rotateWithView&&r.rotateWithView;(e=t.call(this,{opacity:l,rotation:o,scale:u,displacement:void 0!==r.displacement?r.displacement:[0,0],rotateWithView:a,declutterMode:r.declutterMode})||this).anchor_=void 0!==r.anchor?r.anchor:[.5,.5],e.normalizedAnchor_=null,e.anchorOrigin_=void 0!==r.anchorOrigin?r.anchorOrigin:s,e.anchorXUnits_=void 0!==r.anchorXUnits?r.anchorXUnits:i.a.FRACTION,e.anchorYUnits_=void 0!==r.anchorYUnits?r.anchorYUnits:i.a.FRACTION,e.crossOrigin_=void 0!==r.crossOrigin?r.crossOrigin:null;var c=void 0!==r.img?r.img:null;e.imgSize_=r.imgSize;var y=r.src;Object(p.a)(!(void 0!==y&&c),4),Object(p.a)(!c||c&&e.imgSize_,5),void 0!==y&&0!==y.length||!c||(y=c.src||Object(g.c)(c)),Object(p.a)(void 0!==y&&y.length>0,6);var _=void 0!==r.src?h.a.IDLE:h.a.LOADED;return e.color_=void 0!==r.color?Object(f.a)(r.color):null,e.iconImage_=Object(d.b)(c,y,void 0!==e.imgSize_?e.imgSize_:null,e.crossOrigin_,_,e.color_),e.offset_=void 0!==r.offset?r.offset:[0,0],e.offsetOrigin_=void 0!==r.offsetOrigin?r.offsetOrigin:s,e.origin_=null,e.size_=void 0!==r.size?r.size:null,e}return y(n,t),n.prototype.clone=function(){var t=this.getScale();return new n({anchor:this.anchor_.slice(),anchorOrigin:this.anchorOrigin_,anchorXUnits:this.anchorXUnits_,anchorYUnits:this.anchorYUnits_,color:this.color_&&this.color_.slice?this.color_.slice():this.color_||void 0,crossOrigin:this.crossOrigin_,imgSize:this.imgSize_,offset:this.offset_.slice(),offsetOrigin:this.offsetOrigin_,opacity:this.getOpacity(),rotateWithView:this.getRotateWithView(),rotation:this.getRotation(),scale:Array.isArray(t)?t.slice():t,size:null!==this.size_?this.size_.slice():void 0,src:this.getSrc(),displacement:this.getDisplacement().slice(),declutterMode:this.getDeclutterMode()})},n.prototype.getAnchor=function(){var t=this.normalizedAnchor_;if(!t){t=this.anchor_;var n=this.getSize();if(this.anchorXUnits_==i.a.FRACTION||this.anchorYUnits_==i.a.FRACTION){if(!n)return null;t=this.anchor_.slice(),this.anchorXUnits_==i.a.FRACTION&&(t[0]*=n[0]),this.anchorYUnits_==i.a.FRACTION&&(t[1]*=n[1])}if(this.anchorOrigin_!=s){if(!n)return null;t===this.anchor_&&(t=this.anchor_.slice()),this.anchorOrigin_!=a&&this.anchorOrigin_!=u||(t[0]=-t[0]+n[0]),this.anchorOrigin_!=o&&this.anchorOrigin_!=u||(t[1]=-t[1]+n[1])}this.normalizedAnchor_=t}var e=this.getDisplacement();return[t[0]-e[0],t[1]+e[1]]},n.prototype.setAnchor=function(t){this.anchor_=t,this.normalizedAnchor_=null},n.prototype.getColor=function(){return this.color_},n.prototype.getImage=function(t){return this.iconImage_.getImage(t)},n.prototype.getPixelRatio=function(t){return this.iconImage_.getPixelRatio(t)},n.prototype.getImageSize=function(){return this.iconImage_.getSize()},n.prototype.getImageState=function(){return this.iconImage_.getImageState()},n.prototype.getHitDetectionImage=function(){return this.iconImage_.getHitDetectionImage()},n.prototype.getOrigin=function(){if(this.origin_)return this.origin_;var t=this.offset_;if(this.offsetOrigin_!=s){var n=this.getSize(),e=this.iconImage_.getSize();if(!n||!e)return null;t=t.slice(),this.offsetOrigin_!=a&&this.offsetOrigin_!=u||(t[0]=e[0]-n[0]-t[0]),this.offsetOrigin_!=o&&this.offsetOrigin_!=u||(t[1]=e[1]-n[1]-t[1])}return this.origin_=t,this.origin_},n.prototype.getSrc=function(){return this.iconImage_.getSrc()},n.prototype.getSize=function(){return this.size_?this.size_:this.iconImage_.getSize()},n.prototype.listenImageChange=function(t){this.iconImage_.addEventListener(l.a.CHANGE,t)},n.prototype.load=function(){this.iconImage_.load()},n.prototype.unlistenImageChange=function(t){this.iconImage_.removeEventListener(l.a.CHANGE,t)},n}(c.a);n.a=_},function(t,n,e){"use strict";function r(t,n,e,r,l){for(var i=void 0!==l?l:[],o=0,u=n;u<e;u+=r)i[o++]=t.slice(u,u+r);return i.length=o,i}function l(t,n,e,l,i){for(var o=void 0!==i?i:[],u=0,s=0,a=e.length;s<a;++s){var h=e[s];o[u++]=r(t,n,h,l,o[u]),n=h}return o.length=u,o}function i(t,n,e,r,i){for(var o=void 0!==i?i:[],u=0,s=0,a=e.length;s<a;++s){var h=e[s];o[u++]=l(t,n,h,r,o[u]),n=h[h.length-1]}return o.length=u,o}e.d(n,"a",(function(){return r})),e.d(n,"b",(function(){return l})),e.d(n,"c",(function(){return i}))},function(t,n,e){"use strict";function r(t,n,e,r,l,i){for(var o=i||[],u=0,s=n;s<e;s+=r){var a=t[s],h=t[s+1];o[u++]=l[0]*a+l[2]*h+l[4],o[u++]=l[1]*a+l[3]*h+l[5]}return i&&o.length!=u&&(o.length=u),o}function l(t,n,e,r,l,i,o){for(var u=o||[],s=Math.cos(l),a=Math.sin(l),h=i[0],c=i[1],f=0,p=n;p<e;p+=r){var d=t[p]-h,g=t[p+1]-c;u[f++]=h+d*s-g*a,u[f++]=c+d*a+g*s;for(var y=p+2;y<p+r;++y)u[f++]=t[y]}return o&&u.length!=f&&(u.length=f),u}function i(t,n,e,r,l,i,o,u){for(var s=u||[],a=o[0],h=o[1],c=0,f=n;f<e;f+=r){var p=t[f]-a,d=t[f+1]-h;s[c++]=a+l*p,s[c++]=h+i*d;for(var g=f+2;g<f+r;++g)s[c++]=t[g]}return u&&s.length!=c&&(s.length=c),s}function o(t,n,e,r,l,i,o){for(var u=o||[],s=0,a=n;a<e;a+=r){u[s++]=t[a]+l,u[s++]=t[a+1]+i;for(var h=a+2;h<a+r;++h)u[s++]=t[h]}return o&&u.length!=s&&(u.length=s),u}e.d(n,"c",(function(){return r})),e.d(n,"a",(function(){return l})),e.d(n,"b",(function(){return i})),e.d(n,"d",(function(){return o}))},function(t,n,e){"use strict";function r(t){return t[0]>0&&t[1]>0}function l(t,n,e){return void 0===e&&(e=[0,0]),e[0]=t[0]*n+.5|0,e[1]=t[1]*n+.5|0,e}function i(t,n){return Array.isArray(t)?t:(void 0===n?n=[t,t]:(n[0]=t,n[1]=t),n)}e.d(n,"a",(function(){return r})),e.d(n,"b",(function(){return l})),e.d(n,"c",(function(){return i}))},function(t,n,e){"use strict";e.d(n,"a",(function(){return o})),e.d(n,"b",(function(){return u})),e.d(n,"d",(function(){return s})),e.d(n,"c",(function(){return a})),e.d(n,"e",(function(){return h})),e.d(n,"g",(function(){return c})),e.d(n,"i",(function(){return f})),e.d(n,"j",(function(){return p})),e.d(n,"f",(function(){return d})),e.d(n,"h",(function(){return g}));e(295);var r=e(247),l=e(259),i=e(244);function o(t){var n=arguments;return function(t){for(var e=!0,r=0,l=n.length;r<l&&(e=e&&n[r](t));++r);return e}}var u=function(t){var n=t.originalEvent;return n.altKey&&!(n.metaKey||n.ctrlKey)&&n.shiftKey},s=function(t){return!t.map.getTargetElement().hasAttribute("tabindex")||function(t){var n=t.map.getTargetElement(),e=t.map.getOwnerDocument().activeElement;return n.contains(e)}(t)},a=r.b,h=function(t){var n=t.originalEvent;return 0==n.button&&!(l.f&&l.d&&n.ctrlKey)},c=(r.a,function(t){var n=t.originalEvent;return!n.altKey&&!(n.metaKey||n.ctrlKey)&&!n.shiftKey}),f=function(t){var n=t.originalEvent;return!n.altKey&&!(n.metaKey||n.ctrlKey)&&n.shiftKey},p=function(t){var n=t.originalEvent,e=n.target.tagName;return"INPUT"!==e&&"SELECT"!==e&&"TEXTAREA"!==e&&!n.target.isContentEditable},d=function(t){var n=t.originalEvent;return Object(i.a)(void 0!==n,56),"mouse"==n.pointerType},g=function(t){var n=t.originalEvent;return Object(i.a)(void 0!==n,56),n.isPrimary&&0===n.button}},function(t,n,e){"use strict";e.d(n,"b",(function(){return a})),e.d(n,"c",(function(){return h}));var r,l=e(248),i="active",o=e(272),u=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),s=function(t){function n(n){var e=t.call(this)||this;return e.on,e.once,e.un,n&&n.handleEvent&&(e.handleEvent=n.handleEvent),e.map_=null,e.setActive(!0),e}return u(n,t),n.prototype.getActive=function(){return this.get(i)},n.prototype.getMap=function(){return this.map_},n.prototype.handleEvent=function(t){return!0},n.prototype.setActive=function(t){this.set(i,t)},n.prototype.setMap=function(t){this.map_=t},n}(l.a);function a(t,n,e){var r=t.getCenterInternal();if(r){var l=[r[0]+n[0],r[1]+n[1]];t.animateInternal({duration:void 0!==e?e:250,easing:o.d,center:t.getConstrainedCenter(l)})}}function h(t,n,e,r){var l=t.getZoom();if(void 0!==l){var i=t.getConstrainedZoom(l+n),u=t.getResolutionForZoom(i);t.getAnimating()&&t.cancelAnimations(),t.animate({resolution:u,anchor:e,duration:void 0!==r?r:250,easing:o.b})}}n.a=s},function(t,n,e){"use strict";n.a={XY:"XY",XYZ:"XYZ",XYM:"XYM",XYZM:"XYZM"}},function(t,n,e){"use strict";e.d(n,"a",(function(){return l})),e.d(n,"b",(function(){return i})),e.d(n,"e",(function(){return o})),e.d(n,"c",(function(){return s})),e.d(n,"d",(function(){return a}));var r=e(239);function l(t,n,e,l,i,o,u){var s=(e-n)/l;if(s<3){for(;n<e;n+=l)o[u++]=t[n],o[u++]=t[n+1];return u}var a=new Array(s);a[0]=1,a[s-1]=1;for(var h=[n,e-l],c=0;h.length>0;){for(var f=h.pop(),p=h.pop(),d=0,g=t[p],y=t[p+1],_=t[f],v=t[f+1],m=p+l;m<f;m+=l){var b=t[m],x=t[m+1],w=Object(r.j)(b,x,g,y,_,v);w>d&&(c=m,d=w)}d>i&&(a[(c-n)/l]=1,p+l<c&&h.push(p,c),c+l<f&&h.push(c,f))}for(m=0;m<s;++m)a[m]&&(o[u++]=t[n+m*l],o[u++]=t[n+m*l+1]);return u}function i(t,n,e,r,i,o,u,s){for(var a=0,h=e.length;a<h;++a){var c=e[a];u=l(t,n,c,r,i,o,u),s.push(u),n=c}return u}function o(t,n){return n*Math.round(t/n)}function u(t,n,e,r,l,i,u){if(n==e)return u;var s,a,h=o(t[n],l),c=o(t[n+1],l);n+=r,i[u++]=h,i[u++]=c;do{if(s=o(t[n],l),a=o(t[n+1],l),(n+=r)==e)return i[u++]=s,i[u++]=a,u}while(s==h&&a==c);for(;n<e;){var f=o(t[n],l),p=o(t[n+1],l);if(n+=r,f!=s||p!=a){var d=s-h,g=a-c,y=f-h,_=p-c;d*_==g*y&&(d<0&&y<d||d==y||d>0&&y>d)&&(g<0&&_<g||g==_||g>0&&_>g)?(s=f,a=p):(i[u++]=s,i[u++]=a,h=s,c=a,s=f,a=p)}}return i[u++]=s,i[u++]=a,u}function s(t,n,e,r,l,i,o,s){for(var a=0,h=e.length;a<h;++a){var c=e[a];o=u(t,n,c,r,l,i,o),s.push(o),n=c}return o}function a(t,n,e,r,l,i,o,u){for(var a=0,h=e.length;a<h;++a){var c=e[a],f=[];o=s(t,n,c,r,l,i,o,f),u.push(f),n=c[c.length-1]}return o}},function(t,n,e){"use strict";var r,l=e(305),i=e(249),o=e(247),u=e(242),s=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),a=function(t){function n(n){var e=t.call(this)||this;return e.eventTarget_=n,e.pendingRemovals_=null,e.dispatching_=null,e.listeners_=null,e}return s(n,t),n.prototype.addEventListener=function(t,n){if(t&&n){var e=this.listeners_||(this.listeners_={}),r=e[t]||(e[t]=[]);-1===r.indexOf(n)&&r.push(n)}},n.prototype.dispatchEvent=function(t){var n="string"==typeof t,e=n?t:t.type,r=this.listeners_&&this.listeners_[e];if(r){var l=n?new i.a(t):t;l.target||(l.target=this.eventTarget_||this);var u,s=this.dispatching_||(this.dispatching_={}),a=this.pendingRemovals_||(this.pendingRemovals_={});e in s||(s[e]=0,a[e]=0),++s[e];for(var h=0,c=r.length;h<c;++h)if(!1===(u="handleEvent"in r[h]?r[h].handleEvent(l):r[h].call(this,l))||l.propagationStopped){u=!1;break}if(0==--s[e]){var f=a[e];for(delete a[e];f--;)this.removeEventListener(e,o.c);delete s[e]}return u}},n.prototype.disposeInternal=function(){this.listeners_&&Object(u.b)(this.listeners_)},n.prototype.getListeners=function(t){return this.listeners_&&this.listeners_[t]||void 0},n.prototype.hasListener=function(t){return!!this.listeners_&&(t?t in this.listeners_:Object.keys(this.listeners_).length>0)},n.prototype.removeEventListener=function(t,n){var e=this.listeners_&&this.listeners_[t];if(e){var r=e.indexOf(n);-1!==r&&(this.pendingRemovals_&&t in this.pendingRemovals_?(e[r]=o.c,++this.pendingRemovals_[t]):(e.splice(r,1),0===e.length&&delete this.listeners_[t]))}},n}(l.a);n.a=a},function(t,n,e){"use strict";n.a={IDLE:0,LOADING:1,LOADED:2,ERROR:3,EMPTY:4}},function(t,n,e){"use strict";e.d(n,"c",(function(){return r})),e.d(n,"d",(function(){return l})),e.d(n,"e",(function(){return i})),e.d(n,"b",(function(){return o})),e.d(n,"a",(function(){return u})),e.d(n,"f",(function(){return h}));var r="ol-hidden",l="ol-selectable",i="ol-unselectable",o="ol-control",u="ol-collapsed",s=new RegExp(["^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)","(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)","(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)","(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?","(?:small|large)|medium|smaller|larger|[\\.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))","(?:\\s*\\/\\s*(normal|[\\.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])?))","?\\s*([-,\\\"\\'\\sa-z]+?)\\s*$"].join(""),"i"),a=["style","variant","weight","size","lineHeight","family"],h=function(t){var n=t.match(s);if(!n)return null;for(var e={lineHeight:"normal",size:"1.2em",style:"normal",weight:"normal",variant:"normal"},r=0,l=a.length;r<l;++r){var i=n[r+1];void 0!==i&&(e[a[r]]=i)}return e.families=e.family.split(/,\s?/),e}},function(t,n,e){"use strict";e.d(n,"b",(function(){return u})),e.d(n,"a",(function(){return f})),e.d(n,"c",(function(){return d}));var r=e(244),l=e(239),i=/^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i,o=/^([a-z]*)$|^hsla?\(.*\)$/i;function u(t){return"string"==typeof t?t:d(t)}function s(t){var n=document.createElement("div");if(n.style.color=t,""!==n.style.color){document.body.appendChild(n);var e=getComputedStyle(n).color;return document.body.removeChild(n),e}return""}var a,h,c=(a={},h=0,function(t){var n;if(a.hasOwnProperty(t))n=a[t];else{if(h>=1024){var e=0;for(var l in a)0==(3&e++)&&(delete a[l],--h)}n=function(t){var n,e,l,u,a;if(o.exec(t)&&(t=s(t)),i.exec(t)){var h=t.length-1,c=void 0;c=h<=4?1:2;var f=4===h||8===h;n=parseInt(t.substr(1+0*c,c),16),e=parseInt(t.substr(1+1*c,c),16),l=parseInt(t.substr(1+2*c,c),16),u=f?parseInt(t.substr(1+3*c,c),16):255,1==c&&(n=(n<<4)+n,e=(e<<4)+e,l=(l<<4)+l,f&&(u=(u<<4)+u)),a=[n,e,l,u/255]}else 0==t.indexOf("rgba(")?p(a=t.slice(5,-1).split(",").map(Number)):0==t.indexOf("rgb(")?((a=t.slice(4,-1).split(",").map(Number)).push(1),p(a)):Object(r.a)(!1,14);return a}(t),a[t]=n,++h}return n});function f(t){return Array.isArray(t)?t:c(t)}function p(t){return t[0]=Object(l.b)(t[0]+.5|0,0,255),t[1]=Object(l.b)(t[1]+.5|0,0,255),t[2]=Object(l.b)(t[2]+.5|0,0,255),t[3]=Object(l.b)(t[3],0,1),t}function d(t){var n=t[0];n!=(0|n)&&(n=n+.5|0);var e=t[1];e!=(0|e)&&(e=e+.5|0);var r=t[2];return r!=(0|r)&&(r=r+.5|0),"rgba("+n+","+e+","+r+","+(void 0===t[3]?1:Math.round(100*t[3])/100)+")"}},function(t,n,e){"use strict";var r,l=e(332),i=e(248),o=e(302),u=e(249),s=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),a="length",h=function(t){function n(n,e,r){var l=t.call(this,n)||this;return l.element=e,l.index=r,l}return s(n,t),n}(u.a),c=function(t){function n(n,e){var r=t.call(this)||this;r.on,r.once,r.un;var l=e||{};if(r.unique_=!!l.unique,r.array_=n||[],r.unique_)for(var i=0,o=r.array_.length;i<o;++i)r.assertUnique_(r.array_[i],i);return r.updateLength_(),r}return s(n,t),n.prototype.clear=function(){for(;this.getLength()>0;)this.pop()},n.prototype.extend=function(t){for(var n=0,e=t.length;n<e;++n)this.push(t[n]);return this},n.prototype.forEach=function(t){for(var n=this.array_,e=0,r=n.length;e<r;++e)t(n[e],e,n)},n.prototype.getArray=function(){return this.array_},n.prototype.item=function(t){return this.array_[t]},n.prototype.getLength=function(){return this.get(a)},n.prototype.insertAt=function(t,n){this.unique_&&this.assertUnique_(n),this.array_.splice(t,0,n),this.updateLength_(),this.dispatchEvent(new h(o.a.ADD,n,t))},n.prototype.pop=function(){return this.removeAt(this.getLength()-1)},n.prototype.push=function(t){this.unique_&&this.assertUnique_(t);var n=this.getLength();return this.insertAt(n,t),this.getLength()},n.prototype.remove=function(t){for(var n=this.array_,e=0,r=n.length;e<r;++e)if(n[e]===t)return this.removeAt(e)},n.prototype.removeAt=function(t){var n=this.array_[t];return this.array_.splice(t,1),this.updateLength_(),this.dispatchEvent(new h(o.a.REMOVE,n,t)),n},n.prototype.setAt=function(t,n){var e=this.getLength();if(t<e){this.unique_&&this.assertUnique_(n,t);var r=this.array_[t];this.array_[t]=n,this.dispatchEvent(new h(o.a.REMOVE,r,t)),this.dispatchEvent(new h(o.a.ADD,n,t))}else{for(var l=e;l<t;++l)this.insertAt(l,void 0);this.insertAt(t,n)}},n.prototype.updateLength_=function(){this.set(a,this.array_.length)},n.prototype.assertUnique_=function(t,n){for(var e=0,r=this.array_.length;e<r;++e)if(this.array_[e]===t&&e!==n)throw new l.a(58)},n}(i.a);n.a=c},function(t,n,e){"use strict";e.d(n,"b",(function(){return p}));var r,l=e(346),i=e(240),o=e(345),u=e(303),s=e(244),a=e(242),h=e(245),c=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),f=function(t){function n(n){var e=this,r=Object(a.a)({},n);delete r.source,(e=t.call(this,r)||this).on,e.once,e.un,e.mapPrecomposeKey_=null,e.mapRenderKey_=null,e.sourceChangeKey_=null,e.renderer_=null,e.rendered=!1,n.render&&(e.render=n.render),n.map&&e.setMap(n.map),e.addChangeListener(o.a.SOURCE,e.handleSourcePropertyChange_);var l=n.source?n.source:null;return e.setSource(l),e}return c(n,t),n.prototype.getLayersArray=function(t){var n=t||[];return n.push(this),n},n.prototype.getLayerStatesArray=function(t){var n=t||[];return n.push(this.getLayerState()),n},n.prototype.getSource=function(){return this.get(o.a.SOURCE)||null},n.prototype.getRenderSource=function(){return this.getSource()},n.prototype.getSourceState=function(){var t=this.getSource();return t?t.getState():"undefined"},n.prototype.handleSourceChange_=function(){this.changed()},n.prototype.handleSourcePropertyChange_=function(){this.sourceChangeKey_&&(Object(h.c)(this.sourceChangeKey_),this.sourceChangeKey_=null);var t=this.getSource();t&&(this.sourceChangeKey_=Object(h.a)(t,i.a.CHANGE,this.handleSourceChange_,this)),this.changed()},n.prototype.getFeatures=function(t){return this.renderer_?this.renderer_.getFeatures(t):new Promise((function(t){return t([])}))},n.prototype.getData=function(t){return this.renderer_&&this.rendered?this.renderer_.getData(t):null},n.prototype.render=function(t,n){var e=this.getRenderer();if(e.prepareFrame(t))return this.rendered=!0,e.renderFrame(t,n)},n.prototype.unrender=function(){this.rendered=!1},n.prototype.setMapInternal=function(t){t||this.unrender(),this.set(o.a.MAP,t)},n.prototype.getMapInternal=function(){return this.get(o.a.MAP)},n.prototype.setMap=function(t){this.mapPrecomposeKey_&&(Object(h.c)(this.mapPrecomposeKey_),this.mapPrecomposeKey_=null),t||this.changed(),this.mapRenderKey_&&(Object(h.c)(this.mapRenderKey_),this.mapRenderKey_=null),t&&(this.mapPrecomposeKey_=Object(h.a)(t,u.a.PRECOMPOSE,(function(t){var n=t.frameState.layerStatesArray,e=this.getLayerState(!1);Object(s.a)(!n.some((function(t){return t.layer===e.layer})),67),n.push(e)}),this),this.mapRenderKey_=Object(h.a)(this,i.a.CHANGE,t.render,t),this.changed())},n.prototype.setSource=function(t){this.set(o.a.SOURCE,t)},n.prototype.getRenderer=function(){return this.renderer_||(this.renderer_=this.createRenderer()),this.renderer_},n.prototype.hasRenderer=function(){return!!this.renderer_},n.prototype.createRenderer=function(){return null},n.prototype.disposeInternal=function(){this.renderer_&&(this.renderer_.dispose(),delete this.renderer_),this.setSource(null),t.prototype.disposeInternal.call(this)},n}(l.a);function p(t,n){if(!t.visible)return!1;var e=n.resolution;if(e<t.minResolution||e>=t.maxResolution)return!1;var r=n.zoom;return r>t.minZoom&&r<=t.maxZoom}n.a=f},function(t,n,e){"use strict";e.d(n,"a",(function(){return l})),e.d(n,"b",(function(){return i})),e.d(n,"d",(function(){return o})),e.d(n,"e",(function(){return u})),e.d(n,"f",(function(){return s})),e.d(n,"c",(function(){return a}));var r=e(237);e(239);function l(t,n){return t[0]+=+n[0],t[1]+=+n[1],t}function i(t,n){for(var e=!0,r=t.length-1;r>=0;--r)if(t[r]!=n[r]){e=!1;break}return e}function o(t,n){var e=Math.cos(n),r=Math.sin(n),l=t[0]*e-t[1]*r,i=t[1]*e+t[0]*r;return t[0]=l,t[1]=i,t}function u(t,n){return t[0]*=n,t[1]*=n,t}function s(t,n){if(n.canWrapX()){var e=Object(r.E)(n.getExtent()),l=a(t,n,e);l&&(t[0]-=l*e)}return t}function a(t,n,e){var l=n.getExtent(),i=0;if(n.canWrapX()&&(t[0]<l[0]||t[0]>l[2])){var o=e||Object(r.E)(l);i=Math.floor((t[0]-l[0])/o)}return i}},function(t,n,e){"use strict";var r=e(256),l=function(){function t(t){this.code_=t.code,this.units_=t.units,this.extent_=void 0!==t.extent?t.extent:null,this.worldExtent_=void 0!==t.worldExtent?t.worldExtent:null,this.axisOrientation_=void 0!==t.axisOrientation?t.axisOrientation:"enu",this.global_=void 0!==t.global&&t.global,this.canWrapX_=!(!this.global_||!this.extent_),this.getPointResolutionFunc_=t.getPointResolution,this.defaultTileGrid_=null,this.metersPerUnit_=t.metersPerUnit}return t.prototype.canWrapX=function(){return this.canWrapX_},t.prototype.getCode=function(){return this.code_},t.prototype.getExtent=function(){return this.extent_},t.prototype.getUnits=function(){return this.units_},t.prototype.getMetersPerUnit=function(){return this.metersPerUnit_||r.a[this.units_]},t.prototype.getWorldExtent=function(){return this.worldExtent_},t.prototype.getAxisOrientation=function(){return this.axisOrientation_},t.prototype.isGlobal=function(){return this.global_},t.prototype.setGlobal=function(t){this.global_=t,this.canWrapX_=!(!t||!this.extent_)},t.prototype.getDefaultTileGrid=function(){return this.defaultTileGrid_},t.prototype.setDefaultTileGrid=function(t){this.defaultTileGrid_=t},t.prototype.setExtent=function(t){this.extent_=t,this.canWrapX_=!(!this.global_||!t)},t.prototype.setWorldExtent=function(t){this.worldExtent_=t},t.prototype.setGetPointResolution=function(t){this.getPointResolutionFunc_=t},t.prototype.getPointResolutionFunc=function(){return this.getPointResolutionFunc_},t}();n.a=l},function(t,n,e){"use strict";e.d(n,"e",(function(){return i})),e.d(n,"a",(function(){return o})),e.d(n,"f",(function(){return u})),e.d(n,"d",(function(){return s})),e.d(n,"b",(function(){return a})),e.d(n,"c",(function(){return h}));var r=e(239);function l(t,n,e,l,i,o,u){var s,a=t[n],h=t[n+1],c=t[e]-a,f=t[e+1]-h;if(0===c&&0===f)s=n;else{var p=((i-a)*c+(o-h)*f)/(c*c+f*f);if(p>1)s=e;else{if(p>0){for(var d=0;d<l;++d)u[d]=Object(r.e)(t[n+d],t[e+d],p);return void(u.length=l)}s=n}}for(d=0;d<l;++d)u[d]=t[s+d];u.length=l}function i(t,n,e,l,i){var o=t[n],u=t[n+1];for(n+=l;n<e;n+=l){var s=t[n],a=t[n+1],h=Object(r.i)(o,u,s,a);h>i&&(i=h),o=s,u=a}return i}function o(t,n,e,r,l){for(var o=0,u=e.length;o<u;++o){var s=e[o];l=i(t,n,s,r,l),n=s}return l}function u(t,n,e,r,l){for(var i=0,u=e.length;i<u;++i){var s=e[i];l=o(t,n,s,r,l),n=s[s.length-1]}return l}function s(t,n,e,i,o,u,s,a,h,c,f){if(n==e)return c;var p,d;if(0===o){if((d=Object(r.i)(s,a,t[n],t[n+1]))<c){for(p=0;p<i;++p)h[p]=t[n+p];return h.length=i,d}return c}for(var g=f||[NaN,NaN],y=n+i;y<e;)if(l(t,y-i,y,i,s,a,g),(d=Object(r.i)(s,a,g[0],g[1]))<c){for(c=d,p=0;p<i;++p)h[p]=g[p];h.length=i,y+=i}else y+=i*Math.max((Math.sqrt(d)-Math.sqrt(c))/o|0,1);if(u&&(l(t,e-i,n,i,s,a,g),(d=Object(r.i)(s,a,g[0],g[1]))<c)){for(c=d,p=0;p<i;++p)h[p]=g[p];h.length=i}return c}function a(t,n,e,r,l,i,o,u,a,h,c){for(var f=c||[NaN,NaN],p=0,d=e.length;p<d;++p){var g=e[p];h=s(t,n,g,r,l,i,o,u,a,h,f),n=g}return h}function h(t,n,e,r,l,i,o,u,s,h,c){for(var f=c||[NaN,NaN],p=0,d=e.length;p<d;++p){var g=e[p];h=a(t,n,g,r,l,i,o,u,s,h,f),n=g[g.length-1]}return h}},function(t,n,e){"use strict";e.d(n,"a",(function(){return o})),e.d(n,"b",(function(){return u})),e.d(n,"c",(function(){return s})),e.d(n,"d",(function(){return a})),e.d(n,"e",(function(){return h}));var r=e(237),l=e(334),i=e(299);function o(t,n,e,i,o){var u=Object(r.r)(Object(r.j)(),t,n,e,i);return!!Object(r.F)(o,u)&&(!!Object(r.g)(o,u)||(u[0]>=o[0]&&u[2]<=o[2]||(u[1]>=o[1]&&u[3]<=o[3]||Object(l.a)(t,n,e,i,(function(t,n){return Object(r.G)(o,t,n)})))))}function u(t,n,e,r,l){for(var i=0,u=e.length;i<u;++i){if(o(t,n,e[i],r,l))return!0;n=e[i]}return!1}function s(t,n,e,r,l){return!!o(t,n,e,r,l)||(!!Object(i.b)(t,n,e,r,l[0],l[1])||(!!Object(i.b)(t,n,e,r,l[0],l[3])||(!!Object(i.b)(t,n,e,r,l[2],l[1])||!!Object(i.b)(t,n,e,r,l[2],l[3]))))}function a(t,n,e,r,l){if(!s(t,n,e[0],r,l))return!1;if(1===e.length)return!0;for(var u=1,a=e.length;u<a;++u)if(Object(i.a)(t,e[u-1],e[u],r,l)&&!o(t,e[u-1],e[u],r,l))return!1;return!0}function h(t,n,e,r,l){for(var i=0,o=e.length;i<o;++i){var u=e[i];if(a(t,n,u,r,l))return!0;n=u[u.length-1]}return!1}},function(t,n,e){"use strict";n.a={PROPERTYCHANGE:"propertychange"}},function(t,n,e){"use strict";var r=e(240);n.a={SINGLECLICK:"singleclick",CLICK:r.a.CLICK,DBLCLICK:r.a.DBLCLICK,POINTERDRAG:"pointerdrag",POINTERMOVE:"pointermove",POINTERDOWN:"pointerdown",POINTERUP:"pointerup",POINTEROVER:"pointerover",POINTEROUT:"pointerout",POINTERENTER:"pointerenter",POINTERLEAVE:"pointerleave",POINTERCANCEL:"pointercancel"}},function(t,n,e){"use strict";e.d(n,"b",(function(){return w}));var r,l=e(282),i=e(257),o=e(292),u=e(237),s=e(270),a=e(283),h=e(277),c=e(306),f=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),p=function(t){function n(n,e){var r=t.call(this)||this;return r.maxDelta_=-1,r.maxDeltaRevision_=-1,void 0===e||Array.isArray(n[0])?r.setCoordinates(n,e):r.setFlatCoordinates(e,n),r}return f(n,t),n.prototype.clone=function(){return new n(this.flatCoordinates.slice(),this.layout)},n.prototype.closestPointXY=function(t,n,e,r){return r<Object(u.e)(this.getExtent(),t,n)?r:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(Object(o.e)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Object(o.d)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!0,t,n,e,r))},n.prototype.getArea=function(){return Object(c.a)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},n.prototype.getCoordinates=function(){return Object(h.a)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},n.prototype.getSimplifiedGeometryInternal=function(t){var e=[];return e.length=Object(a.a)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,e,0),new n(e,l.a.XY)},n.prototype.getType=function(){return"LinearRing"},n.prototype.intersectsExtent=function(t){return!1},n.prototype.setCoordinates=function(t,n){this.setLayout(n,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=Object(s.b)(this.flatCoordinates,0,t,this.stride),this.changed()},n}(i.a),d=e(300),g=e(243),y=e(338),_=e(293),v=e(362),m=e(299),b=(e(239),e(330),function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}()),x=function(t){function n(n,e,r){var l=t.call(this)||this;return l.ends_=[],l.flatInteriorPointRevision_=-1,l.flatInteriorPoint_=null,l.maxDelta_=-1,l.maxDeltaRevision_=-1,l.orientedRevision_=-1,l.orientedFlatCoordinates_=null,void 0!==e&&r?(l.setFlatCoordinates(e,n),l.ends_=r):l.setCoordinates(n,e),l}return b(n,t),n.prototype.appendLinearRing=function(t){this.flatCoordinates?Object(g.c)(this.flatCoordinates,t.getFlatCoordinates()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()},n.prototype.clone=function(){var t=new n(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return t.applyProperties(this),t},n.prototype.closestPointXY=function(t,n,e,r){return r<Object(u.e)(this.getExtent(),t,n)?r:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(Object(o.a)(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Object(o.b)(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!0,t,n,e,r))},n.prototype.containsXY=function(t,n){return Object(m.c)(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t,n)},n.prototype.getArea=function(){return Object(c.b)(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride)},n.prototype.getCoordinates=function(t){var n;return void 0!==t?(n=this.getOrientedFlatCoordinates().slice(),Object(v.c)(n,0,this.ends_,this.stride,t)):n=this.flatCoordinates,Object(h.b)(n,0,this.ends_,this.stride)},n.prototype.getEnds=function(){return this.ends_},n.prototype.getFlatInteriorPoint=function(){if(this.flatInteriorPointRevision_!=this.getRevision()){var t=Object(u.w)(this.getExtent());this.flatInteriorPoint_=Object(y.a)(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t,0),this.flatInteriorPointRevision_=this.getRevision()}return this.flatInteriorPoint_},n.prototype.getInteriorPoint=function(){return new d.a(this.getFlatInteriorPoint(),l.a.XYM)},n.prototype.getLinearRingCount=function(){return this.ends_.length},n.prototype.getLinearRing=function(t){return t<0||this.ends_.length<=t?null:new p(this.flatCoordinates.slice(0===t?0:this.ends_[t-1],this.ends_[t]),this.layout)},n.prototype.getLinearRings=function(){for(var t=this.layout,n=this.flatCoordinates,e=this.ends_,r=[],l=0,i=0,o=e.length;i<o;++i){var u=e[i],s=new p(n.slice(l,u),t);r.push(s),l=u}return r},n.prototype.getOrientedFlatCoordinates=function(){if(this.orientedRevision_!=this.getRevision()){var t=this.flatCoordinates;Object(v.a)(t,0,this.ends_,this.stride)?this.orientedFlatCoordinates_=t:(this.orientedFlatCoordinates_=t.slice(),this.orientedFlatCoordinates_.length=Object(v.c)(this.orientedFlatCoordinates_,0,this.ends_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_},n.prototype.getSimplifiedGeometryInternal=function(t){var e=[],r=[];return e.length=Object(a.c)(this.flatCoordinates,0,this.ends_,this.stride,Math.sqrt(t),e,0,r),new n(e,l.a.XY,r)},n.prototype.getType=function(){return"Polygon"},n.prototype.intersectsExtent=function(t){return Object(_.d)(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t)},n.prototype.setCoordinates=function(t,n){this.setLayout(n,t,2),this.flatCoordinates||(this.flatCoordinates=[]);var e=Object(s.c)(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=0===e.length?0:e[e.length-1],this.changed()},n}(i.a);n.a=x;function w(t){var n=t[0],e=t[1],r=t[2],i=t[3],o=[n,e,n,i,r,i,r,e,n,e];return new x(o,l.a.XY,[o.length])}},function(t,n,e){"use strict";var r,l,i,o=e(401),u=e(7),s=e(1),a=e(0),h=e(8),c=e(6),f=e(97),p=e(92),d=e(14),g=e(93),y=e(15).f,_=e(45),v=e(402),m=e(48),b=e(25),x=e(47),w=e(94),E=w.enforce,C=w.get,O=s.Int8Array,M=O&&O.prototype,S=s.Uint8ClampedArray,I=S&&S.prototype,P=O&&v(O),R=M&&v(M),T=Object.prototype,N=s.TypeError,L=b("toStringTag"),A=x("TYPED_ARRAY_TAG"),j=o&&!!m&&"Opera"!==f(s.opera),D=!1,k={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},F={BigInt64Array:8,BigUint64Array:8},G=function(t){var n=v(t);if(h(n)){var e=C(n);return e&&c(e,"TypedArrayConstructor")?e.TypedArrayConstructor:G(n)}},z=function(t){if(!h(t))return!1;var n=f(t);return c(k,n)||c(F,n)};for(r in k)(i=(l=s[r])&&l.prototype)?E(i).TypedArrayConstructor=l:j=!1;for(r in F)(i=(l=s[r])&&l.prototype)&&(E(i).TypedArrayConstructor=l);if((!j||!a(P)||P===Function.prototype)&&(P=function(){throw N("Incorrect invocation")},j))for(r in k)s[r]&&m(s[r],P);if((!j||!R||R===T)&&(R=P.prototype,j))for(r in k)s[r]&&m(s[r].prototype,R);if(j&&v(I)!==R&&m(I,R),u&&!c(R,L))for(r in D=!0,y(R,L,{get:function(){return h(this)?this[A]:void 0}}),k)s[r]&&d(s[r],A,r);t.exports={NATIVE_ARRAY_BUFFER_VIEWS:j,TYPED_ARRAY_TAG:D&&A,aTypedArray:function(t){if(z(t))return t;throw N("Target is not a typed array")},aTypedArrayConstructor:function(t){if(a(t)&&(!m||_(P,t)))return t;throw N(p(t)+" is not a typed array constructor")},exportTypedArrayMethod:function(t,n,e,r){if(u){if(e)for(var l in k){var i=s[l];if(i&&c(i.prototype,t))try{delete i.prototype[t]}catch(e){try{i.prototype[t]=n}catch(t){}}}R[t]&&!e||g(R,t,e?n:j&&M[t]||n,r)}},exportTypedArrayStaticMethod:function(t,n,e){var r,l;if(u){if(m){if(e)for(r in k)if((l=s[r])&&c(l,t))try{delete l[t]}catch(t){}if(P[t]&&!e)return;try{return g(P,t,e?n:j&&P[t]||n)}catch(t){}}for(r in k)!(l=s[r])||l[t]&&!e||g(l,t,n)}},getTypedArrayConstructor:G,isView:function(t){if(!h(t))return!1;var n=f(t);return"DataView"===n||c(k,n)||c(F,n)},isTypedArray:z,TypedArray:P,TypedArrayPrototype:R}},function(t,n,e){"use strict";e.r(n);var r,l=e(282),i=e(257),o=e(292),u=e(237),s=e(270),a=e(283),h=e(243),c=e(334),f=e(277),p=e(335),d=e(293),g=e(336),y=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),_=function(t){function n(n,e){var r=t.call(this)||this;return r.flatMidpoint_=null,r.flatMidpointRevision_=-1,r.maxDelta_=-1,r.maxDeltaRevision_=-1,void 0===e||Array.isArray(n[0])?r.setCoordinates(n,e):r.setFlatCoordinates(e,n),r}return y(n,t),n.prototype.appendCoordinate=function(t){this.flatCoordinates?Object(h.c)(this.flatCoordinates,t):this.flatCoordinates=t.slice(),this.changed()},n.prototype.clone=function(){var t=new n(this.flatCoordinates.slice(),this.layout);return t.applyProperties(this),t},n.prototype.closestPointXY=function(t,n,e,r){return r<Object(u.e)(this.getExtent(),t,n)?r:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(Object(o.e)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Object(o.d)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!1,t,n,e,r))},n.prototype.forEachSegment=function(t){return Object(c.a)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t)},n.prototype.getCoordinateAtM=function(t,n){if(this.layout!=l.a.XYM&&this.layout!=l.a.XYZM)return null;var e=void 0!==n&&n;return Object(p.b)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,e)},n.prototype.getCoordinates=function(){return Object(f.a)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},n.prototype.getCoordinateAt=function(t,n){return Object(p.a)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,n,this.stride)},n.prototype.getLength=function(){return Object(g.a)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},n.prototype.getFlatMidpoint=function(){return this.flatMidpointRevision_!=this.getRevision()&&(this.flatMidpoint_=this.getCoordinateAt(.5,this.flatMidpoint_),this.flatMidpointRevision_=this.getRevision()),this.flatMidpoint_},n.prototype.getSimplifiedGeometryInternal=function(t){var e=[];return e.length=Object(a.a)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,e,0),new n(e,l.a.XY)},n.prototype.getType=function(){return"LineString"},n.prototype.intersectsExtent=function(t){return Object(d.a)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t)},n.prototype.setCoordinates=function(t,n){this.setLayout(n,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=Object(s.b)(this.flatCoordinates,0,t,this.stride),this.changed()},n}(i.a);n.default=_},function(t,n,e){"use strict";e.d(n,"a",(function(){return l})),e.d(n,"b",(function(){return i})),e.d(n,"c",(function(){return o})),e.d(n,"d",(function(){return u}));var r=e(237);function l(t,n,e,l,o){return!Object(r.s)(o,(function(r){return!i(t,n,e,l,r[0],r[1])}))}function i(t,n,e,r,l,i){for(var o=0,u=t[e-r],s=t[e-r+1];n<e;n+=r){var a=t[n],h=t[n+1];s<=i?h>i&&(a-u)*(i-s)-(l-u)*(h-s)>0&&o++:h<=i&&(a-u)*(i-s)-(l-u)*(h-s)<0&&o--,u=a,s=h}return 0!==o}function o(t,n,e,r,l,o){if(0===e.length)return!1;if(!i(t,n,e[0],r,l,o))return!1;for(var u=1,s=e.length;u<s;++u)if(i(t,e[u-1],e[u],r,l,o))return!1;return!0}function u(t,n,e,r,l,i){if(0===e.length)return!1;for(var u=0,s=e.length;u<s;++u){var a=e[u];if(o(t,n,a,r,l,i))return!0;n=a[a.length-1]}return!1}},function(t,n,e){"use strict";var r,l=e(257),i=e(237),o=e(270),u=e(239),s=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),a=function(t){function n(n,e){var r=t.call(this)||this;return r.setCoordinates(n,e),r}return s(n,t),n.prototype.clone=function(){var t=new n(this.flatCoordinates.slice(),this.layout);return t.applyProperties(this),t},n.prototype.closestPointXY=function(t,n,e,r){var l=this.flatCoordinates,i=Object(u.i)(t,n,l[0],l[1]);if(i<r){for(var o=this.stride,s=0;s<o;++s)e[s]=l[s];return e.length=o,i}return r},n.prototype.getCoordinates=function(){return this.flatCoordinates?this.flatCoordinates.slice():[]},n.prototype.computeExtent=function(t){return Object(i.m)(this.flatCoordinates,t)},n.prototype.getType=function(){return"Point"},n.prototype.intersectsExtent=function(t){return Object(i.h)(t,this.flatCoordinates[0],this.flatCoordinates[1])},n.prototype.setCoordinates=function(t,n){this.setLayout(n,t,0),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=Object(o.a)(this.flatCoordinates,0,t,this.stride),this.changed()},n}(l.a);n.a=a},function(t,n,e){"use strict";e.d(n,"a",(function(){return l}));var r=e(287);function l(t){return Array.isArray(t)?Object(r.c)(t):t}},function(t,n,e){"use strict";n.a={ADD:"add",REMOVE:"remove"}},function(t,n,e){"use strict";n.a={PRERENDER:"prerender",POSTRENDER:"postrender",PRECOMPOSE:"precompose",POSTCOMPOSE:"postcompose",RENDERCOMPLETE:"rendercomplete"}},function(t,n,e){"use strict";var r,l=e(284),i=e(240),o=e(245),u=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),s=function(t){function n(){var n=t.call(this)||this;return n.on=n.onInternal,n.once=n.onceInternal,n.un=n.unInternal,n.revision_=0,n}return u(n,t),n.prototype.changed=function(){++this.revision_,this.dispatchEvent(i.a.CHANGE)},n.prototype.getRevision=function(){return this.revision_},n.prototype.onInternal=function(t,n){if(Array.isArray(t)){for(var e=t.length,r=new Array(e),l=0;l<e;++l)r[l]=Object(o.a)(this,t[l],n);return r}return Object(o.a)(this,t,n)},n.prototype.onceInternal=function(t,n){var e;if(Array.isArray(t)){var r=t.length;e=new Array(r);for(var l=0;l<r;++l)e[l]=Object(o.b)(this,t[l],n)}else e=Object(o.b)(this,t,n);return n.ol_key=e,e},n.prototype.unInternal=function(t,n){var e=n.ol_key;if(e)!function(t){if(Array.isArray(t))for(var n=0,e=t.length;n<e;++n)Object(o.c)(t[n]);else Object(o.c)(t)}(e);else if(Array.isArray(t))for(var r=0,l=t.length;r<l;++r)this.removeEventListener(t[r],n);else this.removeEventListener(t,n)},n}(l.a);s.prototype.on,s.prototype.once,s.prototype.un,n.a=s},function(t,n,e){"use strict";var r=function(){function t(){this.disposed=!1}return t.prototype.dispose=function(){this.disposed||(this.disposed=!0,this.disposeInternal())},t.prototype.disposeInternal=function(){},t}();n.a=r},function(t,n,e){"use strict";function r(t,n,e,r){for(var l=0,i=t[e-r],o=t[e-r+1];n<e;n+=r){var u=t[n],s=t[n+1];l+=o*u-i*s,i=u,o=s}return l/2}function l(t,n,e,l){for(var i=0,o=0,u=e.length;o<u;++o){var s=e[o];i+=r(t,n,s,l),n=s}return i}function i(t,n,e,r){for(var i=0,o=0,u=e.length;o<u;++o){var s=e[o];i+=l(t,n,s,r),n=s[s.length-1]}return i}e.d(n,"a",(function(){return r})),e.d(n,"b",(function(){return l})),e.d(n,"c",(function(){return i}))},function(t,n,e){"use strict";n.a={ANIMATING:0,INTERACTING:1}},function(t,n,e){"use strict";e.r(n),e.d(n,"createStyleFunction",(function(){return h}));var r,l=e(248),i=e(240),o=e(244),u=e(245),s=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),a=function(t){function n(n){var e=t.call(this)||this;if(e.on,e.once,e.un,e.id_=void 0,e.geometryName_="geometry",e.style_=null,e.styleFunction_=void 0,e.geometryChangeKey_=null,e.addChangeListener(e.geometryName_,e.handleGeometryChanged_),n)if("function"==typeof n.getSimplifiedGeometry){var r=n;e.setGeometry(r)}else{var l=n;e.setProperties(l)}return e}return s(n,t),n.prototype.clone=function(){var t=new n(this.hasProperties()?this.getProperties():null);t.setGeometryName(this.getGeometryName());var e=this.getGeometry();e&&t.setGeometry(e.clone());var r=this.getStyle();return r&&t.setStyle(r),t},n.prototype.getGeometry=function(){return this.get(this.geometryName_)},n.prototype.getId=function(){return this.id_},n.prototype.getGeometryName=function(){return this.geometryName_},n.prototype.getStyle=function(){return this.style_},n.prototype.getStyleFunction=function(){return this.styleFunction_},n.prototype.handleGeometryChange_=function(){this.changed()},n.prototype.handleGeometryChanged_=function(){this.geometryChangeKey_&&(Object(u.c)(this.geometryChangeKey_),this.geometryChangeKey_=null);var t=this.getGeometry();t&&(this.geometryChangeKey_=Object(u.a)(t,i.a.CHANGE,this.handleGeometryChange_,this)),this.changed()},n.prototype.setGeometry=function(t){this.set(this.geometryName_,t)},n.prototype.setStyle=function(t){this.style_=t,this.styleFunction_=t?h(t):void 0,this.changed()},n.prototype.setId=function(t){this.id_=t,this.changed()},n.prototype.setGeometryName=function(t){this.removeChangeListener(this.geometryName_,this.handleGeometryChanged_),this.geometryName_=t,this.addChangeListener(this.geometryName_,this.handleGeometryChanged_),this.handleGeometryChanged_()},n}(l.a);function h(t){return"function"==typeof t?t:(Array.isArray(t)?n=t:(Object(o.a)("function"==typeof t.getZIndex,41),n=[t]),function(){return n});var n}n.default=a},function(t,n,e){"use strict";var r,l=e(281),i=e(295),o=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),u=function(t){function n(n){var e=t.call(this)||this,r=n||{};return e.delta_=r.delta?r.delta:1,e.duration_=void 0!==r.duration?r.duration:250,e}return o(n,t),n.prototype.handleEvent=function(t){var n=!1;if(t.type==i.a.DBLCLICK){var e=t.originalEvent,r=t.map,o=t.coordinate,u=e.shiftKey?-this.delta_:this.delta_,s=r.getView();Object(l.c)(s,u,o,this.duration_),e.preventDefault(),n=!0}return!n},n}(l.a);n.a=u},function(t,n,e){"use strict";n.a={POSTRENDER:"postrender",MOVESTART:"movestart",MOVEEND:"moveend",LOADSTART:"loadstart",LOADEND:"loadend"}},function(t,n,e){"use strict";var r,l=e(273),i=e(247),o=e(280),u=e(272),s=e(290),a=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),h=function(t){function n(n){var e=t.call(this,{stopDown:i.a})||this,r=n||{};e.kinetic_=r.kinetic,e.lastCentroid=null,e.lastPointersCount_,e.panning_=!1;var l=r.condition?r.condition:Object(o.a)(o.g,o.h);return e.condition_=r.onFocusOnly?Object(o.a)(o.d,l):l,e.noKinetic_=!1,e}return a(n,t),n.prototype.handleDragEvent=function(t){this.panning_||(this.panning_=!0,this.getMap().getView().beginInteraction());var n=this.targetPointers,e=Object(l.a)(n);if(n.length==this.lastPointersCount_){if(this.kinetic_&&this.kinetic_.update(e[0],e[1]),this.lastCentroid){var r=[this.lastCentroid[0]-e[0],e[1]-this.lastCentroid[1]],i=t.map.getView();Object(s.e)(r,i.getResolution()),Object(s.d)(r,i.getRotation()),i.adjustCenterInternal(r)}}else this.kinetic_&&this.kinetic_.begin();this.lastCentroid=e,this.lastPointersCount_=n.length,t.originalEvent.preventDefault()},n.prototype.handleUpEvent=function(t){var n=t.map,e=n.getView();if(0===this.targetPointers.length){if(!this.noKinetic_&&this.kinetic_&&this.kinetic_.end()){var r=this.kinetic_.getDistance(),l=this.kinetic_.getAngle(),i=e.getCenterInternal(),o=n.getPixelFromCoordinateInternal(i),s=n.getCoordinateFromPixelInternal([o[0]-r*Math.cos(l),o[1]-r*Math.sin(l)]);e.animateInternal({center:e.getConstrainedCenter(s),duration:500,easing:u.b})}return this.panning_&&(this.panning_=!1,e.endInteraction()),!1}return this.kinetic_&&this.kinetic_.begin(),this.lastCentroid=null,!0},n.prototype.handleDownEvent=function(t){if(this.targetPointers.length>0&&this.condition_(t)){var n=t.map.getView();return this.lastCentroid=null,n.getAnimating()&&n.cancelAnimations(),this.kinetic_&&this.kinetic_.begin(),this.noKinetic_=this.targetPointers.length>1,!0}return!1},n}(l.b);n.a=h},function(t,n,e){"use strict";e.d(n,"c",(function(){return l})),e.d(n,"d",(function(){return i})),e.d(n,"a",(function(){return o})),e.d(n,"b",(function(){return u}));var r=e(239);function l(t){return void 0!==t?0:void 0}function i(t){return void 0!==t?t:void 0}function o(t){var n=2*Math.PI/t;return function(t,e){return e?t:void 0!==t?t=Math.floor(t/n+.5)*n:void 0}}function u(t){var n=t||Object(r.l)(5);return function(t,e){return e?t:void 0!==t?Math.abs(t)<=n?0:t:void 0}}},function(t,n,e){"use strict";e.d(n,"a",(function(){return r})),e.d(n,"b",(function(){return l}));var r=42,l=256},function(t,n,e){"use strict";e.d(n,"a",(function(){return K}));var r,l=e(288),i=e(309),o=e(311),u=e(273),s=e(247),a=e(280),h=e(312),c=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),f=function(t){function n(n){var e=this,r=n||{};return(e=t.call(this,{stopDown:s.a})||this).condition_=r.condition?r.condition:a.b,e.lastAngle_=void 0,e.duration_=void 0!==r.duration?r.duration:250,e}return c(n,t),n.prototype.handleDragEvent=function(t){if(Object(a.f)(t)){var n=t.map,e=n.getView();if(e.getConstraints().rotation!==h.c){var r=n.getSize(),l=t.pixel,i=Math.atan2(r[1]/2-l[1],l[0]-r[0]/2);if(void 0!==this.lastAngle_){var o=i-this.lastAngle_;e.adjustRotationInternal(-o)}this.lastAngle_=i}}},n.prototype.handleUpEvent=function(t){return!Object(a.f)(t)||(t.map.getView().endInteraction(this.duration_),!1)},n.prototype.handleDownEvent=function(t){return!!Object(a.f)(t)&&(!(!Object(a.e)(t)||!this.condition_(t))&&(t.map.getView().beginInteraction(),this.lastAngle_=void 0,!0))},n}(u.b),p=e(249),d=e(305),g=e(296),y=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),_=function(t){function n(n){var e=t.call(this)||this;return e.geometry_=null,e.element_=document.createElement("div"),e.element_.style.position="absolute",e.element_.style.pointerEvents="auto",e.element_.className="ol-box "+n,e.map_=null,e.startPixel_=null,e.endPixel_=null,e}return y(n,t),n.prototype.disposeInternal=function(){this.setMap(null)},n.prototype.render_=function(){var t=this.startPixel_,n=this.endPixel_,e=this.element_.style;e.left=Math.min(t[0],n[0])+"px",e.top=Math.min(t[1],n[1])+"px",e.width=Math.abs(n[0]-t[0])+"px",e.height=Math.abs(n[1]-t[1])+"px"},n.prototype.setMap=function(t){if(this.map_){this.map_.getOverlayContainer().removeChild(this.element_);var n=this.element_.style;n.left="inherit",n.top="inherit",n.width="inherit",n.height="inherit"}this.map_=t,this.map_&&this.map_.getOverlayContainer().appendChild(this.element_)},n.prototype.setPixels=function(t,n){this.startPixel_=t,this.endPixel_=n,this.createOrUpdateGeometry(),this.render_()},n.prototype.createOrUpdateGeometry=function(){var t=this.startPixel_,n=this.endPixel_,e=[t,[t[0],n[1]],n,[n[0],t[1]]].map(this.map_.getCoordinateFromPixelInternal,this.map_);e[4]=e[0].slice(),this.geometry_?this.geometry_.setCoordinates([e]):this.geometry_=new g.a([e])},n.prototype.getGeometry=function(){return this.geometry_},n}(d.a),v=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),m="boxstart",b="boxdrag",x="boxend",w="boxcancel",E=function(t){function n(n,e,r){var l=t.call(this,n)||this;return l.coordinate=e,l.mapBrowserEvent=r,l}return v(n,t),n}(p.a),C=function(t){function n(n){var e=t.call(this)||this;e.on,e.once,e.un;var r=n||{};return e.box_=new _(r.className||"ol-dragbox"),e.minArea_=void 0!==r.minArea?r.minArea:64,r.onBoxEnd&&(e.onBoxEnd=r.onBoxEnd),e.startPixel_=null,e.condition_=r.condition?r.condition:a.e,e.boxEndCondition_=r.boxEndCondition?r.boxEndCondition:e.defaultBoxEndCondition,e}return v(n,t),n.prototype.defaultBoxEndCondition=function(t,n,e){var r=e[0]-n[0],l=e[1]-n[1];return r*r+l*l>=this.minArea_},n.prototype.getGeometry=function(){return this.box_.getGeometry()},n.prototype.handleDragEvent=function(t){this.box_.setPixels(this.startPixel_,t.pixel),this.dispatchEvent(new E(b,t.coordinate,t))},n.prototype.handleUpEvent=function(t){this.box_.setMap(null);var n=this.boxEndCondition_(t,this.startPixel_,t.pixel);return n&&this.onBoxEnd(t),this.dispatchEvent(new E(n?x:w,t.coordinate,t)),!1},n.prototype.handleDownEvent=function(t){return!!this.condition_(t)&&(this.startPixel_=t.pixel,this.box_.setMap(t.map),this.box_.setPixels(this.startPixel_,this.startPixel_),this.dispatchEvent(new E(m,t.coordinate,t)),!0)},n.prototype.onBoxEnd=function(t){},n}(u.b),O=e(272),M=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),S=function(t){function n(n){var e=this,r=n||{},l=r.condition?r.condition:a.i;return(e=t.call(this,{condition:l,className:r.className||"ol-dragzoom",minArea:r.minArea})||this).duration_=void 0!==r.duration?r.duration:200,e.out_=void 0!==r.out&&r.out,e}return M(n,t),n.prototype.onBoxEnd=function(t){var n=this.getMap().getView(),e=this.getGeometry();if(this.out_){var r=n.rotatedExtentForGeometry(e),l=n.getResolutionForExtentInternal(r),i=n.getResolution()/l;(e=e.clone()).scale(i*i)}n.fitInternal(e,{duration:this.duration_,easing:O.b})},n}(C),I=e(240),P=e(281),R=37,T=38,N=39,L=40,A=e(290),j=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),D=function(t){function n(n){var e=t.call(this)||this,r=n||{};return e.defaultCondition_=function(t){return Object(a.g)(t)&&Object(a.j)(t)},e.condition_=void 0!==r.condition?r.condition:e.defaultCondition_,e.duration_=void 0!==r.duration?r.duration:100,e.pixelDelta_=void 0!==r.pixelDelta?r.pixelDelta:128,e}return j(n,t),n.prototype.handleEvent=function(t){var n=!1;if(t.type==I.a.KEYDOWN){var e=t.originalEvent,r=e.keyCode;if(this.condition_(t)&&(r==L||r==R||r==N||r==T)){var l=t.map.getView(),i=l.getResolution()*this.pixelDelta_,o=0,u=0;r==L?u=-i:r==R?o=-i:r==N?o=i:u=i;var s=[o,u];Object(A.d)(s,l.getRotation()),Object(P.b)(l,s,this.duration_),e.preventDefault(),n=!0}}return!n},n}(P.a),k=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),F=function(t){function n(n){var e=t.call(this)||this,r=n||{};return e.condition_=r.condition?r.condition:a.j,e.delta_=r.delta?r.delta:1,e.duration_=void 0!==r.duration?r.duration:100,e}return k(n,t),n.prototype.handleEvent=function(t){var n=!1;if(t.type==I.a.KEYDOWN||t.type==I.a.KEYPRESS){var e=t.originalEvent,r=e.charCode;if(this.condition_(t)&&(r=="+".charCodeAt(0)||r=="-".charCodeAt(0))){var l=t.map,i=r=="+".charCodeAt(0)?this.delta_:-this.delta_,o=l.getView();Object(P.c)(o,i,void 0,this.duration_),e.preventDefault(),n=!0}}return!n},n}(P.a),G=function(){function t(t,n,e){this.decay_=t,this.minVelocity_=n,this.delay_=e,this.points_=[],this.angle_=0,this.initialVelocity_=0}return t.prototype.begin=function(){this.points_.length=0,this.angle_=0,this.initialVelocity_=0},t.prototype.update=function(t,n){this.points_.push(t,n,Date.now())},t.prototype.end=function(){if(this.points_.length<6)return!1;var t=Date.now()-this.delay_,n=this.points_.length-3;if(this.points_[n+2]<t)return!1;for(var e=n-3;e>0&&this.points_[e+2]>t;)e-=3;var r=this.points_[n+2]-this.points_[e+2];if(r<1e3/60)return!1;var l=this.points_[n]-this.points_[e],i=this.points_[n+1]-this.points_[e+1];return this.angle_=Math.atan2(i,l),this.initialVelocity_=Math.sqrt(l*l+i*i)/r,this.initialVelocity_>this.minVelocity_},t.prototype.getDistance=function(){return(this.minVelocity_-this.initialVelocity_)/this.decay_},t.prototype.getAngle=function(){return this.angle_},t}(),z=e(259),B=e(239),U=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),q="trackpad",Y="wheel",X=function(t){function n(n){var e=this,r=n||{};(e=t.call(this,r)||this).totalDelta_=0,e.lastDelta_=0,e.maxDelta_=void 0!==r.maxDelta?r.maxDelta:1,e.duration_=void 0!==r.duration?r.duration:250,e.timeout_=void 0!==r.timeout?r.timeout:80,e.useAnchor_=void 0===r.useAnchor||r.useAnchor,e.constrainResolution_=void 0!==r.constrainResolution&&r.constrainResolution;var l=r.condition?r.condition:a.c;return e.condition_=r.onFocusOnly?Object(a.a)(a.d,l):l,e.lastAnchor_=null,e.startTime_=void 0,e.timeoutId_,e.mode_=void 0,e.trackpadEventGap_=400,e.trackpadTimeoutId_,e.deltaPerZoom_=300,e}return U(n,t),n.prototype.endInteraction_=function(){this.trackpadTimeoutId_=void 0;var t=this.getMap();t&&t.getView().endInteraction(void 0,this.lastDelta_?this.lastDelta_>0?1:-1:0,this.lastAnchor_)},n.prototype.handleEvent=function(t){if(!this.condition_(t))return!0;if(t.type!==I.a.WHEEL)return!0;var n,e=t.map,r=t.originalEvent;if(r.preventDefault(),this.useAnchor_&&(this.lastAnchor_=t.coordinate),t.type==I.a.WHEEL&&(n=r.deltaY,z.b&&r.deltaMode===WheelEvent.DOM_DELTA_PIXEL&&(n/=z.a),r.deltaMode===WheelEvent.DOM_DELTA_LINE&&(n*=40)),0===n)return!1;this.lastDelta_=n;var l=Date.now();void 0===this.startTime_&&(this.startTime_=l),(!this.mode_||l-this.startTime_>this.trackpadEventGap_)&&(this.mode_=Math.abs(n)<4?q:Y);var i=e.getView();if(this.mode_===q&&!i.getConstrainResolution()&&!this.constrainResolution_)return this.trackpadTimeoutId_?clearTimeout(this.trackpadTimeoutId_):(i.getAnimating()&&i.cancelAnimations(),i.beginInteraction()),this.trackpadTimeoutId_=setTimeout(this.endInteraction_.bind(this),this.timeout_),i.adjustZoom(-n/this.deltaPerZoom_,this.lastAnchor_),this.startTime_=l,!1;this.totalDelta_+=n;var o=Math.max(this.timeout_-(l-this.startTime_),0);return clearTimeout(this.timeoutId_),this.timeoutId_=setTimeout(this.handleWheelZoom_.bind(this,e),o),!1},n.prototype.handleWheelZoom_=function(t){var n=t.getView();n.getAnimating()&&n.cancelAnimations();var e=-Object(B.b)(this.totalDelta_,-this.maxDelta_*this.deltaPerZoom_,this.maxDelta_*this.deltaPerZoom_)/this.deltaPerZoom_;(n.getConstrainResolution()||this.constrainResolution_)&&(e=e?e>0?1:-1:0),Object(P.c)(n,e,this.lastAnchor_,this.duration_),this.mode_=void 0,this.totalDelta_=0,this.lastAnchor_=null,this.startTime_=void 0,this.timeoutId_=void 0},n.prototype.setMouseAnchor=function(t){this.useAnchor_=t,t||(this.lastAnchor_=null)},n}(P.a),V=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),W=function(t){function n(n){var e=this,r=n||{},l=r;return l.stopDown||(l.stopDown=s.a),(e=t.call(this,l)||this).anchor_=null,e.lastAngle_=void 0,e.rotating_=!1,e.rotationDelta_=0,e.threshold_=void 0!==r.threshold?r.threshold:.3,e.duration_=void 0!==r.duration?r.duration:250,e}return V(n,t),n.prototype.handleDragEvent=function(t){var n=0,e=this.targetPointers[0],r=this.targetPointers[1],l=Math.atan2(r.clientY-e.clientY,r.clientX-e.clientX);if(void 0!==this.lastAngle_){var i=l-this.lastAngle_;this.rotationDelta_+=i,!this.rotating_&&Math.abs(this.rotationDelta_)>this.threshold_&&(this.rotating_=!0),n=i}this.lastAngle_=l;var o=t.map,s=o.getView();if(s.getConstraints().rotation!==h.c){var a=o.getViewport().getBoundingClientRect(),c=Object(u.a)(this.targetPointers);c[0]-=a.left,c[1]-=a.top,this.anchor_=o.getCoordinateFromPixelInternal(c),this.rotating_&&(o.render(),s.adjustRotationInternal(n,this.anchor_))}},n.prototype.handleUpEvent=function(t){return!(this.targetPointers.length<2)||(t.map.getView().endInteraction(this.duration_),!1)},n.prototype.handleDownEvent=function(t){if(this.targetPointers.length>=2){var n=t.map;return this.anchor_=null,this.lastAngle_=void 0,this.rotating_=!1,this.rotationDelta_=0,this.handlingDownUpSequence||n.getView().beginInteraction(),!0}return!1},n}(u.b),Z=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),H=function(t){function n(n){var e=this,r=n||{},l=r;return l.stopDown||(l.stopDown=s.a),(e=t.call(this,l)||this).anchor_=null,e.duration_=void 0!==r.duration?r.duration:400,e.lastDistance_=void 0,e.lastScaleDelta_=1,e}return Z(n,t),n.prototype.handleDragEvent=function(t){var n=1,e=this.targetPointers[0],r=this.targetPointers[1],l=e.clientX-r.clientX,i=e.clientY-r.clientY,o=Math.sqrt(l*l+i*i);void 0!==this.lastDistance_&&(n=this.lastDistance_/o),this.lastDistance_=o;var s=t.map,a=s.getView();1!=n&&(this.lastScaleDelta_=n);var h=s.getViewport().getBoundingClientRect(),c=Object(u.a)(this.targetPointers);c[0]-=h.left,c[1]-=h.top,this.anchor_=s.getCoordinateFromPixelInternal(c),s.render(),a.adjustResolutionInternal(n,this.anchor_)},n.prototype.handleUpEvent=function(t){if(this.targetPointers.length<2){var n=t.map.getView(),e=this.lastScaleDelta_>1?1:-1;return n.endInteraction(this.duration_,e),!1}return!0},n.prototype.handleDownEvent=function(t){if(this.targetPointers.length>=2){var n=t.map;return this.anchor_=null,this.lastDistance_=void 0,this.lastScaleDelta_=1,this.handlingDownUpSequence||n.getView().beginInteraction(),!0}return!1},n}(u.b);function K(t){var n=t||{},e=new l.a,r=new G(-.005,.05,100);return(void 0===n.altShiftDragRotate||n.altShiftDragRotate)&&e.push(new f),(void 0===n.doubleClickZoom||n.doubleClickZoom)&&e.push(new i.a({delta:n.zoomDelta,duration:n.zoomDuration})),(void 0===n.dragPan||n.dragPan)&&e.push(new o.a({onFocusOnly:n.onFocusOnly,kinetic:r})),(void 0===n.pinchRotate||n.pinchRotate)&&e.push(new W),(void 0===n.pinchZoom||n.pinchZoom)&&e.push(new H({duration:n.zoomDuration})),(void 0===n.keyboard||n.keyboard)&&(e.push(new D),e.push(new F({delta:n.zoomDelta,duration:n.zoomDuration}))),(void 0===n.mouseWheelZoom||n.mouseWheelZoom)&&e.push(new X({onFocusOnly:n.onFocusOnly,duration:n.zoomDuration})),(void 0===n.shiftDragZoom||n.shiftDragZoom)&&e.push(new S({duration:n.zoomDuration})),e}},function(t,n,e){"use strict";e.r(n),e.d(n,"default",(function(){return r}));function r(t){return new l(t instanceof Uint8Array?t:new Uint8Array(t))}function l(t){this._array=t}l.prototype.read=function(){var t=this._array;return this._array=null,Promise.resolve(t?{done:!1,value:t}:{done:!0,value:void 0})},l.prototype.cancel=function(){return this._array=null,Promise.resolve()}},,,,,,,,,,,,,,,function(t,n,e){"use strict";e.d(n,"a",(function(){return l})),e.d(n,"b",(function(){return i}));var r=e(239);function l(t,n,e){var l=e||6371008.8,i=Object(r.l)(t[1]),o=Object(r.l)(n[1]),u=(o-i)/2,s=Object(r.l)(n[0]-t[0])/2,a=Math.sin(u)*Math.sin(u)+Math.sin(s)*Math.sin(s)*Math.cos(i)*Math.cos(o);return 2*l*Math.atan2(Math.sqrt(a),Math.sqrt(1-a))}function i(t,n,e,l){var i=l||6371008.8,o=Object(r.l)(t[1]),u=Object(r.l)(t[0]),s=n/i,a=Math.asin(Math.sin(o)*Math.cos(s)+Math.cos(o)*Math.sin(s)*Math.cos(e)),h=u+Math.atan2(Math.sin(e)*Math.sin(s)*Math.cos(o),Math.cos(s)-Math.sin(o)*Math.sin(a));return[Object(r.k)(h),Object(r.k)(a)]}},function(t,n,e){"use strict";n.a={UNKNOWN:0,INTERSECTING:1,ABOVE:2,RIGHT:4,BELOW:8,LEFT:16}},function(t,n,e){"use strict";var r,l=e(238),i=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),o=function(t){function n(n){var e=this,r="Assertion failed. See https://openlayers.org/en/"+("latest"===l.a?l.a:"v"+l.a.split("-")[0])+"/doc/errors/#"+n+" for details.";return(e=t.call(this,r)||this).code=n,e.name="AssertionError",e.message=r,e}return i(n,t),n}(Error);n.a=o},function(t,n,e){var r=e(409),l=e(44),i=e(41),o=e(42),u=function(t){var n=1==t;return function(e,u,s){for(var a,h=i(e),c=l(h),f=r(u,s),p=o(c);p-- >0;)if(f(a=c[p],p,h))switch(t){case 0:return a;case 1:return p}return n?-1:void 0}};t.exports={findLast:u(0),findLastIndex:u(1)}},function(t,n,e){"use strict";function r(t,n,e,r,l){var i;for(n+=r;n<e;n+=r)if(i=l(t.slice(n-r,n),t.slice(n,n+r)))return i;return!1}e.d(n,"a",(function(){return r}))},function(t,n,e){"use strict";e.d(n,"a",(function(){return i})),e.d(n,"b",(function(){return o})),e.d(n,"c",(function(){return u}));var r=e(243),l=e(239);function i(t,n,e,i,o,u,s){var a,h,c=(e-n)/i;if(1===c)a=n;else if(2===c)a=n,h=o;else if(0!==c){for(var f=t[n],p=t[n+1],d=0,g=[0],y=n+i;y<e;y+=i){var _=t[y],v=t[y+1];d+=Math.sqrt((_-f)*(_-f)+(v-p)*(v-p)),g.push(d),f=_,p=v}var m=o*d,b=Object(r.a)(g,m);b<0?(h=(m-g[-b-2])/(g[-b-1]-g[-b-2]),a=n+(-b-2)*i):a=n+b*i}var x=s>1?s:2,w=u||new Array(x);for(y=0;y<x;++y)w[y]=void 0===a?NaN:void 0===h?t[a+y]:Object(l.e)(t[a+y],t[a+i+y],h);return w}function o(t,n,e,r,i,o){if(e==n)return null;var u;if(i<t[n+r-1])return o?((u=t.slice(n,n+r))[r-1]=i,u):null;if(t[e-1]<i)return o?((u=t.slice(e-r,e))[r-1]=i,u):null;if(i==t[n+r-1])return t.slice(n,n+r);for(var s=n/r,a=e/r;s<a;){var h=s+a>>1;i<t[(h+1)*r-1]?a=h:s=h+1}var c=t[s*r-1];if(i==c)return t.slice((s-1)*r,(s-1)*r+r);var f=(i-c)/(t[(s+1)*r-1]-c);u=[];for(var p=0;p<r-1;++p)u.push(Object(l.e)(t[(s-1)*r+p],t[s*r+p],f));return u.push(i),u}function u(t,n,e,r,l,i,u){if(u)return o(t,n,e[e.length-1],r,l,i);var s;if(l<t[r-1])return i?((s=t.slice(0,r))[r-1]=l,s):null;if(t[t.length-1]<l)return i?((s=t.slice(t.length-r))[r-1]=l,s):null;for(var a=0,h=e.length;a<h;++a){var c=e[a];if(n!=c){if(l<t[n+r-1])return null;if(l<=t[c-1])return o(t,n,c,r,l,!1);n=c}}return null}},function(t,n,e){"use strict";function r(t,n,e,r){for(var l=t[n],i=t[n+1],o=0,u=n+r;u<e;u+=r){var s=t[u],a=t[u+1];o+=Math.sqrt((s-l)*(s-l)+(a-i)*(a-i)),l=s,i=a}return o}e.d(n,"a",(function(){return r}))},function(t,n,e){"use strict";var r,l=e(248),i=e(256),o=e(238),u=e(258),s=e(237),a=e(241),h=e(247),c=e(278),f=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),p=Object(u.c)(),d=function(t){function n(){var n=t.call(this)||this;return n.extent_=Object(s.j)(),n.extentRevision_=-1,n.simplifiedGeometryMaxMinSquaredTolerance=0,n.simplifiedGeometryRevision=0,n.simplifyTransformedInternal=Object(h.d)((function(t,n,e){if(!e)return this.getSimplifiedGeometry(n);var r=this.clone();return r.applyTransform(e),r.getSimplifiedGeometry(n)})),n}return f(n,t),n.prototype.simplifyTransformed=function(t,n){return this.simplifyTransformedInternal(this.getRevision(),t,n)},n.prototype.clone=function(){return Object(o.b)()},n.prototype.closestPointXY=function(t,n,e,r){return Object(o.b)()},n.prototype.containsXY=function(t,n){var e=this.getClosestPoint([t,n]);return e[0]===t&&e[1]===n},n.prototype.getClosestPoint=function(t,n){var e=n||[NaN,NaN];return this.closestPointXY(t[0],t[1],e,1/0),e},n.prototype.intersectsCoordinate=function(t){return this.containsXY(t[0],t[1])},n.prototype.computeExtent=function(t){return Object(o.b)()},n.prototype.getExtent=function(t){if(this.extentRevision_!=this.getRevision()){var n=this.computeExtent(this.extent_);(isNaN(n[0])||isNaN(n[1]))&&Object(s.l)(n),this.extentRevision_=this.getRevision()}return Object(s.I)(this.extent_,t)},n.prototype.rotate=function(t,n){Object(o.b)()},n.prototype.scale=function(t,n,e){Object(o.b)()},n.prototype.simplify=function(t){return this.getSimplifiedGeometry(t*t)},n.prototype.getSimplifiedGeometry=function(t){return Object(o.b)()},n.prototype.getType=function(){return Object(o.b)()},n.prototype.applyTransform=function(t){Object(o.b)()},n.prototype.intersectsExtent=function(t){return Object(o.b)()},n.prototype.translate=function(t,n){Object(o.b)()},n.prototype.transform=function(t,n){var e=Object(a.get)(t),r=e.getUnits()==i.b.TILE_PIXELS?function(t,r,l){var i=e.getExtent(),o=e.getWorldExtent(),h=Object(s.z)(o)/Object(s.z)(i);return Object(u.b)(p,o[0],o[3],h,-h,0,0,0),Object(c.c)(t,0,t.length,l,p,r),Object(a.getTransform)(e,n)(t,r,l)}:Object(a.getTransform)(e,n);return this.applyTransform(r),this},n}(l.a);n.a=d},function(t,n,e){"use strict";e.d(n,"a",(function(){return i})),e.d(n,"b",(function(){return o}));var r=e(299),l=e(243);function i(t,n,e,i,o,u,s){for(var a,h,c,f,p,d,g,y=o[u+1],_=[],v=0,m=e.length;v<m;++v){var b=e[v];for(f=t[b-i],d=t[b-i+1],a=n;a<b;a+=i)p=t[a],g=t[a+1],(y<=d&&g<=y||d<=y&&y<=g)&&(c=(y-d)/(g-d)*(p-f)+f,_.push(c)),f=p,d=g}var x=NaN,w=-1/0;for(_.sort(l.f),f=_[0],a=1,h=_.length;a<h;++a){p=_[a];var E=Math.abs(p-f);E>w&&(c=(f+p)/2,Object(r.c)(t,n,e,i,c,y)&&(x=c,w=E)),f=p}return isNaN(x)&&(x=o[u]),s?(s.push(x,y,w),s):[x,y,w]}function o(t,n,e,r,l){for(var o=[],u=0,s=e.length;u<s;++u){var a=e[u];o=i(t,n,a,r,l,2*u,o),n=a[a.length-1]}return o}},function(t,n,e){t.exports=function(){"use strict";function t(t,r,l,i,o){!function t(e,r,l,i,o){for(;i>l;){if(i-l>600){var u=i-l+1,s=r-l+1,a=Math.log(u),h=.5*Math.exp(2*a/3),c=.5*Math.sqrt(a*h*(u-h)/u)*(s-u/2<0?-1:1);t(e,r,Math.max(l,Math.floor(r-s*h/u+c)),Math.min(i,Math.floor(r+(u-s)*h/u+c)),o)}var f=e[r],p=l,d=i;for(n(e,l,r),o(e[i],f)>0&&n(e,l,i);p<d;){for(n(e,p,d),p++,d--;o(e[p],f)<0;)p++;for(;o(e[d],f)>0;)d--}0===o(e[l],f)?n(e,l,d):n(e,++d,i),d<=r&&(l=d+1),r<=d&&(i=d-1)}}(t,r,l||0,i||t.length-1,o||e)}function n(t,n,e){var r=t[n];t[n]=t[e],t[e]=r}function e(t,n){return t<n?-1:t>n?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function l(t,n,e){if(!e)return n.indexOf(t);for(var r=0;r<n.length;r++)if(e(t,n[r]))return r;return-1}function i(t,n){o(t,0,t.children.length,n,t)}function o(t,n,e,r,l){l||(l=d(null)),l.minX=1/0,l.minY=1/0,l.maxX=-1/0,l.maxY=-1/0;for(var i=n;i<e;i++){var o=t.children[i];u(l,t.leaf?r(o):o)}return l}function u(t,n){return t.minX=Math.min(t.minX,n.minX),t.minY=Math.min(t.minY,n.minY),t.maxX=Math.max(t.maxX,n.maxX),t.maxY=Math.max(t.maxY,n.maxY),t}function s(t,n){return t.minX-n.minX}function a(t,n){return t.minY-n.minY}function h(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function c(t){return t.maxX-t.minX+(t.maxY-t.minY)}function f(t,n){return t.minX<=n.minX&&t.minY<=n.minY&&n.maxX<=t.maxX&&n.maxY<=t.maxY}function p(t,n){return n.minX<=t.maxX&&n.minY<=t.maxY&&n.maxX>=t.minX&&n.maxY>=t.minY}function d(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function g(n,e,r,l,i){for(var o=[e,r];o.length;)if(!((r=o.pop())-(e=o.pop())<=l)){var u=e+Math.ceil((r-e)/l/2)*l;t(n,u,e,r,i),o.push(e,u,u,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var n=this.data,e=[];if(!p(t,n))return e;for(var r=this.toBBox,l=[];n;){for(var i=0;i<n.children.length;i++){var o=n.children[i],u=n.leaf?r(o):o;p(t,u)&&(n.leaf?e.push(o):f(t,u)?this._all(o,e):l.push(o))}n=l.pop()}return e},r.prototype.collides=function(t){var n=this.data;if(!p(t,n))return!1;for(var e=[];n;){for(var r=0;r<n.children.length;r++){var l=n.children[r],i=n.leaf?this.toBBox(l):l;if(p(t,i)){if(n.leaf||f(t,i))return!0;e.push(l)}}n=e.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var n=0;n<t.length;n++)this.insert(t[n]);return this}var e=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===e.height)this._splitRoot(this.data,e);else{if(this.data.height<e.height){var r=this.data;this.data=e,e=r}this._insert(e,this.data.height-e.height-1,!0)}else this.data=e;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=d([]),this},r.prototype.remove=function(t,n){if(!t)return this;for(var e,r,i,o=this.data,u=this.toBBox(t),s=[],a=[];o||s.length;){if(o||(o=s.pop(),r=s[s.length-1],e=a.pop(),i=!0),o.leaf){var h=l(t,o.children,n);if(-1!==h)return o.children.splice(h,1),s.push(o),this._condense(s),this}i||o.leaf||!f(o,u)?r?(e++,o=r.children[e],i=!1):o=null:(s.push(o),a.push(e),e=0,r=o,o=o.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,n){return t.minX-n.minX},r.prototype.compareMinY=function(t,n){return t.minY-n.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,n){for(var e=[];t;)t.leaf?n.push.apply(n,t.children):e.push.apply(e,t.children),t=e.pop();return n},r.prototype._build=function(t,n,e,r){var l,o=e-n+1,u=this._maxEntries;if(o<=u)return i(l=d(t.slice(n,e+1)),this.toBBox),l;r||(r=Math.ceil(Math.log(o)/Math.log(u)),u=Math.ceil(o/Math.pow(u,r-1))),(l=d([])).leaf=!1,l.height=r;var s=Math.ceil(o/u),a=s*Math.ceil(Math.sqrt(u));g(t,n,e,a,this.compareMinX);for(var h=n;h<=e;h+=a){var c=Math.min(h+a-1,e);g(t,h,c,s,this.compareMinY);for(var f=h;f<=c;f+=s){var p=Math.min(f+s-1,c);l.children.push(this._build(t,f,p,r-1))}}return i(l,this.toBBox),l},r.prototype._chooseSubtree=function(t,n,e,r){for(;r.push(n),!n.leaf&&r.length-1!==e;){for(var l=1/0,i=1/0,o=void 0,u=0;u<n.children.length;u++){var s=n.children[u],a=h(s),c=(f=t,p=s,(Math.max(p.maxX,f.maxX)-Math.min(p.minX,f.minX))*(Math.max(p.maxY,f.maxY)-Math.min(p.minY,f.minY))-a);c<i?(i=c,l=a<l?a:l,o=s):c===i&&a<l&&(l=a,o=s)}n=o||n.children[0]}var f,p;return n},r.prototype._insert=function(t,n,e){var r=e?t:this.toBBox(t),l=[],i=this._chooseSubtree(r,this.data,n,l);for(i.children.push(t),u(i,r);n>=0&&l[n].children.length>this._maxEntries;)this._split(l,n),n--;this._adjustParentBBoxes(r,l,n)},r.prototype._split=function(t,n){var e=t[n],r=e.children.length,l=this._minEntries;this._chooseSplitAxis(e,l,r);var o=this._chooseSplitIndex(e,l,r),u=d(e.children.splice(o,e.children.length-o));u.height=e.height,u.leaf=e.leaf,i(e,this.toBBox),i(u,this.toBBox),n?t[n-1].children.push(u):this._splitRoot(e,u)},r.prototype._splitRoot=function(t,n){this.data=d([t,n]),this.data.height=t.height+1,this.data.leaf=!1,i(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,n,e){for(var r,l,i,u,s,a,c,f=1/0,p=1/0,d=n;d<=e-n;d++){var g=o(t,0,d,this.toBBox),y=o(t,d,e,this.toBBox),_=(l=g,i=y,u=Math.max(l.minX,i.minX),s=Math.max(l.minY,i.minY),a=Math.min(l.maxX,i.maxX),c=Math.min(l.maxY,i.maxY),Math.max(0,a-u)*Math.max(0,c-s)),v=h(g)+h(y);_<f?(f=_,r=d,p=v<p?v:p):_===f&&v<p&&(p=v,r=d)}return r||e-n},r.prototype._chooseSplitAxis=function(t,n,e){var r=t.leaf?this.compareMinX:s,l=t.leaf?this.compareMinY:a;this._allDistMargin(t,n,e,r)<this._allDistMargin(t,n,e,l)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,n,e,r){t.children.sort(r);for(var l=this.toBBox,i=o(t,0,n,l),s=o(t,e-n,e,l),a=c(i)+c(s),h=n;h<e-n;h++){var f=t.children[h];u(i,t.leaf?l(f):f),a+=c(i)}for(var p=e-n-1;p>=n;p--){var d=t.children[p];u(s,t.leaf?l(d):d),a+=c(s)}return a},r.prototype._adjustParentBBoxes=function(t,n,e){for(var r=e;r>=0;r--)u(n[r],t)},r.prototype._condense=function(t){for(var n=t.length-1,e=void 0;n>=0;n--)0===t[n].children.length?n>0?(e=t[n-1].children).splice(e.indexOf(t[n]),1):this.clear():i(t[n],this.toBBox)},r}()},function(t,n,e){"use strict";var r,l=e(248),i=e(238),o=e(241),u=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),s=function(t){function n(n){var e=t.call(this)||this;e.projection=Object(o.get)(n.projection),e.attributions_=a(n.attributions),e.attributionsCollapsible_=void 0===n.attributionsCollapsible||n.attributionsCollapsible,e.loading=!1,e.state_=void 0!==n.state?n.state:"ready",e.wrapX_=void 0!==n.wrapX&&n.wrapX,e.interpolate_=!!n.interpolate,e.viewResolver=null,e.viewRejector=null;var r=e;return e.viewPromise_=new Promise((function(t,n){r.viewResolver=t,r.viewRejector=n})),e}return u(n,t),n.prototype.getAttributions=function(){return this.attributions_},n.prototype.getAttributionsCollapsible=function(){return this.attributionsCollapsible_},n.prototype.getProjection=function(){return this.projection},n.prototype.getResolutions=function(){return Object(i.b)()},n.prototype.getView=function(){return this.viewPromise_},n.prototype.getState=function(){return this.state_},n.prototype.getWrapX=function(){return this.wrapX_},n.prototype.getInterpolate=function(){return this.interpolate_},n.prototype.refresh=function(){this.changed()},n.prototype.setAttributions=function(t){this.attributions_=a(t),this.changed()},n.prototype.setState=function(t){this.state_=t,this.changed()},n}(l.a);function a(t){return t?Array.isArray(t)?function(n){return t}:"function"==typeof t?t:function(n){return[t]}:null}n.a=s},function(t,n,e){"use strict";var r,l=e(249),i=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),o=function(t){function n(n,e,r,l){var i=t.call(this,n)||this;return i.inversePixelTransform=e,i.frameState=r,i.context=l,i}return i(n,t),n}(l.a);n.a=o},function(t,n,e){"use strict";n.a={FRACTION:"fraction",PIXELS:"pixels"}},function(t,n,e){"use strict";e.d(n,"a",(function(){return o}));var r=e(287),l=function(){function t(){this.cache_={},this.cacheSize_=0,this.maxCacheSize_=32}return t.prototype.clear=function(){this.cache_={},this.cacheSize_=0},t.prototype.canExpireCache=function(){return this.cacheSize_>this.maxCacheSize_},t.prototype.expire=function(){if(this.canExpireCache()){var t=0;for(var n in this.cache_){var e=this.cache_[n];0!=(3&t++)||e.hasListener()||(delete this.cache_[n],--this.cacheSize_)}}},t.prototype.get=function(t,n,e){var r=i(t,n,e);return r in this.cache_?this.cache_[r]:null},t.prototype.set=function(t,n,e,r){var l=i(t,n,e);this.cache_[l]=r,++this.cacheSize_},t.prototype.setSize=function(t){this.maxCacheSize_=t,this.expire()},t}();function i(t,n,e){return n+":"+t+":"+(e?Object(r.b)(e):"null")}var o=new l},function(t,n,e){"use strict";n.a={POINT:"point",LINE:"line"}},function(t,n,e){"use strict";n.a={OPACITY:"opacity",VISIBLE:"visible",EXTENT:"extent",Z_INDEX:"zIndex",MAX_RESOLUTION:"maxResolution",MIN_RESOLUTION:"minResolution",MAX_ZOOM:"maxZoom",MIN_ZOOM:"minZoom",SOURCE:"source",MAP:"map"}},function(t,n,e){"use strict";var r,l=e(248),i=e(345),o=e(238),u=e(244),s=e(242),a=e(239),h=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),c=function(t){function n(n){var e=t.call(this)||this;e.on,e.once,e.un,e.background_=n.background;var r=Object(s.a)({},n);return"object"==typeof n.properties&&(delete r.properties,Object(s.a)(r,n.properties)),r[i.a.OPACITY]=void 0!==n.opacity?n.opacity:1,Object(u.a)("number"==typeof r[i.a.OPACITY],64),r[i.a.VISIBLE]=void 0===n.visible||n.visible,r[i.a.Z_INDEX]=n.zIndex,r[i.a.MAX_RESOLUTION]=void 0!==n.maxResolution?n.maxResolution:1/0,r[i.a.MIN_RESOLUTION]=void 0!==n.minResolution?n.minResolution:0,r[i.a.MIN_ZOOM]=void 0!==n.minZoom?n.minZoom:-1/0,r[i.a.MAX_ZOOM]=void 0!==n.maxZoom?n.maxZoom:1/0,e.className_=void 0!==r.className?r.className:"ol-layer",delete r.className,e.setProperties(r),e.state_=null,e}return h(n,t),n.prototype.getBackground=function(){return this.background_},n.prototype.getClassName=function(){return this.className_},n.prototype.getLayerState=function(t){var n=this.state_||{layer:this,managed:void 0===t||t},e=this.getZIndex();return n.opacity=Object(a.b)(Math.round(100*this.getOpacity())/100,0,1),n.visible=this.getVisible(),n.extent=this.getExtent(),n.zIndex=void 0!==e||n.managed?e:1/0,n.maxResolution=this.getMaxResolution(),n.minResolution=Math.max(this.getMinResolution(),0),n.minZoom=this.getMinZoom(),n.maxZoom=this.getMaxZoom(),this.state_=n,n},n.prototype.getLayersArray=function(t){return Object(o.b)()},n.prototype.getLayerStatesArray=function(t){return Object(o.b)()},n.prototype.getExtent=function(){return this.get(i.a.EXTENT)},n.prototype.getMaxResolution=function(){return this.get(i.a.MAX_RESOLUTION)},n.prototype.getMinResolution=function(){return this.get(i.a.MIN_RESOLUTION)},n.prototype.getMinZoom=function(){return this.get(i.a.MIN_ZOOM)},n.prototype.getMaxZoom=function(){return this.get(i.a.MAX_ZOOM)},n.prototype.getOpacity=function(){return this.get(i.a.OPACITY)},n.prototype.getSourceState=function(){return Object(o.b)()},n.prototype.getVisible=function(){return this.get(i.a.VISIBLE)},n.prototype.getZIndex=function(){return this.get(i.a.Z_INDEX)},n.prototype.setBackground=function(t){this.background_=t,this.changed()},n.prototype.setExtent=function(t){this.set(i.a.EXTENT,t)},n.prototype.setMaxResolution=function(t){this.set(i.a.MAX_RESOLUTION,t)},n.prototype.setMinResolution=function(t){this.set(i.a.MIN_RESOLUTION,t)},n.prototype.setMaxZoom=function(t){this.set(i.a.MAX_ZOOM,t)},n.prototype.setMinZoom=function(t){this.set(i.a.MIN_ZOOM,t)},n.prototype.setOpacity=function(t){Object(u.a)("number"==typeof t,64),this.set(i.a.OPACITY,t)},n.prototype.setVisible=function(t){this.set(i.a.VISIBLE,t)},n.prototype.setZIndex=function(t){this.set(i.a.Z_INDEX,t)},n.prototype.disposeInternal=function(){this.state_&&(this.state_.layer=null,this.state_=null),t.prototype.disposeInternal.call(this)},n}(l.a);n.a=c},function(t,n,e){"use strict";e.d(n,"a",(function(){return l}));var r=function(){function t(t,n,e,r){this.minX=t,this.maxX=n,this.minY=e,this.maxY=r}return t.prototype.contains=function(t){return this.containsXY(t[1],t[2])},t.prototype.containsTileRange=function(t){return this.minX<=t.minX&&t.maxX<=this.maxX&&this.minY<=t.minY&&t.maxY<=this.maxY},t.prototype.containsXY=function(t,n){return this.minX<=t&&t<=this.maxX&&this.minY<=n&&n<=this.maxY},t.prototype.equals=function(t){return this.minX==t.minX&&this.minY==t.minY&&this.maxX==t.maxX&&this.maxY==t.maxY},t.prototype.extend=function(t){t.minX<this.minX&&(this.minX=t.minX),t.maxX>this.maxX&&(this.maxX=t.maxX),t.minY<this.minY&&(this.minY=t.minY),t.maxY>this.maxY&&(this.maxY=t.maxY)},t.prototype.getHeight=function(){return this.maxY-this.minY+1},t.prototype.getSize=function(){return[this.getWidth(),this.getHeight()]},t.prototype.getWidth=function(){return this.maxX-this.minX+1},t.prototype.intersects=function(t){return this.minX<=t.maxX&&this.maxX>=t.minX&&this.minY<=t.maxY&&this.maxY>=t.minY},t}();function l(t,n,e,l,i){return void 0!==i?(i.minX=t,i.maxX=n,i.minY=e,i.maxY=l,i):new r(t,n,e,l)}n.b=r},function(t,n,e){"use strict";var r,l=e(349),i=e(275),o=e(246),u=e(364),s=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),a=function(t){function n(n,e,r,l,i,o){var u=t.call(this,n,e,o)||this;return u.crossOrigin_=l,u.src_=r,u.key=r,u.image_=new Image,null!==l&&(u.image_.crossOrigin=l),u.unlisten_=null,u.tileLoadFunction_=i,u}return s(n,t),n.prototype.getImage=function(){return this.image_},n.prototype.setImage=function(t){this.image_=t,this.state=i.a.LOADED,this.unlistenImage_(),this.changed()},n.prototype.handleImageError_=function(){var t;this.state=i.a.ERROR,this.unlistenImage_(),this.image_=((t=Object(o.a)(1,1)).fillStyle="rgba(0,0,0,0)",t.fillRect(0,0,1,1),t.canvas),this.changed()},n.prototype.handleImageLoad_=function(){var t=this.image_;t.naturalWidth&&t.naturalHeight?this.state=i.a.LOADED:this.state=i.a.EMPTY,this.unlistenImage_(),this.changed()},n.prototype.load=function(){this.state==i.a.ERROR&&(this.state=i.a.IDLE,this.image_=new Image,null!==this.crossOrigin_&&(this.image_.crossOrigin=this.crossOrigin_)),this.state==i.a.IDLE&&(this.state=i.a.LOADING,this.changed(),this.tileLoadFunction_(this,this.src_),this.unlisten_=Object(u.a)(this.image_,this.handleImageLoad_.bind(this),this.handleImageError_.bind(this)))},n.prototype.unlistenImage_=function(){this.unlisten_&&(this.unlisten_(),this.unlisten_=null)},n}(l.a);n.a=a},function(t,n,e){"use strict";var r,l=e(284),i=e(240),o=e(275),u=e(238),s=e(272),a=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),h=function(t){function n(n,e,r){var l=t.call(this)||this,i=r||{};return l.tileCoord=n,l.state=e,l.interimTile=null,l.key="",l.transition_=void 0===i.transition?250:i.transition,l.transitionStarts_={},l.interpolate=!!i.interpolate,l}return a(n,t),n.prototype.changed=function(){this.dispatchEvent(i.a.CHANGE)},n.prototype.release=function(){},n.prototype.getKey=function(){return this.key+"/"+this.tileCoord},n.prototype.getInterimTile=function(){if(!this.interimTile)return this;var t=this.interimTile;do{if(t.getState()==o.a.LOADED)return this.transition_=0,t;t=t.interimTile}while(t);return this},n.prototype.refreshInterimChain=function(){if(this.interimTile){var t=this.interimTile,n=this;do{if(t.getState()==o.a.LOADED){t.interimTile=null;break}t.getState()==o.a.LOADING?n=t:t.getState()==o.a.IDLE?n.interimTile=t.interimTile:n=t,t=n.interimTile}while(t)}},n.prototype.getTileCoord=function(){return this.tileCoord},n.prototype.getState=function(){return this.state},n.prototype.setState=function(t){if(this.state!==o.a.ERROR&&this.state>t)throw new Error("Tile load sequence violation");this.state=t,this.changed()},n.prototype.load=function(){Object(u.b)()},n.prototype.getAlpha=function(t,n){if(!this.transition_)return 1;var e=this.transitionStarts_[t];if(e){if(-1===e)return 1}else e=n,this.transitionStarts_[t]=e;var r=n-e+1e3/60;return r>=this.transition_?1:Object(s.a)(r/this.transition_)},n.prototype.inTransition=function(t){return!!this.transition_&&-1!==this.transitionStarts_[t]},n.prototype.endTransition=function(t){this.transition_&&(this.transitionStarts_[t]=-1)},n}(l.a);n.a=h},function(t,n,e){"use strict";e.d(n,"b",(function(){return r})),e.d(n,"a",(function(){return l}));var r=.5,l=!0},function(t,n,e){"use strict";e.d(n,"a",(function(){return r})),e.d(n,"b",(function(){return l}));var r={imageSmoothingEnabled:!1,msImageSmoothingEnabled:!1},l={imageSmoothingEnabled:!0,msImageSmoothingEnabled:!0}},,,,,,,,,,function(t,n,e){"use strict";var r,l=e(350),i=e(240),o=e(349),u=e(275),s=e(237),a=e(241),h=e(239),c=function(){function t(t,n,e,r,l,i){this.sourceProj_=t,this.targetProj_=n;var o={},u=Object(a.getTransform)(this.targetProj_,this.sourceProj_);this.transformInv_=function(t){var n=t[0]+"/"+t[1];return o[n]||(o[n]=u(t)),o[n]},this.maxSourceExtent_=r,this.errorThresholdSquared_=l*l,this.triangles_=[],this.wrapsXInSource_=!1,this.canWrapXInSource_=this.sourceProj_.canWrapX()&&!!r&&!!this.sourceProj_.getExtent()&&Object(s.E)(r)==Object(s.E)(this.sourceProj_.getExtent()),this.sourceWorldWidth_=this.sourceProj_.getExtent()?Object(s.E)(this.sourceProj_.getExtent()):null,this.targetWorldWidth_=this.targetProj_.getExtent()?Object(s.E)(this.targetProj_.getExtent()):null;var c=Object(s.C)(e),f=Object(s.D)(e),p=Object(s.v)(e),d=Object(s.u)(e),g=this.transformInv_(c),y=this.transformInv_(f),_=this.transformInv_(p),v=this.transformInv_(d),m=10+(i?Math.max(0,Math.ceil(Object(h.f)(Object(s.t)(e)/(i*i*256*256)))):0);if(this.addQuad_(c,f,p,d,g,y,_,v,m),this.wrapsXInSource_){var b=1/0;this.triangles_.forEach((function(t,n,e){b=Math.min(b,t.source[0][0],t.source[1][0],t.source[2][0])})),this.triangles_.forEach(function(t){if(Math.max(t.source[0][0],t.source[1][0],t.source[2][0])-b>this.sourceWorldWidth_/2){var n=[[t.source[0][0],t.source[0][1]],[t.source[1][0],t.source[1][1]],[t.source[2][0],t.source[2][1]]];n[0][0]-b>this.sourceWorldWidth_/2&&(n[0][0]-=this.sourceWorldWidth_),n[1][0]-b>this.sourceWorldWidth_/2&&(n[1][0]-=this.sourceWorldWidth_),n[2][0]-b>this.sourceWorldWidth_/2&&(n[2][0]-=this.sourceWorldWidth_);var e=Math.min(n[0][0],n[1][0],n[2][0]);Math.max(n[0][0],n[1][0],n[2][0])-e<this.sourceWorldWidth_/2&&(t.source=n)}}.bind(this))}o={}}return t.prototype.addTriangle_=function(t,n,e,r,l,i){this.triangles_.push({source:[r,l,i],target:[t,n,e]})},t.prototype.addQuad_=function(t,n,e,r,l,i,o,u,a){var c=Object(s.b)([l,i,o,u]),f=this.sourceWorldWidth_?Object(s.E)(c)/this.sourceWorldWidth_:null,p=this.sourceWorldWidth_,d=this.sourceProj_.canWrapX()&&f>.5&&f<1,g=!1;if(a>0){if(this.targetProj_.isGlobal()&&this.targetWorldWidth_){var y=Object(s.b)([t,n,e,r]);g=Object(s.E)(y)/this.targetWorldWidth_>.25||g}!d&&this.sourceProj_.isGlobal()&&f&&(g=f>.25||g)}if(!(!g&&this.maxSourceExtent_&&isFinite(c[0])&&isFinite(c[1])&&isFinite(c[2])&&isFinite(c[3]))||Object(s.F)(c,this.maxSourceExtent_)){var _=0;if(!(g||isFinite(l[0])&&isFinite(l[1])&&isFinite(i[0])&&isFinite(i[1])&&isFinite(o[0])&&isFinite(o[1])&&isFinite(u[0])&&isFinite(u[1])))if(a>0)g=!0;else if(1!=(_=(isFinite(l[0])&&isFinite(l[1])?0:8)+(isFinite(i[0])&&isFinite(i[1])?0:4)+(isFinite(o[0])&&isFinite(o[1])?0:2)+(isFinite(u[0])&&isFinite(u[1])?0:1))&&2!=_&&4!=_&&8!=_)return;if(a>0){if(!g){var v=[(t[0]+e[0])/2,(t[1]+e[1])/2],m=this.transformInv_(v),b=void 0;if(d)b=(Object(h.g)(l[0],p)+Object(h.g)(o[0],p))/2-Object(h.g)(m[0],p);else b=(l[0]+o[0])/2-m[0];var x=(l[1]+o[1])/2-m[1];g=b*b+x*x>this.errorThresholdSquared_}if(g){if(Math.abs(t[0]-e[0])<=Math.abs(t[1]-e[1])){var w=[(n[0]+e[0])/2,(n[1]+e[1])/2],E=this.transformInv_(w),C=[(r[0]+t[0])/2,(r[1]+t[1])/2],O=this.transformInv_(C);this.addQuad_(t,n,w,C,l,i,E,O,a-1),this.addQuad_(C,w,e,r,O,E,o,u,a-1)}else{var M=[(t[0]+n[0])/2,(t[1]+n[1])/2],S=this.transformInv_(M),I=[(e[0]+r[0])/2,(e[1]+r[1])/2],P=this.transformInv_(I);this.addQuad_(t,M,I,r,l,S,P,u,a-1),this.addQuad_(M,n,e,I,S,i,o,P,a-1)}return}}if(d){if(!this.canWrapXInSource_)return;this.wrapsXInSource_=!0}0==(11&_)&&this.addTriangle_(t,e,r,l,o,u),0==(14&_)&&this.addTriangle_(t,e,n,l,o,i),_&&(0==(13&_)&&this.addTriangle_(n,r,t,i,u,l),0==(7&_)&&this.addTriangle_(n,r,e,i,u,o))}},t.prototype.calculateSourceExtent=function(){var t=Object(s.j)();return this.triangles_.forEach((function(n,e,r){var l=n.source;Object(s.q)(t,l[0]),Object(s.q)(t,l[1]),Object(s.q)(t,l[2])})),t},t.prototype.getTriangles=function(){return this.triangles_},t}(),f=e(351),p=e(242),d=e(246),g=[];function y(t,n,e,r,l){t.beginPath(),t.moveTo(0,0),t.lineTo(n,e),t.lineTo(r,l),t.closePath(),t.save(),t.clip(),t.fillRect(0,0,Math.max(n,r)+1,Math.max(e,l)),t.restore()}function _(t,n){return Math.abs(t[4*n]-210)>2||Math.abs(t[4*n+3]-191.25)>2}function v(t,n,e,r){var l=Object(a.transform)(e,n,t),i=Object(a.getPointResolution)(n,r,e),o=n.getMetersPerUnit();void 0!==o&&(i*=o);var u=t.getMetersPerUnit();void 0!==u&&(i/=u);var h=t.getExtent();if(!h||Object(s.f)(h,l)){var c=Object(a.getPointResolution)(t,i,l)/i;isFinite(c)&&c>0&&(i/=c)}return i}function m(t,n,e,l,i,o,u,a,c,v,m,b){var x=Object(d.a)(Math.round(e*t),Math.round(e*n),g);if(b||Object(p.a)(x,f.a),0===c.length)return x.canvas;function w(t){return Math.round(t*e)/e}x.scale(e,e),x.globalCompositeOperation="lighter";var E=Object(s.j)();c.forEach((function(t,n,e){Object(s.p)(E,t.extent)}));var C=Object(s.E)(E),O=Object(s.z)(E),M=Object(d.a)(Math.round(e*C/l),Math.round(e*O/l));b||Object(p.a)(M,f.a);var S=e/l;c.forEach((function(t,n,e){var r=t.extent[0]-E[0],l=-(t.extent[3]-E[3]),i=Object(s.E)(t.extent),o=Object(s.z)(t.extent);t.image.width>0&&t.image.height>0&&M.drawImage(t.image,v,v,t.image.width-2*v,t.image.height-2*v,r*S,l*S,i*S,o*S)}));var I=Object(s.C)(u);return a.getTriangles().forEach((function(t,n,i){var u=t.source,s=t.target,a=u[0][0],c=u[0][1],f=u[1][0],p=u[1][1],d=u[2][0],g=u[2][1],v=w((s[0][0]-I[0])/o),m=w(-(s[0][1]-I[1])/o),C=w((s[1][0]-I[0])/o),O=w(-(s[1][1]-I[1])/o),S=w((s[2][0]-I[0])/o),P=w(-(s[2][1]-I[1])/o),R=a,T=c;a=0,c=0;var N=[[f-=R,p-=T,0,0,C-v],[d-=R,g-=T,0,0,S-v],[0,0,f,p,O-m],[0,0,d,g,P-m]],L=Object(h.h)(N);if(L){if(x.save(),x.beginPath(),function(){if(void 0===r){var t=document.createElement("canvas").getContext("2d");t.globalCompositeOperation="lighter",t.fillStyle="rgba(210, 0, 0, 0.75)",y(t,4,5,4,0),y(t,4,5,0,5);var n=t.getImageData(0,0,3,3).data;r=_(n,0)||_(n,4)||_(n,8)}return r}()||!b){x.moveTo(C,O);for(var A=v-C,j=m-O,D=0;D<4;D++)x.lineTo(C+w((D+1)*A/4),O+w(D*j/3)),3!=D&&x.lineTo(C+w((D+1)*A/4),O+w((D+1)*j/3));x.lineTo(S,P)}else x.moveTo(C,O),x.lineTo(v,m),x.lineTo(S,P);x.clip(),x.transform(L[0],L[2],L[1],L[3],v,m),x.translate(E[0]-R,E[3]-T),x.scale(l/e,-l/e),x.drawImage(M.canvas,0,0),x.restore()}})),m&&(x.save(),x.globalCompositeOperation="source-over",x.strokeStyle="black",x.lineWidth=1,a.getTriangles().forEach((function(t,n,e){var r=t.target,l=(r[0][0]-I[0])/o,i=-(r[0][1]-I[1])/o,u=(r[1][0]-I[0])/o,s=-(r[1][1]-I[1])/o,a=(r[2][0]-I[0])/o,h=-(r[2][1]-I[1])/o;x.beginPath(),x.moveTo(u,s),x.lineTo(l,i),x.lineTo(a,h),x.closePath(),x.stroke()})),x.restore()),x.canvas}var b,x=e(245),w=(b=function(t,n){return(b=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}b(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),E=function(t){function n(n,e,r,i,o,a,f,p,d,g,y,_){var m=t.call(this,o,u.a.IDLE,{interpolate:!!_})||this;m.renderEdges_=void 0!==y&&y,m.pixelRatio_=f,m.gutter_=p,m.canvas_=null,m.sourceTileGrid_=e,m.targetTileGrid_=i,m.wrappedTileCoord_=a||o,m.sourceTiles_=[],m.sourcesListenerKeys_=null,m.sourceZ_=0;var b=i.getTileCoordExtent(m.wrappedTileCoord_),x=m.targetTileGrid_.getExtent(),w=m.sourceTileGrid_.getExtent(),E=x?Object(s.A)(b,x):b;if(0===Object(s.t)(E))return m.state=u.a.EMPTY,m;var C=n.getExtent();C&&(w=w?Object(s.A)(w,C):C);var O=i.getResolution(m.wrappedTileCoord_[0]),M=function(t,n,e,r){var l=Object(s.w)(e),i=v(t,n,l,r);return(!isFinite(i)||i<=0)&&Object(s.s)(e,(function(e){return i=v(t,n,e,r),isFinite(i)&&i>0})),i}(n,r,E,O);if(!isFinite(M)||M<=0)return m.state=u.a.EMPTY,m;var S=void 0!==g?g:l.b;if(m.triangulation_=new c(n,r,E,w,M*S,O),0===m.triangulation_.getTriangles().length)return m.state=u.a.EMPTY,m;m.sourceZ_=e.getZForResolution(M);var I=m.triangulation_.calculateSourceExtent();if(w&&(n.canWrapX()?(I[1]=Object(h.b)(I[1],w[1],w[3]),I[3]=Object(h.b)(I[3],w[1],w[3])):I=Object(s.A)(I,w)),Object(s.t)(I)){for(var P=e.getTileRangeForExtentAndZ(I,m.sourceZ_),R=P.minX;R<=P.maxX;R++)for(var T=P.minY;T<=P.maxY;T++){var N=d(m.sourceZ_,R,T,f);N&&m.sourceTiles_.push(N)}0===m.sourceTiles_.length&&(m.state=u.a.EMPTY)}else m.state=u.a.EMPTY;return m}return w(n,t),n.prototype.getImage=function(){return this.canvas_},n.prototype.reproject_=function(){var t=[];if(this.sourceTiles_.forEach(function(n,e,r){n&&n.getState()==u.a.LOADED&&t.push({extent:this.sourceTileGrid_.getTileCoordExtent(n.tileCoord),image:n.getImage()})}.bind(this)),this.sourceTiles_.length=0,0===t.length)this.state=u.a.ERROR;else{var n=this.wrappedTileCoord_[0],e=this.targetTileGrid_.getTileSize(n),r="number"==typeof e?e:e[0],l="number"==typeof e?e:e[1],i=this.targetTileGrid_.getResolution(n),o=this.sourceTileGrid_.getResolution(this.sourceZ_),s=this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);this.canvas_=m(r,l,this.pixelRatio_,o,this.sourceTileGrid_.getExtent(),i,s,this.triangulation_,t,this.gutter_,this.renderEdges_,this.interpolate),this.state=u.a.LOADED}this.changed()},n.prototype.load=function(){if(this.state==u.a.IDLE){this.state=u.a.LOADING,this.changed();var t=0;this.sourcesListenerKeys_=[],this.sourceTiles_.forEach(function(n,e,r){var l=n.getState();if(l==u.a.IDLE||l==u.a.LOADING){t++;var o=Object(x.a)(n,i.a.CHANGE,(function(e){var r=n.getState();r!=u.a.LOADED&&r!=u.a.ERROR&&r!=u.a.EMPTY||(Object(x.c)(o),0===--t&&(this.unlistenSources_(),this.reproject_()))}),this);this.sourcesListenerKeys_.push(o)}}.bind(this)),0===t?setTimeout(this.reproject_.bind(this),0):this.sourceTiles_.forEach((function(t,n,e){t.getState()==u.a.IDLE&&t.load()}))}},n.prototype.unlistenSources_=function(){this.sourcesListenerKeys_.forEach(x.c),this.sourcesListenerKeys_=null},n.prototype.release=function(){this.canvas_&&(Object(d.d)(this.canvas_.getContext("2d")),g.push(this.canvas_),this.canvas_=null),t.prototype.release.call(this)},n}(o.a);n.a=E},function(t,n,e){"use strict";function r(t,n,e,r){for(;n<e-r;){for(var l=0;l<r;++l){var i=t[n+l];t[n+l]=t[e-r+l],t[e-r+l]=i}n+=r,e-=r}}function l(t,n,e,r){for(var l=0,i=t[e-r],o=t[e-r+1];n<e;n+=r){var u=t[n],s=t[n+1];l+=(u-i)*(s+o),i=u,o=s}return 0===l?void 0:l>0}function i(t,n,e,r,i){for(var o=void 0!==i&&i,u=0,s=e.length;u<s;++u){var a=e[u],h=l(t,n,a,r);if(0===u){if(o&&h||!o&&!h)return!1}else if(o&&!h||!o&&h)return!1;n=a}return!0}function o(t,n,e,r,l){for(var o=0,u=e.length;o<u;++o){var s=e[o];if(!i(t,n,s,r,l))return!1;s.length&&(n=s[s.length-1])}return!0}function u(t,n,e,i,o){for(var u=void 0!==o&&o,s=0,a=e.length;s<a;++s){var h=e[s],c=l(t,n,h,i);(0===s?u&&c||!u&&!c:u&&!c||!u&&c)&&r(t,n,h,i),n=h}return n}function s(t,n,e,r,l){for(var i=0,o=e.length;i<o;++i)n=u(t,n,e[i],r,l);return n}e.d(n,"a",(function(){return i})),e.d(n,"b",(function(){return o})),e.d(n,"c",(function(){return u})),e.d(n,"d",(function(){return s}))},function(t,n,e){"use strict";e.d(n,"a",(function(){return v}));var r,l=e(240),i=e(285),o=e(304),u=e(238),s=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),a=function(t){function n(n){var e=t.call(this)||this;return e.ready=!0,e.boundHandleImageChange_=e.handleImageChange_.bind(e),e.layer_=n,e.declutterExecutorGroup=null,e}return s(n,t),n.prototype.getFeatures=function(t){return Object(u.b)()},n.prototype.getData=function(t){return null},n.prototype.prepareFrame=function(t){return Object(u.b)()},n.prototype.renderFrame=function(t,n){return Object(u.b)()},n.prototype.loadedTileCallback=function(t,n,e){t[n]||(t[n]={}),t[n][e.tileCoord.toString()]=e},n.prototype.createLoadedTileFinder=function(t,n,e){return function(r,l){var i=this.loadedTileCallback.bind(this,e,r);return t.forEachLoadedTile(n,r,l,i)}.bind(this)},n.prototype.forEachFeatureAtCoordinate=function(t,n,e,r,l){},n.prototype.getDataAtPixel=function(t,n,e){return null},n.prototype.getLayer=function(){return this.layer_},n.prototype.handleFontsChanged=function(){},n.prototype.handleImageChange_=function(t){t.target.getState()===i.a.LOADED&&this.renderIfReadyAndVisible()},n.prototype.loadImage=function(t){var n=t.getState();return n!=i.a.LOADED&&n!=i.a.ERROR&&t.addEventListener(l.a.CHANGE,this.boundHandleImageChange_),n==i.a.IDLE&&(t.load(),n=t.getState()),n==i.a.LOADED},n.prototype.renderIfReadyAndVisible=function(){var t=this.getLayer();t&&t.getVisible()&&"ready"===t.getSourceState()&&t.changed()},n.prototype.disposeInternal=function(){delete this.layer_,t.prototype.disposeInternal.call(this)},n}(o.a),h=e(341),c=e(303),f=e(258),p=e(287),d=e(237),g=e(246),y=e(243),_=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),v=[],m=null;var b=function(t){function n(n){var e=t.call(this,n)||this;return e.container=null,e.renderedResolution,e.tempTransform=Object(f.c)(),e.pixelTransform=Object(f.c)(),e.inversePixelTransform=Object(f.c)(),e.context=null,e.containerReused=!1,e.pixelContext_=null,e.frameState=null,e}return _(n,t),n.prototype.getImageData=function(t,n,e){var r,l;m||((r=document.createElement("canvas")).width=1,r.height=1,m=r.getContext("2d")),m.clearRect(0,0,1,1);try{m.drawImage(t,n,e,1,1,0,0,1,1),l=m.getImageData(0,0,1,1).data}catch(t){return m=null,null}return l},n.prototype.getBackground=function(t){var n=this.getLayer().getBackground();return"function"==typeof n&&(n=n(t.viewState.resolution)),n||void 0},n.prototype.useContainer=function(t,n,e){var r,l,i=this.getLayer().getClassName();t&&t.className===i&&(!e||t&&t.style.backgroundColor&&Object(y.b)(Object(p.a)(t.style.backgroundColor),Object(p.a)(e)))&&((u=t.firstElementChild)instanceof HTMLCanvasElement&&(l=u.getContext("2d")));if(l&&l.canvas.style.transform===n?(this.container=t,this.context=l,this.containerReused=!0):this.containerReused&&(this.container=null,this.context=null,this.containerReused=!1),!this.container){(r=document.createElement("div")).className=i;var o=r.style;o.position="absolute",o.width="100%",o.height="100%";var u=(l=Object(g.a)()).canvas;r.appendChild(u),(o=u.style).position="absolute",o.left="0",o.transformOrigin="top left",this.container=r,this.context=l}this.containerReused||!e||this.container.style.backgroundColor||(this.container.style.backgroundColor=e)},n.prototype.clipUnrotated=function(t,n,e){var r=Object(d.C)(e),l=Object(d.D)(e),i=Object(d.v)(e),o=Object(d.u)(e);Object(f.a)(n.coordinateToPixelTransform,r),Object(f.a)(n.coordinateToPixelTransform,l),Object(f.a)(n.coordinateToPixelTransform,i),Object(f.a)(n.coordinateToPixelTransform,o);var u=this.inversePixelTransform;Object(f.a)(u,r),Object(f.a)(u,l),Object(f.a)(u,i),Object(f.a)(u,o),t.save(),t.beginPath(),t.moveTo(Math.round(r[0]),Math.round(r[1])),t.lineTo(Math.round(l[0]),Math.round(l[1])),t.lineTo(Math.round(i[0]),Math.round(i[1])),t.lineTo(Math.round(o[0]),Math.round(o[1])),t.clip()},n.prototype.dispatchRenderEvent_=function(t,n,e){var r=this.getLayer();if(r.hasListener(t)){var l=new h.a(t,this.inversePixelTransform,e,n);r.dispatchEvent(l)}},n.prototype.preRender=function(t,n){this.frameState=n,this.dispatchRenderEvent_(c.a.PRERENDER,t,n)},n.prototype.postRender=function(t,n){this.dispatchRenderEvent_(c.a.POSTRENDER,t,n)},n.prototype.getRenderTransform=function(t,n,e,r,l,i,o){var u=l/2,s=i/2,a=r/n,h=-a,c=-t[0]+o,p=-t[1];return Object(f.b)(this.tempTransform,u,s,a,h,-e,c,p)},n.prototype.getDataAtPixel=function(t,n,e){var r=Object(f.a)(this.inversePixelTransform,t.slice()),l=this.context,i=this.getLayer().getExtent();if(i){var o=Object(f.a)(n.pixelToCoordinateTransform,t.slice());if(!Object(d.f)(i,o))return null}var u,s=Math.round(r[0]),a=Math.round(r[1]),h=this.pixelContext_;if(!h){var c=document.createElement("canvas");c.width=1,c.height=1,h=c.getContext("2d"),this.pixelContext_=h}h.clearRect(0,0,1,1);try{h.drawImage(l.canvas,s,a,1,1,0,0,1,1),u=h.getImageData(0,0,1,1).data}catch(t){return"SecurityError"===t.name?(this.pixelContext_=null,new Uint8Array):u}return 0===u[3]?null:u},n.prototype.disposeInternal=function(){delete this.frameState,t.prototype.disposeInternal.call(this)},n}(a);n.b=b},function(t,n,e){"use strict";e.d(n,"a",(function(){return d}));var r,l=e(240),i=e(284),o=e(238),u=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),s=function(t){function n(n,e,r,l){var i=t.call(this)||this;return i.extent=n,i.pixelRatio_=r,i.resolution=e,i.state=l,i}return u(n,t),n.prototype.changed=function(){this.dispatchEvent(l.a.CHANGE)},n.prototype.getExtent=function(){return this.extent},n.prototype.getImage=function(){return Object(o.b)()},n.prototype.getPixelRatio=function(){return this.pixelRatio_},n.prototype.getResolution=function(){return this.resolution},n.prototype.getState=function(){return this.state},n.prototype.load=function(){Object(o.b)()},n}(i.a),a=e(285),h=e(259),c=e(237),f=e(245),p=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}();function d(t,n,e){var r=t,i=!0,o=!1,u=!1,s=[Object(f.b)(r,l.a.LOAD,(function(){u=!0,o||n()}))];return r.src&&h.c?(o=!0,r.decode().then((function(){i&&n()})).catch((function(t){i&&(u?n():e())}))):s.push(Object(f.b)(r,l.a.ERROR,e)),function(){i=!1,s.forEach(f.c)}}!function(t){function n(n,e,r,l,i,o){var u=t.call(this,n,e,r,a.a.IDLE)||this;return u.src_=l,u.image_=new Image,null!==i&&(u.image_.crossOrigin=i),u.unlisten_=null,u.state=a.a.IDLE,u.imageLoadFunction_=o,u}p(n,t),n.prototype.getImage=function(){return this.image_},n.prototype.handleImageError_=function(){this.state=a.a.ERROR,this.unlistenImage_(),this.changed()},n.prototype.handleImageLoad_=function(){void 0===this.resolution&&(this.resolution=Object(c.z)(this.extent)/this.image_.height),this.state=a.a.LOADED,this.unlistenImage_(),this.changed()},n.prototype.load=function(){this.state!=a.a.IDLE&&this.state!=a.a.ERROR||(this.state=a.a.LOADING,this.changed(),this.imageLoadFunction_(this,this.src_),this.unlisten_=d(this.image_,this.handleImageLoad_.bind(this),this.handleImageError_.bind(this)))},n.prototype.setImage=function(t){this.image_=t,this.resolution=Object(c.z)(this.extent)/this.image_.height},n.prototype.unlistenImage_=function(){this.unlisten_&&(this.unlisten_(),this.unlisten_=null)}}(s)},,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,n,e){t.exports=function(){"use strict";var t=484813681109536e-20,n=Math.PI/2,e=.017453292519943295,r=57.29577951308232,l=Math.PI/4,i=2*Math.PI,o=3.14159265359,u={greenwich:0,lisbon:-9.131906111111,paris:2.337229166667,bogota:-74.080916666667,madrid:-3.687938888889,rome:12.452333333333,bern:7.439583333333,jakarta:106.807719444444,ferro:-17.666666666667,brussels:4.367975,stockholm:18.058277777778,athens:23.7163375,oslo:10.722916666667},s={ft:{to_meter:.3048},"us-ft":{to_meter:1200/3937}},a=/[\s_\-\/\(\)]/g;function h(t,n){if(t[n])return t[n];for(var e,r=Object.keys(t),l=n.toLowerCase().replace(a,""),i=-1;++i<r.length;)if((e=r[i]).toLowerCase().replace(a,"")===l)return t[e]}var c=function(t){var n,r,l,i={},o=t.split("+").map((function(t){return t.trim()})).filter((function(t){return t})).reduce((function(t,n){var e=n.split("=");return e.push(!0),t[e[0].toLowerCase()]=e[1],t}),{}),a={proj:"projName",datum:"datumCode",rf:function(t){i.rf=parseFloat(t)},lat_0:function(t){i.lat0=t*e},lat_1:function(t){i.lat1=t*e},lat_2:function(t){i.lat2=t*e},lat_ts:function(t){i.lat_ts=t*e},lon_0:function(t){i.long0=t*e},lon_1:function(t){i.long1=t*e},lon_2:function(t){i.long2=t*e},alpha:function(t){i.alpha=parseFloat(t)*e},gamma:function(t){i.rectified_grid_angle=parseFloat(t)},lonc:function(t){i.longc=t*e},x_0:function(t){i.x0=parseFloat(t)},y_0:function(t){i.y0=parseFloat(t)},k_0:function(t){i.k0=parseFloat(t)},k:function(t){i.k0=parseFloat(t)},a:function(t){i.a=parseFloat(t)},b:function(t){i.b=parseFloat(t)},r_a:function(){i.R_A=!0},zone:function(t){i.zone=parseInt(t,10)},south:function(){i.utmSouth=!0},towgs84:function(t){i.datum_params=t.split(",").map((function(t){return parseFloat(t)}))},to_meter:function(t){i.to_meter=parseFloat(t)},units:function(t){i.units=t;var n=h(s,t);n&&(i.to_meter=n.to_meter)},from_greenwich:function(t){i.from_greenwich=t*e},pm:function(t){var n=h(u,t);i.from_greenwich=(n||parseFloat(t))*e},nadgrids:function(t){"@null"===t?i.datumCode="none":i.nadgrids=t},axis:function(t){3===t.length&&-1!=="ewnsud".indexOf(t.substr(0,1))&&-1!=="ewnsud".indexOf(t.substr(1,1))&&-1!=="ewnsud".indexOf(t.substr(2,1))&&(i.axis=t)},approx:function(){i.approx=!0}};for(n in o)r=o[n],n in a?"function"==typeof(l=a[n])?l(r):i[l]=r:i[n]=r;return"string"==typeof i.datumCode&&"WGS84"!==i.datumCode&&(i.datumCode=i.datumCode.toLowerCase()),i},f=/\s/,p=/[A-Za-z]/,d=/[A-Za-z84]/,g=/[,\]]/,y=/[\d\.E\-\+]/;function _(t){if("string"!=typeof t)throw new Error("not a string");this.text=t.trim(),this.level=0,this.place=0,this.root=null,this.stack=[],this.currentObject=null,this.state=1}function v(t,n,e){Array.isArray(n)&&(e.unshift(n),n=null);var r=n?{}:t,l=e.reduce((function(t,n){return m(n,t),t}),r);n&&(t[n]=l)}function m(t,n){if(Array.isArray(t)){var e=t.shift();if("PARAMETER"===e&&(e=t.shift()),1===t.length)return Array.isArray(t[0])?(n[e]={},void m(t[0],n[e])):void(n[e]=t[0]);if(t.length)if("TOWGS84"!==e){if("AXIS"===e)return e in n||(n[e]=[]),void n[e].push(t);var r;switch(Array.isArray(e)||(n[e]={}),e){case"UNIT":case"PRIMEM":case"VERT_DATUM":return n[e]={name:t[0].toLowerCase(),convert:t[1]},void(3===t.length&&m(t[2],n[e]));case"SPHEROID":case"ELLIPSOID":return n[e]={name:t[0],a:t[1],rf:t[2]},void(4===t.length&&m(t[3],n[e]));case"PROJECTEDCRS":case"PROJCRS":case"GEOGCS":case"GEOCCS":case"PROJCS":case"LOCAL_CS":case"GEODCRS":case"GEODETICCRS":case"GEODETICDATUM":case"EDATUM":case"ENGINEERINGDATUM":case"VERT_CS":case"VERTCRS":case"VERTICALCRS":case"COMPD_CS":case"COMPOUNDCRS":case"ENGINEERINGCRS":case"ENGCRS":case"FITTED_CS":case"LOCAL_DATUM":case"DATUM":return t[0]=["name",t[0]],void v(n,e,t);default:for(r=-1;++r<t.length;)if(!Array.isArray(t[r]))return m(t,n[e]);return v(n,e,t)}}else n[e]=t;else n[e]=!0}else n[t]=!0}function b(t){return.017453292519943295*t}_.prototype.readCharicter=function(){var t=this.text[this.place++];if(4!==this.state)for(;f.test(t);){if(this.place>=this.text.length)return;t=this.text[this.place++]}switch(this.state){case 1:return this.neutral(t);case 2:return this.keyword(t);case 4:return this.quoted(t);case 5:return this.afterquote(t);case 3:return this.number(t);case-1:return}},_.prototype.afterquote=function(t){if('"'===t)return this.word+='"',void(this.state=4);if(g.test(t))return this.word=this.word.trim(),void this.afterItem(t);throw new Error("havn't handled \""+t+'" in afterquote yet, index '+this.place)},_.prototype.afterItem=function(t){return","===t?(null!==this.word&&this.currentObject.push(this.word),this.word=null,void(this.state=1)):"]"===t?(this.level--,null!==this.word&&(this.currentObject.push(this.word),this.word=null),this.state=1,this.currentObject=this.stack.pop(),void(this.currentObject||(this.state=-1))):void 0},_.prototype.number=function(t){if(!y.test(t)){if(g.test(t))return this.word=parseFloat(this.word),void this.afterItem(t);throw new Error("havn't handled \""+t+'" in number yet, index '+this.place)}this.word+=t},_.prototype.quoted=function(t){'"'!==t?this.word+=t:this.state=5},_.prototype.keyword=function(t){if(d.test(t))this.word+=t;else{if("["===t){var n=[];return n.push(this.word),this.level++,null===this.root?this.root=n:this.currentObject.push(n),this.stack.push(this.currentObject),this.currentObject=n,void(this.state=1)}if(!g.test(t))throw new Error("havn't handled \""+t+'" in keyword yet, index '+this.place);this.afterItem(t)}},_.prototype.neutral=function(t){if(p.test(t))return this.word=t,void(this.state=2);if('"'===t)return this.word="",void(this.state=4);if(y.test(t))return this.word=t,void(this.state=3);if(!g.test(t))throw new Error("havn't handled \""+t+'" in neutral yet, index '+this.place);this.afterItem(t)},_.prototype.output=function(){for(;this.place<this.text.length;)this.readCharicter();if(-1===this.state)return this.root;throw new Error('unable to parse string "'+this.text+'". State is '+this.state)};var x=function(t){var n=new _(t).output(),e=n.shift(),r=n.shift();n.unshift(["name",r]),n.unshift(["type",e]);var l={};return m(n,l),function(t){if("GEOGCS"===t.type?t.projName="longlat":"LOCAL_CS"===t.type?(t.projName="identity",t.local=!0):"object"==typeof t.PROJECTION?t.projName=Object.keys(t.PROJECTION)[0]:t.projName=t.PROJECTION,t.AXIS){for(var n="",e=0,r=t.AXIS.length;e<r;++e){var l=[t.AXIS[e][0].toLowerCase(),t.AXIS[e][1].toLowerCase()];-1!==l[0].indexOf("north")||("y"===l[0]||"lat"===l[0])&&"north"===l[1]?n+="n":-1!==l[0].indexOf("south")||("y"===l[0]||"lat"===l[0])&&"south"===l[1]?n+="s":-1!==l[0].indexOf("east")||("x"===l[0]||"lon"===l[0])&&"east"===l[1]?n+="e":-1===l[0].indexOf("west")&&("x"!==l[0]&&"lon"!==l[0]||"west"!==l[1])||(n+="w")}2===n.length&&(n+="u"),3===n.length&&(t.axis=n)}t.UNIT&&(t.units=t.UNIT.name.toLowerCase(),"metre"===t.units&&(t.units="meter"),t.UNIT.convert&&("GEOGCS"===t.type?t.DATUM&&t.DATUM.SPHEROID&&(t.to_meter=t.UNIT.convert*t.DATUM.SPHEROID.a):t.to_meter=t.UNIT.convert));var i=t.GEOGCS;function o(n){return n*(t.to_meter||1)}"GEOGCS"===t.type&&(i=t),i&&(i.DATUM?t.datumCode=i.DATUM.name.toLowerCase():t.datumCode=i.name.toLowerCase(),"d_"===t.datumCode.slice(0,2)&&(t.datumCode=t.datumCode.slice(2)),"new_zealand_geodetic_datum_1949"!==t.datumCode&&"new_zealand_1949"!==t.datumCode||(t.datumCode="nzgd49"),"wgs_1984"!==t.datumCode&&"world_geodetic_system_1984"!==t.datumCode||("Mercator_Auxiliary_Sphere"===t.PROJECTION&&(t.sphere=!0),t.datumCode="wgs84"),"_ferro"===t.datumCode.slice(-6)&&(t.datumCode=t.datumCode.slice(0,-6)),"_jakarta"===t.datumCode.slice(-8)&&(t.datumCode=t.datumCode.slice(0,-8)),~t.datumCode.indexOf("belge")&&(t.datumCode="rnb72"),i.DATUM&&i.DATUM.SPHEROID&&(t.ellps=i.DATUM.SPHEROID.name.replace("_19","").replace(/[Cc]larke\_18/,"clrk"),"international"===t.ellps.toLowerCase().slice(0,13)&&(t.ellps="intl"),t.a=i.DATUM.SPHEROID.a,t.rf=parseFloat(i.DATUM.SPHEROID.rf,10)),i.DATUM&&i.DATUM.TOWGS84&&(t.datum_params=i.DATUM.TOWGS84),~t.datumCode.indexOf("osgb_1936")&&(t.datumCode="osgb36"),~t.datumCode.indexOf("osni_1952")&&(t.datumCode="osni52"),(~t.datumCode.indexOf("tm65")||~t.datumCode.indexOf("geodetic_datum_of_1965"))&&(t.datumCode="ire65"),"ch1903+"===t.datumCode&&(t.datumCode="ch1903"),~t.datumCode.indexOf("israel")&&(t.datumCode="isr93")),t.b&&!isFinite(t.b)&&(t.b=t.a),[["standard_parallel_1","Standard_Parallel_1"],["standard_parallel_1","Latitude of 1st standard parallel"],["standard_parallel_2","Standard_Parallel_2"],["standard_parallel_2","Latitude of 2nd standard parallel"],["false_easting","False_Easting"],["false_easting","False easting"],["false-easting","Easting at false origin"],["false_northing","False_Northing"],["false_northing","False northing"],["false_northing","Northing at false origin"],["central_meridian","Central_Meridian"],["central_meridian","Longitude of natural origin"],["central_meridian","Longitude of false origin"],["latitude_of_origin","Latitude_Of_Origin"],["latitude_of_origin","Central_Parallel"],["latitude_of_origin","Latitude of natural origin"],["latitude_of_origin","Latitude of false origin"],["scale_factor","Scale_Factor"],["k0","scale_factor"],["latitude_of_center","Latitude_Of_Center"],["latitude_of_center","Latitude_of_center"],["lat0","latitude_of_center",b],["longitude_of_center","Longitude_Of_Center"],["longitude_of_center","Longitude_of_center"],["longc","longitude_of_center",b],["x0","false_easting",o],["y0","false_northing",o],["long0","central_meridian",b],["lat0","latitude_of_origin",b],["lat0","standard_parallel_1",b],["lat1","standard_parallel_1",b],["lat2","standard_parallel_2",b],["azimuth","Azimuth"],["alpha","azimuth",b],["srsCode","name"]].forEach((function(n){return function(t,n){var e=n[0],r=n[1];!(e in t)&&r in t&&(t[e]=t[r],3===n.length&&(t[e]=n[2](t[e])))}(t,n)})),t.long0||!t.longc||"Albers_Conic_Equal_Area"!==t.projName&&"Lambert_Azimuthal_Equal_Area"!==t.projName||(t.long0=t.longc),t.lat_ts||!t.lat1||"Stereographic_South_Pole"!==t.projName&&"Polar Stereographic (variant B)"!==t.projName||(t.lat0=b(t.lat1>0?90:-90),t.lat_ts=t.lat1)}(l),l};function w(t){var n=this;if(2===arguments.length){var e=arguments[1];"string"==typeof e?"+"===e.charAt(0)?w[t]=c(arguments[1]):w[t]=x(arguments[1]):w[t]=e}else if(1===arguments.length){if(Array.isArray(t))return t.map((function(t){Array.isArray(t)?w.apply(n,t):w(t)}));if("string"==typeof t){if(t in w)return w[t]}else"EPSG"in t?w["EPSG:"+t.EPSG]=t:"ESRI"in t?w["ESRI:"+t.ESRI]=t:"IAU2000"in t?w["IAU2000:"+t.IAU2000]=t:console.log(t);return}}!function(t){t("EPSG:4326","+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees"),t("EPSG:4269","+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees"),t("EPSG:3857","+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs"),t.WGS84=t["EPSG:4326"],t["EPSG:3785"]=t["EPSG:3857"],t.GOOGLE=t["EPSG:3857"],t["EPSG:900913"]=t["EPSG:3857"],t["EPSG:102113"]=t["EPSG:3857"]}(w);var E=["PROJECTEDCRS","PROJCRS","GEOGCS","GEOCCS","PROJCS","LOCAL_CS","GEODCRS","GEODETICCRS","GEODETICDATUM","ENGCRS","ENGINEERINGCRS"],C=["3857","900913","3785","102113"];function O(t){if(!function(t){return"string"==typeof t}(t))return t;if(function(t){return t in w}(t))return w[t];if(function(t){return E.some((function(n){return t.indexOf(n)>-1}))}(t)){var n=x(t);if(function(t){var n=h(t,"authority");if(n){var e=h(n,"epsg");return e&&C.indexOf(e)>-1}}(n))return w["EPSG:3857"];var e=function(t){var n=h(t,"extension");if(n)return h(n,"proj4")}(n);return e?c(e):n}return function(t){return"+"===t[0]}(t)?c(t):void 0}var M=function(t,n){var e,r;if(t=t||{},!n)return t;for(r in n)void 0!==(e=n[r])&&(t[r]=e);return t},S=function(t,n,e){var r=t*n;return e/Math.sqrt(1-r*r)},I=function(t){return t<0?-1:1},P=function(t){return Math.abs(t)<=o?t:t-I(t)*i},R=function(t,e,r){var l=t*r,i=.5*t;return l=Math.pow((1-l)/(1+l),i),Math.tan(.5*(n-e))/l},T=function(t,e){for(var r,l,i=.5*t,o=n-2*Math.atan(e),u=0;u<=15;u++)if(r=t*Math.sin(o),o+=l=n-2*Math.atan(e*Math.pow((1-r)/(1+r),i))-o,Math.abs(l)<=1e-10)return o;return-9999};function N(t){return t}var L=[{init:function(){var t=this.b/this.a;this.es=1-t*t,"x0"in this||(this.x0=0),"y0"in this||(this.y0=0),this.e=Math.sqrt(this.es),this.lat_ts?this.sphere?this.k0=Math.cos(this.lat_ts):this.k0=S(this.e,Math.sin(this.lat_ts),Math.cos(this.lat_ts)):this.k0||(this.k?this.k0=this.k:this.k0=1)},forward:function(t){var e,i,o=t.x,u=t.y;if(u*r>90&&u*r<-90&&o*r>180&&o*r<-180)return null;if(Math.abs(Math.abs(u)-n)<=1e-10)return null;if(this.sphere)e=this.x0+this.a*this.k0*P(o-this.long0),i=this.y0+this.a*this.k0*Math.log(Math.tan(l+.5*u));else{var s=Math.sin(u),a=R(this.e,u,s);e=this.x0+this.a*this.k0*P(o-this.long0),i=this.y0-this.a*this.k0*Math.log(a)}return t.x=e,t.y=i,t},inverse:function(t){var e,r,l=t.x-this.x0,i=t.y-this.y0;if(this.sphere)r=n-2*Math.atan(Math.exp(-i/(this.a*this.k0)));else{var o=Math.exp(-i/(this.a*this.k0));if(-9999===(r=T(this.e,o)))return null}return e=P(this.long0+l/(this.a*this.k0)),t.x=e,t.y=r,t},names:["Mercator","Popular Visualisation Pseudo Mercator","Mercator_1SP","Mercator_Auxiliary_Sphere","merc"]},{init:function(){},forward:N,inverse:N,names:["longlat","identity"]}],A={},j=[];function D(t,n){var e=j.length;return t.names?(j[e]=t,t.names.forEach((function(t){A[t.toLowerCase()]=e})),this):(console.log(n),!0)}var k={start:function(){L.forEach(D)},add:D,get:function(t){if(!t)return!1;var n=t.toLowerCase();return void 0!==A[n]&&j[A[n]]?j[A[n]]:void 0}},F={MERIT:{a:6378137,rf:298.257,ellipseName:"MERIT 1983"},SGS85:{a:6378136,rf:298.257,ellipseName:"Soviet Geodetic System 85"},GRS80:{a:6378137,rf:298.257222101,ellipseName:"GRS 1980(IUGG, 1980)"},IAU76:{a:6378140,rf:298.257,ellipseName:"IAU 1976"},airy:{a:6377563.396,b:6356256.91,ellipseName:"Airy 1830"},APL4:{a:6378137,rf:298.25,ellipseName:"Appl. Physics. 1965"},NWL9D:{a:6378145,rf:298.25,ellipseName:"Naval Weapons Lab., 1965"},mod_airy:{a:6377340.189,b:6356034.446,ellipseName:"Modified Airy"},andrae:{a:6377104.43,rf:300,ellipseName:"Andrae 1876 (Den., Iclnd.)"},aust_SA:{a:6378160,rf:298.25,ellipseName:"Australian Natl & S. Amer. 1969"},GRS67:{a:6378160,rf:298.247167427,ellipseName:"GRS 67(IUGG 1967)"},bessel:{a:6377397.155,rf:299.1528128,ellipseName:"Bessel 1841"},bess_nam:{a:6377483.865,rf:299.1528128,ellipseName:"Bessel 1841 (Namibia)"},clrk66:{a:6378206.4,b:6356583.8,ellipseName:"Clarke 1866"},clrk80:{a:6378249.145,rf:293.4663,ellipseName:"Clarke 1880 mod."},clrk58:{a:6378293.645208759,rf:294.2606763692654,ellipseName:"Clarke 1858"},CPM:{a:6375738.7,rf:334.29,ellipseName:"Comm. des Poids et Mesures 1799"},delmbr:{a:6376428,rf:311.5,ellipseName:"Delambre 1810 (Belgium)"},engelis:{a:6378136.05,rf:298.2566,ellipseName:"Engelis 1985"},evrst30:{a:6377276.345,rf:300.8017,ellipseName:"Everest 1830"},evrst48:{a:6377304.063,rf:300.8017,ellipseName:"Everest 1948"},evrst56:{a:6377301.243,rf:300.8017,ellipseName:"Everest 1956"},evrst69:{a:6377295.664,rf:300.8017,ellipseName:"Everest 1969"},evrstSS:{a:6377298.556,rf:300.8017,ellipseName:"Everest (Sabah & Sarawak)"},fschr60:{a:6378166,rf:298.3,ellipseName:"Fischer (Mercury Datum) 1960"},fschr60m:{a:6378155,rf:298.3,ellipseName:"Fischer 1960"},fschr68:{a:6378150,rf:298.3,ellipseName:"Fischer 1968"},helmert:{a:6378200,rf:298.3,ellipseName:"Helmert 1906"},hough:{a:6378270,rf:297,ellipseName:"Hough"},intl:{a:6378388,rf:297,ellipseName:"International 1909 (Hayford)"},kaula:{a:6378163,rf:298.24,ellipseName:"Kaula 1961"},lerch:{a:6378139,rf:298.257,ellipseName:"Lerch 1979"},mprts:{a:6397300,rf:191,ellipseName:"Maupertius 1738"},new_intl:{a:6378157.5,b:6356772.2,ellipseName:"New International 1967"},plessis:{a:6376523,rf:6355863,ellipseName:"Plessis 1817 (France)"},krass:{a:6378245,rf:298.3,ellipseName:"Krassovsky, 1942"},SEasia:{a:6378155,b:6356773.3205,ellipseName:"Southeast Asia"},walbeck:{a:6376896,b:6355834.8467,ellipseName:"Walbeck"},WGS60:{a:6378165,rf:298.3,ellipseName:"WGS 60"},WGS66:{a:6378145,rf:298.25,ellipseName:"WGS 66"},WGS7:{a:6378135,rf:298.26,ellipseName:"WGS 72"}},G=F.WGS84={a:6378137,rf:298.257223563,ellipseName:"WGS 84"};F.sphere={a:6370997,b:6370997,ellipseName:"Normal Sphere (r=6370997)"};var z={wgs84:{towgs84:"0,0,0",ellipse:"WGS84",datumName:"WGS84"},ch1903:{towgs84:"674.374,15.056,405.346",ellipse:"bessel",datumName:"swiss"},ggrs87:{towgs84:"-199.87,74.79,246.62",ellipse:"GRS80",datumName:"Greek_Geodetic_Reference_System_1987"},nad83:{towgs84:"0,0,0",ellipse:"GRS80",datumName:"North_American_Datum_1983"},nad27:{nadgrids:"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat",ellipse:"clrk66",datumName:"North_American_Datum_1927"},potsdam:{towgs84:"598.1,73.7,418.2,0.202,0.045,-2.455,6.7",ellipse:"bessel",datumName:"Potsdam Rauenberg 1950 DHDN"},carthage:{towgs84:"-263.0,6.0,431.0",ellipse:"clark80",datumName:"Carthage 1934 Tunisia"},hermannskogel:{towgs84:"577.326,90.129,463.919,5.137,1.474,5.297,2.4232",ellipse:"bessel",datumName:"Hermannskogel"},osni52:{towgs84:"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15",ellipse:"airy",datumName:"Irish National"},ire65:{towgs84:"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15",ellipse:"mod_airy",datumName:"Ireland 1965"},rassadiran:{towgs84:"-133.63,-157.5,-158.62",ellipse:"intl",datumName:"Rassadiran"},nzgd49:{towgs84:"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993",ellipse:"intl",datumName:"New Zealand Geodetic Datum 1949"},osgb36:{towgs84:"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894",ellipse:"airy",datumName:"Airy 1830"},s_jtsk:{towgs84:"589,76,480",ellipse:"bessel",datumName:"S-JTSK (Ferro)"},beduaram:{towgs84:"-106,-87,188",ellipse:"clrk80",datumName:"Beduaram"},gunung_segara:{towgs84:"-403,684,41",ellipse:"bessel",datumName:"Gunung Segara Jakarta"},rnb72:{towgs84:"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1",ellipse:"intl",datumName:"Reseau National Belge 1972"}},B={};function U(t){if(0===t.length)return null;var n="@"===t[0];return n&&(t=t.slice(1)),"null"===t?{name:"null",mandatory:!n,grid:null,isNull:!0}:{name:t,mandatory:!n,grid:B[t]||null,isNull:!1}}function q(t){return t/3600*Math.PI/180}function Y(t,n,e){return String.fromCharCode.apply(null,new Uint8Array(t.buffer.slice(n,e)))}function X(t){return t.map((function(t){return[q(t.longitudeShift),q(t.latitudeShift)]}))}function V(t,n,e){return{name:Y(t,n+8,n+16).trim(),parent:Y(t,n+24,n+24+8).trim(),lowerLatitude:t.getFloat64(n+72,e),upperLatitude:t.getFloat64(n+88,e),lowerLongitude:t.getFloat64(n+104,e),upperLongitude:t.getFloat64(n+120,e),latitudeInterval:t.getFloat64(n+136,e),longitudeInterval:t.getFloat64(n+152,e),gridNodeCount:t.getInt32(n+168,e)}}function W(t,n,e,r){for(var l=n+176,i=[],o=0;o<e.gridNodeCount;o++){var u={latitudeShift:t.getFloat32(l+16*o,r),longitudeShift:t.getFloat32(l+16*o+4,r),latitudeAccuracy:t.getFloat32(l+16*o+8,r),longitudeAccuracy:t.getFloat32(l+16*o+12,r)};i.push(u)}return i}function Z(n,e){if(!(this instanceof Z))return new Z(n);e=e||function(t){if(t)throw t};var r=O(n);if("object"==typeof r){var l=Z.projections.get(r.projName);if(l){if(r.datumCode&&"none"!==r.datumCode){var i=h(z,r.datumCode);i&&(r.datum_params=r.datum_params||(i.towgs84?i.towgs84.split(","):null),r.ellps=i.ellipse,r.datumName=i.datumName?i.datumName:r.datumCode)}r.k0=r.k0||1,r.axis=r.axis||"enu",r.ellps=r.ellps||"wgs84",r.lat1=r.lat1||r.lat0;var o,u,s,a,c,f,p,d=function(t,n,e,r,l){if(!t){var i=h(F,r);i||(i=G),t=i.a,n=i.b,e=i.rf}return e&&!n&&(n=(1-1/e)*t),(0===e||Math.abs(t-n)<1e-10)&&(l=!0,n=t),{a:t,b:n,rf:e,sphere:l}}(r.a,r.b,r.rf,r.ellps,r.sphere),g=(o=d.a,u=d.b,d.rf,s=r.R_A,f=((a=o*o)-(c=u*u))/a,p=0,s?(a=(o*=1-f*(.16666666666666666+f*(.04722222222222222+.022156084656084655*f)))*o,f=0):p=Math.sqrt(f),{es:f,e:p,ep2:(a-c)/c}),y=function(t){return void 0===t?null:t.split(",").map(U)}(r.nadgrids),_=r.datum||function(n,e,r,l,i,o,u){var s={};return s.datum_type=void 0===n||"none"===n?5:4,e&&(s.datum_params=e.map(parseFloat),0===s.datum_params[0]&&0===s.datum_params[1]&&0===s.datum_params[2]||(s.datum_type=1),s.datum_params.length>3&&(0===s.datum_params[3]&&0===s.datum_params[4]&&0===s.datum_params[5]&&0===s.datum_params[6]||(s.datum_type=2,s.datum_params[3]*=t,s.datum_params[4]*=t,s.datum_params[5]*=t,s.datum_params[6]=s.datum_params[6]/1e6+1))),u&&(s.datum_type=3,s.grids=u),s.a=r,s.b=l,s.es=i,s.ep2=o,s}(r.datumCode,r.datum_params,d.a,d.b,g.es,g.ep2,y);M(this,r),M(this,l),this.a=d.a,this.b=d.b,this.rf=d.rf,this.sphere=d.sphere,this.es=g.es,this.e=g.e,this.ep2=g.ep2,this.datum=_,this.init(),e(null,this)}else e(n)}else e(n)}function H(t,e,r){var l,i,o,u,s=t.x,a=t.y,h=t.z?t.z:0;if(a<-n&&a>-1.001*n)a=-n;else if(a>n&&a<1.001*n)a=n;else{if(a<-n)return{x:-1/0,y:-1/0,z:t.z};if(a>n)return{x:1/0,y:1/0,z:t.z}}return s>Math.PI&&(s-=2*Math.PI),i=Math.sin(a),u=Math.cos(a),o=i*i,{x:((l=r/Math.sqrt(1-e*o))+h)*u*Math.cos(s),y:(l+h)*u*Math.sin(s),z:(l*(1-e)+h)*i}}function K(t,n,e,r){var l,i,o,u,s,a,h,c,f,p,d,g,y,_,v,m=t.x,b=t.y,x=t.z?t.z:0;if(l=Math.sqrt(m*m+b*b),i=Math.sqrt(m*m+b*b+x*x),l/e<1e-12){if(_=0,i/e<1e-12)return v=-r,{x:t.x,y:t.y,z:t.z}}else _=Math.atan2(b,m);o=x/i,c=(u=l/i)*(1-n)*(s=1/Math.sqrt(1-n*(2-n)*u*u)),f=o*s,y=0;do{y++,a=n*(h=e/Math.sqrt(1-n*f*f))/(h+(v=l*c+x*f-h*(1-n*f*f))),g=(d=o*(s=1/Math.sqrt(1-a*(2-a)*u*u)))*c-(p=u*(1-a)*s)*f,c=p,f=d}while(g*g>1e-24&&y<30);return{x:_,y:Math.atan(d/Math.abs(p)),z:v}}function J(t){return 1===t||2===t}Z.projections=k,Z.projections.start();var Q=function(t,n,e){if(function(t,n){return t.datum_type===n.datum_type&&!(t.a!==n.a||Math.abs(t.es-n.es)>5e-11)&&(1===t.datum_type?t.datum_params[0]===n.datum_params[0]&&t.datum_params[1]===n.datum_params[1]&&t.datum_params[2]===n.datum_params[2]:2!==t.datum_type||t.datum_params[0]===n.datum_params[0]&&t.datum_params[1]===n.datum_params[1]&&t.datum_params[2]===n.datum_params[2]&&t.datum_params[3]===n.datum_params[3]&&t.datum_params[4]===n.datum_params[4]&&t.datum_params[5]===n.datum_params[5]&&t.datum_params[6]===n.datum_params[6])}(t,n))return e;if(5===t.datum_type||5===n.datum_type)return e;var r=t.a,l=t.es;if(3===t.datum_type){if(0!==$(t,!1,e))return;r=6378137,l=.0066943799901413165}var i=n.a,o=n.b,u=n.es;return 3===n.datum_type&&(i=6378137,o=6356752.314,u=.0066943799901413165),l!==u||r!==i||J(t.datum_type)||J(n.datum_type)?(e=H(e,l,r),J(t.datum_type)&&(e=function(t,n,e){if(1===n)return{x:t.x+e[0],y:t.y+e[1],z:t.z+e[2]};if(2===n){var r=e[0],l=e[1],i=e[2],o=e[3],u=e[4],s=e[5],a=e[6];return{x:a*(t.x-s*t.y+u*t.z)+r,y:a*(s*t.x+t.y-o*t.z)+l,z:a*(-u*t.x+o*t.y+t.z)+i}}}(e,t.datum_type,t.datum_params)),J(n.datum_type)&&(e=function(t,n,e){if(1===n)return{x:t.x-e[0],y:t.y-e[1],z:t.z-e[2]};if(2===n){var r=e[0],l=e[1],i=e[2],o=e[3],u=e[4],s=e[5],a=e[6],h=(t.x-r)/a,c=(t.y-l)/a,f=(t.z-i)/a;return{x:h+s*c-u*f,y:-s*h+c+o*f,z:u*h-o*c+f}}}(e,n.datum_type,n.datum_params)),e=K(e,u,i,o),3!==n.datum_type||0===$(n,!0,e)?e:void 0):e};function $(t,n,e){if(null===t.grids||0===t.grids.length)return console.log("Grid shift grids not found"),-1;for(var l={x:-e.x,y:e.y},i={x:Number.NaN,y:Number.NaN},o=[],u=0;u<t.grids.length;u++){var s=t.grids[u];if(o.push(s.name),s.isNull){i=l;break}if(null!==s.grid){var a=s.grid.subgrids[0],h=(Math.abs(a.del[1])+Math.abs(a.del[0]))/1e4,c=a.ll[0]-h,f=a.ll[1]-h,p=a.ll[0]+(a.lim[0]-1)*a.del[0]+h,d=a.ll[1]+(a.lim[1]-1)*a.del[1]+h;if(!(f>l.y||c>l.x||d<l.y||p<l.x||(i=tt(l,n,a),isNaN(i.x))))break}else if(s.mandatory)return console.log("Unable to find mandatory grid '"+s.name+"'"),-1}return isNaN(i.x)?(console.log("Failed to find a grid shift table for location '"+-l.x*r+" "+l.y*r+" tried: '"+o+"'"),-1):(e.x=-i.x,e.y=i.y,0)}function tt(t,n,e){var r={x:Number.NaN,y:Number.NaN};if(isNaN(t.x))return r;var l={x:t.x,y:t.y};l.x-=e.ll[0],l.y-=e.ll[1],l.x=P(l.x-Math.PI)+Math.PI;var i=nt(l,e);if(n){if(isNaN(i.x))return r;i.x=l.x-i.x,i.y=l.y-i.y;var o,u,s=9;do{if(u=nt(i,e),isNaN(u.x)){console.log("Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.");break}o={x:l.x-(u.x+i.x),y:l.y-(u.y+i.y)},i.x+=o.x,i.y+=o.y}while(s--&&Math.abs(o.x)>1e-12&&Math.abs(o.y)>1e-12);if(s<0)return console.log("Inverse grid shift iterator failed to converge."),r;r.x=P(i.x+e.ll[0]),r.y=i.y+e.ll[1]}else isNaN(i.x)||(r.x=t.x+i.x,r.y=t.y+i.y);return r}function nt(t,n){var e,r={x:t.x/n.del[0],y:t.y/n.del[1]},l=Math.floor(r.x),i=Math.floor(r.y),o=r.x-1*l,u=r.y-1*i,s={x:Number.NaN,y:Number.NaN};if(l<0||l>=n.lim[0])return s;if(i<0||i>=n.lim[1])return s;e=i*n.lim[0]+l;var a=n.cvs[e][0],h=n.cvs[e][1];e++;var c=n.cvs[e][0],f=n.cvs[e][1];e+=n.lim[0];var p=n.cvs[e][0],d=n.cvs[e][1];e--;var g=n.cvs[e][0],y=n.cvs[e][1],_=o*u,v=o*(1-u),m=(1-o)*(1-u),b=(1-o)*u;return s.x=m*a+v*c+b*g+_*p,s.y=m*h+v*f+b*y+_*d,s}var et=function(t,n,e){var r,l,i,o=e.x,u=e.y,s=e.z||0,a={};for(i=0;i<3;i++)if(!n||2!==i||void 0!==e.z)switch(0===i?(r=o,l=-1!=="ew".indexOf(t.axis[i])?"x":"y"):1===i?(r=u,l=-1!=="ns".indexOf(t.axis[i])?"y":"x"):(r=s,l="z"),t.axis[i]){case"e":a[l]=r;break;case"w":a[l]=-r;break;case"n":a[l]=r;break;case"s":a[l]=-r;break;case"u":void 0!==e[l]&&(a.z=r);break;case"d":void 0!==e[l]&&(a.z=-r);break;default:return null}return a},rt=function(t){var n={x:t[0],y:t[1]};return t.length>2&&(n.z=t[2]),t.length>3&&(n.m=t[3]),n};function lt(t){if("function"==typeof Number.isFinite){if(Number.isFinite(t))return;throw new TypeError("coordinates must be finite numbers")}if("number"!=typeof t||t!=t||!isFinite(t))throw new TypeError("coordinates must be finite numbers")}function it(t,n,l,i){var o;if(Array.isArray(l)&&(l=rt(l)),function(t){lt(t.x),lt(t.y)}(l),t.datum&&n.datum&&function(t,n){return(1===t.datum.datum_type||2===t.datum.datum_type)&&"WGS84"!==n.datumCode||(1===n.datum.datum_type||2===n.datum.datum_type)&&"WGS84"!==t.datumCode}(t,n)&&(l=it(t,o=new Z("WGS84"),l,i),t=o),i&&"enu"!==t.axis&&(l=et(t,!1,l)),"longlat"===t.projName)l={x:l.x*e,y:l.y*e,z:l.z||0};else if(t.to_meter&&(l={x:l.x*t.to_meter,y:l.y*t.to_meter,z:l.z||0}),!(l=t.inverse(l)))return;if(t.from_greenwich&&(l.x+=t.from_greenwich),l=Q(t.datum,n.datum,l))return n.from_greenwich&&(l={x:l.x-n.from_greenwich,y:l.y,z:l.z||0}),"longlat"===n.projName?l={x:l.x*r,y:l.y*r,z:l.z||0}:(l=n.forward(l),n.to_meter&&(l={x:l.x/n.to_meter,y:l.y/n.to_meter,z:l.z||0})),i&&"enu"!==n.axis?et(n,!0,l):l}var ot=Z("WGS84");function ut(t,n,e,r){var l,i,o;return Array.isArray(e)?(l=it(t,n,e,r)||{x:NaN,y:NaN},e.length>2?void 0!==t.name&&"geocent"===t.name||void 0!==n.name&&"geocent"===n.name?"number"==typeof l.z?[l.x,l.y,l.z].concat(e.splice(3)):[l.x,l.y,e[2]].concat(e.splice(3)):[l.x,l.y].concat(e.splice(2)):[l.x,l.y]):(i=it(t,n,e,r),2===(o=Object.keys(e)).length||o.forEach((function(r){if(void 0!==t.name&&"geocent"===t.name||void 0!==n.name&&"geocent"===n.name){if("x"===r||"y"===r||"z"===r)return}else if("x"===r||"y"===r)return;i[r]=e[r]})),i)}function st(t){return t instanceof Z?t:t.oProj?t.oProj:Z(t)}function at(t,n,e){t=st(t);var r,l=!1;return void 0===n?(n=t,t=ot,l=!0):(void 0!==n.x||Array.isArray(n))&&(e=n,n=t,t=ot,l=!0),n=st(n),e?ut(t,n,e):(r={forward:function(e,r){return ut(t,n,e,r)},inverse:function(e,r){return ut(n,t,e,r)}},l&&(r.oProj=n),r)}var ht=65,ct=73,ft=79,pt={forward:dt,inverse:function(t){var n=vt(bt(t.toUpperCase()));return n.lat&&n.lon?[n.lon,n.lat,n.lon,n.lat]:[n.left,n.bottom,n.right,n.top]},toPoint:gt};function dt(t,n){return n=n||5,function(t,n){var e,r,l,i,o,u,s,a,h,c,f,p,d,g,y="00000"+t.easting,_="00000"+t.northing;return t.zoneNumber+t.zoneLetter+(h=t.easting,c=t.northing,f=t.zoneNumber,p=mt(f),d=Math.floor(h/1e5),g=Math.floor(c/1e5)%20,e=d,r=g,i="AJSAJS".charCodeAt(l=p-1),o="AFAFAF".charCodeAt(l),a=!1,(u=i+e-1)>90&&(u=u-90+ht-1,a=!0),(u===ct||i<ct&&u>ct||(u>ct||i<ct)&&a)&&u++,(u===ft||i<ft&&u>ft||(u>ft||i<ft)&&a)&&++u===ct&&u++,u>90&&(u=u-90+ht-1),(s=o+r)>86?(s=s-86+ht-1,a=!0):a=!1,(s===ct||o<ct&&s>ct||(s>ct||o<ct)&&a)&&s++,(s===ft||o<ft&&s>ft||(s>ft||o<ft)&&a)&&++s===ct&&s++,s>86&&(s=s-86+ht-1),String.fromCharCode(u)+String.fromCharCode(s))+y.substr(y.length-5,n)+_.substr(_.length-5,n)}(function(t){var n,e,r,l,i,o,u,s=t.lat,a=t.lon,h=6378137,c=yt(s),f=yt(a);u=Math.floor((a+180)/6)+1,180===a&&(u=60),s>=56&&s<64&&a>=3&&a<12&&(u=32),s>=72&&s<84&&(a>=0&&a<9?u=31:a>=9&&a<21?u=33:a>=21&&a<33?u=35:a>=33&&a<42&&(u=37)),o=yt(6*(u-1)-180+3),n=h/Math.sqrt(1-.00669438*Math.sin(c)*Math.sin(c)),e=Math.tan(c)*Math.tan(c),r=.006739496752268451*Math.cos(c)*Math.cos(c),l=Math.cos(c)*(f-o),i=h*(.9983242984503243*c-.002514607064228144*Math.sin(2*c)+2639046602129982e-21*Math.sin(4*c)-3.418046101696858e-9*Math.sin(6*c));var p,d,g=.9996*n*(l+(1-e+r)*l*l*l/6+(5-18*e+e*e+72*r-.39089081163157013)*l*l*l*l*l/120)+5e5,y=.9996*(i+n*Math.tan(c)*(l*l/2+(5-e+9*r+4*r*r)*l*l*l*l/24+(61-58*e+e*e+600*r-2.2240339282485886)*l*l*l*l*l*l/720));return s<0&&(y+=1e7),{northing:Math.round(y),easting:Math.round(g),zoneNumber:u,zoneLetter:(p=s,d="Z",84>=p&&p>=72?d="X":72>p&&p>=64?d="W":64>p&&p>=56?d="V":56>p&&p>=48?d="U":48>p&&p>=40?d="T":40>p&&p>=32?d="S":32>p&&p>=24?d="R":24>p&&p>=16?d="Q":16>p&&p>=8?d="P":8>p&&p>=0?d="N":0>p&&p>=-8?d="M":-8>p&&p>=-16?d="L":-16>p&&p>=-24?d="K":-24>p&&p>=-32?d="J":-32>p&&p>=-40?d="H":-40>p&&p>=-48?d="G":-48>p&&p>=-56?d="F":-56>p&&p>=-64?d="E":-64>p&&p>=-72?d="D":-72>p&&p>=-80&&(d="C"),d)}}({lat:t[1],lon:t[0]}),n)}function gt(t){var n=vt(bt(t.toUpperCase()));return n.lat&&n.lon?[n.lon,n.lat]:[(n.left+n.right)/2,(n.top+n.bottom)/2]}function yt(t){return t*(Math.PI/180)}function _t(t){return t/Math.PI*180}function vt(t){var n=t.northing,e=t.easting,r=t.zoneLetter,l=t.zoneNumber;if(l<0||l>60)return null;var i,o,u,s,a,h,c,f,p=6378137,d=(1-Math.sqrt(.99330562))/(1+Math.sqrt(.99330562)),g=e-5e5,y=n;r<"N"&&(y-=1e7),h=6*(l-1)-180+3,f=(c=y/.9996/6367449.145945056)+(3*d/2-27*d*d*d/32)*Math.sin(2*c)+(21*d*d/16-55*d*d*d*d/32)*Math.sin(4*c)+151*d*d*d/96*Math.sin(6*c),i=p/Math.sqrt(1-.00669438*Math.sin(f)*Math.sin(f)),o=Math.tan(f)*Math.tan(f),u=.006739496752268451*Math.cos(f)*Math.cos(f),s=.99330562*p/Math.pow(1-.00669438*Math.sin(f)*Math.sin(f),1.5),a=g/(.9996*i);var _=f-i*Math.tan(f)/s*(a*a/2-(5+3*o+10*u-4*u*u-.06065547077041606)*a*a*a*a/24+(61+90*o+298*u+45*o*o-1.6983531815716497-3*u*u)*a*a*a*a*a*a/720);_=_t(_);var v,m=(a-(1+2*o+u)*a*a*a/6+(5-2*u+28*o-3*u*u+.05391597401814761+24*o*o)*a*a*a*a*a/120)/Math.cos(f);if(m=h+_t(m),t.accuracy){var b=vt({northing:t.northing+t.accuracy,easting:t.easting+t.accuracy,zoneLetter:t.zoneLetter,zoneNumber:t.zoneNumber});v={top:b.lat,right:b.lon,bottom:_,left:m}}else v={lat:_,lon:m};return v}function mt(t){var n=t%6;return 0===n&&(n=6),n}function bt(t){if(t&&0===t.length)throw"MGRSPoint coverting from nothing";for(var n,e=t.length,r=null,l="",i=0;!/[A-Z]/.test(n=t.charAt(i));){if(i>=2)throw"MGRSPoint bad conversion from: "+t;l+=n,i++}var o=parseInt(l,10);if(0===i||i+3>e)throw"MGRSPoint bad conversion from: "+t;var u=t.charAt(i++);if(u<="A"||"B"===u||"Y"===u||u>="Z"||"I"===u||"O"===u)throw"MGRSPoint zone letter "+u+" not handled: "+t;r=t.substring(i,i+=2);for(var s=mt(o),a=function(t,n){for(var e="AJSAJS".charCodeAt(n-1),r=1e5,l=!1;e!==t.charCodeAt(0);){if(++e===ct&&e++,e===ft&&e++,e>90){if(l)throw"Bad character: "+t;e=ht,l=!0}r+=1e5}return r}(r.charAt(0),s),h=function(t,n){if(t>"V")throw"MGRSPoint given invalid Northing "+t;for(var e="AFAFAF".charCodeAt(n-1),r=0,l=!1;e!==t.charCodeAt(0);){if(++e===ct&&e++,e===ft&&e++,e>86){if(l)throw"Bad character: "+t;e=ht,l=!0}r+=1e5}return r}(r.charAt(1),s);h<xt(u);)h+=2e6;var c=e-i;if(c%2!=0)throw"MGRSPoint has to have an even number \nof digits after the zone letter and two 100km letters - front \nhalf for easting meters, second half for \nnorthing meters"+t;var f,p,d,g=c/2,y=0,_=0;return g>0&&(f=1e5/Math.pow(10,g),p=t.substring(i,i+g),y=parseFloat(p)*f,d=t.substring(i+g),_=parseFloat(d)*f),{easting:y+a,northing:_+h,zoneLetter:u,zoneNumber:o,accuracy:f}}function xt(t){var n;switch(t){case"C":n=11e5;break;case"D":n=2e6;break;case"E":n=28e5;break;case"F":n=37e5;break;case"G":n=46e5;break;case"H":n=55e5;break;case"J":n=64e5;break;case"K":n=73e5;break;case"L":n=82e5;break;case"M":n=91e5;break;case"N":n=0;break;case"P":n=8e5;break;case"Q":n=17e5;break;case"R":n=26e5;break;case"S":n=35e5;break;case"T":n=44e5;break;case"U":n=53e5;break;case"V":n=62e5;break;case"W":n=7e6;break;case"X":n=79e5;break;default:n=-1}if(n>=0)return n;throw"Invalid zone letter: "+t}function wt(t,n,e){if(!(this instanceof wt))return new wt(t,n,e);if(Array.isArray(t))this.x=t[0],this.y=t[1],this.z=t[2]||0;else if("object"==typeof t)this.x=t.x,this.y=t.y,this.z=t.z||0;else if("string"==typeof t&&void 0===n){var r=t.split(",");this.x=parseFloat(r[0],10),this.y=parseFloat(r[1],10),this.z=parseFloat(r[2],10)||0}else this.x=t,this.y=n,this.z=e||0;console.warn("proj4.Point will be removed in version 3, use proj4.toPoint")}wt.fromMGRS=function(t){return new wt(gt(t))},wt.prototype.toMGRS=function(t){return dt([this.x,this.y],t)};var Et=.01068115234375,Ct=function(t){var n=[];n[0]=1-t*(.25+t*(.046875+t*(.01953125+t*Et))),n[1]=t*(.75-t*(.046875+t*(.01953125+t*Et)));var e=t*t;return n[2]=e*(.46875-t*(.013020833333333334+.007120768229166667*t)),e*=t,n[3]=e*(.3645833333333333-.005696614583333333*t),n[4]=e*t*.3076171875,n},Ot=function(t,n,e,r){return e*=n,n*=n,r[0]*t-e*(r[1]+n*(r[2]+n*(r[3]+n*r[4])))},Mt=function(t,n,e){for(var r=1/(1-n),l=t,i=20;i;--i){var o=Math.sin(l),u=1-n*o*o;if(l-=u=(Ot(l,o,Math.cos(l),e)-t)*(u*Math.sqrt(u))*r,Math.abs(u)<1e-10)return l}return l},St={init:function(){this.x0=void 0!==this.x0?this.x0:0,this.y0=void 0!==this.y0?this.y0:0,this.long0=void 0!==this.long0?this.long0:0,this.lat0=void 0!==this.lat0?this.lat0:0,this.es&&(this.en=Ct(this.es),this.ml0=Ot(this.lat0,Math.sin(this.lat0),Math.cos(this.lat0),this.en))},forward:function(t){var n,e,r,l=t.x,i=t.y,o=P(l-this.long0),u=Math.sin(i),s=Math.cos(i);if(this.es){var a=s*o,h=Math.pow(a,2),c=this.ep2*Math.pow(s,2),f=Math.pow(c,2),p=Math.abs(s)>1e-10?Math.tan(i):0,d=Math.pow(p,2),g=Math.pow(d,2);n=1-this.es*Math.pow(u,2),a/=Math.sqrt(n);var y=Ot(i,u,s,this.en);e=this.a*(this.k0*a*(1+h/6*(1-d+c+h/20*(5-18*d+g+14*c-58*d*c+h/42*(61+179*g-g*d-479*d)))))+this.x0,r=this.a*(this.k0*(y-this.ml0+u*o*a/2*(1+h/12*(5-d+9*c+4*f+h/30*(61+g-58*d+270*c-330*d*c+h/56*(1385+543*g-g*d-3111*d))))))+this.y0}else{var _=s*Math.sin(o);if(Math.abs(Math.abs(_)-1)<1e-10)return 93;if(e=.5*this.a*this.k0*Math.log((1+_)/(1-_))+this.x0,r=s*Math.cos(o)/Math.sqrt(1-Math.pow(_,2)),(_=Math.abs(r))>=1){if(_-1>1e-10)return 93;r=0}else r=Math.acos(r);i<0&&(r=-r),r=this.a*this.k0*(r-this.lat0)+this.y0}return t.x=e,t.y=r,t},inverse:function(t){var e,r,l,i,o=(t.x-this.x0)*(1/this.a),u=(t.y-this.y0)*(1/this.a);if(this.es)if(e=this.ml0+u/this.k0,r=Mt(e,this.es,this.en),Math.abs(r)<n){var s=Math.sin(r),a=Math.cos(r),h=Math.abs(a)>1e-10?Math.tan(r):0,c=this.ep2*Math.pow(a,2),f=Math.pow(c,2),p=Math.pow(h,2),d=Math.pow(p,2);e=1-this.es*Math.pow(s,2);var g=o*Math.sqrt(e)/this.k0,y=Math.pow(g,2);l=r-(e*=h)*y/(1-this.es)*.5*(1-y/12*(5+3*p-9*c*p+c-4*f-y/30*(61+90*p-252*c*p+45*d+46*c-y/56*(1385+3633*p+4095*d+1574*d*p)))),i=P(this.long0+g*(1-y/6*(1+2*p+c-y/20*(5+28*p+24*d+8*c*p+6*c-y/42*(61+662*p+1320*d+720*d*p))))/a)}else l=n*I(u),i=0;else{var _=Math.exp(o/this.k0),v=.5*(_-1/_),m=this.lat0+u/this.k0,b=Math.cos(m);e=Math.sqrt((1-Math.pow(b,2))/(1+Math.pow(v,2))),l=Math.asin(e),u<0&&(l=-l),i=0===v&&0===b?0:P(Math.atan2(v,b)+this.long0)}return t.x=i,t.y=l,t},names:["Fast_Transverse_Mercator","Fast Transverse Mercator"]},It=function(t){var n=Math.exp(t);return n=(n-1/n)/2},Pt=function(t,n){t=Math.abs(t),n=Math.abs(n);var e=Math.max(t,n),r=Math.min(t,n)/(e||1);return e*Math.sqrt(1+Math.pow(r,2))},Rt=function(t){var n=Math.abs(t);return n=function(t){var n=1+t,e=n-1;return 0===e?t:t*Math.log(n)/e}(n*(1+n/(Pt(1,n)+1))),t<0?-n:n},Tt=function(t,n){for(var e,r=2*Math.cos(2*n),l=t.length-1,i=t[l],o=0;--l>=0;)e=r*i-o+t[l],o=i,i=e;return n+e*Math.sin(2*n)},Nt=function(t,n,e){for(var r,l,i=Math.sin(n),o=Math.cos(n),u=It(e),s=function(t){var n=Math.exp(t);return n=(n+1/n)/2}(e),a=2*o*s,h=-2*i*u,c=t.length-1,f=t[c],p=0,d=0,g=0;--c>=0;)r=d,l=p,f=a*(d=f)-r-h*(p=g)+t[c],g=h*d-l+a*p;return[(a=i*s)*f-(h=o*u)*g,a*g+h*f]},Lt={init:function(){if(!this.approx&&(isNaN(this.es)||this.es<=0))throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION["Fast_Transverse_Mercator"] in the WKT.');this.approx&&(St.init.apply(this),this.forward=St.forward,this.inverse=St.inverse),this.x0=void 0!==this.x0?this.x0:0,this.y0=void 0!==this.y0?this.y0:0,this.long0=void 0!==this.long0?this.long0:0,this.lat0=void 0!==this.lat0?this.lat0:0,this.cgb=[],this.cbg=[],this.utg=[],this.gtu=[];var t=this.es/(1+Math.sqrt(1-this.es)),n=t/(2-t),e=n;this.cgb[0]=n*(2+n*(-2/3+n*(n*(116/45+n*(26/45+n*(-2854/675)))-2))),this.cbg[0]=n*(n*(2/3+n*(4/3+n*(-82/45+n*(32/45+n*(4642/4725)))))-2),e*=n,this.cgb[1]=e*(7/3+n*(n*(-227/45+n*(2704/315+n*(2323/945)))-1.6)),this.cbg[1]=e*(5/3+n*(-16/15+n*(-13/9+n*(904/315+n*(-1522/945))))),e*=n,this.cgb[2]=e*(56/15+n*(-136/35+n*(-1262/105+n*(73814/2835)))),this.cbg[2]=e*(-26/15+n*(34/21+n*(1.6+n*(-12686/2835)))),e*=n,this.cgb[3]=e*(4279/630+n*(-332/35+n*(-399572/14175))),this.cbg[3]=e*(1237/630+n*(n*(-24832/14175)-2.4)),e*=n,this.cgb[4]=e*(4174/315+n*(-144838/6237)),this.cbg[4]=e*(-734/315+n*(109598/31185)),e*=n,this.cgb[5]=e*(601676/22275),this.cbg[5]=e*(444337/155925),e=Math.pow(n,2),this.Qn=this.k0/(1+n)*(1+e*(1/4+e*(1/64+e/256))),this.utg[0]=n*(n*(2/3+n*(-37/96+n*(1/360+n*(81/512+n*(-96199/604800)))))-.5),this.gtu[0]=n*(.5+n*(-2/3+n*(5/16+n*(41/180+n*(-127/288+n*(7891/37800)))))),this.utg[1]=e*(-1/48+n*(-1/15+n*(437/1440+n*(-46/105+n*(1118711/3870720))))),this.gtu[1]=e*(13/48+n*(n*(557/1440+n*(281/630+n*(-1983433/1935360)))-.6)),e*=n,this.utg[2]=e*(-17/480+n*(37/840+n*(209/4480+n*(-5569/90720)))),this.gtu[2]=e*(61/240+n*(-103/140+n*(15061/26880+n*(167603/181440)))),e*=n,this.utg[3]=e*(-4397/161280+n*(11/504+n*(830251/7257600))),this.gtu[3]=e*(49561/161280+n*(-179/168+n*(6601661/7257600))),e*=n,this.utg[4]=e*(-4583/161280+n*(108847/3991680)),this.gtu[4]=e*(34729/80640+n*(-3418889/1995840)),e*=n,this.utg[5]=e*(-20648693/638668800),this.gtu[5]=.6650675310896665*e;var r=Tt(this.cbg,this.lat0);this.Zb=-this.Qn*(r+function(t,n){for(var e,r=2*Math.cos(n),l=t.length-1,i=t[l],o=0;--l>=0;)e=r*i-o+t[l],o=i,i=e;return Math.sin(n)*e}(this.gtu,2*r))},forward:function(t){var n=P(t.x-this.long0),e=t.y;e=Tt(this.cbg,e);var r=Math.sin(e),l=Math.cos(e),i=Math.sin(n),o=Math.cos(n);e=Math.atan2(r,o*l),n=Math.atan2(i*l,Pt(r,l*o)),n=Rt(Math.tan(n));var u,s,a=Nt(this.gtu,2*e,2*n);return e+=a[0],n+=a[1],Math.abs(n)<=2.623395162778?(u=this.a*(this.Qn*n)+this.x0,s=this.a*(this.Qn*e+this.Zb)+this.y0):(u=1/0,s=1/0),t.x=u,t.y=s,t},inverse:function(t){var n,e,r=(t.x-this.x0)*(1/this.a),l=(t.y-this.y0)*(1/this.a);if(l=(l-this.Zb)/this.Qn,r/=this.Qn,Math.abs(r)<=2.623395162778){var i=Nt(this.utg,2*l,2*r);l+=i[0],r+=i[1],r=Math.atan(It(r));var o=Math.sin(l),u=Math.cos(l),s=Math.sin(r),a=Math.cos(r);l=Math.atan2(o*a,Pt(s,a*u)),r=Math.atan2(s,a*u),n=P(r+this.long0),e=Tt(this.cgb,l)}else n=1/0,e=1/0;return t.x=n,t.y=e,t},names:["Extended_Transverse_Mercator","Extended Transverse Mercator","etmerc","Transverse_Mercator","Transverse Mercator","tmerc"]},At={init:function(){var t=function(t,n){if(void 0===t){if((t=Math.floor(30*(P(n)+Math.PI)/Math.PI)+1)<0)return 0;if(t>60)return 60}return t}(this.zone,this.long0);if(void 0===t)throw new Error("unknown utm zone");this.lat0=0,this.long0=(6*Math.abs(t)-183)*e,this.x0=5e5,this.y0=this.utmSouth?1e7:0,this.k0=.9996,Lt.init.apply(this),this.forward=Lt.forward,this.inverse=Lt.inverse},names:["Universal Transverse Mercator System","utm"],dependsOn:"etmerc"},jt=function(t,n){return Math.pow((1-t)/(1+t),n)},Dt={init:function(){var t=Math.sin(this.lat0),n=Math.cos(this.lat0);n*=n,this.rc=Math.sqrt(1-this.es)/(1-this.es*t*t),this.C=Math.sqrt(1+this.es*n*n/(1-this.es)),this.phic0=Math.asin(t/this.C),this.ratexp=.5*this.C*this.e,this.K=Math.tan(.5*this.phic0+l)/(Math.pow(Math.tan(.5*this.lat0+l),this.C)*jt(this.e*t,this.ratexp))},forward:function(t){var e=t.x,r=t.y;return t.y=2*Math.atan(this.K*Math.pow(Math.tan(.5*r+l),this.C)*jt(this.e*Math.sin(r),this.ratexp))-n,t.x=this.C*e,t},inverse:function(t){for(var e=t.x/this.C,r=t.y,i=Math.pow(Math.tan(.5*r+l)/this.K,1/this.C),o=20;o>0&&(r=2*Math.atan(i*jt(this.e*Math.sin(t.y),-.5*this.e))-n,!(Math.abs(r-t.y)<1e-14));--o)t.y=r;return o?(t.x=e,t.y=r,t):null},names:["gauss"]},kt={init:function(){Dt.init.apply(this),this.rc&&(this.sinc0=Math.sin(this.phic0),this.cosc0=Math.cos(this.phic0),this.R2=2*this.rc,this.title||(this.title="Oblique Stereographic Alternative"))},forward:function(t){var n,e,r,l;return t.x=P(t.x-this.long0),Dt.forward.apply(this,[t]),n=Math.sin(t.y),e=Math.cos(t.y),r=Math.cos(t.x),l=this.k0*this.R2/(1+this.sinc0*n+this.cosc0*e*r),t.x=l*e*Math.sin(t.x),t.y=l*(this.cosc0*n-this.sinc0*e*r),t.x=this.a*t.x+this.x0,t.y=this.a*t.y+this.y0,t},inverse:function(t){var n,e,r,l,i;if(t.x=(t.x-this.x0)/this.a,t.y=(t.y-this.y0)/this.a,t.x/=this.k0,t.y/=this.k0,i=Math.sqrt(t.x*t.x+t.y*t.y)){var o=2*Math.atan2(i,this.R2);n=Math.sin(o),e=Math.cos(o),l=Math.asin(e*this.sinc0+t.y*n*this.cosc0/i),r=Math.atan2(t.x*n,i*this.cosc0*e-t.y*this.sinc0*n)}else l=this.phic0,r=0;return t.x=r,t.y=l,Dt.inverse.apply(this,[t]),t.x=P(t.x+this.long0),t},names:["Stereographic_North_Pole","Oblique_Stereographic","Polar_Stereographic","sterea","Oblique Stereographic Alternative","Double_Stereographic"]},Ft={init:function(){this.coslat0=Math.cos(this.lat0),this.sinlat0=Math.sin(this.lat0),this.sphere?1===this.k0&&!isNaN(this.lat_ts)&&Math.abs(this.coslat0)<=1e-10&&(this.k0=.5*(1+I(this.lat0)*Math.sin(this.lat_ts))):(Math.abs(this.coslat0)<=1e-10&&(this.lat0>0?this.con=1:this.con=-1),this.cons=Math.sqrt(Math.pow(1+this.e,1+this.e)*Math.pow(1-this.e,1-this.e)),1===this.k0&&!isNaN(this.lat_ts)&&Math.abs(this.coslat0)<=1e-10&&(this.k0=.5*this.cons*S(this.e,Math.sin(this.lat_ts),Math.cos(this.lat_ts))/R(this.e,this.con*this.lat_ts,this.con*Math.sin(this.lat_ts))),this.ms1=S(this.e,this.sinlat0,this.coslat0),this.X0=2*Math.atan(this.ssfn_(this.lat0,this.sinlat0,this.e))-n,this.cosX0=Math.cos(this.X0),this.sinX0=Math.sin(this.X0))},forward:function(t){var e,r,l,i,o,u,s=t.x,a=t.y,h=Math.sin(a),c=Math.cos(a),f=P(s-this.long0);return Math.abs(Math.abs(s-this.long0)-Math.PI)<=1e-10&&Math.abs(a+this.lat0)<=1e-10?(t.x=NaN,t.y=NaN,t):this.sphere?(e=2*this.k0/(1+this.sinlat0*h+this.coslat0*c*Math.cos(f)),t.x=this.a*e*c*Math.sin(f)+this.x0,t.y=this.a*e*(this.coslat0*h-this.sinlat0*c*Math.cos(f))+this.y0,t):(r=2*Math.atan(this.ssfn_(a,h,this.e))-n,i=Math.cos(r),l=Math.sin(r),Math.abs(this.coslat0)<=1e-10?(o=R(this.e,a*this.con,this.con*h),u=2*this.a*this.k0*o/this.cons,t.x=this.x0+u*Math.sin(s-this.long0),t.y=this.y0-this.con*u*Math.cos(s-this.long0),t):(Math.abs(this.sinlat0)<1e-10?(e=2*this.a*this.k0/(1+i*Math.cos(f)),t.y=e*l):(e=2*this.a*this.k0*this.ms1/(this.cosX0*(1+this.sinX0*l+this.cosX0*i*Math.cos(f))),t.y=e*(this.cosX0*l-this.sinX0*i*Math.cos(f))+this.y0),t.x=e*i*Math.sin(f)+this.x0,t))},inverse:function(t){var e,r,l,i,o;t.x-=this.x0,t.y-=this.y0;var u=Math.sqrt(t.x*t.x+t.y*t.y);if(this.sphere){var s=2*Math.atan(u/(2*this.a*this.k0));return e=this.long0,r=this.lat0,u<=1e-10?(t.x=e,t.y=r,t):(r=Math.asin(Math.cos(s)*this.sinlat0+t.y*Math.sin(s)*this.coslat0/u),e=Math.abs(this.coslat0)<1e-10?this.lat0>0?P(this.long0+Math.atan2(t.x,-1*t.y)):P(this.long0+Math.atan2(t.x,t.y)):P(this.long0+Math.atan2(t.x*Math.sin(s),u*this.coslat0*Math.cos(s)-t.y*this.sinlat0*Math.sin(s))),t.x=e,t.y=r,t)}if(Math.abs(this.coslat0)<=1e-10){if(u<=1e-10)return r=this.lat0,e=this.long0,t.x=e,t.y=r,t;t.x*=this.con,t.y*=this.con,l=u*this.cons/(2*this.a*this.k0),r=this.con*T(this.e,l),e=this.con*P(this.con*this.long0+Math.atan2(t.x,-1*t.y))}else i=2*Math.atan(u*this.cosX0/(2*this.a*this.k0*this.ms1)),e=this.long0,u<=1e-10?o=this.X0:(o=Math.asin(Math.cos(i)*this.sinX0+t.y*Math.sin(i)*this.cosX0/u),e=P(this.long0+Math.atan2(t.x*Math.sin(i),u*this.cosX0*Math.cos(i)-t.y*this.sinX0*Math.sin(i)))),r=-1*T(this.e,Math.tan(.5*(n+o)));return t.x=e,t.y=r,t},names:["stere","Stereographic_South_Pole","Polar Stereographic (variant B)"],ssfn_:function(t,e,r){return e*=r,Math.tan(.5*(n+t))*Math.pow((1-e)/(1+e),.5*r)}},Gt={init:function(){var t=this.lat0;this.lambda0=this.long0;var n=Math.sin(t),e=this.a,r=1/this.rf,l=2*r-Math.pow(r,2),i=this.e=Math.sqrt(l);this.R=this.k0*e*Math.sqrt(1-l)/(1-l*Math.pow(n,2)),this.alpha=Math.sqrt(1+l/(1-l)*Math.pow(Math.cos(t),4)),this.b0=Math.asin(n/this.alpha);var o=Math.log(Math.tan(Math.PI/4+this.b0/2)),u=Math.log(Math.tan(Math.PI/4+t/2)),s=Math.log((1+i*n)/(1-i*n));this.K=o-this.alpha*u+this.alpha*i/2*s},forward:function(t){var n=Math.log(Math.tan(Math.PI/4-t.y/2)),e=this.e/2*Math.log((1+this.e*Math.sin(t.y))/(1-this.e*Math.sin(t.y))),r=-this.alpha*(n+e)+this.K,l=2*(Math.atan(Math.exp(r))-Math.PI/4),i=this.alpha*(t.x-this.lambda0),o=Math.atan(Math.sin(i)/(Math.sin(this.b0)*Math.tan(l)+Math.cos(this.b0)*Math.cos(i))),u=Math.asin(Math.cos(this.b0)*Math.sin(l)-Math.sin(this.b0)*Math.cos(l)*Math.cos(i));return t.y=this.R/2*Math.log((1+Math.sin(u))/(1-Math.sin(u)))+this.y0,t.x=this.R*o+this.x0,t},inverse:function(t){for(var n=t.x-this.x0,e=t.y-this.y0,r=n/this.R,l=2*(Math.atan(Math.exp(e/this.R))-Math.PI/4),i=Math.asin(Math.cos(this.b0)*Math.sin(l)+Math.sin(this.b0)*Math.cos(l)*Math.cos(r)),o=Math.atan(Math.sin(r)/(Math.cos(this.b0)*Math.cos(r)-Math.sin(this.b0)*Math.tan(l))),u=this.lambda0+o/this.alpha,s=0,a=i,h=-1e3,c=0;Math.abs(a-h)>1e-7;){if(++c>20)return;s=1/this.alpha*(Math.log(Math.tan(Math.PI/4+i/2))-this.K)+this.e*Math.log(Math.tan(Math.PI/4+Math.asin(this.e*Math.sin(a))/2)),h=a,a=2*Math.atan(Math.exp(s))-Math.PI/2}return t.x=u,t.y=a,t},names:["somerc"]},zt={init:function(){var t,r,o,u,s,a,h,c,f,p,d,g,y,_=0,v=0,m=0,b=0,x=0,w=0,E=0;this.no_off=(y="object"==typeof(g=this).PROJECTION?Object.keys(g.PROJECTION)[0]:g.PROJECTION,"no_uoff"in g||"no_off"in g||-1!==["Hotine_Oblique_Mercator","Hotine_Oblique_Mercator_Azimuth_Natural_Origin"].indexOf(y)),this.no_rot="no_rot"in this;var C=!1;"alpha"in this&&(C=!0);var O=!1;if("rectified_grid_angle"in this&&(O=!0),C&&(E=this.alpha),O&&(_=this.rectified_grid_angle*e),C||O)v=this.longc;else if(m=this.long1,x=this.lat1,b=this.long2,w=this.lat2,Math.abs(x-w)<=1e-7||(t=Math.abs(x))<=1e-7||Math.abs(t-n)<=1e-7||Math.abs(Math.abs(this.lat0)-n)<=1e-7||Math.abs(Math.abs(w)-n)<=1e-7)throw new Error;var M=1-this.es;r=Math.sqrt(M),Math.abs(this.lat0)>1e-10?(c=Math.sin(this.lat0),o=Math.cos(this.lat0),t=1-this.es*c*c,this.B=o*o,this.B=Math.sqrt(1+this.es*this.B*this.B/M),this.A=this.B*this.k0*r/t,(s=(u=this.B*r/(o*Math.sqrt(t)))*u-1)<=0?s=0:(s=Math.sqrt(s),this.lat0<0&&(s=-s)),this.E=s+=u,this.E*=Math.pow(R(this.e,this.lat0,c),this.B)):(this.B=1/r,this.A=this.k0,this.E=u=s=1),C||O?(C?(d=Math.asin(Math.sin(E)/u),O||(_=E)):(d=_,E=Math.asin(u*Math.sin(d))),this.lam0=v-Math.asin(.5*(s-1/s)*Math.tan(d))/this.B):(a=Math.pow(R(this.e,x,Math.sin(x)),this.B),h=Math.pow(R(this.e,w,Math.sin(w)),this.B),s=this.E/a,f=(h-a)/(h+a),p=((p=this.E*this.E)-h*a)/(p+h*a),(t=m-b)<-Math.pi?b-=i:t>Math.pi&&(b+=i),this.lam0=P(.5*(m+b)-Math.atan(p*Math.tan(.5*this.B*(m-b))/f)/this.B),d=Math.atan(2*Math.sin(this.B*P(m-this.lam0))/(s-1/s)),_=E=Math.asin(u*Math.sin(d))),this.singam=Math.sin(d),this.cosgam=Math.cos(d),this.sinrot=Math.sin(_),this.cosrot=Math.cos(_),this.rB=1/this.B,this.ArB=this.A*this.rB,this.BrA=1/this.ArB,this.no_off?this.u_0=0:(this.u_0=Math.abs(this.ArB*Math.atan(Math.sqrt(u*u-1)/Math.cos(E))),this.lat0<0&&(this.u_0=-this.u_0)),s=.5*d,this.v_pole_n=this.ArB*Math.log(Math.tan(l-s)),this.v_pole_s=this.ArB*Math.log(Math.tan(l+s))},forward:function(t){var e,r,l,i,o,u,s,a,h={};if(t.x=t.x-this.lam0,Math.abs(Math.abs(t.y)-n)>1e-10){if(e=.5*((o=this.E/Math.pow(R(this.e,t.y,Math.sin(t.y)),this.B))-(u=1/o)),r=.5*(o+u),i=Math.sin(this.B*t.x),l=(e*this.singam-i*this.cosgam)/r,Math.abs(Math.abs(l)-1)<1e-10)throw new Error;a=.5*this.ArB*Math.log((1-l)/(1+l)),u=Math.cos(this.B*t.x),s=Math.abs(u)<1e-7?this.A*t.x:this.ArB*Math.atan2(e*this.cosgam+i*this.singam,u)}else a=t.y>0?this.v_pole_n:this.v_pole_s,s=this.ArB*t.y;return this.no_rot?(h.x=s,h.y=a):(s-=this.u_0,h.x=a*this.cosrot+s*this.sinrot,h.y=s*this.cosrot-a*this.sinrot),h.x=this.a*h.x+this.x0,h.y=this.a*h.y+this.y0,h},inverse:function(t){var e,r,l,i,o,u,s,a={};if(t.x=(t.x-this.x0)*(1/this.a),t.y=(t.y-this.y0)*(1/this.a),this.no_rot?(r=t.y,e=t.x):(r=t.x*this.cosrot-t.y*this.sinrot,e=t.y*this.cosrot+t.x*this.sinrot+this.u_0),i=.5*((l=Math.exp(-this.BrA*r))-1/l),o=.5*(l+1/l),s=((u=Math.sin(this.BrA*e))*this.cosgam+i*this.singam)/o,Math.abs(Math.abs(s)-1)<1e-10)a.x=0,a.y=s<0?-n:n;else{if(a.y=this.E/Math.sqrt((1+s)/(1-s)),a.y=T(this.e,Math.pow(a.y,1/this.B)),a.y===1/0)throw new Error;a.x=-this.rB*Math.atan2(i*this.cosgam-u*this.singam,Math.cos(this.BrA*e))}return a.x+=this.lam0,a},names:["Hotine_Oblique_Mercator","Hotine Oblique Mercator","Hotine_Oblique_Mercator_Azimuth_Natural_Origin","Hotine_Oblique_Mercator_Two_Point_Natural_Origin","Hotine_Oblique_Mercator_Azimuth_Center","Oblique_Mercator","omerc"]},Bt={init:function(){if(this.lat2||(this.lat2=this.lat1),this.k0||(this.k0=1),this.x0=this.x0||0,this.y0=this.y0||0,!(Math.abs(this.lat1+this.lat2)<1e-10)){var t=this.b/this.a;this.e=Math.sqrt(1-t*t);var n=Math.sin(this.lat1),e=Math.cos(this.lat1),r=S(this.e,n,e),l=R(this.e,this.lat1,n),i=Math.sin(this.lat2),o=Math.cos(this.lat2),u=S(this.e,i,o),s=R(this.e,this.lat2,i),a=R(this.e,this.lat0,Math.sin(this.lat0));Math.abs(this.lat1-this.lat2)>1e-10?this.ns=Math.log(r/u)/Math.log(l/s):this.ns=n,isNaN(this.ns)&&(this.ns=n),this.f0=r/(this.ns*Math.pow(l,this.ns)),this.rh=this.a*this.f0*Math.pow(a,this.ns),this.title||(this.title="Lambert Conformal Conic")}},forward:function(t){var e=t.x,r=t.y;Math.abs(2*Math.abs(r)-Math.PI)<=1e-10&&(r=I(r)*(n-2e-10));var l,i,o=Math.abs(Math.abs(r)-n);if(o>1e-10)l=R(this.e,r,Math.sin(r)),i=this.a*this.f0*Math.pow(l,this.ns);else{if((o=r*this.ns)<=0)return null;i=0}var u=this.ns*P(e-this.long0);return t.x=this.k0*(i*Math.sin(u))+this.x0,t.y=this.k0*(this.rh-i*Math.cos(u))+this.y0,t},inverse:function(t){var e,r,l,i,o,u=(t.x-this.x0)/this.k0,s=this.rh-(t.y-this.y0)/this.k0;this.ns>0?(e=Math.sqrt(u*u+s*s),r=1):(e=-Math.sqrt(u*u+s*s),r=-1);var a=0;if(0!==e&&(a=Math.atan2(r*u,r*s)),0!==e||this.ns>0){if(r=1/this.ns,l=Math.pow(e/(this.a*this.f0),r),-9999===(i=T(this.e,l)))return null}else i=-n;return o=P(a/this.ns+this.long0),t.x=o,t.y=i,t},names:["Lambert Tangential Conformal Conic Projection","Lambert_Conformal_Conic","Lambert_Conformal_Conic_1SP","Lambert_Conformal_Conic_2SP","lcc","Lambert Conic Conformal (1SP)","Lambert Conic Conformal (2SP)"]},Ut={init:function(){this.a=6377397.155,this.es=.006674372230614,this.e=Math.sqrt(this.es),this.lat0||(this.lat0=.863937979737193),this.long0||(this.long0=.4334234309119251),this.k0||(this.k0=.9999),this.s45=.785398163397448,this.s90=2*this.s45,this.fi0=this.lat0,this.e2=this.es,this.e=Math.sqrt(this.e2),this.alfa=Math.sqrt(1+this.e2*Math.pow(Math.cos(this.fi0),4)/(1-this.e2)),this.uq=1.04216856380474,this.u0=Math.asin(Math.sin(this.fi0)/this.alfa),this.g=Math.pow((1+this.e*Math.sin(this.fi0))/(1-this.e*Math.sin(this.fi0)),this.alfa*this.e/2),this.k=Math.tan(this.u0/2+this.s45)/Math.pow(Math.tan(this.fi0/2+this.s45),this.alfa)*this.g,this.k1=this.k0,this.n0=this.a*Math.sqrt(1-this.e2)/(1-this.e2*Math.pow(Math.sin(this.fi0),2)),this.s0=1.37008346281555,this.n=Math.sin(this.s0),this.ro0=this.k1*this.n0/Math.tan(this.s0),this.ad=this.s90-this.uq},forward:function(t){var n,e,r,l,i,o,u,s=t.x,a=t.y,h=P(s-this.long0);return n=Math.pow((1+this.e*Math.sin(a))/(1-this.e*Math.sin(a)),this.alfa*this.e/2),e=2*(Math.atan(this.k*Math.pow(Math.tan(a/2+this.s45),this.alfa)/n)-this.s45),r=-h*this.alfa,l=Math.asin(Math.cos(this.ad)*Math.sin(e)+Math.sin(this.ad)*Math.cos(e)*Math.cos(r)),i=Math.asin(Math.cos(e)*Math.sin(r)/Math.cos(l)),o=this.n*i,u=this.ro0*Math.pow(Math.tan(this.s0/2+this.s45),this.n)/Math.pow(Math.tan(l/2+this.s45),this.n),t.y=u*Math.cos(o)/1,t.x=u*Math.sin(o)/1,this.czech||(t.y*=-1,t.x*=-1),t},inverse:function(t){var n,e,r,l,i,o,u,s=t.x;t.x=t.y,t.y=s,this.czech||(t.y*=-1,t.x*=-1),i=Math.sqrt(t.x*t.x+t.y*t.y),l=Math.atan2(t.y,t.x)/Math.sin(this.s0),r=2*(Math.atan(Math.pow(this.ro0/i,1/this.n)*Math.tan(this.s0/2+this.s45))-this.s45),n=Math.asin(Math.cos(this.ad)*Math.sin(r)-Math.sin(this.ad)*Math.cos(r)*Math.cos(l)),e=Math.asin(Math.cos(r)*Math.sin(l)/Math.cos(n)),t.x=this.long0-e/this.alfa,o=n,u=0;var a=0;do{t.y=2*(Math.atan(Math.pow(this.k,-1/this.alfa)*Math.pow(Math.tan(n/2+this.s45),1/this.alfa)*Math.pow((1+this.e*Math.sin(o))/(1-this.e*Math.sin(o)),this.e/2))-this.s45),Math.abs(o-t.y)<1e-10&&(u=1),o=t.y,a+=1}while(0===u&&a<15);return a>=15?null:t},names:["Krovak","krovak"]},qt=function(t,n,e,r,l){return t*l-n*Math.sin(2*l)+e*Math.sin(4*l)-r*Math.sin(6*l)},Yt=function(t){return 1-.25*t*(1+t/16*(3+1.25*t))},Xt=function(t){return.375*t*(1+.25*t*(1+.46875*t))},Vt=function(t){return.05859375*t*t*(1+.75*t)},Wt=function(t){return t*t*t*(35/3072)},Zt=function(t,n,e){var r=n*e;return t/Math.sqrt(1-r*r)},Ht=function(t){return Math.abs(t)<n?t:t-I(t)*Math.PI},Kt=function(t,n,e,r,l){var i,o;i=t/n;for(var u=0;u<15;u++)if(i+=o=(t-(n*i-e*Math.sin(2*i)+r*Math.sin(4*i)-l*Math.sin(6*i)))/(n-2*e*Math.cos(2*i)+4*r*Math.cos(4*i)-6*l*Math.cos(6*i)),Math.abs(o)<=1e-10)return i;return NaN},Jt={init:function(){this.sphere||(this.e0=Yt(this.es),this.e1=Xt(this.es),this.e2=Vt(this.es),this.e3=Wt(this.es),this.ml0=this.a*qt(this.e0,this.e1,this.e2,this.e3,this.lat0))},forward:function(t){var n,e,r=t.x,l=t.y;if(r=P(r-this.long0),this.sphere)n=this.a*Math.asin(Math.cos(l)*Math.sin(r)),e=this.a*(Math.atan2(Math.tan(l),Math.cos(r))-this.lat0);else{var i=Math.sin(l),o=Math.cos(l),u=Zt(this.a,this.e,i),s=Math.tan(l)*Math.tan(l),a=r*Math.cos(l),h=a*a,c=this.es*o*o/(1-this.es);n=u*a*(1-h*s*(1/6-(8-s+8*c)*h/120)),e=this.a*qt(this.e0,this.e1,this.e2,this.e3,l)-this.ml0+u*i/o*h*(.5+(5-s+6*c)*h/24)}return t.x=n+this.x0,t.y=e+this.y0,t},inverse:function(t){t.x-=this.x0,t.y-=this.y0;var e,r,l=t.x/this.a,i=t.y/this.a;if(this.sphere){var o=i+this.lat0;e=Math.asin(Math.sin(o)*Math.cos(l)),r=Math.atan2(Math.tan(l),Math.cos(o))}else{var u=this.ml0/this.a+i,s=Kt(u,this.e0,this.e1,this.e2,this.e3);if(Math.abs(Math.abs(s)-n)<=1e-10)return t.x=this.long0,t.y=n,i<0&&(t.y*=-1),t;var a=Zt(this.a,this.e,Math.sin(s)),h=a*a*a/this.a/this.a*(1-this.es),c=Math.pow(Math.tan(s),2),f=l*this.a/a,p=f*f;e=s-a*Math.tan(s)/h*f*f*(.5-(1+3*c)*f*f/24),r=f*(1-p*(c/3+(1+3*c)*c*p/15))/Math.cos(s)}return t.x=P(r+this.long0),t.y=Ht(e),t},names:["Cassini","Cassini_Soldner","cass"]},Qt=function(t,n){var e;return t>1e-7?(1-t*t)*(n/(1-(e=t*n)*e)-.5/t*Math.log((1-e)/(1+e))):2*n},$t={init:function(){var t,e=Math.abs(this.lat0);if(Math.abs(e-n)<1e-10?this.mode=this.lat0<0?this.S_POLE:this.N_POLE:Math.abs(e)<1e-10?this.mode=this.EQUIT:this.mode=this.OBLIQ,this.es>0)switch(this.qp=Qt(this.e,1),this.mmf=.5/(1-this.es),this.apa=function(t){var n,e=[];return e[0]=.3333333333333333*t,n=t*t,e[0]+=.17222222222222222*n,e[1]=.06388888888888888*n,n*=t,e[0]+=.10257936507936508*n,e[1]+=.0664021164021164*n,e[2]=.016415012942191543*n,e}(this.es),this.mode){case this.N_POLE:case this.S_POLE:this.dd=1;break;case this.EQUIT:this.rq=Math.sqrt(.5*this.qp),this.dd=1/this.rq,this.xmf=1,this.ymf=.5*this.qp;break;case this.OBLIQ:this.rq=Math.sqrt(.5*this.qp),t=Math.sin(this.lat0),this.sinb1=Qt(this.e,t)/this.qp,this.cosb1=Math.sqrt(1-this.sinb1*this.sinb1),this.dd=Math.cos(this.lat0)/(Math.sqrt(1-this.es*t*t)*this.rq*this.cosb1),this.ymf=(this.xmf=this.rq)/this.dd,this.xmf*=this.dd}else this.mode===this.OBLIQ&&(this.sinph0=Math.sin(this.lat0),this.cosph0=Math.cos(this.lat0))},forward:function(t){var e,r,i,o,u,s,a,h,c,f,p=t.x,d=t.y;if(p=P(p-this.long0),this.sphere){if(u=Math.sin(d),f=Math.cos(d),i=Math.cos(p),this.mode===this.OBLIQ||this.mode===this.EQUIT){if((r=this.mode===this.EQUIT?1+f*i:1+this.sinph0*u+this.cosph0*f*i)<=1e-10)return null;e=(r=Math.sqrt(2/r))*f*Math.sin(p),r*=this.mode===this.EQUIT?u:this.cosph0*u-this.sinph0*f*i}else if(this.mode===this.N_POLE||this.mode===this.S_POLE){if(this.mode===this.N_POLE&&(i=-i),Math.abs(d+this.lat0)<1e-10)return null;r=l-.5*d,e=(r=2*(this.mode===this.S_POLE?Math.cos(r):Math.sin(r)))*Math.sin(p),r*=i}}else{switch(a=0,h=0,c=0,i=Math.cos(p),o=Math.sin(p),u=Math.sin(d),s=Qt(this.e,u),this.mode!==this.OBLIQ&&this.mode!==this.EQUIT||(a=s/this.qp,h=Math.sqrt(1-a*a)),this.mode){case this.OBLIQ:c=1+this.sinb1*a+this.cosb1*h*i;break;case this.EQUIT:c=1+h*i;break;case this.N_POLE:c=n+d,s=this.qp-s;break;case this.S_POLE:c=d-n,s=this.qp+s}if(Math.abs(c)<1e-10)return null;switch(this.mode){case this.OBLIQ:case this.EQUIT:c=Math.sqrt(2/c),r=this.mode===this.OBLIQ?this.ymf*c*(this.cosb1*a-this.sinb1*h*i):(c=Math.sqrt(2/(1+h*i)))*a*this.ymf,e=this.xmf*c*h*o;break;case this.N_POLE:case this.S_POLE:s>=0?(e=(c=Math.sqrt(s))*o,r=i*(this.mode===this.S_POLE?c:-c)):e=r=0}}return t.x=this.a*e+this.x0,t.y=this.a*r+this.y0,t},inverse:function(t){t.x-=this.x0,t.y-=this.y0;var e,r,l,i,o,u,s,a,h,c,f=t.x/this.a,p=t.y/this.a;if(this.sphere){var d,g=0,y=0;if((r=.5*(d=Math.sqrt(f*f+p*p)))>1)return null;switch(r=2*Math.asin(r),this.mode!==this.OBLIQ&&this.mode!==this.EQUIT||(y=Math.sin(r),g=Math.cos(r)),this.mode){case this.EQUIT:r=Math.abs(d)<=1e-10?0:Math.asin(p*y/d),f*=y,p=g*d;break;case this.OBLIQ:r=Math.abs(d)<=1e-10?this.lat0:Math.asin(g*this.sinph0+p*y*this.cosph0/d),f*=y*this.cosph0,p=(g-Math.sin(r)*this.sinph0)*d;break;case this.N_POLE:p=-p,r=n-r;break;case this.S_POLE:r-=n}e=0!==p||this.mode!==this.EQUIT&&this.mode!==this.OBLIQ?Math.atan2(f,p):0}else{if(s=0,this.mode===this.OBLIQ||this.mode===this.EQUIT){if(f/=this.dd,p*=this.dd,(u=Math.sqrt(f*f+p*p))<1e-10)return t.x=this.long0,t.y=this.lat0,t;i=2*Math.asin(.5*u/this.rq),l=Math.cos(i),f*=i=Math.sin(i),this.mode===this.OBLIQ?(s=l*this.sinb1+p*i*this.cosb1/u,o=this.qp*s,p=u*this.cosb1*l-p*this.sinb1*i):(s=p*i/u,o=this.qp*s,p=u*l)}else if(this.mode===this.N_POLE||this.mode===this.S_POLE){if(this.mode===this.N_POLE&&(p=-p),!(o=f*f+p*p))return t.x=this.long0,t.y=this.lat0,t;s=1-o/this.qp,this.mode===this.S_POLE&&(s=-s)}e=Math.atan2(f,p),a=Math.asin(s),h=this.apa,c=a+a,r=a+h[0]*Math.sin(c)+h[1]*Math.sin(c+c)+h[2]*Math.sin(c+c+c)}return t.x=P(this.long0+e),t.y=r,t},names:["Lambert Azimuthal Equal Area","Lambert_Azimuthal_Equal_Area","laea"],S_POLE:1,N_POLE:2,EQUIT:3,OBLIQ:4},tn=function(t){return Math.abs(t)>1&&(t=t>1?1:-1),Math.asin(t)},nn={init:function(){Math.abs(this.lat1+this.lat2)<1e-10||(this.temp=this.b/this.a,this.es=1-Math.pow(this.temp,2),this.e3=Math.sqrt(this.es),this.sin_po=Math.sin(this.lat1),this.cos_po=Math.cos(this.lat1),this.t1=this.sin_po,this.con=this.sin_po,this.ms1=S(this.e3,this.sin_po,this.cos_po),this.qs1=Qt(this.e3,this.sin_po,this.cos_po),this.sin_po=Math.sin(this.lat2),this.cos_po=Math.cos(this.lat2),this.t2=this.sin_po,this.ms2=S(this.e3,this.sin_po,this.cos_po),this.qs2=Qt(this.e3,this.sin_po,this.cos_po),this.sin_po=Math.sin(this.lat0),this.cos_po=Math.cos(this.lat0),this.t3=this.sin_po,this.qs0=Qt(this.e3,this.sin_po,this.cos_po),Math.abs(this.lat1-this.lat2)>1e-10?this.ns0=(this.ms1*this.ms1-this.ms2*this.ms2)/(this.qs2-this.qs1):this.ns0=this.con,this.c=this.ms1*this.ms1+this.ns0*this.qs1,this.rh=this.a*Math.sqrt(this.c-this.ns0*this.qs0)/this.ns0)},forward:function(t){var n=t.x,e=t.y;this.sin_phi=Math.sin(e),this.cos_phi=Math.cos(e);var r=Qt(this.e3,this.sin_phi,this.cos_phi),l=this.a*Math.sqrt(this.c-this.ns0*r)/this.ns0,i=this.ns0*P(n-this.long0),o=l*Math.sin(i)+this.x0,u=this.rh-l*Math.cos(i)+this.y0;return t.x=o,t.y=u,t},inverse:function(t){var n,e,r,l,i,o;return t.x-=this.x0,t.y=this.rh-t.y+this.y0,this.ns0>=0?(n=Math.sqrt(t.x*t.x+t.y*t.y),r=1):(n=-Math.sqrt(t.x*t.x+t.y*t.y),r=-1),l=0,0!==n&&(l=Math.atan2(r*t.x,r*t.y)),r=n*this.ns0/this.a,this.sphere?o=Math.asin((this.c-r*r)/(2*this.ns0)):(e=(this.c-r*r)/this.ns0,o=this.phi1z(this.e3,e)),i=P(l/this.ns0+this.long0),t.x=i,t.y=o,t},names:["Albers_Conic_Equal_Area","Albers","aea"],phi1z:function(t,n){var e,r,l,i,o=tn(.5*n);if(t<1e-10)return o;for(var u=t*t,s=1;s<=25;s++)if(o+=i=.5*(l=1-(r=t*(e=Math.sin(o)))*r)*l/Math.cos(o)*(n/(1-u)-e/l+.5/t*Math.log((1-r)/(1+r))),Math.abs(i)<=1e-7)return o;return null}},en={init:function(){this.sin_p14=Math.sin(this.lat0),this.cos_p14=Math.cos(this.lat0),this.infinity_dist=1e3*this.a,this.rc=1},forward:function(t){var n,e,r,l,i,o,u,s=t.x,a=t.y;return r=P(s-this.long0),n=Math.sin(a),e=Math.cos(a),l=Math.cos(r),(i=this.sin_p14*n+this.cos_p14*e*l)>0||Math.abs(i)<=1e-10?(o=this.x0+1*this.a*e*Math.sin(r)/i,u=this.y0+1*this.a*(this.cos_p14*n-this.sin_p14*e*l)/i):(o=this.x0+this.infinity_dist*e*Math.sin(r),u=this.y0+this.infinity_dist*(this.cos_p14*n-this.sin_p14*e*l)),t.x=o,t.y=u,t},inverse:function(t){var n,e,r,l,i,o;return t.x=(t.x-this.x0)/this.a,t.y=(t.y-this.y0)/this.a,t.x/=this.k0,t.y/=this.k0,(n=Math.sqrt(t.x*t.x+t.y*t.y))?(l=Math.atan2(n,this.rc),e=Math.sin(l),r=Math.cos(l),o=tn(r*this.sin_p14+t.y*e*this.cos_p14/n),i=Math.atan2(t.x*e,n*this.cos_p14*r-t.y*this.sin_p14*e),i=P(this.long0+i)):(o=this.phic0,i=0),t.x=i,t.y=o,t},names:["gnom"]},rn={init:function(){this.sphere||(this.k0=S(this.e,Math.sin(this.lat_ts),Math.cos(this.lat_ts)))},forward:function(t){var n,e,r=t.x,l=t.y,i=P(r-this.long0);if(this.sphere)n=this.x0+this.a*i*Math.cos(this.lat_ts),e=this.y0+this.a*Math.sin(l)/Math.cos(this.lat_ts);else{var o=Qt(this.e,Math.sin(l));n=this.x0+this.a*this.k0*i,e=this.y0+this.a*o*.5/this.k0}return t.x=n,t.y=e,t},inverse:function(t){var e,r;return t.x-=this.x0,t.y-=this.y0,this.sphere?(e=P(this.long0+t.x/this.a/Math.cos(this.lat_ts)),r=Math.asin(t.y/this.a*Math.cos(this.lat_ts))):(r=function(t,e){var r=1-(1-t*t)/(2*t)*Math.log((1-t)/(1+t));if(Math.abs(Math.abs(e)-r)<1e-6)return e<0?-1*n:n;for(var l,i,o,u,s=Math.asin(.5*e),a=0;a<30;a++)if(i=Math.sin(s),o=Math.cos(s),u=t*i,s+=l=Math.pow(1-u*u,2)/(2*o)*(e/(1-t*t)-i/(1-u*u)+.5/t*Math.log((1-u)/(1+u))),Math.abs(l)<=1e-10)return s;return NaN}(this.e,2*t.y*this.k0/this.a),e=P(this.long0+t.x/(this.a*this.k0))),t.x=e,t.y=r,t},names:["cea"]},ln={init:function(){this.x0=this.x0||0,this.y0=this.y0||0,this.lat0=this.lat0||0,this.long0=this.long0||0,this.lat_ts=this.lat_ts||0,this.title=this.title||"Equidistant Cylindrical (Plate Carre)",this.rc=Math.cos(this.lat_ts)},forward:function(t){var n=t.x,e=t.y,r=P(n-this.long0),l=Ht(e-this.lat0);return t.x=this.x0+this.a*r*this.rc,t.y=this.y0+this.a*l,t},inverse:function(t){var n=t.x,e=t.y;return t.x=P(this.long0+(n-this.x0)/(this.a*this.rc)),t.y=Ht(this.lat0+(e-this.y0)/this.a),t},names:["Equirectangular","Equidistant_Cylindrical","eqc"]},on={init:function(){this.temp=this.b/this.a,this.es=1-Math.pow(this.temp,2),this.e=Math.sqrt(this.es),this.e0=Yt(this.es),this.e1=Xt(this.es),this.e2=Vt(this.es),this.e3=Wt(this.es),this.ml0=this.a*qt(this.e0,this.e1,this.e2,this.e3,this.lat0)},forward:function(t){var n,e,r,l=t.x,i=t.y,o=P(l-this.long0);if(r=o*Math.sin(i),this.sphere)Math.abs(i)<=1e-10?(n=this.a*o,e=-1*this.a*this.lat0):(n=this.a*Math.sin(r)/Math.tan(i),e=this.a*(Ht(i-this.lat0)+(1-Math.cos(r))/Math.tan(i)));else if(Math.abs(i)<=1e-10)n=this.a*o,e=-1*this.ml0;else{var u=Zt(this.a,this.e,Math.sin(i))/Math.tan(i);n=u*Math.sin(r),e=this.a*qt(this.e0,this.e1,this.e2,this.e3,i)-this.ml0+u*(1-Math.cos(r))}return t.x=n+this.x0,t.y=e+this.y0,t},inverse:function(t){var n,e,r,l,i,o,u,s,a;if(r=t.x-this.x0,l=t.y-this.y0,this.sphere)if(Math.abs(l+this.a*this.lat0)<=1e-10)n=P(r/this.a+this.long0),e=0;else{var h;for(o=this.lat0+l/this.a,u=r*r/this.a/this.a+o*o,s=o,i=20;i;--i)if(s+=a=-1*(o*(s*(h=Math.tan(s))+1)-s-.5*(s*s+u)*h)/((s-o)/h-1),Math.abs(a)<=1e-10){e=s;break}n=P(this.long0+Math.asin(r*Math.tan(s)/this.a)/Math.sin(e))}else if(Math.abs(l+this.ml0)<=1e-10)e=0,n=P(this.long0+r/this.a);else{var c,f,p,d,g;for(o=(this.ml0+l)/this.a,u=r*r/this.a/this.a+o*o,s=o,i=20;i;--i)if(g=this.e*Math.sin(s),c=Math.sqrt(1-g*g)*Math.tan(s),f=this.a*qt(this.e0,this.e1,this.e2,this.e3,s),p=this.e0-2*this.e1*Math.cos(2*s)+4*this.e2*Math.cos(4*s)-6*this.e3*Math.cos(6*s),s-=a=(o*(c*(d=f/this.a)+1)-d-.5*c*(d*d+u))/(this.es*Math.sin(2*s)*(d*d+u-2*o*d)/(4*c)+(o-d)*(c*p-2/Math.sin(2*s))-p),Math.abs(a)<=1e-10){e=s;break}c=Math.sqrt(1-this.es*Math.pow(Math.sin(e),2))*Math.tan(e),n=P(this.long0+Math.asin(r*c/this.a)/Math.sin(e))}return t.x=n,t.y=e,t},names:["Polyconic","poly"]},un={init:function(){this.A=[],this.A[1]=.6399175073,this.A[2]=-.1358797613,this.A[3]=.063294409,this.A[4]=-.02526853,this.A[5]=.0117879,this.A[6]=-.0055161,this.A[7]=.0026906,this.A[8]=-.001333,this.A[9]=67e-5,this.A[10]=-34e-5,this.B_re=[],this.B_im=[],this.B_re[1]=.7557853228,this.B_im[1]=0,this.B_re[2]=.249204646,this.B_im[2]=.003371507,this.B_re[3]=-.001541739,this.B_im[3]=.04105856,this.B_re[4]=-.10162907,this.B_im[4]=.01727609,this.B_re[5]=-.26623489,this.B_im[5]=-.36249218,this.B_re[6]=-.6870983,this.B_im[6]=-1.1651967,this.C_re=[],this.C_im=[],this.C_re[1]=1.3231270439,this.C_im[1]=0,this.C_re[2]=-.577245789,this.C_im[2]=-.007809598,this.C_re[3]=.508307513,this.C_im[3]=-.112208952,this.C_re[4]=-.15094762,this.C_im[4]=.18200602,this.C_re[5]=1.01418179,this.C_im[5]=1.64497696,this.C_re[6]=1.9660549,this.C_im[6]=2.5127645,this.D=[],this.D[1]=1.5627014243,this.D[2]=.5185406398,this.D[3]=-.03333098,this.D[4]=-.1052906,this.D[5]=-.0368594,this.D[6]=.007317,this.D[7]=.0122,this.D[8]=.00394,this.D[9]=-.0013},forward:function(n){var e,r=n.x,l=n.y-this.lat0,i=r-this.long0,o=l/t*1e-5,u=i,s=1,a=0;for(e=1;e<=10;e++)s*=o,a+=this.A[e]*s;var h,c=a,f=u,p=1,d=0,g=0,y=0;for(e=1;e<=6;e++)h=d*c+p*f,p=p*c-d*f,d=h,g=g+this.B_re[e]*p-this.B_im[e]*d,y=y+this.B_im[e]*p+this.B_re[e]*d;return n.x=y*this.a+this.x0,n.y=g*this.a+this.y0,n},inverse:function(n){var e,r,l=n.x,i=n.y,o=l-this.x0,u=(i-this.y0)/this.a,s=o/this.a,a=1,h=0,c=0,f=0;for(e=1;e<=6;e++)r=h*u+a*s,a=a*u-h*s,h=r,c=c+this.C_re[e]*a-this.C_im[e]*h,f=f+this.C_im[e]*a+this.C_re[e]*h;for(var p=0;p<this.iterations;p++){var d,g=c,y=f,_=u,v=s;for(e=2;e<=6;e++)d=y*c+g*f,g=g*c-y*f,y=d,_+=(e-1)*(this.B_re[e]*g-this.B_im[e]*y),v+=(e-1)*(this.B_im[e]*g+this.B_re[e]*y);g=1,y=0;var m=this.B_re[1],b=this.B_im[1];for(e=2;e<=6;e++)d=y*c+g*f,g=g*c-y*f,y=d,m+=e*(this.B_re[e]*g-this.B_im[e]*y),b+=e*(this.B_im[e]*g+this.B_re[e]*y);var x=m*m+b*b;c=(_*m+v*b)/x,f=(v*m-_*b)/x}var w=c,E=f,C=1,O=0;for(e=1;e<=9;e++)C*=w,O+=this.D[e]*C;var M=this.lat0+O*t*1e5,S=this.long0+E;return n.x=S,n.y=M,n},names:["New_Zealand_Map_Grid","nzmg"]},sn={init:function(){},forward:function(t){var n=t.x,e=t.y,r=P(n-this.long0),l=this.x0+this.a*r,i=this.y0+this.a*Math.log(Math.tan(Math.PI/4+e/2.5))*1.25;return t.x=l,t.y=i,t},inverse:function(t){t.x-=this.x0,t.y-=this.y0;var n=P(this.long0+t.x/this.a),e=2.5*(Math.atan(Math.exp(.8*t.y/this.a))-Math.PI/4);return t.x=n,t.y=e,t},names:["Miller_Cylindrical","mill"]},an={init:function(){this.sphere?(this.n=1,this.m=0,this.es=0,this.C_y=Math.sqrt((this.m+1)/this.n),this.C_x=this.C_y/(this.m+1)):this.en=Ct(this.es)},forward:function(t){var n,e,r=t.x,l=t.y;if(r=P(r-this.long0),this.sphere){if(this.m)for(var i=this.n*Math.sin(l),o=20;o;--o){var u=(this.m*l+Math.sin(l)-i)/(this.m+Math.cos(l));if(l-=u,Math.abs(u)<1e-10)break}else l=1!==this.n?Math.asin(this.n*Math.sin(l)):l;n=this.a*this.C_x*r*(this.m+Math.cos(l)),e=this.a*this.C_y*l}else{var s=Math.sin(l),a=Math.cos(l);e=this.a*Ot(l,s,a,this.en),n=this.a*r*a/Math.sqrt(1-this.es*s*s)}return t.x=n,t.y=e,t},inverse:function(t){var e,r,l,i;return t.x-=this.x0,l=t.x/this.a,t.y-=this.y0,e=t.y/this.a,this.sphere?(e/=this.C_y,l/=this.C_x*(this.m+Math.cos(e)),this.m?e=tn((this.m*e+Math.sin(e))/this.n):1!==this.n&&(e=tn(Math.sin(e)/this.n)),l=P(l+this.long0),e=Ht(e)):(e=Mt(t.y/this.a,this.es,this.en),(i=Math.abs(e))<n?(i=Math.sin(e),r=this.long0+t.x*Math.sqrt(1-this.es*i*i)/(this.a*Math.cos(e)),l=P(r)):i-1e-10<n&&(l=this.long0)),t.x=l,t.y=e,t},names:["Sinusoidal","sinu"]},hn={init:function(){},forward:function(t){for(var n=t.x,e=t.y,r=P(n-this.long0),l=e,i=Math.PI*Math.sin(e);;){var o=-(l+Math.sin(l)-i)/(1+Math.cos(l));if(l+=o,Math.abs(o)<1e-10)break}l/=2,Math.PI/2-Math.abs(e)<1e-10&&(r=0);var u=.900316316158*this.a*r*Math.cos(l)+this.x0,s=1.4142135623731*this.a*Math.sin(l)+this.y0;return t.x=u,t.y=s,t},inverse:function(t){var n,e;t.x-=this.x0,t.y-=this.y0,e=t.y/(1.4142135623731*this.a),Math.abs(e)>.999999999999&&(e=.999999999999),n=Math.asin(e);var r=P(this.long0+t.x/(.900316316158*this.a*Math.cos(n)));r<-Math.PI&&(r=-Math.PI),r>Math.PI&&(r=Math.PI),e=(2*n+Math.sin(2*n))/Math.PI,Math.abs(e)>1&&(e=1);var l=Math.asin(e);return t.x=r,t.y=l,t},names:["Mollweide","moll"]},cn={init:function(){Math.abs(this.lat1+this.lat2)<1e-10||(this.lat2=this.lat2||this.lat1,this.temp=this.b/this.a,this.es=1-Math.pow(this.temp,2),this.e=Math.sqrt(this.es),this.e0=Yt(this.es),this.e1=Xt(this.es),this.e2=Vt(this.es),this.e3=Wt(this.es),this.sinphi=Math.sin(this.lat1),this.cosphi=Math.cos(this.lat1),this.ms1=S(this.e,this.sinphi,this.cosphi),this.ml1=qt(this.e0,this.e1,this.e2,this.e3,this.lat1),Math.abs(this.lat1-this.lat2)<1e-10?this.ns=this.sinphi:(this.sinphi=Math.sin(this.lat2),this.cosphi=Math.cos(this.lat2),this.ms2=S(this.e,this.sinphi,this.cosphi),this.ml2=qt(this.e0,this.e1,this.e2,this.e3,this.lat2),this.ns=(this.ms1-this.ms2)/(this.ml2-this.ml1)),this.g=this.ml1+this.ms1/this.ns,this.ml0=qt(this.e0,this.e1,this.e2,this.e3,this.lat0),this.rh=this.a*(this.g-this.ml0))},forward:function(t){var n,e=t.x,r=t.y;if(this.sphere)n=this.a*(this.g-r);else{var l=qt(this.e0,this.e1,this.e2,this.e3,r);n=this.a*(this.g-l)}var i=this.ns*P(e-this.long0),o=this.x0+n*Math.sin(i),u=this.y0+this.rh-n*Math.cos(i);return t.x=o,t.y=u,t},inverse:function(t){var n,e,r,l;t.x-=this.x0,t.y=this.rh-t.y+this.y0,this.ns>=0?(e=Math.sqrt(t.x*t.x+t.y*t.y),n=1):(e=-Math.sqrt(t.x*t.x+t.y*t.y),n=-1);var i=0;if(0!==e&&(i=Math.atan2(n*t.x,n*t.y)),this.sphere)return l=P(this.long0+i/this.ns),r=Ht(this.g-e/this.a),t.x=l,t.y=r,t;var o=this.g-e/this.a;return r=Kt(o,this.e0,this.e1,this.e2,this.e3),l=P(this.long0+i/this.ns),t.x=l,t.y=r,t},names:["Equidistant_Conic","eqdc"]},fn={init:function(){this.R=this.a},forward:function(t){var e,r,l=t.x,i=t.y,o=P(l-this.long0);Math.abs(i)<=1e-10&&(e=this.x0+this.R*o,r=this.y0);var u=tn(2*Math.abs(i/Math.PI));(Math.abs(o)<=1e-10||Math.abs(Math.abs(i)-n)<=1e-10)&&(e=this.x0,r=i>=0?this.y0+Math.PI*this.R*Math.tan(.5*u):this.y0+Math.PI*this.R*-Math.tan(.5*u));var s=.5*Math.abs(Math.PI/o-o/Math.PI),a=s*s,h=Math.sin(u),c=Math.cos(u),f=c/(h+c-1),p=f*f,d=f*(2/h-1),g=d*d,y=Math.PI*this.R*(s*(f-g)+Math.sqrt(a*(f-g)*(f-g)-(g+a)*(p-g)))/(g+a);o<0&&(y=-y),e=this.x0+y;var _=a+f;return y=Math.PI*this.R*(d*_-s*Math.sqrt((g+a)*(a+1)-_*_))/(g+a),r=i>=0?this.y0+y:this.y0-y,t.x=e,t.y=r,t},inverse:function(t){var n,e,r,l,i,o,u,s,a,h,c,f;return t.x-=this.x0,t.y-=this.y0,c=Math.PI*this.R,i=(r=t.x/c)*r+(l=t.y/c)*l,c=3*(l*l/(s=-2*(o=-Math.abs(l)*(1+i))+1+2*l*l+i*i)+(2*(u=o-2*l*l+r*r)*u*u/s/s/s-9*o*u/s/s)/27)/(a=(o-u*u/3/s)/s)/(h=2*Math.sqrt(-a/3)),Math.abs(c)>1&&(c=c>=0?1:-1),f=Math.acos(c)/3,e=t.y>=0?(-h*Math.cos(f+Math.PI/3)-u/3/s)*Math.PI:-(-h*Math.cos(f+Math.PI/3)-u/3/s)*Math.PI,n=Math.abs(r)<1e-10?this.long0:P(this.long0+Math.PI*(i-1+Math.sqrt(1+2*(r*r-l*l)+i*i))/2/r),t.x=n,t.y=e,t},names:["Van_der_Grinten_I","VanDerGrinten","vandg"]},pn={init:function(){this.sin_p12=Math.sin(this.lat0),this.cos_p12=Math.cos(this.lat0)},forward:function(t){var e,r,l,i,o,u,s,a,h,c,f,p,d,g,y,_,v,m,b,x,w,E,C=t.x,O=t.y,M=Math.sin(t.y),S=Math.cos(t.y),I=P(C-this.long0);return this.sphere?Math.abs(this.sin_p12-1)<=1e-10?(t.x=this.x0+this.a*(n-O)*Math.sin(I),t.y=this.y0-this.a*(n-O)*Math.cos(I),t):Math.abs(this.sin_p12+1)<=1e-10?(t.x=this.x0+this.a*(n+O)*Math.sin(I),t.y=this.y0+this.a*(n+O)*Math.cos(I),t):(m=this.sin_p12*M+this.cos_p12*S*Math.cos(I),v=(_=Math.acos(m))?_/Math.sin(_):1,t.x=this.x0+this.a*v*S*Math.sin(I),t.y=this.y0+this.a*v*(this.cos_p12*M-this.sin_p12*S*Math.cos(I)),t):(e=Yt(this.es),r=Xt(this.es),l=Vt(this.es),i=Wt(this.es),Math.abs(this.sin_p12-1)<=1e-10?(o=this.a*qt(e,r,l,i,n),u=this.a*qt(e,r,l,i,O),t.x=this.x0+(o-u)*Math.sin(I),t.y=this.y0-(o-u)*Math.cos(I),t):Math.abs(this.sin_p12+1)<=1e-10?(o=this.a*qt(e,r,l,i,n),u=this.a*qt(e,r,l,i,O),t.x=this.x0+(o+u)*Math.sin(I),t.y=this.y0+(o+u)*Math.cos(I),t):(s=M/S,a=Zt(this.a,this.e,this.sin_p12),h=Zt(this.a,this.e,M),c=Math.atan((1-this.es)*s+this.es*a*this.sin_p12/(h*S)),b=0===(f=Math.atan2(Math.sin(I),this.cos_p12*Math.tan(c)-this.sin_p12*Math.cos(I)))?Math.asin(this.cos_p12*Math.sin(c)-this.sin_p12*Math.cos(c)):Math.abs(Math.abs(f)-Math.PI)<=1e-10?-Math.asin(this.cos_p12*Math.sin(c)-this.sin_p12*Math.cos(c)):Math.asin(Math.sin(I)*Math.cos(c)/Math.sin(f)),p=this.e*this.sin_p12/Math.sqrt(1-this.es),_=a*b*(1-(x=b*b)*(y=(d=this.e*this.cos_p12*Math.cos(f)/Math.sqrt(1-this.es))*d)*(1-y)/6+(w=x*b)/8*(g=p*d)*(1-2*y)+(E=w*b)/120*(y*(4-7*y)-3*p*p*(1-7*y))-E*b/48*g),t.x=this.x0+_*Math.sin(f),t.y=this.y0+_*Math.cos(f),t))},inverse:function(t){var e,r,l,i,o,u,s,a,h,c,f,p,d,g,y,_,v,m,b,x,w,E,C;if(t.x-=this.x0,t.y-=this.y0,this.sphere){if((e=Math.sqrt(t.x*t.x+t.y*t.y))>2*n*this.a)return;return r=e/this.a,l=Math.sin(r),i=Math.cos(r),o=this.long0,Math.abs(e)<=1e-10?u=this.lat0:(u=tn(i*this.sin_p12+t.y*l*this.cos_p12/e),s=Math.abs(this.lat0)-n,o=Math.abs(s)<=1e-10?this.lat0>=0?P(this.long0+Math.atan2(t.x,-t.y)):P(this.long0-Math.atan2(-t.x,t.y)):P(this.long0+Math.atan2(t.x*l,e*this.cos_p12*i-t.y*this.sin_p12*l))),t.x=o,t.y=u,t}return a=Yt(this.es),h=Xt(this.es),c=Vt(this.es),f=Wt(this.es),Math.abs(this.sin_p12-1)<=1e-10?(p=this.a*qt(a,h,c,f,n),e=Math.sqrt(t.x*t.x+t.y*t.y),u=Kt((p-e)/this.a,a,h,c,f),o=P(this.long0+Math.atan2(t.x,-1*t.y)),t.x=o,t.y=u,t):Math.abs(this.sin_p12+1)<=1e-10?(p=this.a*qt(a,h,c,f,n),e=Math.sqrt(t.x*t.x+t.y*t.y),u=Kt((e-p)/this.a,a,h,c,f),o=P(this.long0+Math.atan2(t.x,t.y)),t.x=o,t.y=u,t):(e=Math.sqrt(t.x*t.x+t.y*t.y),y=Math.atan2(t.x,t.y),d=Zt(this.a,this.e,this.sin_p12),_=Math.cos(y),m=-(v=this.e*this.cos_p12*_)*v/(1-this.es),b=3*this.es*(1-m)*this.sin_p12*this.cos_p12*_/(1-this.es),E=1-m*(w=(x=e/d)-m*(1+m)*Math.pow(x,3)/6-b*(1+3*m)*Math.pow(x,4)/24)*w/2-x*w*w*w/6,g=Math.asin(this.sin_p12*Math.cos(w)+this.cos_p12*Math.sin(w)*_),o=P(this.long0+Math.asin(Math.sin(y)*Math.sin(w)/Math.cos(g))),C=Math.sin(g),u=Math.atan2((C-this.es*E*this.sin_p12)*Math.tan(g),C*(1-this.es)),t.x=o,t.y=u,t)},names:["Azimuthal_Equidistant","aeqd"]},dn={init:function(){this.sin_p14=Math.sin(this.lat0),this.cos_p14=Math.cos(this.lat0)},forward:function(t){var n,e,r,l,i,o,u,s=t.x,a=t.y;return r=P(s-this.long0),n=Math.sin(a),e=Math.cos(a),l=Math.cos(r),((i=this.sin_p14*n+this.cos_p14*e*l)>0||Math.abs(i)<=1e-10)&&(o=1*this.a*e*Math.sin(r),u=this.y0+1*this.a*(this.cos_p14*n-this.sin_p14*e*l)),t.x=o,t.y=u,t},inverse:function(t){var e,r,l,i,o,u,s;return t.x-=this.x0,t.y-=this.y0,e=Math.sqrt(t.x*t.x+t.y*t.y),r=tn(e/this.a),l=Math.sin(r),i=Math.cos(r),u=this.long0,Math.abs(e)<=1e-10?(s=this.lat0,t.x=u,t.y=s,t):(s=tn(i*this.sin_p14+t.y*l*this.cos_p14/e),o=Math.abs(this.lat0)-n,Math.abs(o)<=1e-10?(u=this.lat0>=0?P(this.long0+Math.atan2(t.x,-t.y)):P(this.long0-Math.atan2(-t.x,t.y)),t.x=u,t.y=s,t):(u=P(this.long0+Math.atan2(t.x*l,e*this.cos_p14*i-t.y*this.sin_p14*l)),t.x=u,t.y=s,t))},names:["ortho"]},gn=1,yn=2,_n=3,vn=4,mn=5,bn=6,xn=1,wn=2,En=3,Cn=4;function On(t,e,r,i){var u;return t<1e-10?(i.value=xn,u=0):(u=Math.atan2(e,r),Math.abs(u)<=l?i.value=xn:u>l&&u<=n+l?(i.value=wn,u-=n):u>n+l||u<=-(n+l)?(i.value=En,u=u>=0?u-o:u+o):(i.value=Cn,u+=n)),u}function Mn(t,n){var e=t+n;return e<-o?e+=i:e>+o&&(e-=i),e}var Sn,In={init:function(){this.x0=this.x0||0,this.y0=this.y0||0,this.lat0=this.lat0||0,this.long0=this.long0||0,this.lat_ts=this.lat_ts||0,this.title=this.title||"Quadrilateralized Spherical Cube",this.lat0>=n-l/2?this.face=mn:this.lat0<=-(n-l/2)?this.face=bn:Math.abs(this.long0)<=l?this.face=gn:Math.abs(this.long0)<=n+l?this.face=this.long0>0?yn:vn:this.face=_n,0!==this.es&&(this.one_minus_f=1-(this.a-this.b)/this.a,this.one_minus_f_squared=this.one_minus_f*this.one_minus_f)},forward:function(t){var e,r,i,u,s,a,h={x:0,y:0},c={value:0};if(t.x-=this.long0,e=0!==this.es?Math.atan(this.one_minus_f_squared*Math.tan(t.y)):t.y,r=t.x,this.face===mn)u=n-e,r>=l&&r<=n+l?(c.value=xn,i=r-n):r>n+l||r<=-(n+l)?(c.value=wn,i=r>0?r-o:r+o):r>-(n+l)&&r<=-l?(c.value=En,i=r+n):(c.value=Cn,i=r);else if(this.face===bn)u=n+e,r>=l&&r<=n+l?(c.value=xn,i=-r+n):r<l&&r>=-l?(c.value=wn,i=-r):r<-l&&r>=-(n+l)?(c.value=En,i=-r-n):(c.value=Cn,i=r>0?-r+o:-r-o);else{var f,p,d,g,y,_;this.face===yn?r=Mn(r,+n):this.face===_n?r=Mn(r,+o):this.face===vn&&(r=Mn(r,-n)),g=Math.sin(e),y=Math.cos(e),_=Math.sin(r),f=y*Math.cos(r),p=y*_,d=g,this.face===gn?i=On(u=Math.acos(f),d,p,c):this.face===yn?i=On(u=Math.acos(p),d,-f,c):this.face===_n?i=On(u=Math.acos(-f),d,-p,c):this.face===vn?i=On(u=Math.acos(-p),d,f,c):(u=i=0,c.value=xn)}return a=Math.atan(12/o*(i+Math.acos(Math.sin(i)*Math.cos(l))-n)),s=Math.sqrt((1-Math.cos(u))/(Math.cos(a)*Math.cos(a))/(1-Math.cos(Math.atan(1/Math.cos(i))))),c.value===wn?a+=n:c.value===En?a+=o:c.value===Cn&&(a+=1.5*o),h.x=s*Math.cos(a),h.y=s*Math.sin(a),h.x=h.x*this.a+this.x0,h.y=h.y*this.a+this.y0,t.x=h.x,t.y=h.y,t},inverse:function(t){var e,r,l,i,u,s,a,h,c,f,p,d,g={lam:0,phi:0},y={value:0};if(t.x=(t.x-this.x0)/this.a,t.y=(t.y-this.y0)/this.a,r=Math.atan(Math.sqrt(t.x*t.x+t.y*t.y)),e=Math.atan2(t.y,t.x),t.x>=0&&t.x>=Math.abs(t.y)?y.value=xn:t.y>=0&&t.y>=Math.abs(t.x)?(y.value=wn,e-=n):t.x<0&&-t.x>=Math.abs(t.y)?(y.value=En,e=e<0?e+o:e-o):(y.value=Cn,e+=n),c=o/12*Math.tan(e),u=Math.sin(c)/(Math.cos(c)-1/Math.sqrt(2)),s=Math.atan(u),(a=1-(l=Math.cos(e))*l*(i=Math.tan(r))*i*(1-Math.cos(Math.atan(1/Math.cos(s)))))<-1?a=-1:a>1&&(a=1),this.face===mn)h=Math.acos(a),g.phi=n-h,y.value===xn?g.lam=s+n:y.value===wn?g.lam=s<0?s+o:s-o:y.value===En?g.lam=s-n:g.lam=s;else if(this.face===bn)h=Math.acos(a),g.phi=h-n,y.value===xn?g.lam=-s+n:y.value===wn?g.lam=-s:y.value===En?g.lam=-s-n:g.lam=s<0?-s-o:-s+o;else{var _,v,m;c=(_=a)*_,v=(c+=(m=c>=1?0:Math.sqrt(1-c)*Math.sin(s))*m)>=1?0:Math.sqrt(1-c),y.value===wn?(c=v,v=-m,m=c):y.value===En?(v=-v,m=-m):y.value===Cn&&(c=v,v=m,m=-c),this.face===yn?(c=_,_=-v,v=c):this.face===_n?(_=-_,v=-v):this.face===vn&&(c=_,_=v,v=-c),g.phi=Math.acos(-m)-n,g.lam=Math.atan2(v,_),this.face===yn?g.lam=Mn(g.lam,-n):this.face===_n?g.lam=Mn(g.lam,-o):this.face===vn&&(g.lam=Mn(g.lam,+n))}return 0!==this.es&&(f=g.phi<0?1:0,p=Math.tan(g.phi),d=this.b/Math.sqrt(p*p+this.one_minus_f_squared),g.phi=Math.atan(Math.sqrt(this.a*this.a-d*d)/(this.one_minus_f*d)),f&&(g.phi=-g.phi)),g.lam+=this.long0,t.x=g.lam,t.y=g.phi,t},names:["Quadrilateralized Spherical Cube","Quadrilateralized_Spherical_Cube","qsc"]},Pn=[[1,22199e-21,-715515e-10,31103e-10],[.9986,-482243e-9,-24897e-9,-13309e-10],[.9954,-83103e-8,-448605e-10,-9.86701e-7],[.99,-.00135364,-59661e-9,36777e-10],[.9822,-.00167442,-449547e-11,-572411e-11],[.973,-.00214868,-903571e-10,1.8736e-8],[.96,-.00305085,-900761e-10,164917e-11],[.9427,-.00382792,-653386e-10,-26154e-10],[.9216,-.00467746,-10457e-8,481243e-11],[.8962,-.00536223,-323831e-10,-543432e-11],[.8679,-.00609363,-113898e-9,332484e-11],[.835,-.00698325,-640253e-10,9.34959e-7],[.7986,-.00755338,-500009e-10,9.35324e-7],[.7597,-.00798324,-35971e-9,-227626e-11],[.7186,-.00851367,-701149e-10,-86303e-10],[.6732,-.00986209,-199569e-9,191974e-10],[.6213,-.010418,883923e-10,624051e-11],[.5722,-.00906601,182e-6,624051e-11],[.5322,-.00677797,275608e-9,624051e-11]],Rn=[[-520417e-23,.0124,121431e-23,-845284e-16],[.062,.0124,-1.26793e-9,4.22642e-10],[.124,.0124,5.07171e-9,-1.60604e-9],[.186,.0123999,-1.90189e-8,6.00152e-9],[.248,.0124002,7.10039e-8,-2.24e-8],[.31,.0123992,-2.64997e-7,8.35986e-8],[.372,.0124029,9.88983e-7,-3.11994e-7],[.434,.0123893,-369093e-11,-4.35621e-7],[.4958,.0123198,-102252e-10,-3.45523e-7],[.5571,.0121916,-154081e-10,-5.82288e-7],[.6176,.0119938,-241424e-10,-5.25327e-7],[.6769,.011713,-320223e-10,-5.16405e-7],[.7346,.0113541,-397684e-10,-6.09052e-7],[.7903,.0109107,-489042e-10,-104739e-11],[.8435,.0103431,-64615e-9,-1.40374e-9],[.8936,.00969686,-64636e-9,-8547e-9],[.9394,.00840947,-192841e-9,-42106e-10],[.9761,.00616527,-256e-6,-42106e-10],[1,.00328947,-319159e-9,-42106e-10]],Tn=r/5,Nn=function(t,n){return t[0]+n*(t[1]+n*(t[2]+n*t[3]))},Ln={init:function(){this.x0=this.x0||0,this.y0=this.y0||0,this.long0=this.long0||0,this.es=0,this.title=this.title||"Robinson"},forward:function(t){var n=P(t.x-this.long0),e=Math.abs(t.y),l=Math.floor(e*Tn);l<0?l=0:l>=18&&(l=17);var i={x:Nn(Pn[l],e=r*(e-.08726646259971647*l))*n,y:Nn(Rn[l],e)};return t.y<0&&(i.y=-i.y),i.x=i.x*this.a*.8487+this.x0,i.y=i.y*this.a*1.3523+this.y0,i},inverse:function(t){var r={x:(t.x-this.x0)/(.8487*this.a),y:Math.abs(t.y-this.y0)/(1.3523*this.a)};if(r.y>=1)r.x/=Pn[18][0],r.y=t.y<0?-n:n;else{var l=Math.floor(18*r.y);for(l<0?l=0:l>=18&&(l=17);;)if(Rn[l][0]>r.y)--l;else{if(!(Rn[l+1][0]<=r.y))break;++l}var i=Rn[l],o=5*(r.y-i[0])/(Rn[l+1][0]-i[0]);o=function(t,n,e,r){for(var l=n;r;--r){var i=t(l);if(l-=i,Math.abs(i)<e)break}return l}((function(t){return(Nn(i,t)-r.y)/function(t,n){return t[1]+n*(2*t[2]+3*n*t[3])}(i,t)}),o,1e-10,100),r.x/=Nn(Pn[l],o),r.y=(5*l+o)*e,t.y<0&&(r.y=-r.y)}return r.x=P(r.x+this.long0),r},names:["Robinson","robin"]},An={init:function(){this.name="geocent"},forward:function(t){return H(t,this.es,this.a)},inverse:function(t){return K(t,this.es,this.a,this.b)},names:["Geocentric","geocentric","geocent","Geocent"]},jn=0,Dn=1,kn=2,Fn=3,Gn={h:{def:1e5,num:!0},azi:{def:0,num:!0,degrees:!0},tilt:{def:0,num:!0,degrees:!0},long0:{def:0,num:!0},lat0:{def:0,num:!0}},zn={init:function(){if(Object.keys(Gn).forEach(function(t){if(void 0===this[t])this[t]=Gn[t].def;else{if(Gn[t].num&&isNaN(this[t]))throw new Error("Invalid parameter value, must be numeric "+t+" = "+this[t]);Gn[t].num&&(this[t]=parseFloat(this[t]))}Gn[t].degrees&&(this[t]=this[t]*e)}.bind(this)),Math.abs(Math.abs(this.lat0)-n)<1e-10?this.mode=this.lat0<0?Dn:jn:Math.abs(this.lat0)<1e-10?this.mode=kn:(this.mode=Fn,this.sinph0=Math.sin(this.lat0),this.cosph0=Math.cos(this.lat0)),this.pn1=this.h/this.a,this.pn1<=0||this.pn1>1e10)throw new Error("Invalid height");this.p=1+this.pn1,this.rp=1/this.p,this.h1=1/this.pn1,this.pfact=(this.p+1)*this.h1,this.es=0;var t=this.tilt,r=this.azi;this.cg=Math.cos(r),this.sg=Math.sin(r),this.cw=Math.cos(t),this.sw=Math.sin(t)},forward:function(t){t.x-=this.long0;var n,e,r,l,i=Math.sin(t.y),o=Math.cos(t.y),u=Math.cos(t.x);switch(this.mode){case Fn:e=this.sinph0*i+this.cosph0*o*u;break;case kn:e=o*u;break;case Dn:e=-i;break;case jn:e=i}switch(n=(e=this.pn1/(this.p-e))*o*Math.sin(t.x),this.mode){case Fn:e*=this.cosph0*i-this.sinph0*o*u;break;case kn:e*=i;break;case jn:e*=-o*u;break;case Dn:e*=o*u}return l=1/((r=e*this.cg+n*this.sg)*this.sw*this.h1+this.cw),n=(n*this.cg-e*this.sg)*this.cw*l,e=r*l,t.x=n*this.a,t.y=e*this.a,t},inverse:function(t){t.x/=this.a,t.y/=this.a;var n,e,r,l={x:t.x,y:t.y};r=1/(this.pn1-t.y*this.sw),n=this.pn1*t.x*r,e=this.pn1*t.y*this.cw*r,t.x=n*this.cg+e*this.sg,t.y=e*this.cg-n*this.sg;var i=Pt(t.x,t.y);if(Math.abs(i)<1e-10)l.x=0,l.y=t.y;else{var o,u;switch(u=1-i*i*this.pfact,u=(this.p-Math.sqrt(u))/(this.pn1/i+i/this.pn1),o=Math.sqrt(1-u*u),this.mode){case Fn:l.y=Math.asin(o*this.sinph0+t.y*u*this.cosph0/i),t.y=(o-this.sinph0*Math.sin(l.y))*i,t.x*=u*this.cosph0;break;case kn:l.y=Math.asin(t.y*u/i),t.y=o*i,t.x*=u;break;case jn:l.y=Math.asin(o),t.y=-t.y;break;case Dn:l.y=-Math.asin(o)}l.x=Math.atan2(t.x,t.y)}return t.x=l.x+this.long0,t.y=l.y,t},names:["Tilted_Perspective","tpers"]},Bn={init:function(){if(this.flip_axis="x"===this.sweep?1:0,this.h=Number(this.h),this.radius_g_1=this.h/this.a,this.radius_g_1<=0||this.radius_g_1>1e10)throw new Error;if(this.radius_g=1+this.radius_g_1,this.C=this.radius_g*this.radius_g-1,0!==this.es){var t=1-this.es,n=1/t;this.radius_p=Math.sqrt(t),this.radius_p2=t,this.radius_p_inv2=n,this.shape="ellipse"}else this.radius_p=1,this.radius_p2=1,this.radius_p_inv2=1,this.shape="sphere";this.title||(this.title="Geostationary Satellite View")},forward:function(t){var n,e,r,l,i=t.x,o=t.y;if(i-=this.long0,"ellipse"===this.shape){o=Math.atan(this.radius_p2*Math.tan(o));var u=this.radius_p/Pt(this.radius_p*Math.cos(o),Math.sin(o));if(e=u*Math.cos(i)*Math.cos(o),r=u*Math.sin(i)*Math.cos(o),l=u*Math.sin(o),(this.radius_g-e)*e-r*r-l*l*this.radius_p_inv2<0)return t.x=Number.NaN,t.y=Number.NaN,t;n=this.radius_g-e,this.flip_axis?(t.x=this.radius_g_1*Math.atan(r/Pt(l,n)),t.y=this.radius_g_1*Math.atan(l/n)):(t.x=this.radius_g_1*Math.atan(r/n),t.y=this.radius_g_1*Math.atan(l/Pt(r,n)))}else"sphere"===this.shape&&(n=Math.cos(o),e=Math.cos(i)*n,r=Math.sin(i)*n,l=Math.sin(o),n=this.radius_g-e,this.flip_axis?(t.x=this.radius_g_1*Math.atan(r/Pt(l,n)),t.y=this.radius_g_1*Math.atan(l/n)):(t.x=this.radius_g_1*Math.atan(r/n),t.y=this.radius_g_1*Math.atan(l/Pt(r,n))));return t.x=t.x*this.a,t.y=t.y*this.a,t},inverse:function(t){var n,e,r,l,i=-1,o=0,u=0;if(t.x=t.x/this.a,t.y=t.y/this.a,"ellipse"===this.shape){this.flip_axis?(u=Math.tan(t.y/this.radius_g_1),o=Math.tan(t.x/this.radius_g_1)*Pt(1,u)):(o=Math.tan(t.x/this.radius_g_1),u=Math.tan(t.y/this.radius_g_1)*Pt(1,o));var s=u/this.radius_p;if(n=o*o+s*s+i*i,(r=(e=2*this.radius_g*i)*e-4*n*this.C)<0)return t.x=Number.NaN,t.y=Number.NaN,t;l=(-e-Math.sqrt(r))/(2*n),i=this.radius_g+l*i,o*=l,u*=l,t.x=Math.atan2(o,i),t.y=Math.atan(u*Math.cos(t.x)/i),t.y=Math.atan(this.radius_p_inv2*Math.tan(t.y))}else if("sphere"===this.shape){if(this.flip_axis?(u=Math.tan(t.y/this.radius_g_1),o=Math.tan(t.x/this.radius_g_1)*Math.sqrt(1+u*u)):(o=Math.tan(t.x/this.radius_g_1),u=Math.tan(t.y/this.radius_g_1)*Math.sqrt(1+o*o)),n=o*o+u*u+i*i,(r=(e=2*this.radius_g*i)*e-4*n*this.C)<0)return t.x=Number.NaN,t.y=Number.NaN,t;l=(-e-Math.sqrt(r))/(2*n),i=this.radius_g+l*i,o*=l,u*=l,t.x=Math.atan2(o,i),t.y=Math.atan(u*Math.cos(t.x)/i)}return t.x=t.x+this.long0,t},names:["Geostationary Satellite View","Geostationary_Satellite","geos"]};return at.defaultDatum="WGS84",at.Proj=Z,at.WGS84=new at.Proj("WGS84"),at.Point=wt,at.toPoint=rt,at.defs=w,at.nadgrid=function(t,n){var e=new DataView(n),r=function(t){var n=t.getInt32(8,!1);return 11!==n&&(11!==(n=t.getInt32(8,!0))&&console.warn("Failed to detect nadgrid endian-ness, defaulting to little-endian"),!0)}(e),l=function(t,n){return{nFields:t.getInt32(8,n),nSubgridFields:t.getInt32(24,n),nSubgrids:t.getInt32(40,n),shiftType:Y(t,56,64).trim(),fromSemiMajorAxis:t.getFloat64(120,n),fromSemiMinorAxis:t.getFloat64(136,n),toSemiMajorAxis:t.getFloat64(152,n),toSemiMinorAxis:t.getFloat64(168,n)}}(e,r);l.nSubgrids>1&&console.log("Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored");var i=function(t,n,e){for(var r=[],l=0;l<n.nSubgrids;l++){var i=V(t,176,e),o=W(t,176,i,e),u=Math.round(1+(i.upperLongitude-i.lowerLongitude)/i.longitudeInterval),s=Math.round(1+(i.upperLatitude-i.lowerLatitude)/i.latitudeInterval);r.push({ll:[q(i.lowerLongitude),q(i.lowerLatitude)],del:[q(i.longitudeInterval),q(i.latitudeInterval)],lim:[u,s],count:i.gridNodeCount,cvs:X(o)})}return r}(e,l,r),o={header:l,subgrids:i};return B[t]=o,o},at.transform=it,at.mgrs=pt,at.version="2.8.0",(Sn=at).Proj.projections.add(St),Sn.Proj.projections.add(Lt),Sn.Proj.projections.add(At),Sn.Proj.projections.add(kt),Sn.Proj.projections.add(Ft),Sn.Proj.projections.add(Gt),Sn.Proj.projections.add(zt),Sn.Proj.projections.add(Bt),Sn.Proj.projections.add(Ut),Sn.Proj.projections.add(Jt),Sn.Proj.projections.add($t),Sn.Proj.projections.add(nn),Sn.Proj.projections.add(en),Sn.Proj.projections.add(rn),Sn.Proj.projections.add(ln),Sn.Proj.projections.add(on),Sn.Proj.projections.add(un),Sn.Proj.projections.add(sn),Sn.Proj.projections.add(an),Sn.Proj.projections.add(hn),Sn.Proj.projections.add(cn),Sn.Proj.projections.add(fn),Sn.Proj.projections.add(pn),Sn.Proj.projections.add(dn),Sn.Proj.projections.add(In),Sn.Proj.projections.add(Ln),Sn.Proj.projections.add(An),Sn.Proj.projections.add(zn),Sn.Proj.projections.add(Bn),at}()},function(t,n,e){"use strict";var r=e(395).TextDecoder;function l(t){return t&&"object"==typeof t&&"default"in t?t.default:t}Object.defineProperty(n,"__esModule",{value:!0});var i=l(e(431)),o=l(e(315)),u=l(e(398)),s=l(e(430)),a=function(t){return!(t=t.trim())||isNaN(t=+t)?null:t},h={B:a,C:function(t){return t.trim()||null},D:function(t){return new Date(+t.substring(0,4),t.substring(4,6)-1,+t.substring(6,8))},F:a,L:function(t){return!/^[nf]$/i.test(t)&&(!!/^[yt]$/i.test(t)||null)},M:a,N:a},c=function(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)},f=function(t,n){return(t=s(t)).slice(32).then((function(e){var r=c(e);return t.slice(r.getUint16(8,!0)-32).then((function(e){return new p(t,n,r,c(e))}))}))};function p(t,n,e,r){this._source=t,this._decode=n.decode.bind(n),this._recordLength=e.getUint16(10,!0),this._fields=[];for(var l=0;13!==r.getUint8(l);l+=32){for(var i=0;i<11&&0!==r.getUint8(l+i);++i);this._fields.push({name:this._decode(new Uint8Array(r.buffer,r.byteOffset+l,i)),type:String.fromCharCode(r.getUint8(l+11)),length:r.getUint8(l+16)})}}var d=p.prototype;d.read=function(){var t=this,n=1;return t._source.slice(t._recordLength).then((function(e){return e&&26!==e[0]?{done:!1,value:t._fields.reduce((function(r,l){return r[l.name]=h[l.type](t._decode(e.subarray(n,n+=l.length))),r}),{})}:{done:!0,value:void 0}}))},d.cancel=function(){return this._source.cancel()};var g=function(t){var n,e=40,r=t.getInt32(36,!0),l=new Array(r);for(n=0;n<r;++n,e+=16)l[n]=[t.getFloat64(e,!0),t.getFloat64(e+8,!0)];return{type:"MultiPoint",coordinates:l}},y=function(t){return{type:"Point",coordinates:[t.getFloat64(4,!0),t.getFloat64(12,!0)]}},_=function(t){var n,e=44,r=t.getInt32(36,!0),l=t.getInt32(40,!0),i=new Array(r),o=new Array(l),u=[],s=[];for(n=0;n<r;++n,e+=4)i[n]=t.getInt32(e,!0);for(n=0;n<l;++n,e+=16)o[n]=[t.getFloat64(e,!0),t.getFloat64(e+8,!0)];return i.forEach((function(t,n){var e=o.slice(t,i[n+1]);!function(t){if((n=t.length)<4)return!1;var n,e=0,r=t[n-1][1]*t[0][0]-t[n-1][0]*t[0][1];for(;++e<n;)r+=t[e-1][1]*t[e][0]-t[e-1][0]*t[e][1];return r>=0}(e)?s.push(e):u.push([e])})),s.forEach((function(t){u.some((function(n){if(function(t,n){var e,r=-1,l=n.length;for(;++r<l;)if(e=v(t,n[r]))return e>0;return!1}(n[0],t))return n.push(t),!0}))||u.push([t])})),1===u.length?{type:"Polygon",coordinates:u[0]}:{type:"MultiPolygon",coordinates:u}};function v(t,n){for(var e=n[0],r=n[1],l=-1,i=0,o=t.length,u=o-1;i<o;u=i++){var s=t[i],a=s[0],h=s[1],c=t[u],f=c[0],p=c[1];if(m(s,c,n))return 0;h>r!=p>r&&e<(f-a)*(r-h)/(p-h)+a&&(l=-l)}return l}function m(t,n,e){var r=e[0]-t[0],l=e[1]-t[1];if(0===r&&0===l)return!0;var i=n[0]-t[0],o=n[1]-t[1];if(0===i&&0===o)return!1;var u=(r*i+l*o)/(i*i+o*o);return!(u<0||u>1)&&(0===u||1===u||u*i===r&&u*o===l)}var b=function(t){var n,e=44,r=t.getInt32(36,!0),l=t.getInt32(40,!0),i=new Array(r),o=new Array(l);for(n=0;n<r;++n,e+=4)i[n]=t.getInt32(e,!0);for(n=0;n<l;++n,e+=16)o[n]=[t.getFloat64(e,!0),t.getFloat64(e+8,!0)];return 1===r?{type:"LineString",coordinates:o}:{type:"MultiLineString",coordinates:i.map((function(t,n){return o.slice(t,i[n+1])}))}},x=function(t,n){var e=new Uint8Array(t.length+n.length);return e.set(t,0),e.set(n,t.length),e},w={0:function(){return null},1:y,3:b,5:_,8:g,11:y,13:b,15:_,18:g,21:y,23:b,25:_,28:g},E=function(t){return(t=s(t)).slice(100).then((function(n){return new C(t,c(n))}))};function C(t,n){var e=n.getInt32(32,!0);if(!(e in w))throw new Error("unsupported shape type: "+e);this._source=t,this._type=e,this._index=0,this._parse=w[e],this.bbox=[n.getFloat64(36,!0),n.getFloat64(44,!0),n.getFloat64(52,!0),n.getFloat64(60,!0)]}var O=C.prototype;function M(){}O.read=function(){var t=this;return++t._index,t._source.slice(12).then((function(n){if(null==n)return{done:!0,value:void 0};var e=c(n);function r(){var l=2*e.getInt32(4,!1)-4,i=e.getInt32(8,!0);return l<0||i&&i!==t._type?function l(){return t._source.slice(4).then((function(i){return null==i?{done:!0,value:void 0}:(e=c(n=x(n.slice(4),i))).getInt32(0,!1)!==t._index?l():r()}))}():t._source.slice(l).then((function(e){return{done:!1,value:i?t._parse(c(x(n.slice(8),e))):null}}))}return r()}))},O.cancel=function(){return this._source.cancel()};function S(t,n){this._shp=t,this._dbf=n,this.bbox=t.bbox}var I=S.prototype;function P(t,n,e){return"string"==typeof n?(/\.dbf$/.test(n)||(n+=".dbf"),n=i(n,e)):n instanceof ArrayBuffer||n instanceof Uint8Array?n=o(n):null!=n&&(n=u(n)),"string"==typeof t?(/\.shp$/.test(t)||(t+=".shp"),void 0===n&&(n=i(t.substring(0,t.length-4)+".dbf",e).catch((function(){}))),t=i(t,e)):t=t instanceof ArrayBuffer||t instanceof Uint8Array?o(t):u(t),Promise.all([t,n]).then((function(t){var n,l,i,o=t[0],u=t[1],s="windows-1252";return e&&null!=e.encoding&&(s=e.encoding),n=o,l=u,i=u&&new r(s),Promise.all([E(n),l&&f(l,i)]).then((function(t){return new S(t[0],t[1])}))}))}I.read=function(){return Promise.all([this._dbf?this._dbf.read():{value:{}},this._shp.read()]).then((function(t){var n=t[0],e=t[1];return e.done?e:{done:!1,value:{type:"Feature",properties:n.value,geometry:e.value}}}))},I.cancel=function(){return Promise.all([this._dbf&&this._dbf.cancel(),this._shp.cancel()]).then(M)},n.open=P,n.openShp=function(t,n){return"string"==typeof t?(/\.shp$/.test(t)||(t+=".shp"),t=i(t,n)):t=t instanceof ArrayBuffer||t instanceof Uint8Array?o(t):u(t),Promise.resolve(t).then(E)},n.openDbf=function(t,n){var e="windows-1252";return n&&null!=n.encoding&&(e=n.encoding),e=new r(e),"string"==typeof t?(/\.dbf$/.test(t)||(t+=".dbf"),t=i(t,n)):t=t instanceof ArrayBuffer||t instanceof Uint8Array?o(t):u(t),Promise.resolve(t).then((function(t){return f(t,e)}))},n.read=function(t,n,e){return P(t,n,e).then((function(t){var n=[],e={type:"FeatureCollection",features:n,bbox:t.bbox};return t.read().then((function r(l){return l.done?e:(n.push(l.value),t.read().then(r))}))}))}},function(t,n,e){var r=e(396);t.exports={TextEncoder:r.TextEncoder,TextDecoder:r.TextDecoder}},function(t,n,e){!function(n){"use strict";function r(t,n,e){return n<=t&&t<=e}t.exports&&!n["encoding-indexes"]&&(n["encoding-indexes"]=e(397)["encoding-indexes"]);var l=Math.floor;function i(t){if(void 0===t)return{};if(t===Object(t))return t;throw TypeError("Could not convert argument to dictionary")}function o(t){return 0<=t&&t<=127}var u=o;function s(t){this.tokens=[].slice.call(t),this.tokens.reverse()}s.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.pop():-1},prepend:function(t){if(Array.isArray(t))for(var n=t;n.length;)this.tokens.push(n.pop());else this.tokens.push(t)},push:function(t){if(Array.isArray(t))for(var n=t;n.length;)this.tokens.unshift(n.shift());else this.tokens.unshift(t)}};function a(t,n){if(t)throw TypeError("Decoder error");return n||65533}function h(t){throw TypeError("The code point "+t+" could not be encoded.")}function c(t){return t=String(t).trim().toLowerCase(),Object.prototype.hasOwnProperty.call(p,t)?p[t]:null}var f=[{encodings:[{labels:["unicode-1-1-utf-8","utf-8","utf8"],name:"UTF-8"}],heading:"The Encoding"},{encodings:[{labels:["866","cp866","csibm866","ibm866"],name:"IBM866"},{labels:["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],name:"ISO-8859-2"},{labels:["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],name:"ISO-8859-3"},{labels:["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],name:"ISO-8859-4"},{labels:["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],name:"ISO-8859-5"},{labels:["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],name:"ISO-8859-6"},{labels:["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],name:"ISO-8859-7"},{labels:["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],name:"ISO-8859-8"},{labels:["csiso88598i","iso-8859-8-i","logical"],name:"ISO-8859-8-I"},{labels:["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],name:"ISO-8859-10"},{labels:["iso-8859-13","iso8859-13","iso885913"],name:"ISO-8859-13"},{labels:["iso-8859-14","iso8859-14","iso885914"],name:"ISO-8859-14"},{labels:["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],name:"ISO-8859-15"},{labels:["iso-8859-16"],name:"ISO-8859-16"},{labels:["cskoi8r","koi","koi8","koi8-r","koi8_r"],name:"KOI8-R"},{labels:["koi8-ru","koi8-u"],name:"KOI8-U"},{labels:["csmacintosh","mac","macintosh","x-mac-roman"],name:"macintosh"},{labels:["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],name:"windows-874"},{labels:["cp1250","windows-1250","x-cp1250"],name:"windows-1250"},{labels:["cp1251","windows-1251","x-cp1251"],name:"windows-1251"},{labels:["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],name:"windows-1252"},{labels:["cp1253","windows-1253","x-cp1253"],name:"windows-1253"},{labels:["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],name:"windows-1254"},{labels:["cp1255","windows-1255","x-cp1255"],name:"windows-1255"},{labels:["cp1256","windows-1256","x-cp1256"],name:"windows-1256"},{labels:["cp1257","windows-1257","x-cp1257"],name:"windows-1257"},{labels:["cp1258","windows-1258","x-cp1258"],name:"windows-1258"},{labels:["x-mac-cyrillic","x-mac-ukrainian"],name:"x-mac-cyrillic"}],heading:"Legacy single-byte encodings"},{encodings:[{labels:["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],name:"GBK"},{labels:["gb18030"],name:"gb18030"}],heading:"Legacy multi-byte Chinese (simplified) encodings"},{encodings:[{labels:["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],name:"Big5"}],heading:"Legacy multi-byte Chinese (traditional) encodings"},{encodings:[{labels:["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],name:"EUC-JP"},{labels:["csiso2022jp","iso-2022-jp"],name:"ISO-2022-JP"},{labels:["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],name:"Shift_JIS"}],heading:"Legacy multi-byte Japanese encodings"},{encodings:[{labels:["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],name:"EUC-KR"}],heading:"Legacy multi-byte Korean encodings"},{encodings:[{labels:["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],name:"replacement"},{labels:["utf-16be"],name:"UTF-16BE"},{labels:["utf-16","utf-16le"],name:"UTF-16LE"},{labels:["x-user-defined"],name:"x-user-defined"}],heading:"Legacy miscellaneous encodings"}],p={};f.forEach((function(t){t.encodings.forEach((function(t){t.labels.forEach((function(n){p[n]=t}))}))}));var d,g,y={},_={};function v(t,n){return n&&n[t]||null}function m(t,n){var e=n.indexOf(t);return-1===e?null:e}function b(t){if(!("encoding-indexes"in n))throw Error("Indexes missing. Did you forget to include encoding-indexes.js first?");return n["encoding-indexes"][t]}function x(t,n){if(!(this instanceof x))throw TypeError("Called as a function. Did you forget 'new'?");t=void 0!==t?String(t):"utf-8",n=i(n),this._encoding=null,this._decoder=null,this._ignoreBOM=!1,this._BOMseen=!1,this._error_mode="replacement",this._do_not_flush=!1;var e=c(t);if(null===e||"replacement"===e.name)throw RangeError("Unknown encoding: "+t);if(!_[e.name])throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");return this._encoding=e,Boolean(n.fatal)&&(this._error_mode="fatal"),Boolean(n.ignoreBOM)&&(this._ignoreBOM=!0),Object.defineProperty||(this.encoding=this._encoding.name.toLowerCase(),this.fatal="fatal"===this._error_mode,this.ignoreBOM=this._ignoreBOM),this}function w(t,e){if(!(this instanceof w))throw TypeError("Called as a function. Did you forget 'new'?");e=i(e),this._encoding=null,this._encoder=null,this._do_not_flush=!1,this._fatal=Boolean(e.fatal)?"fatal":"replacement";if(Boolean(e.NONSTANDARD_allowLegacyEncoding)){var r=c(t=void 0!==t?String(t):"utf-8");if(null===r||"replacement"===r.name)throw RangeError("Unknown encoding: "+t);if(!y[r.name])throw Error("Encoder not present. Did you forget to include encoding-indexes.js first?");this._encoding=r}else this._encoding=c("utf-8"),void 0!==t&&"console"in n&&console.warn("TextEncoder constructor called with encoding label, which is ignored.");return Object.defineProperty||(this.encoding=this._encoding.name.toLowerCase()),this}function E(t){var n=t.fatal,e=0,l=0,i=0,o=128,u=191;this.handler=function(t,s){if(-1===s&&0!==i)return i=0,a(n);if(-1===s)return-1;if(0===i){if(r(s,0,127))return s;if(r(s,194,223))i=1,e=31&s;else if(r(s,224,239))224===s&&(o=160),237===s&&(u=159),i=2,e=15&s;else{if(!r(s,240,244))return a(n);240===s&&(o=144),244===s&&(u=143),i=3,e=7&s}return null}if(!r(s,o,u))return e=i=l=0,o=128,u=191,t.prepend(s),a(n);if(o=128,u=191,e=e<<6|63&s,(l+=1)!==i)return null;var h=e;return e=i=l=0,h}}function C(t){t.fatal;this.handler=function(t,n){if(-1===n)return-1;if(u(n))return n;var e,l;r(n,128,2047)?(e=1,l=192):r(n,2048,65535)?(e=2,l=224):r(n,65536,1114111)&&(e=3,l=240);for(var i=[(n>>6*e)+l];e>0;){var o=n>>6*(e-1);i.push(128|63&o),e-=1}return i}}function O(t,n){var e=n.fatal;this.handler=function(n,r){if(-1===r)return-1;if(o(r))return r;var l=t[r-128];return null===l?a(e):l}}function M(t,n){n.fatal;this.handler=function(n,e){if(-1===e)return-1;if(u(e))return e;var r=m(e,t);return null===r&&h(e),r+128}}function S(t){var n=t.fatal,e=0,l=0,i=0;this.handler=function(t,u){if(-1===u&&0===e&&0===l&&0===i)return-1;var s;if(-1!==u||0===e&&0===l&&0===i||(e=0,l=0,i=0,a(n)),0!==i){s=null,r(u,48,57)&&(s=function(t){if(t>39419&&t<189e3||t>1237575)return null;if(7457===t)return 59335;var n,e=0,r=0,l=b("gb18030-ranges");for(n=0;n<l.length;++n){var i=l[n];if(!(i[0]<=t))break;e=i[0],r=i[1]}return r+t-e}(10*(126*(10*(e-129)+l-48)+i-129)+u-48));var h=[l,i,u];return e=0,l=0,i=0,null===s?(t.prepend(h),a(n)):s}if(0!==l)return r(u,129,254)?(i=u,null):(t.prepend([l,u]),e=0,l=0,a(n));if(0!==e){if(r(u,48,57))return l=u,null;var c=e,f=null;e=0;var p=u<127?64:65;return(r(u,64,126)||r(u,128,254))&&(f=190*(c-129)+(u-p)),null===(s=null===f?null:v(f,b("gb18030")))&&o(u)&&t.prepend(u),null===s?a(n):s}return o(u)?u:128===u?8364:r(u,129,254)?(e=u,null):a(n)}}function I(t,n){t.fatal;this.handler=function(t,e){if(-1===e)return-1;if(u(e))return e;if(58853===e)return h(e);if(n&&8364===e)return 128;var r=m(e,b("gb18030"));if(null!==r){var i=r%190;return[l(r/190)+129,i+(i<63?64:65)]}if(n)return h(e);r=function(t){if(59335===t)return 7457;var n,e=0,r=0,l=b("gb18030-ranges");for(n=0;n<l.length;++n){var i=l[n];if(!(i[1]<=t))break;e=i[1],r=i[0]}return r+t-e}(e);var o=l(r/10/126/10),s=l((r-=10*o*126*10)/10/126),a=l((r-=10*s*126)/10);return[o+129,s+48,a+129,r-10*a+48]}}function P(t){var n=t.fatal,e=0;this.handler=function(t,l){if(-1===l&&0!==e)return e=0,a(n);if(-1===l&&0===e)return-1;if(0!==e){var i=e,u=null;e=0;var s=l<127?64:98;switch((r(l,64,126)||r(l,161,254))&&(u=157*(i-129)+(l-s)),u){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var h=null===u?null:v(u,b("big5"));return null===h&&o(l)&&t.prepend(l),null===h?a(n):h}return o(l)?l:r(l,129,254)?(e=l,null):a(n)}}function R(t){t.fatal;this.handler=function(t,n){if(-1===n)return-1;if(u(n))return n;var e=function(t){var n=g=g||b("big5").map((function(t,n){return n<5024?null:t}));return 9552===t||9566===t||9569===t||9578===t||21313===t||21317===t?n.lastIndexOf(t):m(t,n)}(n);if(null===e)return h(n);var r=l(e/157)+129;if(r<161)return h(n);var i=e%157;return[r,i+(i<63?64:98)]}}function T(t){var n=t.fatal,e=!1,l=0;this.handler=function(t,i){if(-1===i&&0!==l)return l=0,a(n);if(-1===i&&0===l)return-1;if(142===l&&r(i,161,223))return l=0,65216+i;if(143===l&&r(i,161,254))return e=!0,l=i,null;if(0!==l){var u=l;l=0;var s=null;return r(u,161,254)&&r(i,161,254)&&(s=v(94*(u-161)+(i-161),b(e?"jis0212":"jis0208"))),e=!1,r(i,161,254)||t.prepend(i),null===s?a(n):s}return o(i)?i:142===i||143===i||r(i,161,254)?(l=i,null):a(n)}}function N(t){t.fatal;this.handler=function(t,n){if(-1===n)return-1;if(u(n))return n;if(165===n)return 92;if(8254===n)return 126;if(r(n,65377,65439))return[142,n-65377+161];8722===n&&(n=65293);var e=m(n,b("jis0208"));return null===e?h(n):[l(e/94)+161,e%94+161]}}function L(t){var n=t.fatal,e=0,l=1,i=2,o=3,u=4,s=5,h=6,c=e,f=e,p=0,d=!1;this.handler=function(t,g){switch(c){default:case e:return 27===g?(c=s,null):r(g,0,127)&&14!==g&&15!==g&&27!==g?(d=!1,g):-1===g?-1:(d=!1,a(n));case l:return 27===g?(c=s,null):92===g?(d=!1,165):126===g?(d=!1,8254):r(g,0,127)&&14!==g&&15!==g&&27!==g&&92!==g&&126!==g?(d=!1,g):-1===g?-1:(d=!1,a(n));case i:return 27===g?(c=s,null):r(g,33,95)?(d=!1,65344+g):-1===g?-1:(d=!1,a(n));case o:return 27===g?(c=s,null):r(g,33,126)?(d=!1,p=g,c=u,null):-1===g?-1:(d=!1,a(n));case u:if(27===g)return c=s,a(n);if(r(g,33,126)){c=o;var y=v(94*(p-33)+g-33,b("jis0208"));return null===y?a(n):y}return-1===g?(c=o,t.prepend(g),a(n)):(c=o,a(n));case s:return 36===g||40===g?(p=g,c=h,null):(t.prepend(g),d=!1,c=f,a(n));case h:var _=p;p=0;var m=null;if(40===_&&66===g&&(m=e),40===_&&74===g&&(m=l),40===_&&73===g&&(m=i),36!==_||64!==g&&66!==g||(m=o),null!==m){c=c=m;var x=d;return d=!0,x?a(n):null}return t.prepend([_,g]),d=!1,c=f,a(n)}}}function A(t){t.fatal;var n=0,e=1,r=2,i=n;this.handler=function(t,o){if(-1===o&&i!==n)return t.prepend(o),i=n,[27,40,66];if(-1===o&&i===n)return-1;if(!(i!==n&&i!==e||14!==o&&15!==o&&27!==o))return h(65533);if(i===n&&u(o))return o;if(i===e&&(u(o)&&92!==o&&126!==o||165==o||8254==o)){if(u(o))return o;if(165===o)return 92;if(8254===o)return 126}if(u(o)&&i!==n)return t.prepend(o),i=n,[27,40,66];if((165===o||8254===o)&&i!==e)return t.prepend(o),i=e,[27,40,74];8722===o&&(o=65293);var s=m(o,b("jis0208"));return null===s?h(o):i!==r?(t.prepend(o),i=r,[27,36,66]):[l(s/94)+33,s%94+33]}}function j(t){var n=t.fatal,e=0;this.handler=function(t,l){if(-1===l&&0!==e)return e=0,a(n);if(-1===l&&0===e)return-1;if(0!==e){var i=e,u=null;e=0;var s=l<127?64:65,h=i<160?129:193;if((r(l,64,126)||r(l,128,252))&&(u=188*(i-h)+l-s),r(u,8836,10715))return 48508+u;var c=null===u?null:v(u,b("jis0208"));return null===c&&o(l)&&t.prepend(l),null===c?a(n):c}return o(l)||128===l?l:r(l,161,223)?65216+l:r(l,129,159)||r(l,224,252)?(e=l,null):a(n)}}function D(t){t.fatal;this.handler=function(t,n){if(-1===n)return-1;if(u(n)||128===n)return n;if(165===n)return 92;if(8254===n)return 126;if(r(n,65377,65439))return n-65377+161;8722===n&&(n=65293);var e=function(t){return(d=d||b("jis0208").map((function(t,n){return r(n,8272,8835)?null:t}))).indexOf(t)}(n);if(null===e)return h(n);var i=l(e/188),o=e%188;return[i+(i<31?129:193),o+(o<63?64:65)]}}function k(t){var n=t.fatal,e=0;this.handler=function(t,l){if(-1===l&&0!==e)return e=0,a(n);if(-1===l&&0===e)return-1;if(0!==e){var i=e,u=null;e=0,r(l,65,254)&&(u=190*(i-129)+(l-65));var s=null===u?null:v(u,b("euc-kr"));return null===u&&o(l)&&t.prepend(l),null===s?a(n):s}return o(l)?l:r(l,129,254)?(e=l,null):a(n)}}function F(t){t.fatal;this.handler=function(t,n){if(-1===n)return-1;if(u(n))return n;var e=m(n,b("euc-kr"));return null===e?h(n):[l(e/190)+129,e%190+65]}}function G(t,n){var e=t>>8,r=255&t;return n?[e,r]:[r,e]}function z(t,n){var e=n.fatal,l=null,i=null;this.handler=function(n,o){if(-1===o&&(null!==l||null!==i))return a(e);if(-1===o&&null===l&&null===i)return-1;if(null===l)return l=o,null;var u;if(u=t?(l<<8)+o:(o<<8)+l,l=null,null!==i){var s=i;return i=null,r(u,56320,57343)?65536+1024*(s-55296)+(u-56320):(n.prepend(G(u,t)),a(e))}return r(u,55296,56319)?(i=u,null):r(u,56320,57343)?a(e):u}}function B(t,n){n.fatal;this.handler=function(n,e){if(-1===e)return-1;if(r(e,0,65535))return G(e,t);var l=G(55296+(e-65536>>10),t),i=G(56320+(e-65536&1023),t);return l.concat(i)}}function U(t){t.fatal;this.handler=function(t,n){return-1===n?-1:o(n)?n:63360+n-128}}function q(t){t.fatal;this.handler=function(t,n){return-1===n?-1:u(n)?n:r(n,63360,63487)?n-63360+128:h(n)}}Object.defineProperty&&(Object.defineProperty(x.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Object.defineProperty(x.prototype,"fatal",{get:function(){return"fatal"===this._error_mode}}),Object.defineProperty(x.prototype,"ignoreBOM",{get:function(){return this._ignoreBOM}})),x.prototype.decode=function(t,n){var e;e="object"==typeof t&&t instanceof ArrayBuffer?new Uint8Array(t):"object"==typeof t&&"buffer"in t&&t.buffer instanceof ArrayBuffer?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):new Uint8Array(0),n=i(n),this._do_not_flush||(this._decoder=_[this._encoding.name]({fatal:"fatal"===this._error_mode}),this._BOMseen=!1),this._do_not_flush=Boolean(n.stream);for(var r,l=new s(e),o=[];;){var u=l.read();if(-1===u)break;if(-1===(r=this._decoder.handler(l,u)))break;null!==r&&(Array.isArray(r)?o.push.apply(o,r):o.push(r))}if(!this._do_not_flush){do{if(-1===(r=this._decoder.handler(l,l.read())))break;null!==r&&(Array.isArray(r)?o.push.apply(o,r):o.push(r))}while(!l.endOfStream());this._decoder=null}return function(t){var n,e;return n=["UTF-8","UTF-16LE","UTF-16BE"],e=this._encoding.name,-1===n.indexOf(e)||this._ignoreBOM||this._BOMseen||(t.length>0&&65279===t[0]?(this._BOMseen=!0,t.shift()):t.length>0&&(this._BOMseen=!0)),function(t){for(var n="",e=0;e<t.length;++e){var r=t[e];r<=65535?n+=String.fromCharCode(r):(r-=65536,n+=String.fromCharCode(55296+(r>>10),56320+(1023&r)))}return n}(t)}.call(this,o)},Object.defineProperty&&Object.defineProperty(w.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),w.prototype.encode=function(t,n){t=void 0===t?"":String(t),n=i(n),this._do_not_flush||(this._encoder=y[this._encoding.name]({fatal:"fatal"===this._fatal})),this._do_not_flush=Boolean(n.stream);for(var e,r=new s(function(t){for(var n=String(t),e=n.length,r=0,l=[];r<e;){var i=n.charCodeAt(r);if(i<55296||i>57343)l.push(i);else if(56320<=i&&i<=57343)l.push(65533);else if(55296<=i&&i<=56319)if(r===e-1)l.push(65533);else{var o=n.charCodeAt(r+1);if(56320<=o&&o<=57343){var u=1023&i,s=1023&o;l.push(65536+(u<<10)+s),r+=1}else l.push(65533)}r+=1}return l}(t)),l=[];;){var o=r.read();if(-1===o)break;if(-1===(e=this._encoder.handler(r,o)))break;Array.isArray(e)?l.push.apply(l,e):l.push(e)}if(!this._do_not_flush){for(;-1!==(e=this._encoder.handler(r,r.read()));)Array.isArray(e)?l.push.apply(l,e):l.push(e);this._encoder=null}return new Uint8Array(l)},y["UTF-8"]=function(t){return new C(t)},_["UTF-8"]=function(t){return new E(t)},"encoding-indexes"in n&&f.forEach((function(t){"Legacy single-byte encodings"===t.heading&&t.encodings.forEach((function(t){var n=t.name,e=b(n.toLowerCase());_[n]=function(t){return new O(e,t)},y[n]=function(t){return new M(e,t)}}))})),_.GBK=function(t){return new S(t)},y.GBK=function(t){return new I(t,!0)},y.gb18030=function(t){return new I(t)},_.gb18030=function(t){return new S(t)},y.Big5=function(t){return new R(t)},_.Big5=function(t){return new P(t)},y["EUC-JP"]=function(t){return new N(t)},_["EUC-JP"]=function(t){return new T(t)},y["ISO-2022-JP"]=function(t){return new A(t)},_["ISO-2022-JP"]=function(t){return new L(t)},y.Shift_JIS=function(t){return new D(t)},_.Shift_JIS=function(t){return new j(t)},y["EUC-KR"]=function(t){return new F(t)},_["EUC-KR"]=function(t){return new k(t)},y["UTF-16BE"]=function(t){return new B(!0,t)},_["UTF-16BE"]=function(t){return new z(!0,t)},y["UTF-16LE"]=function(t){return new B(!1,t)},_["UTF-16LE"]=function(t){return new z(!1,t)},y["x-user-defined"]=function(t){return new q(t)},_["x-user-defined"]=function(t){return new U(t)},n.TextEncoder||(n.TextEncoder=w),n.TextDecoder||(n.TextDecoder=x),t.exports&&(t.exports={TextEncoder:n.TextEncoder,TextDecoder:n.TextDecoder,EncodingIndexes:n["encoding-indexes"]})}(this||{})},function(t,n,e){!function(n){"use strict";t.exports&&(t.exports=n),n["encoding-indexes"]={big5:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,17e4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],gb18030:[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]],jis0208:[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],jis0212:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25e3,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37e3,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],ibm866:[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],macintosh:[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]}}(this||{})},function(t,n,e){"use strict";function r(t){return"function"==typeof t.read?t:t.getReader()}e.r(n),e.d(n,"default",(function(){return r}))},,function(t,n,e){"use strict";var r=e(297),l=e(42),i=e(43),o=r.aTypedArray;(0,r.exportTypedArrayMethod)("at",(function(t){var n=o(this),e=l(n),r=i(t),u=r>=0?r:e+r;return u<0||u>=e?void 0:n[u]}))},function(t,n){t.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},function(t,n,e){var r=e(6),l=e(0),i=e(41),o=e(95),u=e(403),s=o("IE_PROTO"),a=Object,h=a.prototype;t.exports=u?a.getPrototypeOf:function(t){var n=i(t);if(r(n,s))return n[s];var e=n.constructor;return l(e)&&n instanceof e?e.prototype:n instanceof a?h:null}},function(t,n,e){var r=e(3);t.exports=!r((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},function(t,n,e){"use strict";var r=e(1),l=e(23),i=e(297),o=e(42),u=e(405),s=e(41),a=e(3),h=r.RangeError,c=r.Int8Array,f=c&&c.prototype,p=f&&f.set,d=i.aTypedArray,g=i.exportTypedArrayMethod,y=!a((function(){var t=new Uint8ClampedArray(2);return l(p,t,{length:1,0:3},1),3!==t[1]})),_=y&&i.NATIVE_ARRAY_BUFFER_VIEWS&&a((function(){var t=new c(2);return t.set(1),t.set("2",1),0!==t[0]||2!==t[1]}));g("set",(function(t){d(this);var n=u(arguments.length>1?arguments[1]:void 0,1),e=s(t);if(y)return l(p,this,e,n);var r=this.length,i=o(e),a=0;if(i+n>r)throw h("Wrong length");for(;a<i;)this[n+a]=e[a++]}),!y||_)},function(t,n,e){var r=e(406),l=RangeError;t.exports=function(t,n){var e=r(t);if(e%n)throw l("Wrong offset");return e}},function(t,n,e){var r=e(43),l=RangeError;t.exports=function(t){var n=r(t);if(n<0)throw l("The argument can't be less than 0");return n}},function(t,n,e){e(408)},function(t,n,e){"use strict";var r=e(297),l=e(333).findLast,i=r.aTypedArray;(0,r.exportTypedArrayMethod)("findLast",(function(t){return l(i(this),t,arguments.length>1?arguments[1]:void 0)}))},function(t,n,e){var r=e(2),l=e(46),i=e(24),o=r(r.bind);t.exports=function(t,n){return l(t),void 0===n?t:i?o(t,n):function(){return t.apply(n,arguments)}}},function(t,n,e){e(411)},function(t,n,e){"use strict";var r=e(297),l=e(333).findLastIndex,i=r.aTypedArray;(0,r.exportTypedArrayMethod)("findLastIndex",(function(t){return l(i(this),t,arguments.length>1?arguments[1]:void 0)}))},function(t,n,e){var r,l,i;l=[n],void 0===(i="function"==typeof(r=function(t){"use strict";function n(t,n,e){var r=new XMLHttpRequest;r.open("GET",t),r.responseType="blob",r.onload=function(){o(r.response,n,e)},r.onerror=function(){console.error("could not download file")},r.send()}function e(t){var n=new XMLHttpRequest;n.open("HEAD",t,!1);try{n.send()}catch(t){}return 200<=n.status&&299>=n.status}function r(t){try{t.dispatchEvent(new MouseEvent("click"))}catch(e){var n=document.createEvent("MouseEvents");n.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),t.dispatchEvent(n)}}Object.defineProperty(t,"__esModule",{value:!0}),t.saveAs=void 0;var l="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof global&&global.global===global?global:void 0,i=l.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),o=l.saveAs||("object"!=typeof window||window!==l?function(){}:"download"in HTMLAnchorElement.prototype&&!i?function(t,i,o){var u=l.URL||l.webkitURL,s=document.createElement("a");i=i||t.name||"download",s.download=i,s.rel="noopener","string"==typeof t?(s.href=t,s.origin===location.origin?r(s):e(s.href)?n(t,i,o):r(s,s.target="_blank")):(s.href=u.createObjectURL(t),setTimeout((function(){u.revokeObjectURL(s.href)}),4e4),setTimeout((function(){r(s)}),0))}:"msSaveOrOpenBlob"in navigator?function(t,l,i){if(l=l||t.name||"download","string"!=typeof t)navigator.msSaveOrOpenBlob(function(t,n){return void 0===n?n={autoBom:!1}:"object"!=typeof n&&(console.warn("Deprecated: Expected third argument to be a object"),n={autoBom:!n}),n.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type)?new Blob(["\ufeff",t],{type:t.type}):t}(t,i),l);else if(e(t))n(t,l,i);else{var o=document.createElement("a");o.href=t,o.target="_blank",setTimeout((function(){r(o)}))}}:function(t,e,r,o){if((o=o||open("","_blank"))&&(o.document.title=o.document.body.innerText="downloading..."),"string"==typeof t)return n(t,e,r);var u="application/octet-stream"===t.type,s=/constructor/i.test(l.HTMLElement)||l.safari,a=/CriOS\/[\d]+/.test(navigator.userAgent);if((a||u&&s||i)&&"undefined"!=typeof FileReader){var h=new FileReader;h.onloadend=function(){var t=h.result;t=a?t:t.replace(/^data:[^;]*;/,"data:attachment/file;"),o?o.location.href=t:location=t,o=null},h.readAsDataURL(t)}else{var c=l.URL||l.webkitURL,f=c.createObjectURL(t);o?o.location=f:location.href=f,o=null,setTimeout((function(){c.revokeObjectURL(f)}),4e4)}});t.saveAs=o,l.saveAs=o.saveAs=o})?r.apply(n,l):r)||(t.exports=i)},function(t,n,e){(function(n){t.exports=function t(n,e,r){function l(o,u){if(!e[o]){if(!n[o]){if(i)return i(o,!0);var s=new Error("Cannot find module '"+o+"'");throw s.code="MODULE_NOT_FOUND",s}var a=e[o]={exports:{}};n[o][0].call(a.exports,(function(t){return l(n[o][1][t]||t)}),a,a.exports,t,n,e,r)}return e[o].exports}for(var i=!1,o=0;o<r.length;o++)l(r[o]);return l}({1:[function(t,n,e){"use strict";var r=t("./utils"),l=t("./support"),i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";e.encode=function(t){for(var n,e,l,o,u,s,a,h=[],c=0,f=t.length,p=f,d="string"!==r.getTypeOf(t);c<t.length;)p=f-c,l=d?(n=t[c++],e=c<f?t[c++]:0,c<f?t[c++]:0):(n=t.charCodeAt(c++),e=c<f?t.charCodeAt(c++):0,c<f?t.charCodeAt(c++):0),o=n>>2,u=(3&n)<<4|e>>4,s=1<p?(15&e)<<2|l>>6:64,a=2<p?63&l:64,h.push(i.charAt(o)+i.charAt(u)+i.charAt(s)+i.charAt(a));return h.join("")},e.decode=function(t){var n,e,r,o,u,s,a=0,h=0,c="data:";if(t.substr(0,c.length)===c)throw new Error("Invalid base64 input, it looks like a data url.");var f,p=3*(t=t.replace(/[^A-Za-z0-9+/=]/g,"")).length/4;if(t.charAt(t.length-1)===i.charAt(64)&&p--,t.charAt(t.length-2)===i.charAt(64)&&p--,p%1!=0)throw new Error("Invalid base64 input, bad content length.");for(f=l.uint8array?new Uint8Array(0|p):new Array(0|p);a<t.length;)n=i.indexOf(t.charAt(a++))<<2|(o=i.indexOf(t.charAt(a++)))>>4,e=(15&o)<<4|(u=i.indexOf(t.charAt(a++)))>>2,r=(3&u)<<6|(s=i.indexOf(t.charAt(a++))),f[h++]=n,64!==u&&(f[h++]=e),64!==s&&(f[h++]=r);return f}},{"./support":30,"./utils":32}],2:[function(t,n,e){"use strict";var r=t("./external"),l=t("./stream/DataWorker"),i=t("./stream/Crc32Probe"),o=t("./stream/DataLengthProbe");function u(t,n,e,r,l){this.compressedSize=t,this.uncompressedSize=n,this.crc32=e,this.compression=r,this.compressedContent=l}u.prototype={getContentWorker:function(){var t=new l(r.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new o("data_length")),n=this;return t.on("end",(function(){if(this.streamInfo.data_length!==n.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")})),t},getCompressedWorker:function(){return new l(r.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)}},u.createWorkerFrom=function(t,n,e){return t.pipe(new i).pipe(new o("uncompressedSize")).pipe(n.compressWorker(e)).pipe(new o("compressedSize")).withStreamInfo("compression",n)},n.exports=u},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(t,n,e){"use strict";var r=t("./stream/GenericWorker");e.STORE={magic:"\0\0",compressWorker:function(){return new r("STORE compression")},uncompressWorker:function(){return new r("STORE decompression")}},e.DEFLATE=t("./flate")},{"./flate":7,"./stream/GenericWorker":28}],4:[function(t,n,e){"use strict";var r=t("./utils"),l=function(){for(var t,n=[],e=0;e<256;e++){t=e;for(var r=0;r<8;r++)t=1&t?3988292384^t>>>1:t>>>1;n[e]=t}return n}();n.exports=function(t,n){return void 0!==t&&t.length?"string"!==r.getTypeOf(t)?function(t,n,e,r){var i=l,o=0+e;t^=-1;for(var u=0;u<o;u++)t=t>>>8^i[255&(t^n[u])];return-1^t}(0|n,t,t.length):function(t,n,e,r){var i=l,o=0+e;t^=-1;for(var u=0;u<o;u++)t=t>>>8^i[255&(t^n.charCodeAt(u))];return-1^t}(0|n,t,t.length):0}},{"./utils":32}],5:[function(t,n,e){"use strict";e.base64=!1,e.binary=!1,e.dir=!1,e.createFolders=!0,e.date=null,e.compression=null,e.compressionOptions=null,e.comment=null,e.unixPermissions=null,e.dosPermissions=null},{}],6:[function(t,n,e){"use strict";var r;r="undefined"!=typeof Promise?Promise:t("lie"),n.exports={Promise:r}},{lie:37}],7:[function(t,n,e){"use strict";var r="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Uint32Array,l=t("pako"),i=t("./utils"),o=t("./stream/GenericWorker"),u=r?"uint8array":"array";function s(t,n){o.call(this,"FlateWorker/"+t),this._pako=null,this._pakoAction=t,this._pakoOptions=n,this.meta={}}e.magic="\b\0",i.inherits(s,o),s.prototype.processChunk=function(t){this.meta=t.meta,null===this._pako&&this._createPako(),this._pako.push(i.transformTo(u,t.data),!1)},s.prototype.flush=function(){o.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},s.prototype.cleanUp=function(){o.prototype.cleanUp.call(this),this._pako=null},s.prototype._createPako=function(){this._pako=new l[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var t=this;this._pako.onData=function(n){t.push({data:n,meta:t.meta})}},e.compressWorker=function(t){return new s("Deflate",t)},e.uncompressWorker=function(){return new s("Inflate",{})}},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(t,n,e){"use strict";function r(t,n){var e,r="";for(e=0;e<n;e++)r+=String.fromCharCode(255&t),t>>>=8;return r}function l(t,n,e,l,o,h){var c,f,p=t.file,d=t.compression,g=h!==u.utf8encode,y=i.transformTo("string",h(p.name)),_=i.transformTo("string",u.utf8encode(p.name)),v=p.comment,m=i.transformTo("string",h(v)),b=i.transformTo("string",u.utf8encode(v)),x=_.length!==p.name.length,w=b.length!==v.length,E="",C="",O="",M=p.dir,S=p.date,I={crc32:0,compressedSize:0,uncompressedSize:0};n&&!e||(I.crc32=t.crc32,I.compressedSize=t.compressedSize,I.uncompressedSize=t.uncompressedSize);var P=0;n&&(P|=8),g||!x&&!w||(P|=2048);var R=0,T=0;M&&(R|=16),"UNIX"===o?(T=798,R|=function(t,n){var e=t;return t||(e=n?16893:33204),(65535&e)<<16}(p.unixPermissions,M)):(T=20,R|=function(t){return 63&(t||0)}(p.dosPermissions)),c=S.getUTCHours(),c<<=6,c|=S.getUTCMinutes(),c<<=5,c|=S.getUTCSeconds()/2,f=S.getUTCFullYear()-1980,f<<=4,f|=S.getUTCMonth()+1,f<<=5,f|=S.getUTCDate(),x&&(C=r(1,1)+r(s(y),4)+_,E+="up"+r(C.length,2)+C),w&&(O=r(1,1)+r(s(m),4)+b,E+="uc"+r(O.length,2)+O);var N="";return N+="\n\0",N+=r(P,2),N+=d.magic,N+=r(c,2),N+=r(f,2),N+=r(I.crc32,4),N+=r(I.compressedSize,4),N+=r(I.uncompressedSize,4),N+=r(y.length,2),N+=r(E.length,2),{fileRecord:a.LOCAL_FILE_HEADER+N+y+E,dirRecord:a.CENTRAL_FILE_HEADER+r(T,2)+N+r(m.length,2)+"\0\0\0\0"+r(R,4)+r(l,4)+y+E+m}}var i=t("../utils"),o=t("../stream/GenericWorker"),u=t("../utf8"),s=t("../crc32"),a=t("../signature");function h(t,n,e,r){o.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=n,this.zipPlatform=e,this.encodeFileName=r,this.streamFiles=t,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}i.inherits(h,o),h.prototype.push=function(t){var n=t.meta.percent||0,e=this.entriesCount,r=this._sources.length;this.accumulate?this.contentBuffer.push(t):(this.bytesWritten+=t.data.length,o.prototype.push.call(this,{data:t.data,meta:{currentFile:this.currentFile,percent:e?(n+100*(e-r-1))/e:100}}))},h.prototype.openedSource=function(t){this.currentSourceOffset=this.bytesWritten,this.currentFile=t.file.name;var n=this.streamFiles&&!t.file.dir;if(n){var e=l(t,n,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:e.fileRecord,meta:{percent:0}})}else this.accumulate=!0},h.prototype.closedSource=function(t){this.accumulate=!1;var n=this.streamFiles&&!t.file.dir,e=l(t,n,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(e.dirRecord),n)this.push({data:function(t){return a.DATA_DESCRIPTOR+r(t.crc32,4)+r(t.compressedSize,4)+r(t.uncompressedSize,4)}(t),meta:{percent:100}});else for(this.push({data:e.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},h.prototype.flush=function(){for(var t=this.bytesWritten,n=0;n<this.dirRecords.length;n++)this.push({data:this.dirRecords[n],meta:{percent:100}});var e=this.bytesWritten-t,l=function(t,n,e,l,o){var u=i.transformTo("string",o(l));return a.CENTRAL_DIRECTORY_END+"\0\0\0\0"+r(t,2)+r(t,2)+r(n,4)+r(e,4)+r(u.length,2)+u}(this.dirRecords.length,e,t,this.zipComment,this.encodeFileName);this.push({data:l,meta:{percent:100}})},h.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},h.prototype.registerPrevious=function(t){this._sources.push(t);var n=this;return t.on("data",(function(t){n.processChunk(t)})),t.on("end",(function(){n.closedSource(n.previous.streamInfo),n._sources.length?n.prepareNextSource():n.end()})),t.on("error",(function(t){n.error(t)})),this},h.prototype.resume=function(){return!!o.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},h.prototype.error=function(t){var n=this._sources;if(!o.prototype.error.call(this,t))return!1;for(var e=0;e<n.length;e++)try{n[e].error(t)}catch(t){}return!0},h.prototype.lock=function(){o.prototype.lock.call(this);for(var t=this._sources,n=0;n<t.length;n++)t[n].lock()},n.exports=h},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(t,n,e){"use strict";var r=t("../compressions"),l=t("./ZipFileWorker");e.generateWorker=function(t,n,e){var i=new l(n.streamFiles,e,n.platform,n.encodeFileName),o=0;try{t.forEach((function(t,e){o++;var l=function(t,n){var e=t||n,l=r[e];if(!l)throw new Error(e+" is not a valid compression method !");return l}(e.options.compression,n.compression),u=e.options.compressionOptions||n.compressionOptions||{},s=e.dir,a=e.date;e._compressWorker(l,u).withStreamInfo("file",{name:t,dir:s,date:a,comment:e.comment||"",unixPermissions:e.unixPermissions,dosPermissions:e.dosPermissions}).pipe(i)})),i.entriesCount=o}catch(t){i.error(t)}return i}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(t,n,e){"use strict";function r(){if(!(this instanceof r))return new r;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files=Object.create(null),this.comment=null,this.root="",this.clone=function(){var t=new r;for(var n in this)"function"!=typeof this[n]&&(t[n]=this[n]);return t}}(r.prototype=t("./object")).loadAsync=t("./load"),r.support=t("./support"),r.defaults=t("./defaults"),r.version="3.10.1",r.loadAsync=function(t,n){return(new r).loadAsync(t,n)},r.external=t("./external"),n.exports=r},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(t,n,e){"use strict";var r=t("./utils"),l=t("./external"),i=t("./utf8"),o=t("./zipEntries"),u=t("./stream/Crc32Probe"),s=t("./nodejsUtils");function a(t){return new l.Promise((function(n,e){var r=t.decompressed.getContentWorker().pipe(new u);r.on("error",(function(t){e(t)})).on("end",(function(){r.streamInfo.crc32!==t.decompressed.crc32?e(new Error("Corrupted zip : CRC32 mismatch")):n()})).resume()}))}n.exports=function(t,n){var e=this;return n=r.extend(n||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:i.utf8decode}),s.isNode&&s.isStream(t)?l.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):r.prepareContent("the loaded zip file",t,!0,n.optimizedBinaryString,n.base64).then((function(t){var e=new o(n);return e.load(t),e})).then((function(t){var e=[l.Promise.resolve(t)],r=t.files;if(n.checkCRC32)for(var i=0;i<r.length;i++)e.push(a(r[i]));return l.Promise.all(e)})).then((function(t){for(var l=t.shift(),i=l.files,o=0;o<i.length;o++){var u=i[o],s=u.fileNameStr,a=r.resolve(u.fileNameStr);e.file(a,u.decompressed,{binary:!0,optimizedBinaryString:!0,date:u.date,dir:u.dir,comment:u.fileCommentStr.length?u.fileCommentStr:null,unixPermissions:u.unixPermissions,dosPermissions:u.dosPermissions,createFolders:n.createFolders}),u.dir||(e.file(a).unsafeOriginalName=s)}return l.zipComment.length&&(e.comment=l.zipComment),e}))}},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(t,n,e){"use strict";var r=t("../utils"),l=t("../stream/GenericWorker");function i(t,n){l.call(this,"Nodejs stream input adapter for "+t),this._upstreamEnded=!1,this._bindStream(n)}r.inherits(i,l),i.prototype._bindStream=function(t){var n=this;(this._stream=t).pause(),t.on("data",(function(t){n.push({data:t,meta:{percent:0}})})).on("error",(function(t){n.isPaused?this.generatedError=t:n.error(t)})).on("end",(function(){n.isPaused?n._upstreamEnded=!0:n.end()}))},i.prototype.pause=function(){return!!l.prototype.pause.call(this)&&(this._stream.pause(),!0)},i.prototype.resume=function(){return!!l.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},n.exports=i},{"../stream/GenericWorker":28,"../utils":32}],13:[function(t,n,e){"use strict";var r=t("readable-stream").Readable;function l(t,n,e){r.call(this,n),this._helper=t;var l=this;t.on("data",(function(t,n){l.push(t)||l._helper.pause(),e&&e(n)})).on("error",(function(t){l.emit("error",t)})).on("end",(function(){l.push(null)}))}t("../utils").inherits(l,r),l.prototype._read=function(){this._helper.resume()},n.exports=l},{"../utils":32,"readable-stream":16}],14:[function(t,e,r){"use strict";e.exports={isNode:void 0!==n,newBufferFrom:function(t,e){if(n.from&&n.from!==Uint8Array.from)return n.from(t,e);if("number"==typeof t)throw new Error('The "data" argument must not be a number');return new n(t,e)},allocBuffer:function(t){if(n.alloc)return n.alloc(t);var e=new n(t);return e.fill(0),e},isBuffer:function(t){return n.isBuffer(t)},isStream:function(t){return t&&"function"==typeof t.on&&"function"==typeof t.pause&&"function"==typeof t.resume}}},{}],15:[function(t,n,e){"use strict";function r(t,n,e){var r,l=i.getTypeOf(n),u=i.extend(e||{},s);u.date=u.date||new Date,null!==u.compression&&(u.compression=u.compression.toUpperCase()),"string"==typeof u.unixPermissions&&(u.unixPermissions=parseInt(u.unixPermissions,8)),u.unixPermissions&&16384&u.unixPermissions&&(u.dir=!0),u.dosPermissions&&16&u.dosPermissions&&(u.dir=!0),u.dir&&(t=g(t)),u.createFolders&&(r=d(t))&&y.call(this,r,!0);var c,_="string"===l&&!1===u.binary&&!1===u.base64;e&&void 0!==e.binary||(u.binary=!_),(n instanceof a&&0===n.uncompressedSize||u.dir||!n||0===n.length)&&(u.base64=!1,u.binary=!0,n="",u.compression="STORE",l="string"),c=n instanceof a||n instanceof o?n:f.isNode&&f.isStream(n)?new p(t,n):i.prepareContent(t,n,u.binary,u.optimizedBinaryString,u.base64);var v=new h(t,c,u);this.files[t]=v}var l=t("./utf8"),i=t("./utils"),o=t("./stream/GenericWorker"),u=t("./stream/StreamHelper"),s=t("./defaults"),a=t("./compressedObject"),h=t("./zipObject"),c=t("./generate"),f=t("./nodejsUtils"),p=t("./nodejs/NodejsStreamInputAdapter"),d=function(t){"/"===t.slice(-1)&&(t=t.substring(0,t.length-1));var n=t.lastIndexOf("/");return 0<n?t.substring(0,n):""},g=function(t){return"/"!==t.slice(-1)&&(t+="/"),t},y=function(t,n){return n=void 0!==n?n:s.createFolders,t=g(t),this.files[t]||r.call(this,t,null,{dir:!0,createFolders:n}),this.files[t]};function _(t){return"[object RegExp]"===Object.prototype.toString.call(t)}var v={load:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},forEach:function(t){var n,e,r;for(n in this.files)r=this.files[n],(e=n.slice(this.root.length,n.length))&&n.slice(0,this.root.length)===this.root&&t(e,r)},filter:function(t){var n=[];return this.forEach((function(e,r){t(e,r)&&n.push(r)})),n},file:function(t,n,e){if(1!==arguments.length)return t=this.root+t,r.call(this,t,n,e),this;if(_(t)){var l=t;return this.filter((function(t,n){return!n.dir&&l.test(t)}))}var i=this.files[this.root+t];return i&&!i.dir?i:null},folder:function(t){if(!t)return this;if(_(t))return this.filter((function(n,e){return e.dir&&t.test(n)}));var n=this.root+t,e=y.call(this,n),r=this.clone();return r.root=e.name,r},remove:function(t){t=this.root+t;var n=this.files[t];if(n||("/"!==t.slice(-1)&&(t+="/"),n=this.files[t]),n&&!n.dir)delete this.files[t];else for(var e=this.filter((function(n,e){return e.name.slice(0,t.length)===t})),r=0;r<e.length;r++)delete this.files[e[r].name];return this},generate:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},generateInternalStream:function(t){var n,e={};try{if((e=i.extend(t||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:l.utf8encode})).type=e.type.toLowerCase(),e.compression=e.compression.toUpperCase(),"binarystring"===e.type&&(e.type="string"),!e.type)throw new Error("No output type specified.");i.checkSupport(e.type),"darwin"!==e.platform&&"freebsd"!==e.platform&&"linux"!==e.platform&&"sunos"!==e.platform||(e.platform="UNIX"),"win32"===e.platform&&(e.platform="DOS");var r=e.comment||this.comment||"";n=c.generateWorker(this,e,r)}catch(t){(n=new o("error")).error(t)}return new u(n,e.type||"string",e.mimeType)},generateAsync:function(t,n){return this.generateInternalStream(t).accumulate(n)},generateNodeStream:function(t,n){return(t=t||{}).type||(t.type="nodebuffer"),this.generateInternalStream(t).toNodejsStream(n)}};n.exports=v},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(t,n,e){"use strict";n.exports=t("stream")},{stream:void 0}],17:[function(t,n,e){"use strict";var r=t("./DataReader");function l(t){r.call(this,t);for(var n=0;n<this.data.length;n++)t[n]=255&t[n]}t("../utils").inherits(l,r),l.prototype.byteAt=function(t){return this.data[this.zero+t]},l.prototype.lastIndexOfSignature=function(t){for(var n=t.charCodeAt(0),e=t.charCodeAt(1),r=t.charCodeAt(2),l=t.charCodeAt(3),i=this.length-4;0<=i;--i)if(this.data[i]===n&&this.data[i+1]===e&&this.data[i+2]===r&&this.data[i+3]===l)return i-this.zero;return-1},l.prototype.readAndCheckSignature=function(t){var n=t.charCodeAt(0),e=t.charCodeAt(1),r=t.charCodeAt(2),l=t.charCodeAt(3),i=this.readData(4);return n===i[0]&&e===i[1]&&r===i[2]&&l===i[3]},l.prototype.readData=function(t){if(this.checkOffset(t),0===t)return[];var n=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,n},n.exports=l},{"../utils":32,"./DataReader":18}],18:[function(t,n,e){"use strict";var r=t("../utils");function l(t){this.data=t,this.length=t.length,this.index=0,this.zero=0}l.prototype={checkOffset:function(t){this.checkIndex(this.index+t)},checkIndex:function(t){if(this.length<this.zero+t||t<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+t+"). Corrupted zip ?")},setIndex:function(t){this.checkIndex(t),this.index=t},skip:function(t){this.setIndex(this.index+t)},byteAt:function(){},readInt:function(t){var n,e=0;for(this.checkOffset(t),n=this.index+t-1;n>=this.index;n--)e=(e<<8)+this.byteAt(n);return this.index+=t,e},readString:function(t){return r.transformTo("string",this.readData(t))},readData:function(){},lastIndexOfSignature:function(){},readAndCheckSignature:function(){},readDate:function(){var t=this.readInt(4);return new Date(Date.UTC(1980+(t>>25&127),(t>>21&15)-1,t>>16&31,t>>11&31,t>>5&63,(31&t)<<1))}},n.exports=l},{"../utils":32}],19:[function(t,n,e){"use strict";var r=t("./Uint8ArrayReader");function l(t){r.call(this,t)}t("../utils").inherits(l,r),l.prototype.readData=function(t){this.checkOffset(t);var n=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,n},n.exports=l},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(t,n,e){"use strict";var r=t("./DataReader");function l(t){r.call(this,t)}t("../utils").inherits(l,r),l.prototype.byteAt=function(t){return this.data.charCodeAt(this.zero+t)},l.prototype.lastIndexOfSignature=function(t){return this.data.lastIndexOf(t)-this.zero},l.prototype.readAndCheckSignature=function(t){return t===this.readData(4)},l.prototype.readData=function(t){this.checkOffset(t);var n=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,n},n.exports=l},{"../utils":32,"./DataReader":18}],21:[function(t,n,e){"use strict";var r=t("./ArrayReader");function l(t){r.call(this,t)}t("../utils").inherits(l,r),l.prototype.readData=function(t){if(this.checkOffset(t),0===t)return new Uint8Array(0);var n=this.data.subarray(this.zero+this.index,this.zero+this.index+t);return this.index+=t,n},n.exports=l},{"../utils":32,"./ArrayReader":17}],22:[function(t,n,e){"use strict";var r=t("../utils"),l=t("../support"),i=t("./ArrayReader"),o=t("./StringReader"),u=t("./NodeBufferReader"),s=t("./Uint8ArrayReader");n.exports=function(t){var n=r.getTypeOf(t);return r.checkSupport(n),"string"!==n||l.uint8array?"nodebuffer"===n?new u(t):l.uint8array?new s(r.transformTo("uint8array",t)):new i(r.transformTo("array",t)):new o(t)}},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(t,n,e){"use strict";e.LOCAL_FILE_HEADER="PK",e.CENTRAL_FILE_HEADER="PK",e.CENTRAL_DIRECTORY_END="PK",e.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK",e.ZIP64_CENTRAL_DIRECTORY_END="PK",e.DATA_DESCRIPTOR="PK\b"},{}],24:[function(t,n,e){"use strict";var r=t("./GenericWorker"),l=t("../utils");function i(t){r.call(this,"ConvertWorker to "+t),this.destType=t}l.inherits(i,r),i.prototype.processChunk=function(t){this.push({data:l.transformTo(this.destType,t.data),meta:t.meta})},n.exports=i},{"../utils":32,"./GenericWorker":28}],25:[function(t,n,e){"use strict";var r=t("./GenericWorker"),l=t("../crc32");function i(){r.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}t("../utils").inherits(i,r),i.prototype.processChunk=function(t){this.streamInfo.crc32=l(t.data,this.streamInfo.crc32||0),this.push(t)},n.exports=i},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(t,n,e){"use strict";var r=t("../utils"),l=t("./GenericWorker");function i(t){l.call(this,"DataLengthProbe for "+t),this.propName=t,this.withStreamInfo(t,0)}r.inherits(i,l),i.prototype.processChunk=function(t){if(t){var n=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=n+t.data.length}l.prototype.processChunk.call(this,t)},n.exports=i},{"../utils":32,"./GenericWorker":28}],27:[function(t,n,e){"use strict";var r=t("../utils"),l=t("./GenericWorker");function i(t){l.call(this,"DataWorker");var n=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,t.then((function(t){n.dataIsReady=!0,n.data=t,n.max=t&&t.length||0,n.type=r.getTypeOf(t),n.isPaused||n._tickAndRepeat()}),(function(t){n.error(t)}))}r.inherits(i,l),i.prototype.cleanUp=function(){l.prototype.cleanUp.call(this),this.data=null},i.prototype.resume=function(){return!!l.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,r.delay(this._tickAndRepeat,[],this)),!0)},i.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(r.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},i.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var t=null,n=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case"string":t=this.data.substring(this.index,n);break;case"uint8array":t=this.data.subarray(this.index,n);break;case"array":case"nodebuffer":t=this.data.slice(this.index,n)}return this.index=n,this.push({data:t,meta:{percent:this.max?this.index/this.max*100:0}})},n.exports=i},{"../utils":32,"./GenericWorker":28}],28:[function(t,n,e){"use strict";function r(t){this.name=t||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}r.prototype={push:function(t){this.emit("data",t)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(t){this.emit("error",t)}return!0},error:function(t){return!this.isFinished&&(this.isPaused?this.generatedError=t:(this.isFinished=!0,this.emit("error",t),this.previous&&this.previous.error(t),this.cleanUp()),!0)},on:function(t,n){return this._listeners[t].push(n),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(t,n){if(this._listeners[t])for(var e=0;e<this._listeners[t].length;e++)this._listeners[t][e].call(this,n)},pipe:function(t){return t.registerPrevious(this)},registerPrevious:function(t){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=t.streamInfo,this.mergeStreamInfo(),this.previous=t;var n=this;return t.on("data",(function(t){n.processChunk(t)})),t.on("end",(function(){n.end()})),t.on("error",(function(t){n.error(t)})),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var t=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),t=!0),this.previous&&this.previous.resume(),!t},flush:function(){},processChunk:function(t){this.push(t)},withStreamInfo:function(t,n){return this.extraStreamInfo[t]=n,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var t in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,t)&&(this.streamInfo[t]=this.extraStreamInfo[t])},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var t="Worker "+this.name;return this.previous?this.previous+" -> "+t:t}},n.exports=r},{}],29:[function(t,e,r){"use strict";var l=t("../utils"),i=t("./ConvertWorker"),o=t("./GenericWorker"),u=t("../base64"),s=t("../support"),a=t("../external"),h=null;if(s.nodestream)try{h=t("../nodejs/NodejsStreamOutputAdapter")}catch(t){}function c(t,n,e){var r=n;switch(n){case"blob":case"arraybuffer":r="uint8array";break;case"base64":r="string"}try{this._internalType=r,this._outputType=n,this._mimeType=e,l.checkSupport(r),this._worker=t.pipe(new i(r)),t.lock()}catch(t){this._worker=new o("error"),this._worker.error(t)}}c.prototype={accumulate:function(t){return function(t,e){return new a.Promise((function(r,i){var o=[],s=t._internalType,a=t._outputType,h=t._mimeType;t.on("data",(function(t,n){o.push(t),e&&e(n)})).on("error",(function(t){o=[],i(t)})).on("end",(function(){try{var t=function(t,n,e){switch(t){case"blob":return l.newBlob(l.transformTo("arraybuffer",n),e);case"base64":return u.encode(n);default:return l.transformTo(t,n)}}(a,function(t,e){var r,l=0,i=null,o=0;for(r=0;r<e.length;r++)o+=e[r].length;switch(t){case"string":return e.join("");case"array":return Array.prototype.concat.apply([],e);case"uint8array":for(i=new Uint8Array(o),r=0;r<e.length;r++)i.set(e[r],l),l+=e[r].length;return i;case"nodebuffer":return n.concat(e);default:throw new Error("concat : unsupported type '"+t+"'")}}(s,o),h);r(t)}catch(t){i(t)}o=[]})).resume()}))}(this,t)},on:function(t,n){var e=this;return"data"===t?this._worker.on(t,(function(t){n.call(e,t.data,t.meta)})):this._worker.on(t,(function(){l.delay(n,arguments,e)})),this},resume:function(){return l.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(t){if(l.checkSupport("nodestream"),"nodebuffer"!==this._outputType)throw new Error(this._outputType+" is not supported by this method");return new h(this,{objectMode:"nodebuffer"!==this._outputType},t)}},e.exports=c},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(t,e,r){"use strict";if(r.base64=!0,r.array=!0,r.string=!0,r.arraybuffer="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array,r.nodebuffer=void 0!==n,r.uint8array="undefined"!=typeof Uint8Array,"undefined"==typeof ArrayBuffer)r.blob=!1;else{var l=new ArrayBuffer(0);try{r.blob=0===new Blob([l],{type:"application/zip"}).size}catch(t){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);i.append(l),r.blob=0===i.getBlob("application/zip").size}catch(t){r.blob=!1}}}try{r.nodestream=!!t("readable-stream").Readable}catch(t){r.nodestream=!1}},{"readable-stream":16}],31:[function(t,n,e){"use strict";for(var r=t("./utils"),l=t("./support"),i=t("./nodejsUtils"),o=t("./stream/GenericWorker"),u=new Array(256),s=0;s<256;s++)u[s]=252<=s?6:248<=s?5:240<=s?4:224<=s?3:192<=s?2:1;function a(){o.call(this,"utf-8 decode"),this.leftOver=null}function h(){o.call(this,"utf-8 encode")}u[254]=u[254]=1,e.utf8encode=function(t){return l.nodebuffer?i.newBufferFrom(t,"utf-8"):function(t){var n,e,r,i,o,u=t.length,s=0;for(i=0;i<u;i++)55296==(64512&(e=t.charCodeAt(i)))&&i+1<u&&56320==(64512&(r=t.charCodeAt(i+1)))&&(e=65536+(e-55296<<10)+(r-56320),i++),s+=e<128?1:e<2048?2:e<65536?3:4;for(n=l.uint8array?new Uint8Array(s):new Array(s),i=o=0;o<s;i++)55296==(64512&(e=t.charCodeAt(i)))&&i+1<u&&56320==(64512&(r=t.charCodeAt(i+1)))&&(e=65536+(e-55296<<10)+(r-56320),i++),e<128?n[o++]=e:(e<2048?n[o++]=192|e>>>6:(e<65536?n[o++]=224|e>>>12:(n[o++]=240|e>>>18,n[o++]=128|e>>>12&63),n[o++]=128|e>>>6&63),n[o++]=128|63&e);return n}(t)},e.utf8decode=function(t){return l.nodebuffer?r.transformTo("nodebuffer",t).toString("utf-8"):function(t){var n,e,l,i,o=t.length,s=new Array(2*o);for(n=e=0;n<o;)if((l=t[n++])<128)s[e++]=l;else if(4<(i=u[l]))s[e++]=65533,n+=i-1;else{for(l&=2===i?31:3===i?15:7;1<i&&n<o;)l=l<<6|63&t[n++],i--;1<i?s[e++]=65533:l<65536?s[e++]=l:(l-=65536,s[e++]=55296|l>>10&1023,s[e++]=56320|1023&l)}return s.length!==e&&(s.subarray?s=s.subarray(0,e):s.length=e),r.applyFromCharCode(s)}(t=r.transformTo(l.uint8array?"uint8array":"array",t))},r.inherits(a,o),a.prototype.processChunk=function(t){var n=r.transformTo(l.uint8array?"uint8array":"array",t.data);if(this.leftOver&&this.leftOver.length){if(l.uint8array){var i=n;(n=new Uint8Array(i.length+this.leftOver.length)).set(this.leftOver,0),n.set(i,this.leftOver.length)}else n=this.leftOver.concat(n);this.leftOver=null}var o=function(t,n){var e;for((n=n||t.length)>t.length&&(n=t.length),e=n-1;0<=e&&128==(192&t[e]);)e--;return e<0||0===e?n:e+u[t[e]]>n?e:n}(n),s=n;o!==n.length&&(l.uint8array?(s=n.subarray(0,o),this.leftOver=n.subarray(o,n.length)):(s=n.slice(0,o),this.leftOver=n.slice(o,n.length))),this.push({data:e.utf8decode(s),meta:t.meta})},a.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:e.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},e.Utf8DecodeWorker=a,r.inherits(h,o),h.prototype.processChunk=function(t){this.push({data:e.utf8encode(t.data),meta:t.meta})},e.Utf8EncodeWorker=h},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(t,n,e){"use strict";var r=t("./support"),l=t("./base64"),i=t("./nodejsUtils"),o=t("./external");function u(t){return t}function s(t,n){for(var e=0;e<t.length;++e)n[e]=255&t.charCodeAt(e);return n}t("setimmediate"),e.newBlob=function(t,n){e.checkSupport("blob");try{return new Blob([t],{type:n})}catch(e){try{var r=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return r.append(t),r.getBlob(n)}catch(t){throw new Error("Bug : can't construct the Blob.")}}};var a={stringifyByChunk:function(t,n,e){var r=[],l=0,i=t.length;if(i<=e)return String.fromCharCode.apply(null,t);for(;l<i;)"array"===n||"nodebuffer"===n?r.push(String.fromCharCode.apply(null,t.slice(l,Math.min(l+e,i)))):r.push(String.fromCharCode.apply(null,t.subarray(l,Math.min(l+e,i)))),l+=e;return r.join("")},stringifyByChar:function(t){for(var n="",e=0;e<t.length;e++)n+=String.fromCharCode(t[e]);return n},applyCanBeUsed:{uint8array:function(){try{return r.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(t){return!1}}(),nodebuffer:function(){try{return r.nodebuffer&&1===String.fromCharCode.apply(null,i.allocBuffer(1)).length}catch(t){return!1}}()}};function h(t){var n=65536,r=e.getTypeOf(t),l=!0;if("uint8array"===r?l=a.applyCanBeUsed.uint8array:"nodebuffer"===r&&(l=a.applyCanBeUsed.nodebuffer),l)for(;1<n;)try{return a.stringifyByChunk(t,r,n)}catch(t){n=Math.floor(n/2)}return a.stringifyByChar(t)}function c(t,n){for(var e=0;e<t.length;e++)n[e]=t[e];return n}e.applyFromCharCode=h;var f={};f.string={string:u,array:function(t){return s(t,new Array(t.length))},arraybuffer:function(t){return f.string.uint8array(t).buffer},uint8array:function(t){return s(t,new Uint8Array(t.length))},nodebuffer:function(t){return s(t,i.allocBuffer(t.length))}},f.array={string:h,array:u,arraybuffer:function(t){return new Uint8Array(t).buffer},uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return i.newBufferFrom(t)}},f.arraybuffer={string:function(t){return h(new Uint8Array(t))},array:function(t){return c(new Uint8Array(t),new Array(t.byteLength))},arraybuffer:u,uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return i.newBufferFrom(new Uint8Array(t))}},f.uint8array={string:h,array:function(t){return c(t,new Array(t.length))},arraybuffer:function(t){return t.buffer},uint8array:u,nodebuffer:function(t){return i.newBufferFrom(t)}},f.nodebuffer={string:h,array:function(t){return c(t,new Array(t.length))},arraybuffer:function(t){return f.nodebuffer.uint8array(t).buffer},uint8array:function(t){return c(t,new Uint8Array(t.length))},nodebuffer:u},e.transformTo=function(t,n){if(n=n||"",!t)return n;e.checkSupport(t);var r=e.getTypeOf(n);return f[r][t](n)},e.resolve=function(t){for(var n=t.split("/"),e=[],r=0;r<n.length;r++){var l=n[r];"."===l||""===l&&0!==r&&r!==n.length-1||(".."===l?e.pop():e.push(l))}return e.join("/")},e.getTypeOf=function(t){return"string"==typeof t?"string":"[object Array]"===Object.prototype.toString.call(t)?"array":r.nodebuffer&&i.isBuffer(t)?"nodebuffer":r.uint8array&&t instanceof Uint8Array?"uint8array":r.arraybuffer&&t instanceof ArrayBuffer?"arraybuffer":void 0},e.checkSupport=function(t){if(!r[t.toLowerCase()])throw new Error(t+" is not supported by this platform")},e.MAX_VALUE_16BITS=65535,e.MAX_VALUE_32BITS=-1,e.pretty=function(t){var n,e,r="";for(e=0;e<(t||"").length;e++)r+="\\x"+((n=t.charCodeAt(e))<16?"0":"")+n.toString(16).toUpperCase();return r},e.delay=function(t,n,e){setImmediate((function(){t.apply(e||null,n||[])}))},e.inherits=function(t,n){function e(){}e.prototype=n.prototype,t.prototype=new e},e.extend=function(){var t,n,e={};for(t=0;t<arguments.length;t++)for(n in arguments[t])Object.prototype.hasOwnProperty.call(arguments[t],n)&&void 0===e[n]&&(e[n]=arguments[t][n]);return e},e.prepareContent=function(t,n,i,u,a){return o.Promise.resolve(n).then((function(t){return r.blob&&(t instanceof Blob||-1!==["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(t)))&&"undefined"!=typeof FileReader?new o.Promise((function(n,e){var r=new FileReader;r.onload=function(t){n(t.target.result)},r.onerror=function(t){e(t.target.error)},r.readAsArrayBuffer(t)})):t})).then((function(n){var h=e.getTypeOf(n);return h?("arraybuffer"===h?n=e.transformTo("uint8array",n):"string"===h&&(a?n=l.decode(n):i&&!0!==u&&(n=function(t){return s(t,r.uint8array?new Uint8Array(t.length):new Array(t.length))}(n))),n):o.Promise.reject(new Error("Can't read the data of '"+t+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))}))}},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,setimmediate:54}],33:[function(t,n,e){"use strict";var r=t("./reader/readerFor"),l=t("./utils"),i=t("./signature"),o=t("./zipEntry"),u=t("./support");function s(t){this.files=[],this.loadOptions=t}s.prototype={checkSignature:function(t){if(!this.reader.readAndCheckSignature(t)){this.reader.index-=4;var n=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+l.pretty(n)+", expected "+l.pretty(t)+")")}},isSignature:function(t,n){var e=this.reader.index;this.reader.setIndex(t);var r=this.reader.readString(4)===n;return this.reader.setIndex(e),r},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var t=this.reader.readData(this.zipCommentLength),n=u.uint8array?"uint8array":"array",e=l.transformTo(n,t);this.zipComment=this.loadOptions.decodeFileName(e)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var t,n,e,r=this.zip64EndOfCentralSize-44;0<r;)t=this.reader.readInt(2),n=this.reader.readInt(4),e=this.reader.readData(n),this.zip64ExtensibleData[t]={id:t,length:n,value:e}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var t,n;for(t=0;t<this.files.length;t++)n=this.files[t],this.reader.setIndex(n.localHeaderOffset),this.checkSignature(i.LOCAL_FILE_HEADER),n.readLocalPart(this.reader),n.handleUTF8(),n.processAttributes()},readCentralDir:function(){var t;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(i.CENTRAL_FILE_HEADER);)(t=new o({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(t);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var t=this.reader.lastIndexOfSignature(i.CENTRAL_DIRECTORY_END);if(t<0)throw this.isSignature(0,i.LOCAL_FILE_HEADER)?new Error("Corrupted zip: can't find end of central directory"):new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");this.reader.setIndex(t);var n=t;if(this.checkSignature(i.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===l.MAX_VALUE_16BITS||this.diskWithCentralDirStart===l.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===l.MAX_VALUE_16BITS||this.centralDirRecords===l.MAX_VALUE_16BITS||this.centralDirSize===l.MAX_VALUE_32BITS||this.centralDirOffset===l.MAX_VALUE_32BITS){if(this.zip64=!0,(t=this.reader.lastIndexOfSignature(i.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(t),this.checkSignature(i.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,i.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(i.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(i.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var e=this.centralDirOffset+this.centralDirSize;this.zip64&&(e+=20,e+=12+this.zip64EndOfCentralSize);var r=n-e;if(0<r)this.isSignature(n,i.CENTRAL_FILE_HEADER)||(this.reader.zero=r);else if(r<0)throw new Error("Corrupted zip: missing "+Math.abs(r)+" bytes.")},prepareReader:function(t){this.reader=r(t)},load:function(t){this.prepareReader(t),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},n.exports=s},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utils":32,"./zipEntry":34}],34:[function(t,n,e){"use strict";var r=t("./reader/readerFor"),l=t("./utils"),i=t("./compressedObject"),o=t("./crc32"),u=t("./utf8"),s=t("./compressions"),a=t("./support");function h(t,n){this.options=t,this.loadOptions=n}h.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(t){var n,e;if(t.skip(22),this.fileNameLength=t.readInt(2),e=t.readInt(2),this.fileName=t.readData(this.fileNameLength),t.skip(e),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");if(null===(n=function(t){for(var n in s)if(Object.prototype.hasOwnProperty.call(s,n)&&s[n].magic===t)return s[n];return null}(this.compressionMethod)))throw new Error("Corrupted zip : compression "+l.pretty(this.compressionMethod)+" unknown (inner file : "+l.transformTo("string",this.fileName)+")");this.decompressed=new i(this.compressedSize,this.uncompressedSize,this.crc32,n,t.readData(this.compressedSize))},readCentralPart:function(t){this.versionMadeBy=t.readInt(2),t.skip(2),this.bitFlag=t.readInt(2),this.compressionMethod=t.readString(2),this.date=t.readDate(),this.crc32=t.readInt(4),this.compressedSize=t.readInt(4),this.uncompressedSize=t.readInt(4);var n=t.readInt(2);if(this.extraFieldsLength=t.readInt(2),this.fileCommentLength=t.readInt(2),this.diskNumberStart=t.readInt(2),this.internalFileAttributes=t.readInt(2),this.externalFileAttributes=t.readInt(4),this.localHeaderOffset=t.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");t.skip(n),this.readExtraFields(t),this.parseZIP64ExtraField(t),this.fileComment=t.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var t=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==t&&(this.dosPermissions=63&this.externalFileAttributes),3==t&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||"/"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(){if(this.extraFields[1]){var t=r(this.extraFields[1].value);this.uncompressedSize===l.MAX_VALUE_32BITS&&(this.uncompressedSize=t.readInt(8)),this.compressedSize===l.MAX_VALUE_32BITS&&(this.compressedSize=t.readInt(8)),this.localHeaderOffset===l.MAX_VALUE_32BITS&&(this.localHeaderOffset=t.readInt(8)),this.diskNumberStart===l.MAX_VALUE_32BITS&&(this.diskNumberStart=t.readInt(4))}},readExtraFields:function(t){var n,e,r,l=t.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});t.index+4<l;)n=t.readInt(2),e=t.readInt(2),r=t.readData(e),this.extraFields[n]={id:n,length:e,value:r};t.setIndex(l)},handleUTF8:function(){var t=a.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=u.utf8decode(this.fileName),this.fileCommentStr=u.utf8decode(this.fileComment);else{var n=this.findExtraFieldUnicodePath();if(null!==n)this.fileNameStr=n;else{var e=l.transformTo(t,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(e)}var r=this.findExtraFieldUnicodeComment();if(null!==r)this.fileCommentStr=r;else{var i=l.transformTo(t,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(i)}}},findExtraFieldUnicodePath:function(){var t=this.extraFields[28789];if(t){var n=r(t.value);return 1!==n.readInt(1)||o(this.fileName)!==n.readInt(4)?null:u.utf8decode(n.readData(t.length-5))}return null},findExtraFieldUnicodeComment:function(){var t=this.extraFields[25461];if(t){var n=r(t.value);return 1!==n.readInt(1)||o(this.fileComment)!==n.readInt(4)?null:u.utf8decode(n.readData(t.length-5))}return null}},n.exports=h},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(t,n,e){"use strict";function r(t,n,e){this.name=t,this.dir=e.dir,this.date=e.date,this.comment=e.comment,this.unixPermissions=e.unixPermissions,this.dosPermissions=e.dosPermissions,this._data=n,this._dataBinary=e.binary,this.options={compression:e.compression,compressionOptions:e.compressionOptions}}var l=t("./stream/StreamHelper"),i=t("./stream/DataWorker"),o=t("./utf8"),u=t("./compressedObject"),s=t("./stream/GenericWorker");r.prototype={internalStream:function(t){var n=null,e="string";try{if(!t)throw new Error("No output type specified.");var r="string"===(e=t.toLowerCase())||"text"===e;"binarystring"!==e&&"text"!==e||(e="string"),n=this._decompressWorker();var i=!this._dataBinary;i&&!r&&(n=n.pipe(new o.Utf8EncodeWorker)),!i&&r&&(n=n.pipe(new o.Utf8DecodeWorker))}catch(t){(n=new s("error")).error(t)}return new l(n,e,"")},async:function(t,n){return this.internalStream(t).accumulate(n)},nodeStream:function(t,n){return this.internalStream(t||"nodebuffer").toNodejsStream(n)},_compressWorker:function(t,n){if(this._data instanceof u&&this._data.compression.magic===t.magic)return this._data.getCompressedWorker();var e=this._decompressWorker();return this._dataBinary||(e=e.pipe(new o.Utf8EncodeWorker)),u.createWorkerFrom(e,t,n)},_decompressWorker:function(){return this._data instanceof u?this._data.getContentWorker():this._data instanceof s?this._data:new i(this._data)}};for(var a=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],h=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},c=0;c<a.length;c++)r.prototype[a[c]]=h;n.exports=r},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(t,n,e){(function(t){"use strict";var e,r,l=t.MutationObserver||t.WebKitMutationObserver;if(l){var i=0,o=new l(h),u=t.document.createTextNode("");o.observe(u,{characterData:!0}),e=function(){u.data=i=++i%2}}else if(t.setImmediate||void 0===t.MessageChannel)e="document"in t&&"onreadystatechange"in t.document.createElement("script")?function(){var n=t.document.createElement("script");n.onreadystatechange=function(){h(),n.onreadystatechange=null,n.parentNode.removeChild(n),n=null},t.document.documentElement.appendChild(n)}:function(){setTimeout(h,0)};else{var s=new t.MessageChannel;s.port1.onmessage=h,e=function(){s.port2.postMessage(0)}}var a=[];function h(){var t,n;r=!0;for(var e=a.length;e;){for(n=a,a=[],t=-1;++t<e;)n[t]();e=a.length}r=!1}n.exports=function(t){1!==a.push(t)||r||e()}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],37:[function(t,n,e){"use strict";var r=t("immediate");function l(){}var i={},o=["REJECTED"],u=["FULFILLED"],s=["PENDING"];function a(t){if("function"!=typeof t)throw new TypeError("resolver must be a function");this.state=s,this.queue=[],this.outcome=void 0,t!==l&&p(this,t)}function h(t,n,e){this.promise=t,"function"==typeof n&&(this.onFulfilled=n,this.callFulfilled=this.otherCallFulfilled),"function"==typeof e&&(this.onRejected=e,this.callRejected=this.otherCallRejected)}function c(t,n,e){r((function(){var r;try{r=n(e)}catch(r){return i.reject(t,r)}r===t?i.reject(t,new TypeError("Cannot resolve promise with itself")):i.resolve(t,r)}))}function f(t){var n=t&&t.then;if(t&&("object"==typeof t||"function"==typeof t)&&"function"==typeof n)return function(){n.apply(t,arguments)}}function p(t,n){var e=!1;function r(n){e||(e=!0,i.reject(t,n))}function l(n){e||(e=!0,i.resolve(t,n))}var o=d((function(){n(l,r)}));"error"===o.status&&r(o.value)}function d(t,n){var e={};try{e.value=t(n),e.status="success"}catch(t){e.status="error",e.value=t}return e}(n.exports=a).prototype.finally=function(t){if("function"!=typeof t)return this;var n=this.constructor;return this.then((function(e){return n.resolve(t()).then((function(){return e}))}),(function(e){return n.resolve(t()).then((function(){throw e}))}))},a.prototype.catch=function(t){return this.then(null,t)},a.prototype.then=function(t,n){if("function"!=typeof t&&this.state===u||"function"!=typeof n&&this.state===o)return this;var e=new this.constructor(l);return this.state!==s?c(e,this.state===u?t:n,this.outcome):this.queue.push(new h(e,t,n)),e},h.prototype.callFulfilled=function(t){i.resolve(this.promise,t)},h.prototype.otherCallFulfilled=function(t){c(this.promise,this.onFulfilled,t)},h.prototype.callRejected=function(t){i.reject(this.promise,t)},h.prototype.otherCallRejected=function(t){c(this.promise,this.onRejected,t)},i.resolve=function(t,n){var e=d(f,n);if("error"===e.status)return i.reject(t,e.value);var r=e.value;if(r)p(t,r);else{t.state=u,t.outcome=n;for(var l=-1,o=t.queue.length;++l<o;)t.queue[l].callFulfilled(n)}return t},i.reject=function(t,n){t.state=o,t.outcome=n;for(var e=-1,r=t.queue.length;++e<r;)t.queue[e].callRejected(n);return t},a.resolve=function(t){return t instanceof this?t:i.resolve(new this(l),t)},a.reject=function(t){var n=new this(l);return i.reject(n,t)},a.all=function(t){var n=this;if("[object Array]"!==Object.prototype.toString.call(t))return this.reject(new TypeError("must be an array"));var e=t.length,r=!1;if(!e)return this.resolve([]);for(var o=new Array(e),u=0,s=-1,a=new this(l);++s<e;)h(t[s],s);return a;function h(t,l){n.resolve(t).then((function(t){o[l]=t,++u!==e||r||(r=!0,i.resolve(a,o))}),(function(t){r||(r=!0,i.reject(a,t))}))}},a.race=function(t){if("[object Array]"!==Object.prototype.toString.call(t))return this.reject(new TypeError("must be an array"));var n=t.length,e=!1;if(!n)return this.resolve([]);for(var r,o=-1,u=new this(l);++o<n;)r=t[o],this.resolve(r).then((function(t){e||(e=!0,i.resolve(u,t))}),(function(t){e||(e=!0,i.reject(u,t))}));return u}},{immediate:36}],38:[function(t,n,e){"use strict";var r={};(0,t("./lib/utils/common").assign)(r,t("./lib/deflate"),t("./lib/inflate"),t("./lib/zlib/constants")),n.exports=r},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(t,n,e){"use strict";var r=t("./zlib/deflate"),l=t("./utils/common"),i=t("./utils/strings"),o=t("./zlib/messages"),u=t("./zlib/zstream"),s=Object.prototype.toString;function a(t){if(!(this instanceof a))return new a(t);this.options=l.assign({level:-1,method:8,chunkSize:16384,windowBits:15,memLevel:8,strategy:0,to:""},t||{});var n=this.options;n.raw&&0<n.windowBits?n.windowBits=-n.windowBits:n.gzip&&0<n.windowBits&&n.windowBits<16&&(n.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new u,this.strm.avail_out=0;var e=r.deflateInit2(this.strm,n.level,n.method,n.windowBits,n.memLevel,n.strategy);if(0!==e)throw new Error(o[e]);if(n.header&&r.deflateSetHeader(this.strm,n.header),n.dictionary){var h;if(h="string"==typeof n.dictionary?i.string2buf(n.dictionary):"[object ArrayBuffer]"===s.call(n.dictionary)?new Uint8Array(n.dictionary):n.dictionary,0!==(e=r.deflateSetDictionary(this.strm,h)))throw new Error(o[e]);this._dict_set=!0}}function h(t,n){var e=new a(n);if(e.push(t,!0),e.err)throw e.msg||o[e.err];return e.result}a.prototype.push=function(t,n){var e,o,u=this.strm,a=this.options.chunkSize;if(this.ended)return!1;o=n===~~n?n:!0===n?4:0,"string"==typeof t?u.input=i.string2buf(t):"[object ArrayBuffer]"===s.call(t)?u.input=new Uint8Array(t):u.input=t,u.next_in=0,u.avail_in=u.input.length;do{if(0===u.avail_out&&(u.output=new l.Buf8(a),u.next_out=0,u.avail_out=a),1!==(e=r.deflate(u,o))&&0!==e)return this.onEnd(e),!(this.ended=!0);0!==u.avail_out&&(0!==u.avail_in||4!==o&&2!==o)||("string"===this.options.to?this.onData(i.buf2binstring(l.shrinkBuf(u.output,u.next_out))):this.onData(l.shrinkBuf(u.output,u.next_out)))}while((0<u.avail_in||0===u.avail_out)&&1!==e);return 4===o?(e=r.deflateEnd(this.strm),this.onEnd(e),this.ended=!0,0===e):2!==o||(this.onEnd(0),!(u.avail_out=0))},a.prototype.onData=function(t){this.chunks.push(t)},a.prototype.onEnd=function(t){0===t&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=l.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},e.Deflate=a,e.deflate=h,e.deflateRaw=function(t,n){return(n=n||{}).raw=!0,h(t,n)},e.gzip=function(t,n){return(n=n||{}).gzip=!0,h(t,n)}},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(t,n,e){"use strict";var r=t("./zlib/inflate"),l=t("./utils/common"),i=t("./utils/strings"),o=t("./zlib/constants"),u=t("./zlib/messages"),s=t("./zlib/zstream"),a=t("./zlib/gzheader"),h=Object.prototype.toString;function c(t){if(!(this instanceof c))return new c(t);this.options=l.assign({chunkSize:16384,windowBits:0,to:""},t||{});var n=this.options;n.raw&&0<=n.windowBits&&n.windowBits<16&&(n.windowBits=-n.windowBits,0===n.windowBits&&(n.windowBits=-15)),!(0<=n.windowBits&&n.windowBits<16)||t&&t.windowBits||(n.windowBits+=32),15<n.windowBits&&n.windowBits<48&&0==(15&n.windowBits)&&(n.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var e=r.inflateInit2(this.strm,n.windowBits);if(e!==o.Z_OK)throw new Error(u[e]);this.header=new a,r.inflateGetHeader(this.strm,this.header)}function f(t,n){var e=new c(n);if(e.push(t,!0),e.err)throw e.msg||u[e.err];return e.result}c.prototype.push=function(t,n){var e,u,s,a,c,f,p=this.strm,d=this.options.chunkSize,g=this.options.dictionary,y=!1;if(this.ended)return!1;u=n===~~n?n:!0===n?o.Z_FINISH:o.Z_NO_FLUSH,"string"==typeof t?p.input=i.binstring2buf(t):"[object ArrayBuffer]"===h.call(t)?p.input=new Uint8Array(t):p.input=t,p.next_in=0,p.avail_in=p.input.length;do{if(0===p.avail_out&&(p.output=new l.Buf8(d),p.next_out=0,p.avail_out=d),(e=r.inflate(p,o.Z_NO_FLUSH))===o.Z_NEED_DICT&&g&&(f="string"==typeof g?i.string2buf(g):"[object ArrayBuffer]"===h.call(g)?new Uint8Array(g):g,e=r.inflateSetDictionary(this.strm,f)),e===o.Z_BUF_ERROR&&!0===y&&(e=o.Z_OK,y=!1),e!==o.Z_STREAM_END&&e!==o.Z_OK)return this.onEnd(e),!(this.ended=!0);p.next_out&&(0!==p.avail_out&&e!==o.Z_STREAM_END&&(0!==p.avail_in||u!==o.Z_FINISH&&u!==o.Z_SYNC_FLUSH)||("string"===this.options.to?(s=i.utf8border(p.output,p.next_out),a=p.next_out-s,c=i.buf2string(p.output,s),p.next_out=a,p.avail_out=d-a,a&&l.arraySet(p.output,p.output,s,a,0),this.onData(c)):this.onData(l.shrinkBuf(p.output,p.next_out)))),0===p.avail_in&&0===p.avail_out&&(y=!0)}while((0<p.avail_in||0===p.avail_out)&&e!==o.Z_STREAM_END);return e===o.Z_STREAM_END&&(u=o.Z_FINISH),u===o.Z_FINISH?(e=r.inflateEnd(this.strm),this.onEnd(e),this.ended=!0,e===o.Z_OK):u!==o.Z_SYNC_FLUSH||(this.onEnd(o.Z_OK),!(p.avail_out=0))},c.prototype.onData=function(t){this.chunks.push(t)},c.prototype.onEnd=function(t){t===o.Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=l.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},e.Inflate=c,e.inflate=f,e.inflateRaw=function(t,n){return(n=n||{}).raw=!0,f(t,n)},e.ungzip=f},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(t,n,e){"use strict";var r="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;e.assign=function(t){for(var n=Array.prototype.slice.call(arguments,1);n.length;){var e=n.shift();if(e){if("object"!=typeof e)throw new TypeError(e+"must be non-object");for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])}}return t},e.shrinkBuf=function(t,n){return t.length===n?t:t.subarray?t.subarray(0,n):(t.length=n,t)};var l={arraySet:function(t,n,e,r,l){if(n.subarray&&t.subarray)t.set(n.subarray(e,e+r),l);else for(var i=0;i<r;i++)t[l+i]=n[e+i]},flattenChunks:function(t){var n,e,r,l,i,o;for(n=r=0,e=t.length;n<e;n++)r+=t[n].length;for(o=new Uint8Array(r),n=l=0,e=t.length;n<e;n++)i=t[n],o.set(i,l),l+=i.length;return o}},i={arraySet:function(t,n,e,r,l){for(var i=0;i<r;i++)t[l+i]=n[e+i]},flattenChunks:function(t){return[].concat.apply([],t)}};e.setTyped=function(t){t?(e.Buf8=Uint8Array,e.Buf16=Uint16Array,e.Buf32=Int32Array,e.assign(e,l)):(e.Buf8=Array,e.Buf16=Array,e.Buf32=Array,e.assign(e,i))},e.setTyped(r)},{}],42:[function(t,n,e){"use strict";var r=t("./common"),l=!0,i=!0;try{String.fromCharCode.apply(null,[0])}catch(t){l=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){i=!1}for(var o=new r.Buf8(256),u=0;u<256;u++)o[u]=252<=u?6:248<=u?5:240<=u?4:224<=u?3:192<=u?2:1;function s(t,n){if(n<65537&&(t.subarray&&i||!t.subarray&&l))return String.fromCharCode.apply(null,r.shrinkBuf(t,n));for(var e="",o=0;o<n;o++)e+=String.fromCharCode(t[o]);return e}o[254]=o[254]=1,e.string2buf=function(t){var n,e,l,i,o,u=t.length,s=0;for(i=0;i<u;i++)55296==(64512&(e=t.charCodeAt(i)))&&i+1<u&&56320==(64512&(l=t.charCodeAt(i+1)))&&(e=65536+(e-55296<<10)+(l-56320),i++),s+=e<128?1:e<2048?2:e<65536?3:4;for(n=new r.Buf8(s),i=o=0;o<s;i++)55296==(64512&(e=t.charCodeAt(i)))&&i+1<u&&56320==(64512&(l=t.charCodeAt(i+1)))&&(e=65536+(e-55296<<10)+(l-56320),i++),e<128?n[o++]=e:(e<2048?n[o++]=192|e>>>6:(e<65536?n[o++]=224|e>>>12:(n[o++]=240|e>>>18,n[o++]=128|e>>>12&63),n[o++]=128|e>>>6&63),n[o++]=128|63&e);return n},e.buf2binstring=function(t){return s(t,t.length)},e.binstring2buf=function(t){for(var n=new r.Buf8(t.length),e=0,l=n.length;e<l;e++)n[e]=t.charCodeAt(e);return n},e.buf2string=function(t,n){var e,r,l,i,u=n||t.length,a=new Array(2*u);for(e=r=0;e<u;)if((l=t[e++])<128)a[r++]=l;else if(4<(i=o[l]))a[r++]=65533,e+=i-1;else{for(l&=2===i?31:3===i?15:7;1<i&&e<u;)l=l<<6|63&t[e++],i--;1<i?a[r++]=65533:l<65536?a[r++]=l:(l-=65536,a[r++]=55296|l>>10&1023,a[r++]=56320|1023&l)}return s(a,r)},e.utf8border=function(t,n){var e;for((n=n||t.length)>t.length&&(n=t.length),e=n-1;0<=e&&128==(192&t[e]);)e--;return e<0||0===e?n:e+o[t[e]]>n?e:n}},{"./common":41}],43:[function(t,n,e){"use strict";n.exports=function(t,n,e,r){for(var l=65535&t|0,i=t>>>16&65535|0,o=0;0!==e;){for(e-=o=2e3<e?2e3:e;i=i+(l=l+n[r++]|0)|0,--o;);l%=65521,i%=65521}return l|i<<16|0}},{}],44:[function(t,n,e){"use strict";n.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(t,n,e){"use strict";var r=function(){for(var t,n=[],e=0;e<256;e++){t=e;for(var r=0;r<8;r++)t=1&t?3988292384^t>>>1:t>>>1;n[e]=t}return n}();n.exports=function(t,n,e,l){var i=r,o=l+e;t^=-1;for(var u=l;u<o;u++)t=t>>>8^i[255&(t^n[u])];return-1^t}},{}],46:[function(t,n,e){"use strict";var r,l=t("../utils/common"),i=t("./trees"),o=t("./adler32"),u=t("./crc32"),s=t("./messages"),a=-2,h=258,c=262,f=113;function p(t,n){return t.msg=s[n],n}function d(t){return(t<<1)-(4<t?9:0)}function g(t){for(var n=t.length;0<=--n;)t[n]=0}function y(t){var n=t.state,e=n.pending;e>t.avail_out&&(e=t.avail_out),0!==e&&(l.arraySet(t.output,n.pending_buf,n.pending_out,e,t.next_out),t.next_out+=e,n.pending_out+=e,t.total_out+=e,t.avail_out-=e,n.pending-=e,0===n.pending&&(n.pending_out=0))}function _(t,n){i._tr_flush_block(t,0<=t.block_start?t.block_start:-1,t.strstart-t.block_start,n),t.block_start=t.strstart,y(t.strm)}function v(t,n){t.pending_buf[t.pending++]=n}function m(t,n){t.pending_buf[t.pending++]=n>>>8&255,t.pending_buf[t.pending++]=255&n}function b(t,n){var e,r,l=t.max_chain_length,i=t.strstart,o=t.prev_length,u=t.nice_match,s=t.strstart>t.w_size-c?t.strstart-(t.w_size-c):0,a=t.window,f=t.w_mask,p=t.prev,d=t.strstart+h,g=a[i+o-1],y=a[i+o];t.prev_length>=t.good_match&&(l>>=2),u>t.lookahead&&(u=t.lookahead);do{if(a[(e=n)+o]===y&&a[e+o-1]===g&&a[e]===a[i]&&a[++e]===a[i+1]){i+=2,e++;do{}while(a[++i]===a[++e]&&a[++i]===a[++e]&&a[++i]===a[++e]&&a[++i]===a[++e]&&a[++i]===a[++e]&&a[++i]===a[++e]&&a[++i]===a[++e]&&a[++i]===a[++e]&&i<d);if(r=h-(d-i),i=d-h,o<r){if(t.match_start=n,u<=(o=r))break;g=a[i+o-1],y=a[i+o]}}}while((n=p[n&f])>s&&0!=--l);return o<=t.lookahead?o:t.lookahead}function x(t){var n,e,r,i,s,a,h,f,p,d,g=t.w_size;do{if(i=t.window_size-t.lookahead-t.strstart,t.strstart>=g+(g-c)){for(l.arraySet(t.window,t.window,g,g,0),t.match_start-=g,t.strstart-=g,t.block_start-=g,n=e=t.hash_size;r=t.head[--n],t.head[n]=g<=r?r-g:0,--e;);for(n=e=g;r=t.prev[--n],t.prev[n]=g<=r?r-g:0,--e;);i+=g}if(0===t.strm.avail_in)break;if(a=t.strm,h=t.window,f=t.strstart+t.lookahead,d=void 0,(p=i)<(d=a.avail_in)&&(d=p),e=0===d?0:(a.avail_in-=d,l.arraySet(h,a.input,a.next_in,d,f),1===a.state.wrap?a.adler=o(a.adler,h,d,f):2===a.state.wrap&&(a.adler=u(a.adler,h,d,f)),a.next_in+=d,a.total_in+=d,d),t.lookahead+=e,t.lookahead+t.insert>=3)for(s=t.strstart-t.insert,t.ins_h=t.window[s],t.ins_h=(t.ins_h<<t.hash_shift^t.window[s+1])&t.hash_mask;t.insert&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[s+3-1])&t.hash_mask,t.prev[s&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=s,s++,t.insert--,!(t.lookahead+t.insert<3)););}while(t.lookahead<c&&0!==t.strm.avail_in)}function w(t,n){for(var e,r;;){if(t.lookahead<c){if(x(t),t.lookahead<c&&0===n)return 1;if(0===t.lookahead)break}if(e=0,t.lookahead>=3&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+3-1])&t.hash_mask,e=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==e&&t.strstart-e<=t.w_size-c&&(t.match_length=b(t,e)),t.match_length>=3)if(r=i._tr_tally(t,t.strstart-t.match_start,t.match_length-3),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=3){for(t.match_length--;t.strstart++,t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+3-1])&t.hash_mask,e=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart,0!=--t.match_length;);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+1])&t.hash_mask;else r=i._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(r&&(_(t,!1),0===t.strm.avail_out))return 1}return t.insert=t.strstart<2?t.strstart:2,4===n?(_(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(_(t,!1),0===t.strm.avail_out)?1:2}function E(t,n){for(var e,r,l;;){if(t.lookahead<c){if(x(t),t.lookahead<c&&0===n)return 1;if(0===t.lookahead)break}if(e=0,t.lookahead>=3&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+3-1])&t.hash_mask,e=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=2,0!==e&&t.prev_length<t.max_lazy_match&&t.strstart-e<=t.w_size-c&&(t.match_length=b(t,e),t.match_length<=5&&(1===t.strategy||3===t.match_length&&4096<t.strstart-t.match_start)&&(t.match_length=2)),t.prev_length>=3&&t.match_length<=t.prev_length){for(l=t.strstart+t.lookahead-3,r=i._tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-3),t.lookahead-=t.prev_length-1,t.prev_length-=2;++t.strstart<=l&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+3-1])&t.hash_mask,e=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!=--t.prev_length;);if(t.match_available=0,t.match_length=2,t.strstart++,r&&(_(t,!1),0===t.strm.avail_out))return 1}else if(t.match_available){if((r=i._tr_tally(t,0,t.window[t.strstart-1]))&&_(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return 1}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(r=i._tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<2?t.strstart:2,4===n?(_(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(_(t,!1),0===t.strm.avail_out)?1:2}function C(t,n,e,r,l){this.good_length=t,this.max_lazy=n,this.nice_length=e,this.max_chain=r,this.func=l}function O(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=8,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new l.Buf16(1146),this.dyn_dtree=new l.Buf16(122),this.bl_tree=new l.Buf16(78),g(this.dyn_ltree),g(this.dyn_dtree),g(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new l.Buf16(16),this.heap=new l.Buf16(573),g(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new l.Buf16(573),g(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function M(t){var n;return t&&t.state?(t.total_in=t.total_out=0,t.data_type=2,(n=t.state).pending=0,n.pending_out=0,n.wrap<0&&(n.wrap=-n.wrap),n.status=n.wrap?42:f,t.adler=2===n.wrap?0:1,n.last_flush=0,i._tr_init(n),0):p(t,a)}function S(t){var n=M(t);return 0===n&&function(t){t.window_size=2*t.w_size,g(t.head),t.max_lazy_match=r[t.level].max_lazy,t.good_match=r[t.level].good_length,t.nice_match=r[t.level].nice_length,t.max_chain_length=r[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=2,t.match_available=0,t.ins_h=0}(t.state),n}function I(t,n,e,r,i,o){if(!t)return a;var u=1;if(-1===n&&(n=6),r<0?(u=0,r=-r):15<r&&(u=2,r-=16),i<1||9<i||8!==e||r<8||15<r||n<0||9<n||o<0||4<o)return p(t,a);8===r&&(r=9);var s=new O;return(t.state=s).strm=t,s.wrap=u,s.gzhead=null,s.w_bits=r,s.w_size=1<<s.w_bits,s.w_mask=s.w_size-1,s.hash_bits=i+7,s.hash_size=1<<s.hash_bits,s.hash_mask=s.hash_size-1,s.hash_shift=~~((s.hash_bits+3-1)/3),s.window=new l.Buf8(2*s.w_size),s.head=new l.Buf16(s.hash_size),s.prev=new l.Buf16(s.w_size),s.lit_bufsize=1<<i+6,s.pending_buf_size=4*s.lit_bufsize,s.pending_buf=new l.Buf8(s.pending_buf_size),s.d_buf=1*s.lit_bufsize,s.l_buf=3*s.lit_bufsize,s.level=n,s.strategy=o,s.method=e,S(t)}r=[new C(0,0,0,0,(function(t,n){var e=65535;for(e>t.pending_buf_size-5&&(e=t.pending_buf_size-5);;){if(t.lookahead<=1){if(x(t),0===t.lookahead&&0===n)return 1;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;var r=t.block_start+e;if((0===t.strstart||t.strstart>=r)&&(t.lookahead=t.strstart-r,t.strstart=r,_(t,!1),0===t.strm.avail_out))return 1;if(t.strstart-t.block_start>=t.w_size-c&&(_(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,4===n?(_(t,!0),0===t.strm.avail_out?3:4):(t.strstart>t.block_start&&(_(t,!1),t.strm.avail_out),1)})),new C(4,4,8,4,w),new C(4,5,16,8,w),new C(4,6,32,32,w),new C(4,4,16,16,E),new C(8,16,32,32,E),new C(8,16,128,128,E),new C(8,32,128,256,E),new C(32,128,258,1024,E),new C(32,258,258,4096,E)],e.deflateInit=function(t,n){return I(t,n,8,15,8,0)},e.deflateInit2=I,e.deflateReset=S,e.deflateResetKeep=M,e.deflateSetHeader=function(t,n){return t&&t.state?2!==t.state.wrap?a:(t.state.gzhead=n,0):a},e.deflate=function(t,n){var e,l,o,s;if(!t||!t.state||5<n||n<0)return t?p(t,a):a;if(l=t.state,!t.output||!t.input&&0!==t.avail_in||666===l.status&&4!==n)return p(t,0===t.avail_out?-5:a);if(l.strm=t,e=l.last_flush,l.last_flush=n,42===l.status)if(2===l.wrap)t.adler=0,v(l,31),v(l,139),v(l,8),l.gzhead?(v(l,(l.gzhead.text?1:0)+(l.gzhead.hcrc?2:0)+(l.gzhead.extra?4:0)+(l.gzhead.name?8:0)+(l.gzhead.comment?16:0)),v(l,255&l.gzhead.time),v(l,l.gzhead.time>>8&255),v(l,l.gzhead.time>>16&255),v(l,l.gzhead.time>>24&255),v(l,9===l.level?2:2<=l.strategy||l.level<2?4:0),v(l,255&l.gzhead.os),l.gzhead.extra&&l.gzhead.extra.length&&(v(l,255&l.gzhead.extra.length),v(l,l.gzhead.extra.length>>8&255)),l.gzhead.hcrc&&(t.adler=u(t.adler,l.pending_buf,l.pending,0)),l.gzindex=0,l.status=69):(v(l,0),v(l,0),v(l,0),v(l,0),v(l,0),v(l,9===l.level?2:2<=l.strategy||l.level<2?4:0),v(l,3),l.status=f);else{var c=8+(l.w_bits-8<<4)<<8;c|=(2<=l.strategy||l.level<2?0:l.level<6?1:6===l.level?2:3)<<6,0!==l.strstart&&(c|=32),c+=31-c%31,l.status=f,m(l,c),0!==l.strstart&&(m(l,t.adler>>>16),m(l,65535&t.adler)),t.adler=1}if(69===l.status)if(l.gzhead.extra){for(o=l.pending;l.gzindex<(65535&l.gzhead.extra.length)&&(l.pending!==l.pending_buf_size||(l.gzhead.hcrc&&l.pending>o&&(t.adler=u(t.adler,l.pending_buf,l.pending-o,o)),y(t),o=l.pending,l.pending!==l.pending_buf_size));)v(l,255&l.gzhead.extra[l.gzindex]),l.gzindex++;l.gzhead.hcrc&&l.pending>o&&(t.adler=u(t.adler,l.pending_buf,l.pending-o,o)),l.gzindex===l.gzhead.extra.length&&(l.gzindex=0,l.status=73)}else l.status=73;if(73===l.status)if(l.gzhead.name){o=l.pending;do{if(l.pending===l.pending_buf_size&&(l.gzhead.hcrc&&l.pending>o&&(t.adler=u(t.adler,l.pending_buf,l.pending-o,o)),y(t),o=l.pending,l.pending===l.pending_buf_size)){s=1;break}s=l.gzindex<l.gzhead.name.length?255&l.gzhead.name.charCodeAt(l.gzindex++):0,v(l,s)}while(0!==s);l.gzhead.hcrc&&l.pending>o&&(t.adler=u(t.adler,l.pending_buf,l.pending-o,o)),0===s&&(l.gzindex=0,l.status=91)}else l.status=91;if(91===l.status)if(l.gzhead.comment){o=l.pending;do{if(l.pending===l.pending_buf_size&&(l.gzhead.hcrc&&l.pending>o&&(t.adler=u(t.adler,l.pending_buf,l.pending-o,o)),y(t),o=l.pending,l.pending===l.pending_buf_size)){s=1;break}s=l.gzindex<l.gzhead.comment.length?255&l.gzhead.comment.charCodeAt(l.gzindex++):0,v(l,s)}while(0!==s);l.gzhead.hcrc&&l.pending>o&&(t.adler=u(t.adler,l.pending_buf,l.pending-o,o)),0===s&&(l.status=103)}else l.status=103;if(103===l.status&&(l.gzhead.hcrc?(l.pending+2>l.pending_buf_size&&y(t),l.pending+2<=l.pending_buf_size&&(v(l,255&t.adler),v(l,t.adler>>8&255),t.adler=0,l.status=f)):l.status=f),0!==l.pending){if(y(t),0===t.avail_out)return l.last_flush=-1,0}else if(0===t.avail_in&&d(n)<=d(e)&&4!==n)return p(t,-5);if(666===l.status&&0!==t.avail_in)return p(t,-5);if(0!==t.avail_in||0!==l.lookahead||0!==n&&666!==l.status){var b=2===l.strategy?function(t,n){for(var e;;){if(0===t.lookahead&&(x(t),0===t.lookahead)){if(0===n)return 1;break}if(t.match_length=0,e=i._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,e&&(_(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,4===n?(_(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(_(t,!1),0===t.strm.avail_out)?1:2}(l,n):3===l.strategy?function(t,n){for(var e,r,l,o,u=t.window;;){if(t.lookahead<=h){if(x(t),t.lookahead<=h&&0===n)return 1;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=3&&0<t.strstart&&(r=u[l=t.strstart-1])===u[++l]&&r===u[++l]&&r===u[++l]){o=t.strstart+h;do{}while(r===u[++l]&&r===u[++l]&&r===u[++l]&&r===u[++l]&&r===u[++l]&&r===u[++l]&&r===u[++l]&&r===u[++l]&&l<o);t.match_length=h-(o-l),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=3?(e=i._tr_tally(t,1,t.match_length-3),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(e=i._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),e&&(_(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,4===n?(_(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(_(t,!1),0===t.strm.avail_out)?1:2}(l,n):r[l.level].func(l,n);if(3!==b&&4!==b||(l.status=666),1===b||3===b)return 0===t.avail_out&&(l.last_flush=-1),0;if(2===b&&(1===n?i._tr_align(l):5!==n&&(i._tr_stored_block(l,0,0,!1),3===n&&(g(l.head),0===l.lookahead&&(l.strstart=0,l.block_start=0,l.insert=0))),y(t),0===t.avail_out))return l.last_flush=-1,0}return 4!==n?0:l.wrap<=0?1:(2===l.wrap?(v(l,255&t.adler),v(l,t.adler>>8&255),v(l,t.adler>>16&255),v(l,t.adler>>24&255),v(l,255&t.total_in),v(l,t.total_in>>8&255),v(l,t.total_in>>16&255),v(l,t.total_in>>24&255)):(m(l,t.adler>>>16),m(l,65535&t.adler)),y(t),0<l.wrap&&(l.wrap=-l.wrap),0!==l.pending?0:1)},e.deflateEnd=function(t){var n;return t&&t.state?42!==(n=t.state.status)&&69!==n&&73!==n&&91!==n&&103!==n&&n!==f&&666!==n?p(t,a):(t.state=null,n===f?p(t,-3):0):a},e.deflateSetDictionary=function(t,n){var e,r,i,u,s,h,c,f,p=n.length;if(!t||!t.state)return a;if(2===(u=(e=t.state).wrap)||1===u&&42!==e.status||e.lookahead)return a;for(1===u&&(t.adler=o(t.adler,n,p,0)),e.wrap=0,p>=e.w_size&&(0===u&&(g(e.head),e.strstart=0,e.block_start=0,e.insert=0),f=new l.Buf8(e.w_size),l.arraySet(f,n,p-e.w_size,e.w_size,0),n=f,p=e.w_size),s=t.avail_in,h=t.next_in,c=t.input,t.avail_in=p,t.next_in=0,t.input=n,x(e);e.lookahead>=3;){for(r=e.strstart,i=e.lookahead-2;e.ins_h=(e.ins_h<<e.hash_shift^e.window[r+3-1])&e.hash_mask,e.prev[r&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=r,r++,--i;);e.strstart=r,e.lookahead=2,x(e)}return e.strstart+=e.lookahead,e.block_start=e.strstart,e.insert=e.lookahead,e.lookahead=0,e.match_length=e.prev_length=2,e.match_available=0,t.next_in=h,t.input=c,t.avail_in=s,e.wrap=u,0},e.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(t,n,e){"use strict";n.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},{}],48:[function(t,n,e){"use strict";n.exports=function(t,n){var e,r,l,i,o,u,s,a,h,c,f,p,d,g,y,_,v,m,b,x,w,E,C,O,M;e=t.state,r=t.next_in,O=t.input,l=r+(t.avail_in-5),i=t.next_out,M=t.output,o=i-(n-t.avail_out),u=i+(t.avail_out-257),s=e.dmax,a=e.wsize,h=e.whave,c=e.wnext,f=e.window,p=e.hold,d=e.bits,g=e.lencode,y=e.distcode,_=(1<<e.lenbits)-1,v=(1<<e.distbits)-1;t:do{d<15&&(p+=O[r++]<<d,d+=8,p+=O[r++]<<d,d+=8),m=g[p&_];n:for(;;){if(p>>>=b=m>>>24,d-=b,0==(b=m>>>16&255))M[i++]=65535&m;else{if(!(16&b)){if(0==(64&b)){m=g[(65535&m)+(p&(1<<b)-1)];continue n}if(32&b){e.mode=12;break t}t.msg="invalid literal/length code",e.mode=30;break t}x=65535&m,(b&=15)&&(d<b&&(p+=O[r++]<<d,d+=8),x+=p&(1<<b)-1,p>>>=b,d-=b),d<15&&(p+=O[r++]<<d,d+=8,p+=O[r++]<<d,d+=8),m=y[p&v];e:for(;;){if(p>>>=b=m>>>24,d-=b,!(16&(b=m>>>16&255))){if(0==(64&b)){m=y[(65535&m)+(p&(1<<b)-1)];continue e}t.msg="invalid distance code",e.mode=30;break t}if(w=65535&m,d<(b&=15)&&(p+=O[r++]<<d,(d+=8)<b&&(p+=O[r++]<<d,d+=8)),s<(w+=p&(1<<b)-1)){t.msg="invalid distance too far back",e.mode=30;break t}if(p>>>=b,d-=b,(b=i-o)<w){if(h<(b=w-b)&&e.sane){t.msg="invalid distance too far back",e.mode=30;break t}if(C=f,(E=0)===c){if(E+=a-b,b<x){for(x-=b;M[i++]=f[E++],--b;);E=i-w,C=M}}else if(c<b){if(E+=a+c-b,(b-=c)<x){for(x-=b;M[i++]=f[E++],--b;);if(E=0,c<x){for(x-=b=c;M[i++]=f[E++],--b;);E=i-w,C=M}}}else if(E+=c-b,b<x){for(x-=b;M[i++]=f[E++],--b;);E=i-w,C=M}for(;2<x;)M[i++]=C[E++],M[i++]=C[E++],M[i++]=C[E++],x-=3;x&&(M[i++]=C[E++],1<x&&(M[i++]=C[E++]))}else{for(E=i-w;M[i++]=M[E++],M[i++]=M[E++],M[i++]=M[E++],2<(x-=3););x&&(M[i++]=M[E++],1<x&&(M[i++]=M[E++]))}break}}break}}while(r<l&&i<u);r-=x=d>>3,p&=(1<<(d-=x<<3))-1,t.next_in=r,t.next_out=i,t.avail_in=r<l?l-r+5:5-(r-l),t.avail_out=i<u?u-i+257:257-(i-u),e.hold=p,e.bits=d}},{}],49:[function(t,n,e){"use strict";var r=t("../utils/common"),l=t("./adler32"),i=t("./crc32"),o=t("./inffast"),u=t("./inftrees"),s=-2;function a(t){return(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24)}function h(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new r.Buf16(320),this.work=new r.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function c(t){var n;return t&&t.state?(n=t.state,t.total_in=t.total_out=n.total=0,t.msg="",n.wrap&&(t.adler=1&n.wrap),n.mode=1,n.last=0,n.havedict=0,n.dmax=32768,n.head=null,n.hold=0,n.bits=0,n.lencode=n.lendyn=new r.Buf32(852),n.distcode=n.distdyn=new r.Buf32(592),n.sane=1,n.back=-1,0):s}function f(t){var n;return t&&t.state?((n=t.state).wsize=0,n.whave=0,n.wnext=0,c(t)):s}function p(t,n){var e,r;return t&&t.state?(r=t.state,n<0?(e=0,n=-n):(e=1+(n>>4),n<48&&(n&=15)),n&&(n<8||15<n)?s:(null!==r.window&&r.wbits!==n&&(r.window=null),r.wrap=e,r.wbits=n,f(t))):s}function d(t,n){var e,r;return t?(r=new h,(t.state=r).window=null,0!==(e=p(t,n))&&(t.state=null),e):s}var g,y,_=!0;function v(t){if(_){var n;for(g=new r.Buf32(512),y=new r.Buf32(32),n=0;n<144;)t.lens[n++]=8;for(;n<256;)t.lens[n++]=9;for(;n<280;)t.lens[n++]=7;for(;n<288;)t.lens[n++]=8;for(u(1,t.lens,0,288,g,0,t.work,{bits:9}),n=0;n<32;)t.lens[n++]=5;u(2,t.lens,0,32,y,0,t.work,{bits:5}),_=!1}t.lencode=g,t.lenbits=9,t.distcode=y,t.distbits=5}function m(t,n,e,l){var i,o=t.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new r.Buf8(o.wsize)),l>=o.wsize?(r.arraySet(o.window,n,e-o.wsize,o.wsize,0),o.wnext=0,o.whave=o.wsize):(l<(i=o.wsize-o.wnext)&&(i=l),r.arraySet(o.window,n,e-l,i,o.wnext),(l-=i)?(r.arraySet(o.window,n,e-l,l,0),o.wnext=l,o.whave=o.wsize):(o.wnext+=i,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=i))),0}e.inflateReset=f,e.inflateReset2=p,e.inflateResetKeep=c,e.inflateInit=function(t){return d(t,15)},e.inflateInit2=d,e.inflate=function(t,n){var e,h,c,f,p,d,g,y,_,b,x,w,E,C,O,M,S,I,P,R,T,N,L,A,j=0,D=new r.Buf8(4),k=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return s;12===(e=t.state).mode&&(e.mode=13),p=t.next_out,c=t.output,g=t.avail_out,f=t.next_in,h=t.input,d=t.avail_in,y=e.hold,_=e.bits,b=d,x=g,N=0;t:for(;;)switch(e.mode){case 1:if(0===e.wrap){e.mode=13;break}for(;_<16;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}if(2&e.wrap&&35615===y){D[e.check=0]=255&y,D[1]=y>>>8&255,e.check=i(e.check,D,2,0),_=y=0,e.mode=2;break}if(e.flags=0,e.head&&(e.head.done=!1),!(1&e.wrap)||(((255&y)<<8)+(y>>8))%31){t.msg="incorrect header check",e.mode=30;break}if(8!=(15&y)){t.msg="unknown compression method",e.mode=30;break}if(_-=4,T=8+(15&(y>>>=4)),0===e.wbits)e.wbits=T;else if(T>e.wbits){t.msg="invalid window size",e.mode=30;break}e.dmax=1<<T,t.adler=e.check=1,e.mode=512&y?10:12,_=y=0;break;case 2:for(;_<16;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}if(e.flags=y,8!=(255&e.flags)){t.msg="unknown compression method",e.mode=30;break}if(57344&e.flags){t.msg="unknown header flags set",e.mode=30;break}e.head&&(e.head.text=y>>8&1),512&e.flags&&(D[0]=255&y,D[1]=y>>>8&255,e.check=i(e.check,D,2,0)),_=y=0,e.mode=3;case 3:for(;_<32;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}e.head&&(e.head.time=y),512&e.flags&&(D[0]=255&y,D[1]=y>>>8&255,D[2]=y>>>16&255,D[3]=y>>>24&255,e.check=i(e.check,D,4,0)),_=y=0,e.mode=4;case 4:for(;_<16;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}e.head&&(e.head.xflags=255&y,e.head.os=y>>8),512&e.flags&&(D[0]=255&y,D[1]=y>>>8&255,e.check=i(e.check,D,2,0)),_=y=0,e.mode=5;case 5:if(1024&e.flags){for(;_<16;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}e.length=y,e.head&&(e.head.extra_len=y),512&e.flags&&(D[0]=255&y,D[1]=y>>>8&255,e.check=i(e.check,D,2,0)),_=y=0}else e.head&&(e.head.extra=null);e.mode=6;case 6:if(1024&e.flags&&(d<(w=e.length)&&(w=d),w&&(e.head&&(T=e.head.extra_len-e.length,e.head.extra||(e.head.extra=new Array(e.head.extra_len)),r.arraySet(e.head.extra,h,f,w,T)),512&e.flags&&(e.check=i(e.check,h,w,f)),d-=w,f+=w,e.length-=w),e.length))break t;e.length=0,e.mode=7;case 7:if(2048&e.flags){if(0===d)break t;for(w=0;T=h[f+w++],e.head&&T&&e.length<65536&&(e.head.name+=String.fromCharCode(T)),T&&w<d;);if(512&e.flags&&(e.check=i(e.check,h,w,f)),d-=w,f+=w,T)break t}else e.head&&(e.head.name=null);e.length=0,e.mode=8;case 8:if(4096&e.flags){if(0===d)break t;for(w=0;T=h[f+w++],e.head&&T&&e.length<65536&&(e.head.comment+=String.fromCharCode(T)),T&&w<d;);if(512&e.flags&&(e.check=i(e.check,h,w,f)),d-=w,f+=w,T)break t}else e.head&&(e.head.comment=null);e.mode=9;case 9:if(512&e.flags){for(;_<16;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}if(y!==(65535&e.check)){t.msg="header crc mismatch",e.mode=30;break}_=y=0}e.head&&(e.head.hcrc=e.flags>>9&1,e.head.done=!0),t.adler=e.check=0,e.mode=12;break;case 10:for(;_<32;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}t.adler=e.check=a(y),_=y=0,e.mode=11;case 11:if(0===e.havedict)return t.next_out=p,t.avail_out=g,t.next_in=f,t.avail_in=d,e.hold=y,e.bits=_,2;t.adler=e.check=1,e.mode=12;case 12:if(5===n||6===n)break t;case 13:if(e.last){y>>>=7&_,_-=7&_,e.mode=27;break}for(;_<3;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}switch(e.last=1&y,_-=1,3&(y>>>=1)){case 0:e.mode=14;break;case 1:if(v(e),e.mode=20,6!==n)break;y>>>=2,_-=2;break t;case 2:e.mode=17;break;case 3:t.msg="invalid block type",e.mode=30}y>>>=2,_-=2;break;case 14:for(y>>>=7&_,_-=7&_;_<32;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}if((65535&y)!=(y>>>16^65535)){t.msg="invalid stored block lengths",e.mode=30;break}if(e.length=65535&y,_=y=0,e.mode=15,6===n)break t;case 15:e.mode=16;case 16:if(w=e.length){if(d<w&&(w=d),g<w&&(w=g),0===w)break t;r.arraySet(c,h,f,w,p),d-=w,f+=w,g-=w,p+=w,e.length-=w;break}e.mode=12;break;case 17:for(;_<14;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}if(e.nlen=257+(31&y),y>>>=5,_-=5,e.ndist=1+(31&y),y>>>=5,_-=5,e.ncode=4+(15&y),y>>>=4,_-=4,286<e.nlen||30<e.ndist){t.msg="too many length or distance symbols",e.mode=30;break}e.have=0,e.mode=18;case 18:for(;e.have<e.ncode;){for(;_<3;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}e.lens[k[e.have++]]=7&y,y>>>=3,_-=3}for(;e.have<19;)e.lens[k[e.have++]]=0;if(e.lencode=e.lendyn,e.lenbits=7,L={bits:e.lenbits},N=u(0,e.lens,0,19,e.lencode,0,e.work,L),e.lenbits=L.bits,N){t.msg="invalid code lengths set",e.mode=30;break}e.have=0,e.mode=19;case 19:for(;e.have<e.nlen+e.ndist;){for(;M=(j=e.lencode[y&(1<<e.lenbits)-1])>>>16&255,S=65535&j,!((O=j>>>24)<=_);){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}if(S<16)y>>>=O,_-=O,e.lens[e.have++]=S;else{if(16===S){for(A=O+2;_<A;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}if(y>>>=O,_-=O,0===e.have){t.msg="invalid bit length repeat",e.mode=30;break}T=e.lens[e.have-1],w=3+(3&y),y>>>=2,_-=2}else if(17===S){for(A=O+3;_<A;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}_-=O,T=0,w=3+(7&(y>>>=O)),y>>>=3,_-=3}else{for(A=O+7;_<A;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}_-=O,T=0,w=11+(127&(y>>>=O)),y>>>=7,_-=7}if(e.have+w>e.nlen+e.ndist){t.msg="invalid bit length repeat",e.mode=30;break}for(;w--;)e.lens[e.have++]=T}}if(30===e.mode)break;if(0===e.lens[256]){t.msg="invalid code -- missing end-of-block",e.mode=30;break}if(e.lenbits=9,L={bits:e.lenbits},N=u(1,e.lens,0,e.nlen,e.lencode,0,e.work,L),e.lenbits=L.bits,N){t.msg="invalid literal/lengths set",e.mode=30;break}if(e.distbits=6,e.distcode=e.distdyn,L={bits:e.distbits},N=u(2,e.lens,e.nlen,e.ndist,e.distcode,0,e.work,L),e.distbits=L.bits,N){t.msg="invalid distances set",e.mode=30;break}if(e.mode=20,6===n)break t;case 20:e.mode=21;case 21:if(6<=d&&258<=g){t.next_out=p,t.avail_out=g,t.next_in=f,t.avail_in=d,e.hold=y,e.bits=_,o(t,x),p=t.next_out,c=t.output,g=t.avail_out,f=t.next_in,h=t.input,d=t.avail_in,y=e.hold,_=e.bits,12===e.mode&&(e.back=-1);break}for(e.back=0;M=(j=e.lencode[y&(1<<e.lenbits)-1])>>>16&255,S=65535&j,!((O=j>>>24)<=_);){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}if(M&&0==(240&M)){for(I=O,P=M,R=S;M=(j=e.lencode[R+((y&(1<<I+P)-1)>>I)])>>>16&255,S=65535&j,!(I+(O=j>>>24)<=_);){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}y>>>=I,_-=I,e.back+=I}if(y>>>=O,_-=O,e.back+=O,e.length=S,0===M){e.mode=26;break}if(32&M){e.back=-1,e.mode=12;break}if(64&M){t.msg="invalid literal/length code",e.mode=30;break}e.extra=15&M,e.mode=22;case 22:if(e.extra){for(A=e.extra;_<A;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}e.length+=y&(1<<e.extra)-1,y>>>=e.extra,_-=e.extra,e.back+=e.extra}e.was=e.length,e.mode=23;case 23:for(;M=(j=e.distcode[y&(1<<e.distbits)-1])>>>16&255,S=65535&j,!((O=j>>>24)<=_);){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}if(0==(240&M)){for(I=O,P=M,R=S;M=(j=e.distcode[R+((y&(1<<I+P)-1)>>I)])>>>16&255,S=65535&j,!(I+(O=j>>>24)<=_);){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}y>>>=I,_-=I,e.back+=I}if(y>>>=O,_-=O,e.back+=O,64&M){t.msg="invalid distance code",e.mode=30;break}e.offset=S,e.extra=15&M,e.mode=24;case 24:if(e.extra){for(A=e.extra;_<A;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}e.offset+=y&(1<<e.extra)-1,y>>>=e.extra,_-=e.extra,e.back+=e.extra}if(e.offset>e.dmax){t.msg="invalid distance too far back",e.mode=30;break}e.mode=25;case 25:if(0===g)break t;if(w=x-g,e.offset>w){if((w=e.offset-w)>e.whave&&e.sane){t.msg="invalid distance too far back",e.mode=30;break}E=w>e.wnext?(w-=e.wnext,e.wsize-w):e.wnext-w,w>e.length&&(w=e.length),C=e.window}else C=c,E=p-e.offset,w=e.length;for(g<w&&(w=g),g-=w,e.length-=w;c[p++]=C[E++],--w;);0===e.length&&(e.mode=21);break;case 26:if(0===g)break t;c[p++]=e.length,g--,e.mode=21;break;case 27:if(e.wrap){for(;_<32;){if(0===d)break t;d--,y|=h[f++]<<_,_+=8}if(x-=g,t.total_out+=x,e.total+=x,x&&(t.adler=e.check=e.flags?i(e.check,c,x,p-x):l(e.check,c,x,p-x)),x=g,(e.flags?y:a(y))!==e.check){t.msg="incorrect data check",e.mode=30;break}_=y=0}e.mode=28;case 28:if(e.wrap&&e.flags){for(;_<32;){if(0===d)break t;d--,y+=h[f++]<<_,_+=8}if(y!==(4294967295&e.total)){t.msg="incorrect length check",e.mode=30;break}_=y=0}e.mode=29;case 29:N=1;break t;case 30:N=-3;break t;case 31:return-4;case 32:default:return s}return t.next_out=p,t.avail_out=g,t.next_in=f,t.avail_in=d,e.hold=y,e.bits=_,(e.wsize||x!==t.avail_out&&e.mode<30&&(e.mode<27||4!==n))&&m(t,t.output,t.next_out,x-t.avail_out)?(e.mode=31,-4):(b-=t.avail_in,x-=t.avail_out,t.total_in+=b,t.total_out+=x,e.total+=x,e.wrap&&x&&(t.adler=e.check=e.flags?i(e.check,c,x,t.next_out-x):l(e.check,c,x,t.next_out-x)),t.data_type=e.bits+(e.last?64:0)+(12===e.mode?128:0)+(20===e.mode||15===e.mode?256:0),(0==b&&0===x||4===n)&&0===N&&(N=-5),N)},e.inflateEnd=function(t){if(!t||!t.state)return s;var n=t.state;return n.window&&(n.window=null),t.state=null,0},e.inflateGetHeader=function(t,n){var e;return t&&t.state?0==(2&(e=t.state).wrap)?s:((e.head=n).done=!1,0):s},e.inflateSetDictionary=function(t,n){var e,r=n.length;return t&&t.state?0!==(e=t.state).wrap&&11!==e.mode?s:11===e.mode&&l(1,n,r,0)!==e.check?-3:m(t,n,r,r)?(e.mode=31,-4):(e.havedict=1,0):s},e.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(t,n,e){"use strict";var r=t("../utils/common"),l=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],i=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],o=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],u=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];n.exports=function(t,n,e,s,a,h,c,f){var p,d,g,y,_,v,m,b,x,w=f.bits,E=0,C=0,O=0,M=0,S=0,I=0,P=0,R=0,T=0,N=0,L=null,A=0,j=new r.Buf16(16),D=new r.Buf16(16),k=null,F=0;for(E=0;E<=15;E++)j[E]=0;for(C=0;C<s;C++)j[n[e+C]]++;for(S=w,M=15;1<=M&&0===j[M];M--);if(M<S&&(S=M),0===M)return a[h++]=20971520,a[h++]=20971520,f.bits=1,0;for(O=1;O<M&&0===j[O];O++);for(S<O&&(S=O),E=R=1;E<=15;E++)if(R<<=1,(R-=j[E])<0)return-1;if(0<R&&(0===t||1!==M))return-1;for(D[1]=0,E=1;E<15;E++)D[E+1]=D[E]+j[E];for(C=0;C<s;C++)0!==n[e+C]&&(c[D[n[e+C]]++]=C);if(v=0===t?(L=k=c,19):1===t?(L=l,A-=257,k=i,F-=257,256):(L=o,k=u,-1),E=O,_=h,P=C=N=0,g=-1,y=(T=1<<(I=S))-1,1===t&&852<T||2===t&&592<T)return 1;for(;;){for(m=E-P,x=c[C]<v?(b=0,c[C]):c[C]>v?(b=k[F+c[C]],L[A+c[C]]):(b=96,0),p=1<<E-P,O=d=1<<I;a[_+(N>>P)+(d-=p)]=m<<24|b<<16|x|0,0!==d;);for(p=1<<E-1;N&p;)p>>=1;if(0!==p?(N&=p-1,N+=p):N=0,C++,0==--j[E]){if(E===M)break;E=n[e+c[C]]}if(S<E&&(N&y)!==g){for(0===P&&(P=S),_+=O,R=1<<(I=E-P);I+P<M&&!((R-=j[I+P])<=0);)I++,R<<=1;if(T+=1<<I,1===t&&852<T||2===t&&592<T)return 1;a[g=N&y]=S<<24|I<<16|_-h|0}}return 0!==N&&(a[_+N]=E-P<<24|64<<16|0),f.bits=S,0}},{"../utils/common":41}],51:[function(t,n,e){"use strict";n.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(t,n,e){"use strict";var r=t("../utils/common");function l(t){for(var n=t.length;0<=--n;)t[n]=0}var i=256,o=286,u=30,s=15,a=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],h=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],c=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],f=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],p=new Array(576);l(p);var d=new Array(60);l(d);var g=new Array(512);l(g);var y=new Array(256);l(y);var _=new Array(29);l(_);var v,m,b,x=new Array(u);function w(t,n,e,r,l){this.static_tree=t,this.extra_bits=n,this.extra_base=e,this.elems=r,this.max_length=l,this.has_stree=t&&t.length}function E(t,n){this.dyn_tree=t,this.max_code=0,this.stat_desc=n}function C(t){return t<256?g[t]:g[256+(t>>>7)]}function O(t,n){t.pending_buf[t.pending++]=255&n,t.pending_buf[t.pending++]=n>>>8&255}function M(t,n,e){t.bi_valid>16-e?(t.bi_buf|=n<<t.bi_valid&65535,O(t,t.bi_buf),t.bi_buf=n>>16-t.bi_valid,t.bi_valid+=e-16):(t.bi_buf|=n<<t.bi_valid&65535,t.bi_valid+=e)}function S(t,n,e){M(t,e[2*n],e[2*n+1])}function I(t,n){for(var e=0;e|=1&t,t>>>=1,e<<=1,0<--n;);return e>>>1}function P(t,n,e){var r,l,i=new Array(16),o=0;for(r=1;r<=s;r++)i[r]=o=o+e[r-1]<<1;for(l=0;l<=n;l++){var u=t[2*l+1];0!==u&&(t[2*l]=I(i[u]++,u))}}function R(t){var n;for(n=0;n<o;n++)t.dyn_ltree[2*n]=0;for(n=0;n<u;n++)t.dyn_dtree[2*n]=0;for(n=0;n<19;n++)t.bl_tree[2*n]=0;t.dyn_ltree[512]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0}function T(t){8<t.bi_valid?O(t,t.bi_buf):0<t.bi_valid&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0}function N(t,n,e,r){var l=2*n,i=2*e;return t[l]<t[i]||t[l]===t[i]&&r[n]<=r[e]}function L(t,n,e){for(var r=t.heap[e],l=e<<1;l<=t.heap_len&&(l<t.heap_len&&N(n,t.heap[l+1],t.heap[l],t.depth)&&l++,!N(n,r,t.heap[l],t.depth));)t.heap[e]=t.heap[l],e=l,l<<=1;t.heap[e]=r}function A(t,n,e){var r,l,o,u,s=0;if(0!==t.last_lit)for(;r=t.pending_buf[t.d_buf+2*s]<<8|t.pending_buf[t.d_buf+2*s+1],l=t.pending_buf[t.l_buf+s],s++,0===r?S(t,l,n):(S(t,(o=y[l])+i+1,n),0!==(u=a[o])&&M(t,l-=_[o],u),S(t,o=C(--r),e),0!==(u=h[o])&&M(t,r-=x[o],u)),s<t.last_lit;);S(t,256,n)}function j(t,n){var e,r,l,i=n.dyn_tree,o=n.stat_desc.static_tree,u=n.stat_desc.has_stree,a=n.stat_desc.elems,h=-1;for(t.heap_len=0,t.heap_max=573,e=0;e<a;e++)0!==i[2*e]?(t.heap[++t.heap_len]=h=e,t.depth[e]=0):i[2*e+1]=0;for(;t.heap_len<2;)i[2*(l=t.heap[++t.heap_len]=h<2?++h:0)]=1,t.depth[l]=0,t.opt_len--,u&&(t.static_len-=o[2*l+1]);for(n.max_code=h,e=t.heap_len>>1;1<=e;e--)L(t,i,e);for(l=a;e=t.heap[1],t.heap[1]=t.heap[t.heap_len--],L(t,i,1),r=t.heap[1],t.heap[--t.heap_max]=e,t.heap[--t.heap_max]=r,i[2*l]=i[2*e]+i[2*r],t.depth[l]=(t.depth[e]>=t.depth[r]?t.depth[e]:t.depth[r])+1,i[2*e+1]=i[2*r+1]=l,t.heap[1]=l++,L(t,i,1),2<=t.heap_len;);t.heap[--t.heap_max]=t.heap[1],function(t,n){var e,r,l,i,o,u,a=n.dyn_tree,h=n.max_code,c=n.stat_desc.static_tree,f=n.stat_desc.has_stree,p=n.stat_desc.extra_bits,d=n.stat_desc.extra_base,g=n.stat_desc.max_length,y=0;for(i=0;i<=s;i++)t.bl_count[i]=0;for(a[2*t.heap[t.heap_max]+1]=0,e=t.heap_max+1;e<573;e++)g<(i=a[2*a[2*(r=t.heap[e])+1]+1]+1)&&(i=g,y++),a[2*r+1]=i,h<r||(t.bl_count[i]++,o=0,d<=r&&(o=p[r-d]),u=a[2*r],t.opt_len+=u*(i+o),f&&(t.static_len+=u*(c[2*r+1]+o)));if(0!==y){do{for(i=g-1;0===t.bl_count[i];)i--;t.bl_count[i]--,t.bl_count[i+1]+=2,t.bl_count[g]--,y-=2}while(0<y);for(i=g;0!==i;i--)for(r=t.bl_count[i];0!==r;)h<(l=t.heap[--e])||(a[2*l+1]!==i&&(t.opt_len+=(i-a[2*l+1])*a[2*l],a[2*l+1]=i),r--)}}(t,n),P(i,h,t.bl_count)}function D(t,n,e){var r,l,i=-1,o=n[1],u=0,s=7,a=4;for(0===o&&(s=138,a=3),n[2*(e+1)+1]=65535,r=0;r<=e;r++)l=o,o=n[2*(r+1)+1],++u<s&&l===o||(u<a?t.bl_tree[2*l]+=u:0!==l?(l!==i&&t.bl_tree[2*l]++,t.bl_tree[32]++):u<=10?t.bl_tree[34]++:t.bl_tree[36]++,i=l,a=(u=0)===o?(s=138,3):l===o?(s=6,3):(s=7,4))}function k(t,n,e){var r,l,i=-1,o=n[1],u=0,s=7,a=4;for(0===o&&(s=138,a=3),r=0;r<=e;r++)if(l=o,o=n[2*(r+1)+1],!(++u<s&&l===o)){if(u<a)for(;S(t,l,t.bl_tree),0!=--u;);else 0!==l?(l!==i&&(S(t,l,t.bl_tree),u--),S(t,16,t.bl_tree),M(t,u-3,2)):u<=10?(S(t,17,t.bl_tree),M(t,u-3,3)):(S(t,18,t.bl_tree),M(t,u-11,7));i=l,a=(u=0)===o?(s=138,3):l===o?(s=6,3):(s=7,4)}}l(x);var F=!1;function G(t,n,e,l){M(t,0+(l?1:0),3),function(t,n,e,l){T(t),O(t,e),O(t,~e),r.arraySet(t.pending_buf,t.window,n,e,t.pending),t.pending+=e}(t,n,e)}e._tr_init=function(t){F||(function(){var t,n,e,r,l,i=new Array(16);for(r=e=0;r<28;r++)for(_[r]=e,t=0;t<1<<a[r];t++)y[e++]=r;for(y[e-1]=r,r=l=0;r<16;r++)for(x[r]=l,t=0;t<1<<h[r];t++)g[l++]=r;for(l>>=7;r<u;r++)for(x[r]=l<<7,t=0;t<1<<h[r]-7;t++)g[256+l++]=r;for(n=0;n<=s;n++)i[n]=0;for(t=0;t<=143;)p[2*t+1]=8,t++,i[8]++;for(;t<=255;)p[2*t+1]=9,t++,i[9]++;for(;t<=279;)p[2*t+1]=7,t++,i[7]++;for(;t<=287;)p[2*t+1]=8,t++,i[8]++;for(P(p,287,i),t=0;t<u;t++)d[2*t+1]=5,d[2*t]=I(t,5);v=new w(p,a,257,o,s),m=new w(d,h,0,u,s),b=new w(new Array(0),c,0,19,7)}(),F=!0),t.l_desc=new E(t.dyn_ltree,v),t.d_desc=new E(t.dyn_dtree,m),t.bl_desc=new E(t.bl_tree,b),t.bi_buf=0,t.bi_valid=0,R(t)},e._tr_stored_block=G,e._tr_flush_block=function(t,n,e,r){var l,o,u=0;0<t.level?(2===t.strm.data_type&&(t.strm.data_type=function(t){var n,e=4093624447;for(n=0;n<=31;n++,e>>>=1)if(1&e&&0!==t.dyn_ltree[2*n])return 0;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return 1;for(n=32;n<i;n++)if(0!==t.dyn_ltree[2*n])return 1;return 0}(t)),j(t,t.l_desc),j(t,t.d_desc),u=function(t){var n;for(D(t,t.dyn_ltree,t.l_desc.max_code),D(t,t.dyn_dtree,t.d_desc.max_code),j(t,t.bl_desc),n=18;3<=n&&0===t.bl_tree[2*f[n]+1];n--);return t.opt_len+=3*(n+1)+5+5+4,n}(t),l=t.opt_len+3+7>>>3,(o=t.static_len+3+7>>>3)<=l&&(l=o)):l=o=e+5,e+4<=l&&-1!==n?G(t,n,e,r):4===t.strategy||o===l?(M(t,2+(r?1:0),3),A(t,p,d)):(M(t,4+(r?1:0),3),function(t,n,e,r){var l;for(M(t,n-257,5),M(t,e-1,5),M(t,r-4,4),l=0;l<r;l++)M(t,t.bl_tree[2*f[l]+1],3);k(t,t.dyn_ltree,n-1),k(t,t.dyn_dtree,e-1)}(t,t.l_desc.max_code+1,t.d_desc.max_code+1,u+1),A(t,t.dyn_ltree,t.dyn_dtree)),R(t),r&&T(t)},e._tr_tally=function(t,n,e){return t.pending_buf[t.d_buf+2*t.last_lit]=n>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&n,t.pending_buf[t.l_buf+t.last_lit]=255&e,t.last_lit++,0===n?t.dyn_ltree[2*e]++:(t.matches++,n--,t.dyn_ltree[2*(y[e]+i+1)]++,t.dyn_dtree[2*C(n)]++),t.last_lit===t.lit_bufsize-1},e._tr_align=function(t){M(t,2,3),S(t,256,p),function(t){16===t.bi_valid?(O(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):8<=t.bi_valid&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)}(t)}},{"../utils/common":41}],53:[function(t,n,e){"use strict";n.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(t,n,e){(function(t){!function(t,n){"use strict";if(!t.setImmediate){var e,r,l,i,o=1,u={},s=!1,a=t.document,h=Object.getPrototypeOf&&Object.getPrototypeOf(t);h=h&&h.setTimeout?h:t,e="[object process]"==={}.toString.call(t.process)?function(t){process.nextTick((function(){f(t)}))}:function(){if(t.postMessage&&!t.importScripts){var n=!0,e=t.onmessage;return t.onmessage=function(){n=!1},t.postMessage("","*"),t.onmessage=e,n}}()?(i="setImmediate$"+Math.random()+"$",t.addEventListener?t.addEventListener("message",p,!1):t.attachEvent("onmessage",p),function(n){t.postMessage(i+n,"*")}):t.MessageChannel?((l=new MessageChannel).port1.onmessage=function(t){f(t.data)},function(t){l.port2.postMessage(t)}):a&&"onreadystatechange"in a.createElement("script")?(r=a.documentElement,function(t){var n=a.createElement("script");n.onreadystatechange=function(){f(t),n.onreadystatechange=null,r.removeChild(n),n=null},r.appendChild(n)}):function(t){setTimeout(f,0,t)},h.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var n=new Array(arguments.length-1),r=0;r<n.length;r++)n[r]=arguments[r+1];var l={callback:t,args:n};return u[o]=l,e(o),o++},h.clearImmediate=c}function c(t){delete u[t]}function f(t){if(s)setTimeout(f,0,t);else{var n=u[t];if(n){s=!0;try{!function(t){var n=t.callback,e=t.args;switch(e.length){case 0:n();break;case 1:n(e[0]);break;case 2:n(e[0],e[1]);break;case 3:n(e[0],e[1],e[2]);break;default:n.apply(void 0,e)}}(n)}finally{c(t),s=!1}}}}function p(n){n.source===t&&"string"==typeof n.data&&0===n.data.indexOf(i)&&f(+n.data.slice(i.length))}}("undefined"==typeof self?void 0===t?this:t:self)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}]},{},[10])(10)}).call(this,e(414).Buffer)},function(t,n,e){"use strict";
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */var r=e(415),l=e(416),i=e(417);function o(){return s.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function u(t,n){if(o()<n)throw new RangeError("Invalid typed array length");return s.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(n)).__proto__=s.prototype:(null===t&&(t=new s(n)),t.length=n),t}function s(t,n,e){if(!(s.TYPED_ARRAY_SUPPORT||this instanceof s))return new s(t,n,e);if("number"==typeof t){if("string"==typeof n)throw new Error("If encoding is specified then the first argument must be a string");return c(this,t)}return a(this,t,n,e)}function a(t,n,e,r){if("number"==typeof n)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&n instanceof ArrayBuffer?function(t,n,e,r){if(n.byteLength,e<0||n.byteLength<e)throw new RangeError("'offset' is out of bounds");if(n.byteLength<e+(r||0))throw new RangeError("'length' is out of bounds");n=void 0===e&&void 0===r?new Uint8Array(n):void 0===r?new Uint8Array(n,e):new Uint8Array(n,e,r);s.TYPED_ARRAY_SUPPORT?(t=n).__proto__=s.prototype:t=f(t,n);return t}(t,n,e,r):"string"==typeof n?function(t,n,e){"string"==typeof e&&""!==e||(e="utf8");if(!s.isEncoding(e))throw new TypeError('"encoding" must be a valid string encoding');var r=0|d(n,e),l=(t=u(t,r)).write(n,e);l!==r&&(t=t.slice(0,l));return t}(t,n,e):function(t,n){if(s.isBuffer(n)){var e=0|p(n.length);return 0===(t=u(t,e)).length||n.copy(t,0,0,e),t}if(n){if("undefined"!=typeof ArrayBuffer&&n.buffer instanceof ArrayBuffer||"length"in n)return"number"!=typeof n.length||(r=n.length)!=r?u(t,0):f(t,n);if("Buffer"===n.type&&i(n.data))return f(t,n.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,n)}function h(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function c(t,n){if(h(n),t=u(t,n<0?0:0|p(n)),!s.TYPED_ARRAY_SUPPORT)for(var e=0;e<n;++e)t[e]=0;return t}function f(t,n){var e=n.length<0?0:0|p(n.length);t=u(t,e);for(var r=0;r<e;r+=1)t[r]=255&n[r];return t}function p(t){if(t>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|t}function d(t,n){if(s.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var e=t.length;if(0===e)return 0;for(var r=!1;;)switch(n){case"ascii":case"latin1":case"binary":return e;case"utf8":case"utf-8":case void 0:return z(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*e;case"hex":return e>>>1;case"base64":return B(t).length;default:if(r)return z(t).length;n=(""+n).toLowerCase(),r=!0}}function g(t,n,e){var r=!1;if((void 0===n||n<0)&&(n=0),n>this.length)return"";if((void 0===e||e>this.length)&&(e=this.length),e<=0)return"";if((e>>>=0)<=(n>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return P(this,n,e);case"utf8":case"utf-8":return M(this,n,e);case"ascii":return S(this,n,e);case"latin1":case"binary":return I(this,n,e);case"base64":return O(this,n,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,n,e);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function y(t,n,e){var r=t[n];t[n]=t[e],t[e]=r}function _(t,n,e,r,l){if(0===t.length)return-1;if("string"==typeof e?(r=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),e=+e,isNaN(e)&&(e=l?0:t.length-1),e<0&&(e=t.length+e),e>=t.length){if(l)return-1;e=t.length-1}else if(e<0){if(!l)return-1;e=0}if("string"==typeof n&&(n=s.from(n,r)),s.isBuffer(n))return 0===n.length?-1:v(t,n,e,r,l);if("number"==typeof n)return n&=255,s.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?l?Uint8Array.prototype.indexOf.call(t,n,e):Uint8Array.prototype.lastIndexOf.call(t,n,e):v(t,[n],e,r,l);throw new TypeError("val must be string, number or Buffer")}function v(t,n,e,r,l){var i,o=1,u=t.length,s=n.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||n.length<2)return-1;o=2,u/=2,s/=2,e/=2}function a(t,n){return 1===o?t[n]:t.readUInt16BE(n*o)}if(l){var h=-1;for(i=e;i<u;i++)if(a(t,i)===a(n,-1===h?0:i-h)){if(-1===h&&(h=i),i-h+1===s)return h*o}else-1!==h&&(i-=i-h),h=-1}else for(e+s>u&&(e=u-s),i=e;i>=0;i--){for(var c=!0,f=0;f<s;f++)if(a(t,i+f)!==a(n,f)){c=!1;break}if(c)return i}return-1}function m(t,n,e,r){e=Number(e)||0;var l=t.length-e;r?(r=Number(r))>l&&(r=l):r=l;var i=n.length;if(i%2!=0)throw new TypeError("Invalid hex string");r>i/2&&(r=i/2);for(var o=0;o<r;++o){var u=parseInt(n.substr(2*o,2),16);if(isNaN(u))return o;t[e+o]=u}return o}function b(t,n,e,r){return U(z(n,t.length-e),t,e,r)}function x(t,n,e,r){return U(function(t){for(var n=[],e=0;e<t.length;++e)n.push(255&t.charCodeAt(e));return n}(n),t,e,r)}function w(t,n,e,r){return x(t,n,e,r)}function E(t,n,e,r){return U(B(n),t,e,r)}function C(t,n,e,r){return U(function(t,n){for(var e,r,l,i=[],o=0;o<t.length&&!((n-=2)<0);++o)e=t.charCodeAt(o),r=e>>8,l=e%256,i.push(l),i.push(r);return i}(n,t.length-e),t,e,r)}function O(t,n,e){return 0===n&&e===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(n,e))}function M(t,n,e){e=Math.min(t.length,e);for(var r=[],l=n;l<e;){var i,o,u,s,a=t[l],h=null,c=a>239?4:a>223?3:a>191?2:1;if(l+c<=e)switch(c){case 1:a<128&&(h=a);break;case 2:128==(192&(i=t[l+1]))&&(s=(31&a)<<6|63&i)>127&&(h=s);break;case 3:i=t[l+1],o=t[l+2],128==(192&i)&&128==(192&o)&&(s=(15&a)<<12|(63&i)<<6|63&o)>2047&&(s<55296||s>57343)&&(h=s);break;case 4:i=t[l+1],o=t[l+2],u=t[l+3],128==(192&i)&&128==(192&o)&&128==(192&u)&&(s=(15&a)<<18|(63&i)<<12|(63&o)<<6|63&u)>65535&&s<1114112&&(h=s)}null===h?(h=65533,c=1):h>65535&&(h-=65536,r.push(h>>>10&1023|55296),h=56320|1023&h),r.push(h),l+=c}return function(t){var n=t.length;if(n<=4096)return String.fromCharCode.apply(String,t);var e="",r=0;for(;r<n;)e+=String.fromCharCode.apply(String,t.slice(r,r+=4096));return e}(r)}n.Buffer=s,n.SlowBuffer=function(t){+t!=t&&(t=0);return s.alloc(+t)},n.INSPECT_MAX_BYTES=50,s.TYPED_ARRAY_SUPPORT=void 0!==global.TYPED_ARRAY_SUPPORT?global.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),n.kMaxLength=o(),s.poolSize=8192,s._augment=function(t){return t.__proto__=s.prototype,t},s.from=function(t,n,e){return a(null,t,n,e)},s.TYPED_ARRAY_SUPPORT&&(s.prototype.__proto__=Uint8Array.prototype,s.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&s[Symbol.species]===s&&Object.defineProperty(s,Symbol.species,{value:null,configurable:!0})),s.alloc=function(t,n,e){return function(t,n,e,r){return h(n),n<=0?u(t,n):void 0!==e?"string"==typeof r?u(t,n).fill(e,r):u(t,n).fill(e):u(t,n)}(null,t,n,e)},s.allocUnsafe=function(t){return c(null,t)},s.allocUnsafeSlow=function(t){return c(null,t)},s.isBuffer=function(t){return!(null==t||!t._isBuffer)},s.compare=function(t,n){if(!s.isBuffer(t)||!s.isBuffer(n))throw new TypeError("Arguments must be Buffers");if(t===n)return 0;for(var e=t.length,r=n.length,l=0,i=Math.min(e,r);l<i;++l)if(t[l]!==n[l]){e=t[l],r=n[l];break}return e<r?-1:r<e?1:0},s.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},s.concat=function(t,n){if(!i(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return s.alloc(0);var e;if(void 0===n)for(n=0,e=0;e<t.length;++e)n+=t[e].length;var r=s.allocUnsafe(n),l=0;for(e=0;e<t.length;++e){var o=t[e];if(!s.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(r,l),l+=o.length}return r},s.byteLength=d,s.prototype._isBuffer=!0,s.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var n=0;n<t;n+=2)y(this,n,n+1);return this},s.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var n=0;n<t;n+=4)y(this,n,n+3),y(this,n+1,n+2);return this},s.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var n=0;n<t;n+=8)y(this,n,n+7),y(this,n+1,n+6),y(this,n+2,n+5),y(this,n+3,n+4);return this},s.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?M(this,0,t):g.apply(this,arguments)},s.prototype.equals=function(t){if(!s.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===s.compare(this,t)},s.prototype.inspect=function(){var t="",e=n.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,e).match(/.{2}/g).join(" "),this.length>e&&(t+=" ... ")),"<Buffer "+t+">"},s.prototype.compare=function(t,n,e,r,l){if(!s.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===n&&(n=0),void 0===e&&(e=t?t.length:0),void 0===r&&(r=0),void 0===l&&(l=this.length),n<0||e>t.length||r<0||l>this.length)throw new RangeError("out of range index");if(r>=l&&n>=e)return 0;if(r>=l)return-1;if(n>=e)return 1;if(this===t)return 0;for(var i=(l>>>=0)-(r>>>=0),o=(e>>>=0)-(n>>>=0),u=Math.min(i,o),a=this.slice(r,l),h=t.slice(n,e),c=0;c<u;++c)if(a[c]!==h[c]){i=a[c],o=h[c];break}return i<o?-1:o<i?1:0},s.prototype.includes=function(t,n,e){return-1!==this.indexOf(t,n,e)},s.prototype.indexOf=function(t,n,e){return _(this,t,n,e,!0)},s.prototype.lastIndexOf=function(t,n,e){return _(this,t,n,e,!1)},s.prototype.write=function(t,n,e,r){if(void 0===n)r="utf8",e=this.length,n=0;else if(void 0===e&&"string"==typeof n)r=n,e=this.length,n=0;else{if(!isFinite(n))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");n|=0,isFinite(e)?(e|=0,void 0===r&&(r="utf8")):(r=e,e=void 0)}var l=this.length-n;if((void 0===e||e>l)&&(e=l),t.length>0&&(e<0||n<0)||n>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var i=!1;;)switch(r){case"hex":return m(this,t,n,e);case"utf8":case"utf-8":return b(this,t,n,e);case"ascii":return x(this,t,n,e);case"latin1":case"binary":return w(this,t,n,e);case"base64":return E(this,t,n,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,t,n,e);default:if(i)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),i=!0}},s.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function S(t,n,e){var r="";e=Math.min(t.length,e);for(var l=n;l<e;++l)r+=String.fromCharCode(127&t[l]);return r}function I(t,n,e){var r="";e=Math.min(t.length,e);for(var l=n;l<e;++l)r+=String.fromCharCode(t[l]);return r}function P(t,n,e){var r=t.length;(!n||n<0)&&(n=0),(!e||e<0||e>r)&&(e=r);for(var l="",i=n;i<e;++i)l+=G(t[i]);return l}function R(t,n,e){for(var r=t.slice(n,e),l="",i=0;i<r.length;i+=2)l+=String.fromCharCode(r[i]+256*r[i+1]);return l}function T(t,n,e){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+n>e)throw new RangeError("Trying to access beyond buffer length")}function N(t,n,e,r,l,i){if(!s.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(n>l||n<i)throw new RangeError('"value" argument is out of bounds');if(e+r>t.length)throw new RangeError("Index out of range")}function L(t,n,e,r){n<0&&(n=65535+n+1);for(var l=0,i=Math.min(t.length-e,2);l<i;++l)t[e+l]=(n&255<<8*(r?l:1-l))>>>8*(r?l:1-l)}function A(t,n,e,r){n<0&&(n=4294967295+n+1);for(var l=0,i=Math.min(t.length-e,4);l<i;++l)t[e+l]=n>>>8*(r?l:3-l)&255}function j(t,n,e,r,l,i){if(e+r>t.length)throw new RangeError("Index out of range");if(e<0)throw new RangeError("Index out of range")}function D(t,n,e,r,i){return i||j(t,0,e,4),l.write(t,n,e,r,23,4),e+4}function k(t,n,e,r,i){return i||j(t,0,e,8),l.write(t,n,e,r,52,8),e+8}s.prototype.slice=function(t,n){var e,r=this.length;if((t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(n=void 0===n?r:~~n)<0?(n+=r)<0&&(n=0):n>r&&(n=r),n<t&&(n=t),s.TYPED_ARRAY_SUPPORT)(e=this.subarray(t,n)).__proto__=s.prototype;else{var l=n-t;e=new s(l,void 0);for(var i=0;i<l;++i)e[i]=this[i+t]}return e},s.prototype.readUIntLE=function(t,n,e){t|=0,n|=0,e||T(t,n,this.length);for(var r=this[t],l=1,i=0;++i<n&&(l*=256);)r+=this[t+i]*l;return r},s.prototype.readUIntBE=function(t,n,e){t|=0,n|=0,e||T(t,n,this.length);for(var r=this[t+--n],l=1;n>0&&(l*=256);)r+=this[t+--n]*l;return r},s.prototype.readUInt8=function(t,n){return n||T(t,1,this.length),this[t]},s.prototype.readUInt16LE=function(t,n){return n||T(t,2,this.length),this[t]|this[t+1]<<8},s.prototype.readUInt16BE=function(t,n){return n||T(t,2,this.length),this[t]<<8|this[t+1]},s.prototype.readUInt32LE=function(t,n){return n||T(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},s.prototype.readUInt32BE=function(t,n){return n||T(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},s.prototype.readIntLE=function(t,n,e){t|=0,n|=0,e||T(t,n,this.length);for(var r=this[t],l=1,i=0;++i<n&&(l*=256);)r+=this[t+i]*l;return r>=(l*=128)&&(r-=Math.pow(2,8*n)),r},s.prototype.readIntBE=function(t,n,e){t|=0,n|=0,e||T(t,n,this.length);for(var r=n,l=1,i=this[t+--r];r>0&&(l*=256);)i+=this[t+--r]*l;return i>=(l*=128)&&(i-=Math.pow(2,8*n)),i},s.prototype.readInt8=function(t,n){return n||T(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},s.prototype.readInt16LE=function(t,n){n||T(t,2,this.length);var e=this[t]|this[t+1]<<8;return 32768&e?4294901760|e:e},s.prototype.readInt16BE=function(t,n){n||T(t,2,this.length);var e=this[t+1]|this[t]<<8;return 32768&e?4294901760|e:e},s.prototype.readInt32LE=function(t,n){return n||T(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},s.prototype.readInt32BE=function(t,n){return n||T(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},s.prototype.readFloatLE=function(t,n){return n||T(t,4,this.length),l.read(this,t,!0,23,4)},s.prototype.readFloatBE=function(t,n){return n||T(t,4,this.length),l.read(this,t,!1,23,4)},s.prototype.readDoubleLE=function(t,n){return n||T(t,8,this.length),l.read(this,t,!0,52,8)},s.prototype.readDoubleBE=function(t,n){return n||T(t,8,this.length),l.read(this,t,!1,52,8)},s.prototype.writeUIntLE=function(t,n,e,r){(t=+t,n|=0,e|=0,r)||N(this,t,n,e,Math.pow(2,8*e)-1,0);var l=1,i=0;for(this[n]=255&t;++i<e&&(l*=256);)this[n+i]=t/l&255;return n+e},s.prototype.writeUIntBE=function(t,n,e,r){(t=+t,n|=0,e|=0,r)||N(this,t,n,e,Math.pow(2,8*e)-1,0);var l=e-1,i=1;for(this[n+l]=255&t;--l>=0&&(i*=256);)this[n+l]=t/i&255;return n+e},s.prototype.writeUInt8=function(t,n,e){return t=+t,n|=0,e||N(this,t,n,1,255,0),s.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[n]=255&t,n+1},s.prototype.writeUInt16LE=function(t,n,e){return t=+t,n|=0,e||N(this,t,n,2,65535,0),s.TYPED_ARRAY_SUPPORT?(this[n]=255&t,this[n+1]=t>>>8):L(this,t,n,!0),n+2},s.prototype.writeUInt16BE=function(t,n,e){return t=+t,n|=0,e||N(this,t,n,2,65535,0),s.TYPED_ARRAY_SUPPORT?(this[n]=t>>>8,this[n+1]=255&t):L(this,t,n,!1),n+2},s.prototype.writeUInt32LE=function(t,n,e){return t=+t,n|=0,e||N(this,t,n,4,4294967295,0),s.TYPED_ARRAY_SUPPORT?(this[n+3]=t>>>24,this[n+2]=t>>>16,this[n+1]=t>>>8,this[n]=255&t):A(this,t,n,!0),n+4},s.prototype.writeUInt32BE=function(t,n,e){return t=+t,n|=0,e||N(this,t,n,4,4294967295,0),s.TYPED_ARRAY_SUPPORT?(this[n]=t>>>24,this[n+1]=t>>>16,this[n+2]=t>>>8,this[n+3]=255&t):A(this,t,n,!1),n+4},s.prototype.writeIntLE=function(t,n,e,r){if(t=+t,n|=0,!r){var l=Math.pow(2,8*e-1);N(this,t,n,e,l-1,-l)}var i=0,o=1,u=0;for(this[n]=255&t;++i<e&&(o*=256);)t<0&&0===u&&0!==this[n+i-1]&&(u=1),this[n+i]=(t/o>>0)-u&255;return n+e},s.prototype.writeIntBE=function(t,n,e,r){if(t=+t,n|=0,!r){var l=Math.pow(2,8*e-1);N(this,t,n,e,l-1,-l)}var i=e-1,o=1,u=0;for(this[n+i]=255&t;--i>=0&&(o*=256);)t<0&&0===u&&0!==this[n+i+1]&&(u=1),this[n+i]=(t/o>>0)-u&255;return n+e},s.prototype.writeInt8=function(t,n,e){return t=+t,n|=0,e||N(this,t,n,1,127,-128),s.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[n]=255&t,n+1},s.prototype.writeInt16LE=function(t,n,e){return t=+t,n|=0,e||N(this,t,n,2,32767,-32768),s.TYPED_ARRAY_SUPPORT?(this[n]=255&t,this[n+1]=t>>>8):L(this,t,n,!0),n+2},s.prototype.writeInt16BE=function(t,n,e){return t=+t,n|=0,e||N(this,t,n,2,32767,-32768),s.TYPED_ARRAY_SUPPORT?(this[n]=t>>>8,this[n+1]=255&t):L(this,t,n,!1),n+2},s.prototype.writeInt32LE=function(t,n,e){return t=+t,n|=0,e||N(this,t,n,4,2147483647,-2147483648),s.TYPED_ARRAY_SUPPORT?(this[n]=255&t,this[n+1]=t>>>8,this[n+2]=t>>>16,this[n+3]=t>>>24):A(this,t,n,!0),n+4},s.prototype.writeInt32BE=function(t,n,e){return t=+t,n|=0,e||N(this,t,n,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),s.TYPED_ARRAY_SUPPORT?(this[n]=t>>>24,this[n+1]=t>>>16,this[n+2]=t>>>8,this[n+3]=255&t):A(this,t,n,!1),n+4},s.prototype.writeFloatLE=function(t,n,e){return D(this,t,n,!0,e)},s.prototype.writeFloatBE=function(t,n,e){return D(this,t,n,!1,e)},s.prototype.writeDoubleLE=function(t,n,e){return k(this,t,n,!0,e)},s.prototype.writeDoubleBE=function(t,n,e){return k(this,t,n,!1,e)},s.prototype.copy=function(t,n,e,r){if(e||(e=0),r||0===r||(r=this.length),n>=t.length&&(n=t.length),n||(n=0),r>0&&r<e&&(r=e),r===e)return 0;if(0===t.length||0===this.length)return 0;if(n<0)throw new RangeError("targetStart out of bounds");if(e<0||e>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-n<r-e&&(r=t.length-n+e);var l,i=r-e;if(this===t&&e<n&&n<r)for(l=i-1;l>=0;--l)t[l+n]=this[l+e];else if(i<1e3||!s.TYPED_ARRAY_SUPPORT)for(l=0;l<i;++l)t[l+n]=this[l+e];else Uint8Array.prototype.set.call(t,this.subarray(e,e+i),n);return i},s.prototype.fill=function(t,n,e,r){if("string"==typeof t){if("string"==typeof n?(r=n,n=0,e=this.length):"string"==typeof e&&(r=e,e=this.length),1===t.length){var l=t.charCodeAt(0);l<256&&(t=l)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!s.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof t&&(t&=255);if(n<0||this.length<n||this.length<e)throw new RangeError("Out of range index");if(e<=n)return this;var i;if(n>>>=0,e=void 0===e?this.length:e>>>0,t||(t=0),"number"==typeof t)for(i=n;i<e;++i)this[i]=t;else{var o=s.isBuffer(t)?t:z(new s(t,r).toString()),u=o.length;for(i=0;i<e-n;++i)this[i+n]=o[i%u]}return this};var F=/[^+\/0-9A-Za-z-_]/g;function G(t){return t<16?"0"+t.toString(16):t.toString(16)}function z(t,n){var e;n=n||1/0;for(var r=t.length,l=null,i=[],o=0;o<r;++o){if((e=t.charCodeAt(o))>55295&&e<57344){if(!l){if(e>56319){(n-=3)>-1&&i.push(239,191,189);continue}if(o+1===r){(n-=3)>-1&&i.push(239,191,189);continue}l=e;continue}if(e<56320){(n-=3)>-1&&i.push(239,191,189),l=e;continue}e=65536+(l-55296<<10|e-56320)}else l&&(n-=3)>-1&&i.push(239,191,189);if(l=null,e<128){if((n-=1)<0)break;i.push(e)}else if(e<2048){if((n-=2)<0)break;i.push(e>>6|192,63&e|128)}else if(e<65536){if((n-=3)<0)break;i.push(e>>12|224,e>>6&63|128,63&e|128)}else{if(!(e<1114112))throw new Error("Invalid code point");if((n-=4)<0)break;i.push(e>>18|240,e>>12&63|128,e>>6&63|128,63&e|128)}}return i}function B(t){return r.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(F,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function U(t,n,e,r){for(var l=0;l<r&&!(l+e>=n.length||l>=t.length);++l)n[l+e]=t[l];return l}},function(t,n,e){"use strict";n.byteLength=function(t){var n=a(t),e=n[0],r=n[1];return 3*(e+r)/4-r},n.toByteArray=function(t){var n,e,r=a(t),o=r[0],u=r[1],s=new i(function(t,n,e){return 3*(n+e)/4-e}(0,o,u)),h=0,c=u>0?o-4:o;for(e=0;e<c;e+=4)n=l[t.charCodeAt(e)]<<18|l[t.charCodeAt(e+1)]<<12|l[t.charCodeAt(e+2)]<<6|l[t.charCodeAt(e+3)],s[h++]=n>>16&255,s[h++]=n>>8&255,s[h++]=255&n;2===u&&(n=l[t.charCodeAt(e)]<<2|l[t.charCodeAt(e+1)]>>4,s[h++]=255&n);1===u&&(n=l[t.charCodeAt(e)]<<10|l[t.charCodeAt(e+1)]<<4|l[t.charCodeAt(e+2)]>>2,s[h++]=n>>8&255,s[h++]=255&n);return s},n.fromByteArray=function(t){for(var n,e=t.length,l=e%3,i=[],o=0,u=e-l;o<u;o+=16383)i.push(h(t,o,o+16383>u?u:o+16383));1===l?(n=t[e-1],i.push(r[n>>2]+r[n<<4&63]+"==")):2===l&&(n=(t[e-2]<<8)+t[e-1],i.push(r[n>>10]+r[n>>4&63]+r[n<<2&63]+"="));return i.join("")};for(var r=[],l=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",u=0,s=o.length;u<s;++u)r[u]=o[u],l[o.charCodeAt(u)]=u;function a(t){var n=t.length;if(n%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var e=t.indexOf("=");return-1===e&&(e=n),[e,e===n?0:4-e%4]}function h(t,n,e){for(var l,i,o=[],u=n;u<e;u+=3)l=(t[u]<<16&16711680)+(t[u+1]<<8&65280)+(255&t[u+2]),o.push(r[(i=l)>>18&63]+r[i>>12&63]+r[i>>6&63]+r[63&i]);return o.join("")}l["-".charCodeAt(0)]=62,l["_".charCodeAt(0)]=63},function(t,n){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
n.read=function(t,n,e,r,l){var i,o,u=8*l-r-1,s=(1<<u)-1,a=s>>1,h=-7,c=e?l-1:0,f=e?-1:1,p=t[n+c];for(c+=f,i=p&(1<<-h)-1,p>>=-h,h+=u;h>0;i=256*i+t[n+c],c+=f,h-=8);for(o=i&(1<<-h)-1,i>>=-h,h+=r;h>0;o=256*o+t[n+c],c+=f,h-=8);if(0===i)i=1-a;else{if(i===s)return o?NaN:1/0*(p?-1:1);o+=Math.pow(2,r),i-=a}return(p?-1:1)*o*Math.pow(2,i-r)},n.write=function(t,n,e,r,l,i){var o,u,s,a=8*i-l-1,h=(1<<a)-1,c=h>>1,f=23===l?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:i-1,d=r?1:-1,g=n<0||0===n&&1/n<0?1:0;for(n=Math.abs(n),isNaN(n)||n===1/0?(u=isNaN(n)?1:0,o=h):(o=Math.floor(Math.log(n)/Math.LN2),n*(s=Math.pow(2,-o))<1&&(o--,s*=2),(n+=o+c>=1?f/s:f*Math.pow(2,1-c))*s>=2&&(o++,s/=2),o+c>=h?(u=0,o=h):o+c>=1?(u=(n*s-1)*Math.pow(2,l),o+=c):(u=n*Math.pow(2,c-1)*Math.pow(2,l),o=0));l>=8;t[e+p]=255&u,p+=d,u/=256,l-=8);for(o=o<<l|u,a+=l;a>0;t[e+p]=255&o,p+=d,o/=256,a-=8);t[e+p-d]|=128*g}},function(t,n){var e={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==e.call(t)}},function(t,n,e){"use strict";var r,l=e(248),i=e(310),o=e(286),u=e(237),s=e(245),a=e(246),h=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),c="element",f="map",p="offset",d="position",g="positioning",y=function(t){function n(n){var e=t.call(this)||this;e.on,e.once,e.un,e.options=n,e.id=n.id,e.insertFirst=void 0===n.insertFirst||n.insertFirst,e.stopEvent=void 0===n.stopEvent||n.stopEvent,e.element=document.createElement("div"),e.element.className=void 0!==n.className?n.className:"ol-overlay-container "+o.d,e.element.style.position="absolute",e.element.style.pointerEvents="auto";var r=n.autoPan;return r&&"object"!=typeof r&&(r={animation:n.autoPanAnimation,margin:n.autoPanMargin}),e.autoPan=r||!1,e.rendered={transform_:"",visible:!0},e.mapPostrenderListenerKey=null,e.addChangeListener(c,e.handleElementChanged),e.addChangeListener(f,e.handleMapChanged),e.addChangeListener(p,e.handleOffsetChanged),e.addChangeListener(d,e.handlePositionChanged),e.addChangeListener(g,e.handlePositioningChanged),void 0!==n.element&&e.setElement(n.element),e.setOffset(void 0!==n.offset?n.offset:[0,0]),e.setPositioning(n.positioning||"top-left"),void 0!==n.position&&e.setPosition(n.position),e}return h(n,t),n.prototype.getElement=function(){return this.get(c)},n.prototype.getId=function(){return this.id},n.prototype.getMap=function(){return this.get(f)||null},n.prototype.getOffset=function(){return this.get(p)},n.prototype.getPosition=function(){return this.get(d)},n.prototype.getPositioning=function(){return this.get(g)},n.prototype.handleElementChanged=function(){Object(a.e)(this.element);var t=this.getElement();t&&this.element.appendChild(t)},n.prototype.handleMapChanged=function(){this.mapPostrenderListenerKey&&(Object(a.f)(this.element),Object(s.c)(this.mapPostrenderListenerKey),this.mapPostrenderListenerKey=null);var t=this.getMap();if(t){this.mapPostrenderListenerKey=Object(s.a)(t,i.a.POSTRENDER,this.render,this),this.updatePixelPosition();var n=this.stopEvent?t.getOverlayContainerStopEvent():t.getOverlayContainer();this.insertFirst?n.insertBefore(this.element,n.childNodes[0]||null):n.appendChild(this.element),this.performAutoPan()}},n.prototype.render=function(){this.updatePixelPosition()},n.prototype.handleOffsetChanged=function(){this.updatePixelPosition()},n.prototype.handlePositionChanged=function(){this.updatePixelPosition(),this.performAutoPan()},n.prototype.handlePositioningChanged=function(){this.updatePixelPosition()},n.prototype.setElement=function(t){this.set(c,t)},n.prototype.setMap=function(t){this.set(f,t)},n.prototype.setOffset=function(t){this.set(p,t)},n.prototype.setPosition=function(t){this.set(d,t)},n.prototype.performAutoPan=function(){this.autoPan&&this.panIntoView(this.autoPan)},n.prototype.panIntoView=function(t){var n=this.getMap();if(n&&n.getTargetElement()&&this.get(d)){var e=this.getRect(n.getTargetElement(),n.getSize()),r=this.getElement(),l=this.getRect(r,[Object(a.c)(r),Object(a.b)(r)]),i=t||{},o=void 0===i.margin?20:i.margin;if(!Object(u.g)(e,l)){var s=l[0]-e[0],h=e[2]-l[2],c=l[1]-e[1],f=e[3]-l[3],p=[0,0];if(s<0?p[0]=s-o:h<0&&(p[0]=Math.abs(h)+o),c<0?p[1]=c-o:f<0&&(p[1]=Math.abs(f)+o),0!==p[0]||0!==p[1]){var g=n.getView().getCenterInternal(),y=n.getPixelFromCoordinateInternal(g);if(!y)return;var _=[y[0]+p[0],y[1]+p[1]],v=i.animation||{};n.getView().animateInternal({center:n.getCoordinateFromPixelInternal(_),duration:v.duration,easing:v.easing})}}}},n.prototype.getRect=function(t,n){var e=t.getBoundingClientRect(),r=e.left+window.pageXOffset,l=e.top+window.pageYOffset;return[r,l,r+n[0],l+n[1]]},n.prototype.setPositioning=function(t){this.set(g,t)},n.prototype.setVisible=function(t){this.rendered.visible!==t&&(this.element.style.display=t?"":"none",this.rendered.visible=t)},n.prototype.updatePixelPosition=function(){var t=this.getMap(),n=this.getPosition();if(t&&t.isRendered()&&n){var e=t.getPixelFromCoordinate(n),r=t.getSize();this.updateRenderedPosition(e,r)}else this.setVisible(!1)},n.prototype.updateRenderedPosition=function(t,n){var e=this.element.style,r=this.getOffset(),l=this.getPositioning();this.setVisible(!0);var i=Math.round(t[0]+r[0])+"px",o=Math.round(t[1]+r[1])+"px",u="0%",s="0%";"bottom-right"==l||"center-right"==l||"top-right"==l?u="-100%":"bottom-center"!=l&&"center-center"!=l&&"top-center"!=l||(u="-50%"),"bottom-left"==l||"bottom-center"==l||"bottom-right"==l?s="-100%":"center-left"!=l&&"center-center"!=l&&"center-right"!=l||(s="-50%");var a="translate(".concat(u,", ").concat(s,") translate(").concat(i,", ").concat(o,")");this.rendered.transform_!=a&&(this.rendered.transform_=a,e.transform=a,e.msTransform=a)},n.prototype.getOptions=function(){return this.options},n}(l.a);n.a=y},function(t,n,e){!function(t){"use strict";var n=6371008.8,e={centimeters:637100880,centimetres:637100880,degrees:57.22891354143274,feet:20902260.511392,inches:39.37*n,kilometers:6371.0088,kilometres:6371.0088,meters:n,metres:n,miles:3958.761333810546,millimeters:6371008800,millimetres:6371008800,nauticalmiles:n/1852,radians:1,yards:6967335.223679999},r={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/n,yards:1.0936133},l={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046};function i(t,n,e){void 0===e&&(e={});var r={type:"Feature"};return(0===e.id||e.id)&&(r.id=e.id),e.bbox&&(r.bbox=e.bbox),r.properties=n||{},r.geometry=t,r}function o(t,n,e){switch(t){case"Point":return u(n).geometry;case"LineString":return c(n).geometry;case"Polygon":return a(n).geometry;case"MultiPoint":return g(n).geometry;case"MultiLineString":return d(n).geometry;case"MultiPolygon":return y(n).geometry;default:throw new Error(t+" is invalid")}}function u(t,n,e){if(void 0===e&&(e={}),!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");if(t.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!S(t[0])||!S(t[1]))throw new Error("coordinates must contain numbers");return i({type:"Point",coordinates:t},n,e)}function s(t,n,e){return void 0===e&&(e={}),p(t.map((function(t){return u(t,n)})),e)}function a(t,n,e){void 0===e&&(e={});for(var r=0,l=t;r<l.length;r++){var o=l[r];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<o[o.length-1].length;u++)if(o[o.length-1][u]!==o[0][u])throw new Error("First and last Position are not equivalent.")}return i({type:"Polygon",coordinates:t},n,e)}function h(t,n,e){return void 0===e&&(e={}),p(t.map((function(t){return a(t,n)})),e)}function c(t,n,e){if(void 0===e&&(e={}),t.length<2)throw new Error("coordinates must be an array of two or more positions");return i({type:"LineString",coordinates:t},n,e)}function f(t,n,e){return void 0===e&&(e={}),p(t.map((function(t){return c(t,n)})),e)}function p(t,n){void 0===n&&(n={});var e={type:"FeatureCollection"};return n.id&&(e.id=n.id),n.bbox&&(e.bbox=n.bbox),e.features=t,e}function d(t,n,e){return void 0===e&&(e={}),i({type:"MultiLineString",coordinates:t},n,e)}function g(t,n,e){return void 0===e&&(e={}),i({type:"MultiPoint",coordinates:t},n,e)}function y(t,n,e){return void 0===e&&(e={}),i({type:"MultiPolygon",coordinates:t},n,e)}function _(t,n,e){return void 0===e&&(e={}),i({type:"GeometryCollection",geometries:t},n,e)}function v(t,n){if(void 0===n&&(n=0),n&&!(n>=0))throw new Error("precision must be a positive number");var e=Math.pow(10,n||0);return Math.round(t*e)/e}function m(t,n){void 0===n&&(n="kilometers");var r=e[n];if(!r)throw new Error(n+" units is invalid");return t*r}function b(t,n){void 0===n&&(n="kilometers");var r=e[n];if(!r)throw new Error(n+" units is invalid");return t/r}function x(t,n){return E(b(t,n))}function w(t){var n=t%360;return n<0&&(n+=360),n}function E(t){return t%(2*Math.PI)*180/Math.PI}function C(t){return t%360*Math.PI/180}function O(t,n,e){if(void 0===n&&(n="kilometers"),void 0===e&&(e="kilometers"),!(t>=0))throw new Error("length must be a positive number");return m(b(t,n),e)}function M(t,n,e){if(void 0===n&&(n="meters"),void 0===e&&(e="kilometers"),!(t>=0))throw new Error("area must be a positive number");var r=l[n];if(!r)throw new Error("invalid original units");var i=l[e];if(!i)throw new Error("invalid final units");return t/r*i}function S(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}function I(t){return!!t&&t.constructor===Object}function P(t){if(!t)throw new Error("bbox is required");if(!Array.isArray(t))throw new Error("bbox must be an Array");if(4!==t.length&&6!==t.length)throw new Error("bbox must be an Array of 4 or 6 numbers");t.forEach((function(t){if(!S(t))throw new Error("bbox must only contain numbers")}))}function R(t){if(!t)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string")}var T=Object.freeze({__proto__:null,earthRadius:n,factors:e,unitsFactors:r,areaFactors:l,feature:i,geometry:o,point:u,points:s,polygon:a,polygons:h,lineString:c,lineStrings:f,featureCollection:p,multiLineString:d,multiPoint:g,multiPolygon:y,geometryCollection:_,round:v,radiansToLength:m,lengthToRadians:b,lengthToDegrees:x,bearingToAzimuth:w,radiansToDegrees:E,degreesToRadians:C,convertLength:O,convertArea:M,isNumber:S,isObject:I,validateBBox:P,validateId:R});function N(t,n,e){if(null!==t)for(var r,l,i,o,u,s,a,h,c=0,f=0,p=t.type,d="FeatureCollection"===p,g="Feature"===p,y=d?t.features.length:1,_=0;_<y;_++){u=(h=!!(a=d?t.features[_].geometry:g?t.geometry:t)&&"GeometryCollection"===a.type)?a.geometries.length:1;for(var v=0;v<u;v++){var m=0,b=0;if(null!==(o=h?a.geometries[v]:a)){s=o.coordinates;var x=o.type;switch(c=!e||"Polygon"!==x&&"MultiPolygon"!==x?0:1,x){case null:break;case"Point":if(!1===n(s,f,_,m,b))return!1;f++,m++;break;case"LineString":case"MultiPoint":for(r=0;r<s.length;r++){if(!1===n(s[r],f,_,m,b))return!1;f++,"MultiPoint"===x&&m++}"LineString"===x&&m++;break;case"Polygon":case"MultiLineString":for(r=0;r<s.length;r++){for(l=0;l<s[r].length-c;l++){if(!1===n(s[r][l],f,_,m,b))return!1;f++}"MultiLineString"===x&&m++,"Polygon"===x&&b++}"Polygon"===x&&m++;break;case"MultiPolygon":for(r=0;r<s.length;r++){for(b=0,l=0;l<s[r].length;l++){for(i=0;i<s[r][l].length-c;i++){if(!1===n(s[r][l][i],f,_,m,b))return!1;f++}b++}m++}break;case"GeometryCollection":for(r=0;r<o.geometries.length;r++)if(!1===N(o.geometries[r],n,e))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function L(t,n,e,r){var l=e;return N(t,(function(t,r,i,o,u){l=0===r&&void 0===e?t:n(l,t,r,i,o,u)}),r),l}function A(t,n){var e;switch(t.type){case"FeatureCollection":for(e=0;e<t.features.length&&!1!==n(t.features[e].properties,e);e++);break;case"Feature":n(t.properties,0)}}function j(t,n,e){var r=e;return A(t,(function(t,l){r=0===l&&void 0===e?t:n(r,t,l)})),r}function D(t,n){if("Feature"===t.type)n(t,0);else if("FeatureCollection"===t.type)for(var e=0;e<t.features.length&&!1!==n(t.features[e],e);e++);}function k(t,n,e){var r=e;return D(t,(function(t,l){r=0===l&&void 0===e?t:n(r,t,l)})),r}function F(t){var n=[];return N(t,(function(t){n.push(t)})),n}function G(t,n){var e,r,l,i,o,u,s,a,h,c,f=0,p="FeatureCollection"===t.type,d="Feature"===t.type,g=p?t.features.length:1;for(e=0;e<g;e++){for(u=p?t.features[e].geometry:d?t.geometry:t,a=p?t.features[e].properties:d?t.properties:{},h=p?t.features[e].bbox:d?t.bbox:void 0,c=p?t.features[e].id:d?t.id:void 0,o=(s=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,l=0;l<o;l++)if(null!==(i=s?u.geometries[l]:u))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===n(i,f,a,h,c))return!1;break;case"GeometryCollection":for(r=0;r<i.geometries.length;r++)if(!1===n(i.geometries[r],f,a,h,c))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===n(null,f,a,h,c))return!1;f++}}function z(t,n,e){var r=e;return G(t,(function(t,l,i,o,u){r=0===l&&void 0===e?t:n(r,t,l,i,o,u)})),r}function B(t,n){G(t,(function(t,e,r,l,o){var u,s=null===t?null:t.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return!1!==n(i(t,r,{bbox:l,id:o}),e,0)&&void 0}switch(s){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}for(var a=0;a<t.coordinates.length;a++){var h=t.coordinates[a];if(!1===n(i({type:u,coordinates:h},r),e,a))return!1}}))}function U(t,n,e){var r=e;return B(t,(function(t,l,i){r=0===l&&0===i&&void 0===e?t:n(r,t,l,i)})),r}function q(t,n){B(t,(function(t,e,r){var l=0;if(t.geometry){var i=t.geometry.type;if("Point"!==i&&"MultiPoint"!==i){var o,u=0,s=0,a=0;return!1!==N(t,(function(i,h,f,p,d){if(void 0===o||e>u||p>s||d>a)return o=i,u=e,s=p,a=d,void(l=0);var g=c([o,i],t.properties);if(!1===n(g,e,r,d,l))return!1;l++,o=i}))&&void 0}}}))}function Y(t,n,e){var r=e,l=!1;return q(t,(function(t,i,o,u,s){r=!1===l&&void 0===e?t:n(r,t,i,o,u,s),l=!0})),r}function X(t,n){if(!t)throw new Error("geojson is required");B(t,(function(t,e,r){if(null!==t.geometry){var l=t.geometry.type,i=t.geometry.coordinates;switch(l){case"LineString":if(!1===n(t,e,r,0,0))return!1;break;case"Polygon":for(var o=0;o<i.length;o++)if(!1===n(c(i[o],t.properties),e,r,o))return!1}}}))}function V(t,n,e){var r=e;return X(t,(function(t,l,i,o){r=0===l&&void 0===e?t:n(r,t,l,i,o)})),r}function W(t,n){if(!I(n=n||{}))throw new Error("options is invalid");var e,r=n.featureIndex||0,l=n.multiFeatureIndex||0,i=n.geometryIndex||0,o=n.segmentIndex||0,u=n.properties;switch(t.type){case"FeatureCollection":r<0&&(r=t.features.length+r),u=u||t.features[r].properties,e=t.features[r].geometry;break;case"Feature":u=u||t.properties,e=t.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":e=t;break;default:throw new Error("geojson is invalid")}if(null===e)return null;var s=e.coordinates;switch(e.type){case"Point":case"MultiPoint":return null;case"LineString":return o<0&&(o=s.length+o-1),c([s[o],s[o+1]],u,n);case"Polygon":return i<0&&(i=s.length+i),o<0&&(o=s[i].length+o-1),c([s[i][o],s[i][o+1]],u,n);case"MultiLineString":return l<0&&(l=s.length+l),o<0&&(o=s[l].length+o-1),c([s[l][o],s[l][o+1]],u,n);case"MultiPolygon":return l<0&&(l=s.length+l),i<0&&(i=s[l].length+i),o<0&&(o=s[l][i].length-o-1),c([s[l][i][o],s[l][i][o+1]],u,n)}throw new Error("geojson is invalid")}function Z(t,n){if(!I(n=n||{}))throw new Error("options is invalid");var e,r=n.featureIndex||0,l=n.multiFeatureIndex||0,i=n.geometryIndex||0,o=n.coordIndex||0,s=n.properties;switch(t.type){case"FeatureCollection":r<0&&(r=t.features.length+r),s=s||t.features[r].properties,e=t.features[r].geometry;break;case"Feature":s=s||t.properties,e=t.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":e=t;break;default:throw new Error("geojson is invalid")}if(null===e)return null;var a=e.coordinates;switch(e.type){case"Point":return u(a,s,n);case"MultiPoint":return l<0&&(l=a.length+l),u(a[l],s,n);case"LineString":return o<0&&(o=a.length+o),u(a[o],s,n);case"Polygon":return i<0&&(i=a.length+i),o<0&&(o=a[i].length+o),u(a[i][o],s,n);case"MultiLineString":return l<0&&(l=a.length+l),o<0&&(o=a[l].length+o),u(a[l][o],s,n);case"MultiPolygon":return l<0&&(l=a.length+l),i<0&&(i=a[l].length+i),o<0&&(o=a[l][i].length-o),u(a[l][i][o],s,n)}throw new Error("geojson is invalid")}var H=Object.freeze({__proto__:null,coordAll:F,coordEach:N,coordReduce:L,featureEach:D,featureReduce:k,findPoint:Z,findSegment:W,flattenEach:B,flattenReduce:U,geomEach:G,geomReduce:z,lineEach:X,lineReduce:V,propEach:A,propReduce:j,segmentEach:q,segmentReduce:Y});function K(t){var n=[1/0,1/0,-1/0,-1/0];return N(t,(function(t){n[0]>t[0]&&(n[0]=t[0]),n[1]>t[1]&&(n[1]=t[1]),n[2]<t[0]&&(n[2]=t[0]),n[3]<t[1]&&(n[3]=t[1])})),n}function J(t){if(!t)throw new Error("coord is required");if(!Array.isArray(t)){if("Feature"===t.type&&null!==t.geometry&&"Point"===t.geometry.type)return t.geometry.coordinates;if("Point"===t.type)return t.coordinates}if(Array.isArray(t)&&t.length>=2&&!Array.isArray(t[0])&&!Array.isArray(t[1]))return t;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function Q(t){if(Array.isArray(t))return t;if("Feature"===t.type){if(null!==t.geometry)return t.geometry.coordinates}else if(t.coordinates)return t.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function $(t){if(t.length>1&&S(t[0])&&S(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return $(t[0]);throw new Error("coordinates must only contain numbers")}function tt(t,n,e){if(!n||!e)throw new Error("type and name required");if(!t||t.type!==n)throw new Error("Invalid input to "+e+": must be a "+n+", given "+t.type)}function nt(t,n,e){if(!t)throw new Error("No feature passed");if(!e)throw new Error(".featureOf() requires a name");if(!t||"Feature"!==t.type||!t.geometry)throw new Error("Invalid input to "+e+", Feature with geometry required");if(!t.geometry||t.geometry.type!==n)throw new Error("Invalid input to "+e+": must be a "+n+", given "+t.geometry.type)}function et(t,n,e){if(!t)throw new Error("No featureCollection passed");if(!e)throw new Error(".collectionOf() requires a name");if(!t||"FeatureCollection"!==t.type)throw new Error("Invalid input to "+e+", FeatureCollection required");for(var r=0,l=t.features;r<l.length;r++){var i=l[r];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+e+", Feature with geometry required");if(!i.geometry||i.geometry.type!==n)throw new Error("Invalid input to "+e+": must be a "+n+", given "+i.geometry.type)}}function rt(t){return"Feature"===t.type?t.geometry:t}function lt(t,n){return"FeatureCollection"===t.type?"FeatureCollection":"GeometryCollection"===t.type?"GeometryCollection":"Feature"===t.type&&null!==t.geometry?t.geometry.type:t.type}K.default=K;var it=Object.freeze({__proto__:null,getCoord:J,getCoords:Q,containsNumber:$,geojsonType:tt,featureOf:nt,collectionOf:et,getGeom:rt,getType:lt}),ot=Object.getOwnPropertySymbols,ut=Object.prototype.hasOwnProperty,st=Object.prototype.propertyIsEnumerable;
/*
    object-assign
    (c) Sindre Sorhus
    @license MIT
    */function at(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}var ht=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var n={},e=0;e<10;e++)n["_"+String.fromCharCode(e)]=e;if("0123456789"!==Object.getOwnPropertyNames(n).map((function(t){return n[t]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(t){r[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(t){return!1}}()?Object.assign:function(t,n){for(var e,r,l=at(t),i=1;i<arguments.length;i++){for(var o in e=Object(arguments[i]))ut.call(e,o)&&(l[o]=e[o]);if(ot){r=ot(e);for(var u=0;u<r.length;u++)st.call(e,r[u])&&(l[r[u]]=e[r[u]])}}return l},ct={successCallback:null,verbose:!1},ft={};
/**
     * @license GNU Affero General Public License.
     * Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>
     * v. 1.2.0
     * https://github.com/RaumZeit/MarchingSquares.js
     *
     * MarchingSquaresJS is free software: you can redistribute it and/or modify
     * it under the terms of the GNU Affero General Public License as published by
     * the Free Software Foundation, either version 3 of the License, or
     * (at your option) any later version.
     *
     * MarchingSquaresJS is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     * GNU Affero General Public License for more details.
     *
     * As additional permission under GNU Affero General Public License version 3
     * section 7, third-party projects (personal or commercial) may distribute,
     * include, or link against UNMODIFIED VERSIONS of MarchingSquaresJS without the
     * requirement that said third-party project for that reason alone becomes
     * subject to any requirement of the GNU Affero General Public License version 3.
     * Any modifications to MarchingSquaresJS, however, must be shared with the public
     * and made available.
     *
     * In summary this:
     * - allows you to use MarchingSquaresJS at no cost
     * - allows you to use MarchingSquaresJS for both personal and commercial purposes
     * - allows you to distribute UNMODIFIED VERSIONS of MarchingSquaresJS under any
     *   license as long as this license notice is included
     * - enables you to keep the source code of your program that uses MarchingSquaresJS
     *   undisclosed
     * - forces you to share any modifications you have made to MarchingSquaresJS,
     *   e.g. bug-fixes
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with MarchingSquaresJS.  If not, see <http://www.gnu.org/licenses/>.
     */function pt(t,n,e){e=e||{};for(var r=Object.keys(ct),l=0;l<r.length;l++){var i=r[l],o=e[i];o=null!=o?o:ct[i],ft[i]=o}ft.verbose&&console.log("MarchingSquaresJS-isoContours: computing isocontour for "+n);var u=function(t){var n=[],e=0;return t.cells.forEach((function(r,l){r.forEach((function(r,i){if(void 0!==r&&5!==(f=r).cval&&10!==f.cval&&!gt(r)){var o=function(t,n,e){var r,l,i=t.length,o=[],u=[0,0,1,1,0,0,0,0,-1,0,1,1,-1,0,-1,0],s=[0,-1,0,0,1,1,1,1,0,-1,0,0,0,-1,0,0],a=["none","bottom","right","right","top","top","top","top","left","bottom","right","right","left","bottom","left","none"],h=t[n][e],c=h.cval,f=["none","left","bottom","left","right","none","bottom","left","top","top","none","top","right","right","bottom","none"][c],p=_t(h,f);o.push([e+p[0],n+p[1]]),p=_t(h,f=a[c]),o.push([e+p[0],n+p[1]]),yt(h);for(var d=e+u[c],g=n+s[c],y=c;d>=0&&g>=0&&g<i&&(d!=e||g!=n)&&void 0!==(h=t[g][d]);){if(0===(c=h.cval)||15===c)return{path:o,info:"mergeable"};f=a[c],r=u[c],l=s[c],5!==c&&10!==c||(5===c?h.flipped?-1===s[y]?(f="left",r=-1,l=0):(f="right",r=1,l=0):-1===u[y]&&(f="bottom",r=0,l=-1):10===c&&(h.flipped?-1===u[y]?(f="top",r=0,l=1):(f="bottom",r=0,l=-1):1===s[y]&&(f="left",r=-1,l=0))),p=_t(h,f),o.push([d+p[0],g+p[1]]),yt(h),d+=r,g+=l,y=c}return{path:o,info:"closed"}}(t.cells,l,i),u=!1;if("mergeable"===o.info)for(var s=o.path[o.path.length-1][0],a=o.path[o.path.length-1][1],h=e-1;h>=0;h--)if(Math.abs(n[h][0][0]-s)<=1e-7&&Math.abs(n[h][0][1]-a)<=1e-7){for(var c=o.path.length-2;c>=0;--c)n[h].unshift(o.path[c]);u=!0;break}u||(n[e++]=o.path)}var f}))})),n}(function(t,n){for(var e=t.length-1,r=t[0].length-1,l={rows:e,cols:r,cells:[]},i=0;i<e;++i){l.cells[i]=[];for(var o=0;o<r;++o){var u=0,s=t[i+1][o],a=t[i+1][o+1],h=t[i][o+1],c=t[i][o];if(!(isNaN(s)||isNaN(a)||isNaN(h)||isNaN(c))){u|=s>=n?8:0,u|=a>=n?4:0,u|=h>=n?2:0;var f,p,d,g,y=!1;if(5==(u|=c>=n?1:0)||10===u){var _=(s+a+h+c)/4;5===u&&_<n?(u=10,y=!0):10===u&&_<n&&(u=5,y=!0)}0!==u&&15!==u&&(f=p=d=g=.5,1===u?(d=1-dt(n,s,c),p=1-dt(n,h,c)):2===u?(p=dt(n,c,h),g=1-dt(n,a,h)):3===u?(d=1-dt(n,s,c),g=1-dt(n,a,h)):4===u?(f=dt(n,s,a),g=dt(n,h,a)):5===u?(f=dt(n,s,a),g=dt(n,h,a),p=1-dt(n,h,c),d=1-dt(n,s,c)):6===u?(p=dt(n,c,h),f=dt(n,s,a)):7===u?(d=1-dt(n,s,c),f=dt(n,s,a)):8===u?(d=dt(n,c,s),f=1-dt(n,a,s)):9===u?(p=1-dt(n,h,c),f=1-dt(n,a,s)):10===u?(f=1-dt(n,a,s),g=1-dt(n,a,h),p=dt(n,c,h),d=dt(n,c,s)):11===u?(f=1-dt(n,a,s),g=1-dt(n,a,h)):12===u?(d=dt(n,c,s),g=dt(n,h,a)):13===u?(p=1-dt(n,h,c),g=dt(n,h,a)):14===u?(d=dt(n,c,s),p=dt(n,c,h)):console.log("MarchingSquaresJS-isoContours: Illegal cval detected: "+u),l.cells[i][o]={cval:u,flipped:y,top:f,right:g,bottom:p,left:d})}}}return l}(t,n));return"function"==typeof ft.successCallback&&ft.successCallback(u),u}function dt(t,n,e){return(t-n)/(e-n)}function gt(t){return 0===t.cval||15===t.cval}function yt(t){gt(t)||5===t.cval||10===t.cval||(t.cval=15)}function _t(t,n){return"top"===n?[t.top,1]:"bottom"===n?[t.bottom,0]:"right"===n?[1,t.right]:"left"===n?[0,t.left]:void 0}var vt=bt,mt=bt;function bt(t,n,e,r,l){!function t(n,e,r,l,i){for(;l>r;){if(l-r>600){var o=l-r+1,u=e-r+1,s=Math.log(o),a=.5*Math.exp(2*s/3),h=.5*Math.sqrt(s*a*(o-a)/o)*(u-o/2<0?-1:1);t(n,e,Math.max(r,Math.floor(e-u*a/o+h)),Math.min(l,Math.floor(e+(o-u)*a/o+h)),i)}var c=n[e],f=r,p=l;for(xt(n,r,e),i(n[l],c)>0&&xt(n,r,l);f<p;){for(xt(n,f,p),f++,p--;i(n[f],c)<0;)f++;for(;i(n[p],c)>0;)p--}0===i(n[r],c)?xt(n,r,p):xt(n,++p,l),p<=e&&(r=p+1),e<=p&&(l=p-1)}}(t,n,e||0,r||t.length-1,l||wt)}function xt(t,n,e){var r=t[n];t[n]=t[e],t[e]=r}function wt(t,n){return t<n?-1:t>n?1:0}vt.default=mt;var Et=Ot,Ct=Ot;function Ot(t,n){if(!(this instanceof Ot))return new Ot(t,n);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),n&&this._initFormat(n),this.clear()}function Mt(t,n,e){if(!e)return n.indexOf(t);for(var r=0;r<n.length;r++)if(e(t,n[r]))return r;return-1}function St(t,n){It(t,0,t.children.length,n,t)}function It(t,n,e,r,l){l||(l=Dt(null)),l.minX=1/0,l.minY=1/0,l.maxX=-1/0,l.maxY=-1/0;for(var i,o=n;o<e;o++)i=t.children[o],Pt(l,t.leaf?r(i):i);return l}function Pt(t,n){return t.minX=Math.min(t.minX,n.minX),t.minY=Math.min(t.minY,n.minY),t.maxX=Math.max(t.maxX,n.maxX),t.maxY=Math.max(t.maxY,n.maxY),t}function Rt(t,n){return t.minX-n.minX}function Tt(t,n){return t.minY-n.minY}function Nt(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function Lt(t){return t.maxX-t.minX+(t.maxY-t.minY)}function At(t,n){return t.minX<=n.minX&&t.minY<=n.minY&&n.maxX<=t.maxX&&n.maxY<=t.maxY}function jt(t,n){return n.minX<=t.maxX&&n.minY<=t.maxY&&n.maxX>=t.minX&&n.maxY>=t.minY}function Dt(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function kt(t,n,e,r,l){for(var i,o=[n,e];o.length;)(e=o.pop())-(n=o.pop())<=r||(i=n+Math.ceil((e-n)/r/2)*r,vt(t,i,n,e,l),o.push(n,i,i,e))}function Ft(t){var n={exports:{}};return t(n,n.exports),n.exports}Ot.prototype={all:function(){return this._all(this.data,[])},search:function(t){var n=this.data,e=[],r=this.toBBox;if(!jt(t,n))return e;for(var l,i,o,u,s=[];n;){for(l=0,i=n.children.length;l<i;l++)o=n.children[l],jt(t,u=n.leaf?r(o):o)&&(n.leaf?e.push(o):At(t,u)?this._all(o,e):s.push(o));n=s.pop()}return e},collides:function(t){var n=this.data,e=this.toBBox;if(!jt(t,n))return!1;for(var r,l,i,o,u=[];n;){for(r=0,l=n.children.length;r<l;r++)if(i=n.children[r],jt(t,o=n.leaf?e(i):i)){if(n.leaf||At(t,o))return!0;u.push(i)}n=u.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var n=0,e=t.length;n<e;n++)this.insert(t[n]);return this}var r=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===r.height)this._splitRoot(this.data,r);else{if(this.data.height<r.height){var l=this.data;this.data=r,r=l}this._insert(r,this.data.height-r.height-1,!0)}else this.data=r;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=Dt([]),this},remove:function(t,n){if(!t)return this;for(var e,r,l,i,o=this.data,u=this.toBBox(t),s=[],a=[];o||s.length;){if(o||(o=s.pop(),r=s[s.length-1],e=a.pop(),i=!0),o.leaf&&-1!==(l=Mt(t,o.children,n)))return o.children.splice(l,1),s.push(o),this._condense(s),this;i||o.leaf||!At(o,u)?r?(e++,o=r.children[e],i=!1):o=null:(s.push(o),a.push(e),e=0,r=o,o=o.children[0])}return this},toBBox:function(t){return t},compareMinX:Rt,compareMinY:Tt,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,n){for(var e=[];t;)t.leaf?n.push.apply(n,t.children):e.push.apply(e,t.children),t=e.pop();return n},_build:function(t,n,e,r){var l,i=e-n+1,o=this._maxEntries;if(i<=o)return St(l=Dt(t.slice(n,e+1)),this.toBBox),l;r||(r=Math.ceil(Math.log(i)/Math.log(o)),o=Math.ceil(i/Math.pow(o,r-1))),(l=Dt([])).leaf=!1,l.height=r;var u,s,a,h,c=Math.ceil(i/o),f=c*Math.ceil(Math.sqrt(o));for(kt(t,n,e,f,this.compareMinX),u=n;u<=e;u+=f)for(kt(t,u,a=Math.min(u+f-1,e),c,this.compareMinY),s=u;s<=a;s+=c)h=Math.min(s+c-1,a),l.children.push(this._build(t,s,h,r-1));return St(l,this.toBBox),l},_chooseSubtree:function(t,n,e,r){for(var l,i,o,u,s,a,h,c,f,p;r.push(n),!n.leaf&&r.length-1!==e;){for(h=c=1/0,l=0,i=n.children.length;l<i;l++)s=Nt(o=n.children[l]),f=t,p=o,(a=(Math.max(p.maxX,f.maxX)-Math.min(p.minX,f.minX))*(Math.max(p.maxY,f.maxY)-Math.min(p.minY,f.minY))-s)<c?(c=a,h=s<h?s:h,u=o):a===c&&s<h&&(h=s,u=o);n=u||n.children[0]}return n},_insert:function(t,n,e){var r=this.toBBox,l=e?t:r(t),i=[],o=this._chooseSubtree(l,this.data,n,i);for(o.children.push(t),Pt(o,l);n>=0&&i[n].children.length>this._maxEntries;)this._split(i,n),n--;this._adjustParentBBoxes(l,i,n)},_split:function(t,n){var e=t[n],r=e.children.length,l=this._minEntries;this._chooseSplitAxis(e,l,r);var i=this._chooseSplitIndex(e,l,r),o=Dt(e.children.splice(i,e.children.length-i));o.height=e.height,o.leaf=e.leaf,St(e,this.toBBox),St(o,this.toBBox),n?t[n-1].children.push(o):this._splitRoot(e,o)},_splitRoot:function(t,n){this.data=Dt([t,n]),this.data.height=t.height+1,this.data.leaf=!1,St(this.data,this.toBBox)},_chooseSplitIndex:function(t,n,e){var r,l,i,o,u,s,a,h,c,f,p,d,g,y;for(s=a=1/0,r=n;r<=e-n;r++)c=l=It(t,0,r,this.toBBox),f=i=It(t,r,e,this.toBBox),p=Math.max(c.minX,f.minX),d=Math.max(c.minY,f.minY),g=Math.min(c.maxX,f.maxX),y=Math.min(c.maxY,f.maxY),o=Math.max(0,g-p)*Math.max(0,y-d),u=Nt(l)+Nt(i),o<s?(s=o,h=r,a=u<a?u:a):o===s&&u<a&&(a=u,h=r);return h},_chooseSplitAxis:function(t,n,e){var r=t.leaf?this.compareMinX:Rt,l=t.leaf?this.compareMinY:Tt;this._allDistMargin(t,n,e,r)<this._allDistMargin(t,n,e,l)&&t.children.sort(r)},_allDistMargin:function(t,n,e,r){t.children.sort(r);var l,i,o=this.toBBox,u=It(t,0,n,o),s=It(t,e-n,e,o),a=Lt(u)+Lt(s);for(l=n;l<e-n;l++)i=t.children[l],Pt(u,t.leaf?o(i):i),a+=Lt(u);for(l=e-n-1;l>=n;l--)i=t.children[l],Pt(s,t.leaf?o(i):i),a+=Lt(s);return a},_adjustParentBBoxes:function(t,n,e){for(var r=e;r>=0;r--)Pt(n[r],t)},_condense:function(t){for(var n,e=t.length-1;e>=0;e--)0===t[e].children.length?e>0?(n=t[e-1].children).splice(n.indexOf(t[e]),1):this.clear():St(t[e],this.toBBox)},_initFormat:function(t){var n=["return a"," - b",";"];this.compareMinX=new Function("a","b",n.join(t[0])),this.compareMinY=new Function("a","b",n.join(t[1])),this.toBBox=new Function("a","return {minX: a"+t[0]+", minY: a"+t[1]+", maxX: a"+t[2]+", maxY: a"+t[3]+"};")}},Et.default=Ct;var Gt=function(t,n,e){var r=t*n,l=zt*t,i=l-(l-t),o=t-i,u=zt*n,s=u-(u-n),a=n-s,h=o*a-(r-i*s-o*s-i*a);return e?(e[0]=h,e[1]=r,e):[h,r]},zt=+(Math.pow(2,27)+1),Bt=function(t,n){var e=0|t.length,r=0|n.length;if(1===e&&1===r)return function(t,n){var e=t+n,r=e-t,l=t-(e-r)+(n-r);return l?[l,e]:[e]}(t[0],n[0]);var l,i,o=new Array(e+r),u=0,s=0,a=0,h=Math.abs,c=t[s],f=h(c),p=n[a],d=h(p);f<d?(i=c,(s+=1)<e&&(f=h(c=t[s]))):(i=p,(a+=1)<r&&(d=h(p=n[a]))),s<e&&f<d||a>=r?(l=c,(s+=1)<e&&(f=h(c=t[s]))):(l=p,(a+=1)<r&&(d=h(p=n[a])));for(var g,y,_=l+i,v=_-l,m=i-v,b=m,x=_;s<e&&a<r;)f<d?(l=c,(s+=1)<e&&(f=h(c=t[s]))):(l=p,(a+=1)<r&&(d=h(p=n[a]))),(m=(i=b)-(v=(_=l+i)-l))&&(o[u++]=m),b=x-((g=x+_)-(y=g-x))+(_-y),x=g;for(;s<e;)(m=(i=b)-(v=(_=(l=c)+i)-l))&&(o[u++]=m),b=x-((g=x+_)-(y=g-x))+(_-y),x=g,(s+=1)<e&&(c=t[s]);for(;a<r;)(m=(i=b)-(v=(_=(l=p)+i)-l))&&(o[u++]=m),b=x-((g=x+_)-(y=g-x))+(_-y),x=g,(a+=1)<r&&(p=n[a]);return b&&(o[u++]=b),x&&(o[u++]=x),u||(o[u++]=0),o.length=u,o},Ut=function(t,n,e){var r=t+n,l=r-t,i=n-l,o=t-(r-l);return e?(e[0]=o+i,e[1]=r,e):[o+i,r]},qt=function(t,n){var e=t.length;if(1===e){var r=Gt(t[0],n);return r[0]?r:[r[1]]}var l=new Array(2*e),i=[.1,.1],o=[.1,.1],u=0;Gt(t[0],n,i),i[0]&&(l[u++]=i[0]);for(var s=1;s<e;++s){Gt(t[s],n,o);var a=i[1];Ut(a,o[0],i),i[0]&&(l[u++]=i[0]);var h=o[1],c=i[1],f=h+c,p=c-(f-h);i[1]=f,p&&(l[u++]=p)}return i[1]&&(l[u++]=i[1]),0===u&&(l[u++]=0),l.length=u,l},Yt=function(t,n){var e=0|t.length,r=0|n.length;if(1===e&&1===r)return function(t,n){var e=t+n,r=e-t,l=t-(e-r)+(n-r);return l?[l,e]:[e]}(t[0],-n[0]);var l,i,o=new Array(e+r),u=0,s=0,a=0,h=Math.abs,c=t[s],f=h(c),p=-n[a],d=h(p);f<d?(i=c,(s+=1)<e&&(f=h(c=t[s]))):(i=p,(a+=1)<r&&(d=h(p=-n[a]))),s<e&&f<d||a>=r?(l=c,(s+=1)<e&&(f=h(c=t[s]))):(l=p,(a+=1)<r&&(d=h(p=-n[a])));for(var g,y,_=l+i,v=_-l,m=i-v,b=m,x=_;s<e&&a<r;)f<d?(l=c,(s+=1)<e&&(f=h(c=t[s]))):(l=p,(a+=1)<r&&(d=h(p=-n[a]))),(m=(i=b)-(v=(_=l+i)-l))&&(o[u++]=m),b=x-((g=x+_)-(y=g-x))+(_-y),x=g;for(;s<e;)(m=(i=b)-(v=(_=(l=c)+i)-l))&&(o[u++]=m),b=x-((g=x+_)-(y=g-x))+(_-y),x=g,(s+=1)<e&&(c=t[s]);for(;a<r;)(m=(i=b)-(v=(_=(l=p)+i)-l))&&(o[u++]=m),b=x-((g=x+_)-(y=g-x))+(_-y),x=g,(a+=1)<r&&(p=-n[a]);return b&&(o[u++]=b),x&&(o[u++]=x),u||(o[u++]=0),o.length=u,o},Xt=Ft((function(t){function n(t,n){for(var e=new Array(t.length-1),r=1;r<t.length;++r)for(var l=e[r-1]=new Array(t.length-1),i=0,o=0;i<t.length;++i)i!==n&&(l[o++]=t[r][i]);return e}function e(t){if(1===t.length)return t[0];if(2===t.length)return["sum(",t[0],",",t[1],")"].join("");var n=t.length>>1;return["sum(",e(t.slice(0,n)),",",e(t.slice(n)),")"].join("")}function r(t){if(2===t.length)return[["sum(prod(",t[0][0],",",t[1][1],"),prod(-",t[0][1],",",t[1][0],"))"].join("")];for(var l=[],i=0;i<t.length;++i)l.push(["scale(",e(r(n(t,i))),",",(o=i,1&o?"-":""),t[0][i],")"].join(""));return l;var o}function l(t){for(var l=[],i=[],o=function(t){for(var n=new Array(t),e=0;e<t;++e){n[e]=new Array(t);for(var r=0;r<t;++r)n[e][r]=["m",r,"[",t-e-1,"]"].join("")}return n}(t),u=[],s=0;s<t;++s)0==(1&s)?l.push.apply(l,r(n(o,s))):i.push.apply(i,r(n(o,s))),u.push("m"+s);var a=e(l),h=e(i),c="orientation"+t+"Exact",f=["function ",c,"(",u.join(),"){var p=",a,",n=",h,",d=sub(p,n);return d[d.length-1];};return ",c].join("");return new Function("sum","prod","scale","sub",f)(Bt,Gt,qt,Yt)}var i=l(3),o=l(4),u=[function(){return 0},function(){return 0},function(t,n){return n[0]-t[0]},function(t,n,e){var r,l=(t[1]-e[1])*(n[0]-e[0]),o=(t[0]-e[0])*(n[1]-e[1]),u=l-o;if(l>0){if(o<=0)return u;r=l+o}else{if(!(l<0))return u;if(o>=0)return u;r=-(l+o)}var s=33306690738754716e-32*r;return u>=s||u<=-s?u:i(t,n,e)},function(t,n,e,r){var l=t[0]-r[0],i=n[0]-r[0],u=e[0]-r[0],s=t[1]-r[1],a=n[1]-r[1],h=e[1]-r[1],c=t[2]-r[2],f=n[2]-r[2],p=e[2]-r[2],d=i*h,g=u*a,y=u*s,_=l*h,v=l*a,m=i*s,b=c*(d-g)+f*(y-_)+p*(v-m),x=7771561172376103e-31*((Math.abs(d)+Math.abs(g))*Math.abs(c)+(Math.abs(y)+Math.abs(_))*Math.abs(f)+(Math.abs(v)+Math.abs(m))*Math.abs(p));return b>x||-b>x?b:o(t,n,e,r)}];function s(t){var n=u[t.length];return n||(n=u[t.length]=l(t.length)),n.apply(void 0,t)}!function(){for(;u.length<=5;)u.push(l(u.length));for(var n=[],e=["slow"],r=0;r<=5;++r)n.push("a"+r),e.push("o"+r);var i=["function getOrientation(",n.join(),"){switch(arguments.length){case 0:case 1:return 0;"];for(r=2;r<=5;++r)i.push("case ",r,":return o",r,"(",n.slice(0,r).join(),");");i.push("}var s=new Array(arguments.length);for(var i=0;i<arguments.length;++i){s[i]=arguments[i]};return slow(s);}return getOrientation"),e.push(i.join(""));var o=Function.apply(void 0,e);for(t.exports=o.apply(void 0,[s].concat(u)),r=0;r<=5;++r)t.exports[r]=u[r]}()})),Vt=Xt[3],Wt=Ht,Zt=Ht;function Ht(t,n){if(!(this instanceof Ht))return new Ht(t,n);if(this.data=t||[],this.length=this.data.length,this.compare=n||Kt,this.length>0)for(var e=(this.length>>1)-1;e>=0;e--)this._down(e)}function Kt(t,n){return t<n?-1:t>n?1:0}Ht.prototype={push:function(t){this.data.push(t),this.length++,this._up(this.length-1)},pop:function(){if(0!==this.length){var t=this.data[0];return this.length--,this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),t}},peek:function(){return this.data[0]},_up:function(t){for(var n=this.data,e=this.compare,r=n[t];t>0;){var l=t-1>>1,i=n[l];if(e(r,i)>=0)break;n[t]=i,t=l}n[t]=r},_down:function(t){for(var n=this.data,e=this.compare,r=this.length>>1,l=n[t];t<r;){var i=1+(t<<1),o=i+1,u=n[i];if(o<this.length&&e(n[o],u)<0&&(i=o,u=n[o]),e(u,l)>=0)break;n[t]=u,t=i}n[t]=l}},Wt.default=Zt;var Jt=function(t,n){for(var e=t[0],r=t[1],l=!1,i=0,o=n.length-1;i<n.length;o=i++){var u=n[i][0],s=n[i][1],a=n[o][0],h=n[o][1];s>r!=h>r&&e<(a-u)*(r-s)/(h-s)+u&&(l=!l)}return l},Qt=Xt[3],$t=nn,tn=nn;function nn(t,n,e){n=Math.max(0,void 0===n?2:n),e=e||0;for(var r,l=function(t){for(var n=t[0],e=t[0],r=t[0],l=t[0],i=0;i<t.length;i++){var o=t[i];o[0]<n[0]&&(n=o),o[0]>r[0]&&(r=o),o[1]<e[1]&&(e=o),o[1]>l[1]&&(l=o)}var u=[n,e,r,l],s=u.slice();for(i=0;i<t.length;i++)Jt(t[i],u)||s.push(t[i]);var a=function(t){var n=t.length;if(n<3){for(var e=new Array(n),r=0;r<n;++r)e[r]=r;return 2===n&&t[0][0]===t[1][0]&&t[0][1]===t[1][1]?[0]:e}var l=new Array(n);for(r=0;r<n;++r)l[r]=r;l.sort((function(n,e){return t[n][0]-t[e][0]||t[n][1]-t[e][1]}));var i=[l[0],l[1]],o=[l[0],l[1]];for(r=2;r<n;++r){for(var u=l[r],s=t[u],a=i.length;a>1&&Vt(t[i[a-2]],t[i[a-1]],s)<=0;)a-=1,i.pop();for(i.push(u),a=o.length;a>1&&Vt(t[o[a-2]],t[o[a-1]],s)>=0;)a-=1,o.pop();o.push(u)}e=new Array(o.length+i.length-2);for(var h=0,c=(r=0,i.length);r<c;++r)e[h++]=i[r];for(var f=o.length-2;f>0;--f)e[h++]=o[f];return e}(s),h=[];for(i=0;i<a.length;i++)h.push(s[a[i]]);return h}(t),i=Et(16,["[0]","[1]","[0]","[1]"]).load(t),o=[],u=0;u<l.length;u++){var s=l[u];i.remove(s),r=an(s,r),o.push(r)}var a=Et(16);for(u=0;u<o.length;u++)a.insert(sn(o[u]));for(var h=n*n,c=e*e;o.length;){var f=o.shift(),p=f.p,d=f.next.p,g=hn(p,d);if(!(g<c)){var y=g/h;(s=en(i,f.prev.p,p,d,f.next.next.p,y,a))&&Math.min(hn(s,p),hn(s,d))<=y&&(o.push(f),o.push(an(s,f)),i.remove(s),a.remove(f),a.insert(sn(f)),a.insert(sn(f.next)))}}f=r;var _=[];do{_.push(f.p),f=f.next}while(f!==r);return _.push(f.p),_}function en(t,n,e,r,l,i,o){for(var u=new Wt(null,rn),s=t.data;s;){for(var a=0;a<s.children.length;a++){var h=s.children[a],c=s.leaf?cn(h,e,r):ln(e,r,h);c>i||u.push({node:h,dist:c})}for(;u.length&&!u.peek().node.children;){var f=u.pop(),p=f.node,d=cn(p,n,e),g=cn(p,r,l);if(f.dist<d&&f.dist<g&&un(e,p,o)&&un(r,p,o))return p}(s=u.pop())&&(s=s.node)}return null}function rn(t,n){return t.dist-n.dist}function ln(t,n,e){if(on(t,e)||on(n,e))return 0;var r=fn(t[0],t[1],n[0],n[1],e.minX,e.minY,e.maxX,e.minY);if(0===r)return 0;var l=fn(t[0],t[1],n[0],n[1],e.minX,e.minY,e.minX,e.maxY);if(0===l)return 0;var i=fn(t[0],t[1],n[0],n[1],e.maxX,e.minY,e.maxX,e.maxY);if(0===i)return 0;var o=fn(t[0],t[1],n[0],n[1],e.minX,e.maxY,e.maxX,e.maxY);return 0===o?0:Math.min(r,l,i,o)}function on(t,n){return t[0]>=n.minX&&t[0]<=n.maxX&&t[1]>=n.minY&&t[1]<=n.maxY}function un(t,n,e){for(var r,l,i,o,u=Math.min(t[0],n[0]),s=Math.min(t[1],n[1]),a=Math.max(t[0],n[0]),h=Math.max(t[1],n[1]),c=e.search({minX:u,minY:s,maxX:a,maxY:h}),f=0;f<c.length;f++)if(r=c[f].p,l=c[f].next.p,i=t,r!==(o=n)&&l!==i&&Qt(r,l,i)>0!=Qt(r,l,o)>0&&Qt(i,o,r)>0!=Qt(i,o,l)>0)return!1;return!0}function sn(t){var n=t.p,e=t.next.p;return t.minX=Math.min(n[0],e[0]),t.minY=Math.min(n[1],e[1]),t.maxX=Math.max(n[0],e[0]),t.maxY=Math.max(n[1],e[1]),t}function an(t,n){var e={p:t,prev:null,next:null,minX:0,minY:0,maxX:0,maxY:0};return n?(e.next=n.next,e.prev=n,n.next.prev=e,n.next=e):(e.prev=e,e.next=e),e}function hn(t,n){var e=t[0]-n[0],r=t[1]-n[1];return e*e+r*r}function cn(t,n,e){var r=n[0],l=n[1],i=e[0]-r,o=e[1]-l;if(0!==i||0!==o){var u=((t[0]-r)*i+(t[1]-l)*o)/(i*i+o*o);u>1?(r=e[0],l=e[1]):u>0&&(r+=i*u,l+=o*u)}return(i=t[0]-r)*i+(o=t[1]-l)*o}function fn(t,n,e,r,l,i,o,u){var s,a,h,c,f=e-t,p=r-n,d=o-l,g=u-i,y=t-l,_=n-i,v=f*f+p*p,m=f*d+p*g,b=d*d+g*g,x=f*y+p*_,w=d*y+g*_,E=v*b-m*m,C=E,O=E;0===E?(a=0,C=1,c=w,O=b):(c=v*w-m*x,(a=m*w-b*x)<0?(a=0,c=w,O=b):a>C&&(a=C,c=w+m,O=b)),c<0?(c=0,-x<0?a=0:-x>v?a=C:(a=-x,C=v)):c>O&&(c=O,-x+m<0?a=0:-x+m>v?a=C:(a=-x+m,C=v));var M=(1-(h=0===c?0:c/O))*l+h*o-((1-(s=0===a?0:a/C))*t+s*e),S=(1-h)*i+h*u-((1-s)*n+s*r);return M*M+S*S}function pn(t,n){void 0===n&&(n={}),n.concavity=n.concavity||1/0;var e=[];if(N(t,(function(t){e.push([t[0],t[1]])})),!e.length)return null;var r=$t(e,n.concavity);return r.length>3?a([r]):null}function dn(t,n,e){if(void 0===e&&(e={}),!t)throw new Error("point is required");if(!n)throw new Error("polygon is required");var r=J(t),l=rt(n),i=l.type,o=n.bbox,u=l.coordinates;if(o&&!1===function(t,n){return n[0]<=t[0]&&n[1]<=t[1]&&n[2]>=t[0]&&n[3]>=t[1]}(r,o))return!1;"Polygon"===i&&(u=[u]);for(var s=!1,a=0;a<u.length&&!s;a++)if(gn(r,u[a][0],e.ignoreBoundary)){for(var h=!1,c=1;c<u[a].length&&!h;)gn(r,u[a][c],!e.ignoreBoundary)&&(h=!0),c++;h||(s=!0)}return s}function gn(t,n,e){var r=!1;n[0][0]===n[n.length-1][0]&&n[0][1]===n[n.length-1][1]&&(n=n.slice(0,n.length-1));for(var l=0,i=n.length-1;l<n.length;i=l++){var o=n[l][0],u=n[l][1],s=n[i][0],a=n[i][1];if(t[1]*(o-s)+u*(s-t[0])+a*(t[0]-o)==0&&(o-t[0])*(s-t[0])<=0&&(u-t[1])*(a-t[1])<=0)return!e;u>t[1]!=a>t[1]&&t[0]<(s-o)*(t[1]-u)/(a-u)+o&&(r=!r)}return r}function yn(t,n){var e=[];return D(t,(function(t){var r=!1;if("Point"===t.geometry.type)G(n,(function(n){dn(t,n)&&(r=!0)})),r&&e.push(t);else{if("MultiPoint"!==t.geometry.type)throw new Error("Input geometry must be a Point or MultiPoint");var l=[];G(n,(function(n){N(t,(function(t){dn(t,n)&&(r=!0,l.push(t))}))})),r&&e.push(g(l))}})),p(e)}function _n(t,n,e){void 0===e&&(e={});var r=J(t),l=J(n),i=C(l[1]-r[1]),o=C(l[0]-r[0]),u=C(r[1]),s=C(l[1]),a=Math.pow(Math.sin(i/2),2)+Math.pow(Math.sin(o/2),2)*Math.cos(u)*Math.cos(s);return m(2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a)),e.units)}function vn(t,n){var e=!1;return p(function(t){if(t.length<3)return[];t.sort(bn);for(var n,e,r,l,i,o,u=t.length-1,s=t[u].x,a=t[0].x,h=t[u].y,c=h;u--;)t[u].y<h&&(h=t[u].y),t[u].y>c&&(c=t[u].y);var f,p=a-s,d=c-h,g=p>d?p:d,y=.5*(a+s),_=.5*(c+h),v=[new mn({__sentinel:!0,x:y-20*g,y:_-g},{__sentinel:!0,x:y,y:_+20*g},{__sentinel:!0,x:y+20*g,y:_-g})],m=[],b=[];for(u=t.length;u--;){for(b.length=0,f=v.length;f--;)(p=t[u].x-v[f].x)>0&&p*p>v[f].r?(m.push(v[f]),v.splice(f,1)):p*p+(d=t[u].y-v[f].y)*d>v[f].r||(b.push(v[f].a,v[f].b,v[f].b,v[f].c,v[f].c,v[f].a),v.splice(f,1));for(xn(b),f=b.length;f;)e=b[--f],n=b[--f],r=t[u],l=e.x-n.x,i=e.y-n.y,o=2*(l*(r.y-e.y)-i*(r.x-e.x)),Math.abs(o)>1e-12&&v.push(new mn(n,e,r))}for(Array.prototype.push.apply(m,v),u=m.length;u--;)(m[u].a.__sentinel||m[u].b.__sentinel||m[u].c.__sentinel)&&m.splice(u,1);return m}(t.features.map((function(t){var r={x:t.geometry.coordinates[0],y:t.geometry.coordinates[1]};return n?r.z=t.properties[n]:3===t.geometry.coordinates.length&&(e=!0,r.z=t.geometry.coordinates[2]),r}))).map((function(t){var n=[t.a.x,t.a.y],r=[t.b.x,t.b.y],l=[t.c.x,t.c.y],i={};return e?(n.push(t.a.z),r.push(t.b.z),l.push(t.c.z)):i={a:t.a.z,b:t.b.z,c:t.c.z},a([[n,r,l,n]],i)})))}$t.default=tn;var mn=function(t,n,e){this.a=t,this.b=n,this.c=e;var r,l,i=n.x-t.x,o=n.y-t.y,u=e.x-t.x,s=e.y-t.y,a=i*(t.x+n.x)+o*(t.y+n.y),h=u*(t.x+e.x)+s*(t.y+e.y),c=2*(i*(e.y-n.y)-o*(e.x-n.x));this.x=(s*a-o*h)/c,this.y=(i*h-u*a)/c,r=this.x-t.x,l=this.y-t.y,this.r=r*r+l*l};function bn(t,n){return n.x-t.x}function xn(t){var n,e,r,l,i,o=t.length;t:for(;o;)for(e=t[--o],n=t[--o],r=o;r;)if(i=t[--r],n===(l=t[--r])&&e===i||n===i&&e===l){t.splice(o,2),t.splice(r,2),o-=2;continue t}}function wn(t){if(!t)throw new Error("geojson is required");switch(t.type){case"Feature":return En(t);case"FeatureCollection":return function(t){var n={type:"FeatureCollection"};return Object.keys(t).forEach((function(e){switch(e){case"type":case"features":return;default:n[e]=t[e]}})),n.features=t.features.map((function(t){return En(t)})),n}(t);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return Cn(t);default:throw new Error("unknown GeoJSON type")}}function En(t){var n={type:"Feature"};return Object.keys(t).forEach((function(e){switch(e){case"type":case"properties":case"geometry":return;default:n[e]=t[e]}})),n.properties=function t(n){var e={};return n?(Object.keys(n).forEach((function(r){var l=n[r];"object"==typeof l?null===l?e[r]=null:Array.isArray(l)?e[r]=l.map((function(t){return t})):e[r]=t(l):e[r]=l})),e):e}(t.properties),n.geometry=Cn(t.geometry),n}function Cn(t){var n={type:t.type};return t.bbox&&(n.bbox=t.bbox),"GeometryCollection"===t.type?(n.geometries=t.geometries.map((function(t){return Cn(t)})),n):(n.coordinates=function t(n){var e=n;return"object"!=typeof e[0]?e.slice():e.map((function(n){return t(n)}))}(t.coordinates),n)}function On(t){return t[0].toString()+","+t[1].toString()}function Mn(t){return t}function Sn(t,n){var e=function(t){if(null==t)return Mn;var n,e,r=t.scale[0],l=t.scale[1],i=t.translate[0],o=t.translate[1];return function(t,u){u||(n=e=0);var s=2,a=t.length,h=new Array(a);for(h[0]=(n+=t[0])*r+i,h[1]=(e+=t[1])*l+o;s<a;)h[s]=t[s],++s;return h}}(t.transform),r=t.arcs;function l(t,n){n.length&&n.pop();for(var l=r[t<0?~t:t],i=0,o=l.length;i<o;++i)n.push(e(l[i],i));t<0&&function(t,n){for(var e,r=t.length,l=r-n;l<--r;)e=t[l],t[l++]=t[r],t[r]=e}(n,o)}function i(t){return e(t)}function o(t){for(var n=[],e=0,r=t.length;e<r;++e)l(t[e],n);return n.length<2&&n.push(n[0]),n}function u(t){for(var n=o(t);n.length<4;)n.push(n[0]);return n}function s(t){return t.map(u)}return function t(n){var e,r=n.type;switch(r){case"GeometryCollection":return{type:r,geometries:n.geometries.map(t)};case"Point":e=i(n.coordinates);break;case"MultiPoint":e=n.coordinates.map(i);break;case"LineString":e=o(n.arcs);break;case"MultiLineString":e=n.arcs.map(o);break;case"Polygon":e=s(n.arcs);break;case"MultiPolygon":e=n.arcs.map(s);break;default:return null}return{type:r,coordinates:e}}(n)}function In(t,n){var e={},r=[],l=[];function i(t){t.forEach((function(n){n.forEach((function(n){(e[n=n<0?~n:n]||(e[n]=[])).push(t)}))})),r.push(t)}function o(n){return function(t){for(var n,e=-1,r=t.length,l=t[r-1],i=0;++e<r;)n=l,l=t[e],i+=n[0]*l[1]-n[1]*l[0];return Math.abs(i)}(Sn(t,{type:"Polygon",arcs:[n]}).coordinates[0])}return n.forEach((function t(n){switch(n.type){case"GeometryCollection":n.geometries.forEach(t);break;case"Polygon":i(n.arcs);break;case"MultiPolygon":n.arcs.forEach(i)}})),r.forEach((function(t){if(!t._){var n=[],r=[t];for(t._=1,l.push(n);t=r.pop();)n.push(t),t.forEach((function(t){t.forEach((function(t){e[t<0?~t:t].forEach((function(t){t._||(t._=1,r.push(t))}))}))}))}})),r.forEach((function(t){delete t._})),{type:"MultiPolygon",arcs:l.map((function(n){var r,l=[];if(n.forEach((function(t){t.forEach((function(t){t.forEach((function(t){e[t<0?~t:t].length<2&&l.push(t)}))}))})),(r=(l=function(t,n){var e={},r={},l={},i=[],o=-1;function u(t,n){for(var r in t){var l=t[r];delete n[l.start],delete l.start,delete l.end,l.forEach((function(t){e[t<0?~t:t]=1})),i.push(l)}}return n.forEach((function(e,r){var l,i=t.arcs[e<0?~e:e];i.length<3&&!i[1][0]&&!i[1][1]&&(l=n[++o],n[o]=e,n[r]=l)})),n.forEach((function(n){var e,i,o=function(n){var e,r=t.arcs[n<0?~n:n],l=r[0];return t.transform?(e=[0,0],r.forEach((function(t){e[0]+=t[0],e[1]+=t[1]}))):e=r[r.length-1],n<0?[e,l]:[l,e]}(n),u=o[0],s=o[1];if(e=l[u])if(delete l[e.end],e.push(n),e.end=s,i=r[s]){delete r[i.start];var a=i===e?e:e.concat(i);r[a.start=e.start]=l[a.end=i.end]=a}else r[e.start]=l[e.end]=e;else if(e=r[s])if(delete r[e.start],e.unshift(n),e.start=u,i=l[u]){delete l[i.end];var h=i===e?e:i.concat(e);r[h.start=i.start]=l[h.end=e.end]=h}else r[e.start]=l[e.end]=e;else r[(e=[n]).start=u]=l[e.end=s]=e})),u(l,r),u(r,l),n.forEach((function(t){e[t<0?~t:t]||i.push([t])})),i}(t,l)).length)>1)for(var i,u,s=1,a=o(l[0]);s<r;++s)(i=o(l[s]))>a&&(u=l[0],l[0]=l[s],l[s]=u,a=i);return l})).filter((function(t){return t.length>0}))}}var Pn=Object.prototype.hasOwnProperty;function Rn(t,n,e,r,l,i){3===arguments.length&&(r=i=Array,l=null);for(var o=new r(t=1<<Math.max(4,Math.ceil(Math.log(t)/Math.LN2))),u=new i(t),s=t-1,a=0;a<t;++a)o[a]=l;function h(r,i){for(var a=n(r)&s,h=o[a],c=0;h!=l;){if(e(h,r))return u[a]=i;if(++c>=t)throw new Error("full hashmap");h=o[a=a+1&s]}return o[a]=r,u[a]=i,i}function c(r,i){for(var a=n(r)&s,h=o[a],c=0;h!=l;){if(e(h,r))return u[a];if(++c>=t)throw new Error("full hashmap");h=o[a=a+1&s]}return o[a]=r,u[a]=i,i}function f(r,i){for(var a=n(r)&s,h=o[a],c=0;h!=l;){if(e(h,r))return u[a];if(++c>=t)break;h=o[a=a+1&s]}return i}function p(){for(var t=[],n=0,e=o.length;n<e;++n){var r=o[n];r!=l&&t.push(r)}return t}return{set:h,maybeSet:c,get:f,keys:p}}function Tn(t,n){return t[0]===n[0]&&t[1]===n[1]}var Nn=new ArrayBuffer(16),Ln=new Float64Array(Nn),An=new Uint32Array(Nn);function jn(t){Ln[0]=t[0],Ln[1]=t[1];var n=An[0]^An[1];return 2147483647&(n<<5^n>>7^An[2]^An[3])}function Dn(t,n,e,r){kn(t,n,e),kn(t,n,n+r),kn(t,n+r,e)}function kn(t,n,e){for(var r,l=n+(e---n>>1);n<l;++n,--e)r=t[n],t[n]=t[e],t[e]=r}function Fn(t){var n={type:"GeometryCollection",geometries:t.features.map(Gn)};return null!=t.bbox&&(n.bbox=t.bbox),n}function Gn(t){var n,e=zn(t.geometry);for(n in null!=t.id&&(e.id=t.id),null!=t.bbox&&(e.bbox=t.bbox),t.properties){e.properties=t.properties;break}return e}function zn(t){if(null==t)return{type:null};var n="GeometryCollection"===t.type?{type:"GeometryCollection",geometries:t.geometries.map(zn)}:"Point"===t.type||"MultiPoint"===t.type?{type:t.type,coordinates:t.coordinates}:{type:t.type,arcs:t.coordinates};return null!=t.bbox&&(n.bbox=t.bbox),n}function Bn(t,n){var e=function(t){var n=1/0,e=1/0,r=-1/0,l=-1/0;function i(t){null!=t&&Pn.call(o,t.type)&&o[t.type](t)}var o={GeometryCollection:function(t){t.geometries.forEach(i)},Point:function(t){u(t.coordinates)},MultiPoint:function(t){t.coordinates.forEach(u)},LineString:function(t){s(t.arcs)},MultiLineString:function(t){t.arcs.forEach(s)},Polygon:function(t){t.arcs.forEach(s)},MultiPolygon:function(t){t.arcs.forEach(a)}};function u(t){var i=t[0],o=t[1];i<n&&(n=i),i>r&&(r=i),o<e&&(e=o),o>l&&(l=o)}function s(t){t.forEach(u)}function a(t){t.forEach(s)}for(var h in t)i(t[h]);return r>=n&&l>=e?[n,e,r,l]:void 0}(t=function(t){var n,e,r={};for(n in t)r[n]=null==(e=t[n])?{type:null}:("FeatureCollection"===e.type?Fn:"Feature"===e.type?Gn:zn)(e);return r}(t)),r=n>0&&e&&function(t,n,e){var r=n[0],l=n[1],i=n[2],o=n[3],u=i-r?(e-1)/(i-r):1,s=o-l?(e-1)/(o-l):1;function a(t){return[Math.round((t[0]-r)*u),Math.round((t[1]-l)*s)]}function h(t,n){for(var e,i,o,a,h,c=-1,f=0,p=t.length,d=new Array(p);++c<p;)e=t[c],a=Math.round((e[0]-r)*u),h=Math.round((e[1]-l)*s),a===i&&h===o||(d[f++]=[i=a,o=h]);for(d.length=f;f<n;)f=d.push([d[0][0],d[0][1]]);return d}function c(t){return h(t,2)}function f(t){return h(t,4)}function p(t){return t.map(f)}function d(t){null!=t&&Pn.call(g,t.type)&&g[t.type](t)}var g={GeometryCollection:function(t){t.geometries.forEach(d)},Point:function(t){t.coordinates=a(t.coordinates)},MultiPoint:function(t){t.coordinates=t.coordinates.map(a)},LineString:function(t){t.arcs=c(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(c)},Polygon:function(t){t.arcs=p(t.arcs)},MultiPolygon:function(t){t.arcs=t.arcs.map(p)}};for(var y in t)d(t[y]);return{scale:[1/u,1/s],translate:[r,l]}}(t,e,n),l=function(t){var n,e,r,l,i=t.coordinates,o=t.lines,u=t.rings,s=o.length+u.length;for(delete t.lines,delete t.rings,r=0,l=o.length;r<l;++r)for(n=o[r];n=n.next;)++s;for(r=0,l=u.length;r<l;++r)for(e=u[r];e=e.next;)++s;var a=Rn(2*s*1.4,jn,Tn),h=t.arcs=[];for(r=0,l=o.length;r<l;++r){n=o[r];do{c(n)}while(n=n.next)}for(r=0,l=u.length;r<l;++r)if((e=u[r]).next)do{c(e)}while(e=e.next);else f(e);function c(t){var n,e,r,l,o,u,s,c;if(r=a.get(n=i[t[0]]))for(s=0,c=r.length;s<c;++s)if(p(l=r[s],t))return t[0]=l[0],void(t[1]=l[1]);if(o=a.get(e=i[t[1]]))for(s=0,c=o.length;s<c;++s)if(d(u=o[s],t))return t[1]=u[0],void(t[0]=u[1]);r?r.push(t):a.set(n,[t]),o?o.push(t):a.set(e,[t]),h.push(t)}function f(t){var n,e,r,l,o;if(e=a.get(i[t[0]]))for(l=0,o=e.length;l<o;++l){if(g(r=e[l],t))return t[0]=r[0],void(t[1]=r[1]);if(y(r,t))return t[0]=r[1],void(t[1]=r[0])}if(e=a.get(n=i[t[0]+_(t)]))for(l=0,o=e.length;l<o;++l){if(g(r=e[l],t))return t[0]=r[0],void(t[1]=r[1]);if(y(r,t))return t[0]=r[1],void(t[1]=r[0])}e?e.push(t):a.set(n,[t]),h.push(t)}function p(t,n){var e=t[0],r=n[0],l=t[1];if(e-l!=r-n[1])return!1;for(;e<=l;++e,++r)if(!Tn(i[e],i[r]))return!1;return!0}function d(t,n){var e=t[0],r=n[0],l=t[1],o=n[1];if(e-l!=r-o)return!1;for(;e<=l;++e,--o)if(!Tn(i[e],i[o]))return!1;return!0}function g(t,n){var e=t[0],r=n[0],l=t[1]-e;if(l!==n[1]-r)return!1;for(var o=_(t),u=_(n),s=0;s<l;++s)if(!Tn(i[e+(s+o)%l],i[r+(s+u)%l]))return!1;return!0}function y(t,n){var e=t[0],r=n[0],l=t[1],o=n[1],u=l-e;if(u!==o-r)return!1;for(var s=_(t),a=u-_(n),h=0;h<u;++h)if(!Tn(i[e+(h+s)%u],i[o-(h+a)%u]))return!1;return!0}function _(t){for(var n=t[0],e=t[1],r=n,l=r,o=i[r];++r<e;){var u=i[r];(u[0]<o[0]||u[0]===o[0]&&u[1]<o[1])&&(l=r,o=u)}return l-n}return t}(function(t){var n,e,r,l=function(t){var n,e,r,l,i=t.coordinates,o=t.lines,u=t.rings,s=function(){for(var t=Rn(1.4*i.length,x,w,Int32Array,-1,Int32Array),n=new Int32Array(i.length),e=0,r=i.length;e<r;++e)n[e]=t.maybeSet(e,e);return n}(),a=new Int32Array(i.length),h=new Int32Array(i.length),c=new Int32Array(i.length),f=new Int8Array(i.length),p=0;for(n=0,e=i.length;n<e;++n)a[n]=h[n]=c[n]=-1;for(n=0,e=o.length;n<e;++n){var d=o[n],g=d[0],y=d[1];for(r=s[g],l=s[++g],++p,f[r]=1;++g<=y;)b(n,r,r=l,l=s[g]);++p,f[l]=1}for(n=0,e=i.length;n<e;++n)a[n]=-1;for(n=0,e=u.length;n<e;++n){var _=u[n],v=_[0]+1,m=_[1];for(b(n,s[m-1],r=s[v-1],l=s[v]);++v<=m;)b(n,r,r=l,l=s[v])}function b(t,n,e,r){if(a[e]!==t){a[e]=t;var l=h[e];if(l>=0){var i=c[e];l===n&&i===r||l===r&&i===n||(++p,f[e]=1)}else h[e]=n,c[e]=r}}function x(t){return jn(i[t])}function w(t,n){return Tn(i[t],i[n])}a=h=c=null;var E,C=function(t,n,e,r,l){3===arguments.length&&(r=Array,l=null);for(var i=new r(t=1<<Math.max(4,Math.ceil(Math.log(t)/Math.LN2))),o=t-1,u=0;u<t;++u)i[u]=l;function s(r){for(var u=n(r)&o,s=i[u],a=0;s!=l;){if(e(s,r))return!0;if(++a>=t)throw new Error("full hashset");s=i[u=u+1&o]}return i[u]=r,!0}function a(r){for(var u=n(r)&o,s=i[u],a=0;s!=l;){if(e(s,r))return!0;if(++a>=t)break;s=i[u=u+1&o]}return!1}function h(){for(var t=[],n=0,e=i.length;n<e;++n){var r=i[n];r!=l&&t.push(r)}return t}return{add:s,has:a,values:h}}(1.4*p,jn,Tn);for(n=0,e=i.length;n<e;++n)f[E=s[n]]&&C.add(i[E]);return C}(t),i=t.coordinates,o=t.lines,u=t.rings;for(e=0,r=o.length;e<r;++e)for(var s=o[e],a=s[0],h=s[1];++a<h;)l.has(i[a])&&(n={0:a,1:s[1]},s[1]=a,s=s.next=n);for(e=0,r=u.length;e<r;++e)for(var c=u[e],f=c[0],p=f,d=c[1],g=l.has(i[f]);++p<d;)l.has(i[p])&&(g?(n={0:p,1:c[1]},c[1]=p,c=c.next=n):(Dn(i,f,d,d-p),i[d]=i[f],g=!0,p=f));return t}(function(t){var n=-1,e=[],r=[],l=[];function i(t){t&&Pn.call(o,t.type)&&o[t.type](t)}var o={GeometryCollection:function(t){t.geometries.forEach(i)},LineString:function(t){t.arcs=u(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(u)},Polygon:function(t){t.arcs=t.arcs.map(s)},MultiPolygon:function(t){t.arcs=t.arcs.map(a)}};function u(t){for(var r=0,i=t.length;r<i;++r)l[++n]=t[r];var o={0:n-i+1,1:n};return e.push(o),o}function s(t){for(var e=0,i=t.length;e<i;++e)l[++n]=t[e];var o={0:n-i+1,1:n};return r.push(o),o}function a(t){return t.map(s)}for(var h in t)i(t[h]);return{type:"Topology",coordinates:l,lines:e,rings:r,objects:t}}(t))),i=l.coordinates,o=Rn(1.4*l.arcs.length,Un,qn);function u(t){t&&Pn.call(s,t.type)&&s[t.type](t)}t=l.objects,l.bbox=e,l.arcs=l.arcs.map((function(t,n){return o.set(t,n),i.slice(t[0],t[1]+1)})),delete l.coordinates,i=null;var s={GeometryCollection:function(t){t.geometries.forEach(u)},LineString:function(t){t.arcs=a(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(a)},Polygon:function(t){t.arcs=t.arcs.map(a)},MultiPolygon:function(t){t.arcs=t.arcs.map(h)}};function a(t){var n=[];do{var e=o.get(t);n.push(t[0]<t[1]?e:~e)}while(t=t.next);return n}function h(t){return t.map(a)}for(var c in t)u(t[c]);return r&&(l.transform=r,l.arcs=function(t){for(var n=-1,e=t.length;++n<e;){for(var r,l,i=t[n],o=0,u=1,s=i.length,a=i[0],h=a[0],c=a[1];++o<s;)r=(a=i[o])[0],l=a[1],r===h&&l===c||(i[u++]=[r-h,l-c],h=r,c=l);1===u&&(i[u++]=[0,0]),i.length=u}return t}(l.arcs)),l}function Un(t){var n,e=t[0],r=t[1];return r<e&&(n=e,e=r,r=n),e+31*r}function qn(t,n){var e,r=t[0],l=t[1],i=n[0],o=n[1];return l<r&&(e=r,r=l,l=e),o<i&&(e=i,i=o,o=e),r===i&&l===o}function Yn(t,n){if(void 0===n&&(n={}),!I(n=n||{}))throw new Error("options is invalid");var e=n.mutate;if("FeatureCollection"!==lt(t))throw new Error("geojson must be a FeatureCollection");if(!t.features.length)throw new Error("geojson is empty");!1!==e&&void 0!==e||(t=wn(t));var r=function(t){var n={};B(t,(function(t){n[t.geometry.type]=!0}));var e=Object.keys(n);return 1===e.length?e[0]:null}(t);if(!r)throw new Error("geojson must be homogenous");var l=t;switch(r){case"LineString":return function(t,n){if(void 0===n&&(n={}),!I(n=n||{}))throw new Error("options is invalid");var e=n.mutate;if("FeatureCollection"!==lt(t))throw new Error("geojson must be a FeatureCollection");if(!t.features.length)throw new Error("geojson is empty");!1!==e&&void 0!==e||(t=wn(t));var r=[],l=V(t,(function(t,n){return function(t,n){var e,r=t.geometry.coordinates,l=n.geometry.coordinates,i=On(r[0]),o=On(r[r.length-1]),u=On(l[0]),s=On(l[l.length-1]);if(i===s)e=l.concat(r.slice(1));else if(u===o)e=r.concat(l.slice(1));else if(i===u)e=r.slice(1).reverse().concat(l);else{if(o!==s)return null;e=r.concat(l.reverse().slice(1))}return c(e)}(t,n)||(r.push(t),n)}));return l&&r.push(l),r.length?1===r.length?r[0]:d(r.map((function(t){return t.coordinates}))):null}(l,n);case"Polygon":return function(t,n){if(void 0===n&&(n={}),"FeatureCollection"!==lt(t))throw new Error("geojson must be a FeatureCollection");if(!t.features.length)throw new Error("geojson is empty");!1!==n.mutate&&void 0!==n.mutate||(t=wn(t));var e=[];B(t,(function(t){e.push(t.geometry)}));var r=Bn({geoms:_(e).geometry});return function(t){return Sn(t,In.apply(this,arguments))}(r,r.objects.geoms.geometries)}(l,n);default:throw new Error(r+" is not supported")}}function Xn(t,n){void 0===n&&(n={});var e="object"==typeof n?n.mutate:n;if(!t)throw new Error("geojson is required");var r=lt(t),l=[];switch(r){case"LineString":l=Vn(t);break;case"MultiLineString":case"Polygon":Q(t).forEach((function(t){l.push(Vn(t))}));break;case"MultiPolygon":Q(t).forEach((function(t){var n=[];t.forEach((function(t){n.push(Vn(t))})),l.push(n)}));break;case"Point":return t;case"MultiPoint":var o={};Q(t).forEach((function(t){var n=t.join("-");Object.prototype.hasOwnProperty.call(o,n)||(l.push(t),o[n]=!0)}));break;default:throw new Error(r+" geometry not supported")}return t.coordinates?!0===e?(t.coordinates=l,t):{type:r,coordinates:l}:!0===e?(t.geometry.coordinates=l,t):i({type:r,coordinates:l},t.properties,{bbox:t.bbox,id:t.id})}function Vn(t){var n=Q(t);if(2===n.length&&!Wn(n[0],n[1]))return n;var e=[],r=n.length-1,l=e.length;e.push(n[0]);for(var i=1;i<r;i++){var o=e[e.length-1];n[i][0]===o[0]&&n[i][1]===o[1]||(e.push(n[i]),(l=e.length)>2&&Zn(e[l-3],e[l-1],e[l-2])&&e.splice(e.length-2,1))}if(e.push(n[n.length-1]),l=e.length,Wn(n[0],n[n.length-1])&&l<4)throw new Error("invalid polygon");return Zn(e[l-3],e[l-1],e[l-2])&&e.splice(e.length-2,1),e}function Wn(t,n){return t[0]===n[0]&&t[1]===n[1]}function Zn(t,n,e){var r=e[0],l=e[1],i=t[0],o=t[1],u=n[0],s=n[1],a=u-i,h=s-o;return 0==(r-i)*h-(l-o)*a&&(Math.abs(a)>=Math.abs(h)?a>0?i<=r&&r<=u:u<=r&&r<=i:h>0?o<=l&&l<=s:s<=l&&l<=o)}function Hn(t,n,e){var r=n.x,l=n.y,i=e.x-r,o=e.y-l;if(0!==i||0!==o){var u=((t.x-r)*i+(t.y-l)*o)/(i*i+o*o);u>1?(r=e.x,l=e.y):u>0&&(r+=i*u,l+=o*u)}return(i=t.x-r)*i+(o=t.y-l)*o}function Kn(t,n){var e=t.length-1,r=[t[0]];return function t(n,e,r,l,i){for(var o,u=l,s=e+1;s<r;s++){var a=Hn(n[s],n[e],n[r]);a>u&&(o=s,u=a)}u>l&&(o-e>1&&t(n,e,o,l,i),i.push(n[o]),r-o>1&&t(n,o,r,l,i))}(t,0,e,n,r),r.push(t[e]),r}function Jn(t,n,e){if(t.length<=2)return t;var r=void 0!==n?n*n:1;return Kn(t=e?t:function(t,n){for(var e,r,l,i,o,u=t[0],s=[u],a=1,h=t.length;a<h;a++)l=u,(i=(r=e=t[a]).x-l.x)*i+(o=r.y-l.y)*o>n&&(s.push(e),u=e);return u!==e&&s.push(e),s}(t,r),r)}function Qn(t,n,e){return Jn(t.map((function(t){return{x:t[0],y:t[1],z:t[2]}})),n,e).map((function(t){return t.z?[t.x,t.y,t.z]:[t.x,t.y]}))}function $n(t,n,e){return t.map((function(t){var r=t.map((function(t){return{x:t[0],y:t[1]}}));if(r.length<4)throw new Error("invalid polygon");for(var l=Jn(r,n,e).map((function(t){return[t.x,t.y]}));!te(l);)l=Jn(r,n-=.01*n,e).map((function(t){return[t.x,t.y]}));return l[l.length-1][0]===l[0][0]&&l[l.length-1][1]===l[0][1]||l.push(l[0]),l}))}function te(t){return!(t.length<3||3===t.length&&t[2][0]===t[0][0]&&t[2][1]===t[0][1])}var ne=function(){function t(t){this.points=t.points||[],this.duration=t.duration||1e4,this.sharpness=t.sharpness||.85,this.centers=[],this.controls=[],this.stepLength=t.stepLength||60,this.length=this.points.length,this.delay=0;for(var n=0;n<this.length;n++)this.points[n].z=this.points[n].z||0;for(n=0;n<this.length-1;n++){var e=this.points[n],r=this.points[n+1];this.centers.push({x:(e.x+r.x)/2,y:(e.y+r.y)/2,z:(e.z+r.z)/2})}for(this.controls.push([this.points[0],this.points[0]]),n=0;n<this.centers.length-1;n++){var l=this.points[n+1].x-(this.centers[n].x+this.centers[n+1].x)/2,i=this.points[n+1].y-(this.centers[n].y+this.centers[n+1].y)/2,o=this.points[n+1].z-(this.centers[n].y+this.centers[n+1].z)/2;this.controls.push([{x:(1-this.sharpness)*this.points[n+1].x+this.sharpness*(this.centers[n].x+l),y:(1-this.sharpness)*this.points[n+1].y+this.sharpness*(this.centers[n].y+i),z:(1-this.sharpness)*this.points[n+1].z+this.sharpness*(this.centers[n].z+o)},{x:(1-this.sharpness)*this.points[n+1].x+this.sharpness*(this.centers[n+1].x+l),y:(1-this.sharpness)*this.points[n+1].y+this.sharpness*(this.centers[n+1].y+i),z:(1-this.sharpness)*this.points[n+1].z+this.sharpness*(this.centers[n+1].z+o)}])}return this.controls.push([this.points[this.length-1],this.points[this.length-1]]),this.steps=this.cacheSteps(this.stepLength),this}return t.prototype.cacheSteps=function(t){var n=[],e=this.pos(0);n.push(0);for(var r=0;r<this.duration;r+=10){var l=this.pos(r);Math.sqrt((l.x-e.x)*(l.x-e.x)+(l.y-e.y)*(l.y-e.y)+(l.z-e.z)*(l.z-e.z))>t&&(n.push(r),e=l)}return n},t.prototype.vector=function(t){var n=this.pos(t+10),e=this.pos(t-10);return{angle:180*Math.atan2(n.y-e.y,n.x-e.x)/3.14,speed:Math.sqrt((e.x-n.x)*(e.x-n.x)+(e.y-n.y)*(e.y-n.y)+(e.z-n.z)*(e.z-n.z))}},t.prototype.pos=function(t){var n=t-this.delay;n<0&&(n=0),n>this.duration&&(n=this.duration-1);var e=n/this.duration;if(e>=1)return this.points[this.length-1];var r=Math.floor((this.points.length-1)*e);return function(t,n,e,r,l){var i=function(t){var n=t*t;return[n*t,3*n*(1-t),3*t*(1-t)*(1-t),(1-t)*(1-t)*(1-t)]}(t);return{x:l.x*i[0]+r.x*i[1]+e.x*i[2]+n.x*i[3],y:l.y*i[0]+r.y*i[1]+e.y*i[2]+n.y*i[3],z:l.z*i[0]+r.z*i[1]+e.z*i[2]+n.z*i[3]}}((this.length-1)*e-r,this.points[r],this.controls[r][1],this.controls[r+1][0],this.points[r+1])},t}();function ee(t,n){void 0===n&&(n={});for(var e=n.resolution||1e4,r=n.sharpness||.85,l=[],i=rt(t).coordinates.map((function(t){return{x:t[0],y:t[1]}})),o=new ne({duration:e,points:i,sharpness:r}),u=function(t){var n=o.pos(t);Math.floor(t/100)%2==0&&l.push([n.x,n.y])},s=0;s<o.duration;s+=10)u(s);return u(o.duration),c(l,n.properties)}function re(t,n){void 0===n&&(n={});var e=Number(t[0]),r=Number(t[1]),l=Number(t[2]),i=Number(t[3]);if(6===t.length)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var o=[e,r];return a([[o,[l,r],[l,i],[e,i],o]],n.properties,{bbox:t,id:n.id})}function le(t){return re(K(t))}function ie(t){var n=t[0],e=t[1],r=t[2],l=t[3];if(_n(t.slice(0,2),[r,e])>=_n(t.slice(0,2),[n,l])){var i=(e+l)/2;return[n,i-(r-n)/2,r,i+(r-n)/2]}var o=(n+r)/2;return[o-(l-e)/2,e,o+(l-e)/2,l]}function oe(t,n,e,r){void 0===r&&(r={});var l=J(t),i=C(l[0]),o=C(l[1]),s=C(e),a=b(n,r.units),h=Math.asin(Math.sin(o)*Math.cos(a)+Math.cos(o)*Math.sin(a)*Math.cos(s));return u([E(i+Math.atan2(Math.sin(s)*Math.sin(a)*Math.cos(o),Math.cos(a)-Math.sin(o)*Math.sin(h))),E(h)],r.properties)}function ue(t,n,e){void 0===e&&(e={});for(var r=e.steps||64,l=e.properties?e.properties:!Array.isArray(t)&&"Feature"===t.type&&t.properties?t.properties:{},i=[],o=0;o<r;o++)i.push(oe(t,n,-360*o/r,e).geometry.coordinates);return i.push(i[0]),a([i],l)}function se(t,n,e){if(void 0===e&&(e={}),!0===e.final)return function(t,n){var e=se(n,t);return(e+180)%360}(t,n);var r=J(t),l=J(n),i=C(r[0]),o=C(l[0]),u=C(r[1]),s=C(l[1]),a=Math.sin(o-i)*Math.cos(s),h=Math.cos(u)*Math.sin(s)-Math.sin(u)*Math.cos(s)*Math.cos(o-i);return E(Math.atan2(a,h))}function ae(t,n){void 0===n&&(n={});var e=K(t);return u([(e[0]+e[2])/2,(e[1]+e[3])/2],n.properties,n)}function he(t,n){void 0===n&&(n={});var e=0,r=0,l=0;return N(t,(function(t){e+=t[0],r+=t[1],l++}),!0),u([e/l,r/l],n.properties)}function ce(t){var n=[];return"FeatureCollection"===t.type?D(t,(function(t){N(t,(function(e){n.push(u(e,t.properties))}))})):N(t,(function(e){n.push(u(e,t.properties))})),p(n)}var fe=de,pe=de;function de(t,n,e){e=e||2;var r,l,i,o,u,s,a,h=n&&n.length,c=h?n[0]*e:t.length,f=ge(t,0,c,e,!0),p=[];if(!f)return p;if(h&&(f=function(t,n,e,r){var l,i,o,u=[];for(l=0,i=n.length;l<i;l++)(o=ge(t,n[l]*r,l<i-1?n[l+1]*r:t.length,r,!1))===o.next&&(o.steiner=!0),u.push(Oe(o));for(u.sort(we),l=0;l<u.length;l++)Ee(u[l],e),e=ye(e,e.next);return e}(t,n,f,e)),t.length>80*e){r=i=t[0],l=o=t[1];for(var d=e;d<c;d+=e)(u=t[d])<r&&(r=u),(s=t[d+1])<l&&(l=s),u>i&&(i=u),s>o&&(o=s);a=0!==(a=Math.max(i-r,o-l))?1/a:0}return _e(f,p,e,r,l,a),p}function ge(t,n,e,r,l){var i,o;if(l===De(t,n,e,r)>0)for(i=n;i<e;i+=r)o=Le(i,t[i],t[i+1],o);else for(i=e-r;i>=n;i-=r)o=Le(i,t[i],t[i+1],o);return o&&Pe(o,o.next)&&(Ae(o),o=o.next),o}function ye(t,n){if(!t)return t;n||(n=t);var e,r=t;do{if(e=!1,r.steiner||!Pe(r,r.next)&&0!==Ie(r.prev,r,r.next))r=r.next;else{if(Ae(r),(r=n=r.prev)===r.next)break;e=!0}}while(e||r!==n);return n}function _e(t,n,e,r,l,i,o){if(t){!o&&i&&function(t,n,e,r){var l=t;do{null===l.z&&(l.z=Ce(l.x,l.y,n,e,r)),l.prevZ=l.prev,l.nextZ=l.next,l=l.next}while(l!==t);l.prevZ.nextZ=null,l.prevZ=null,function(t){var n,e,r,l,i,o,u,s,a=1;do{for(e=t,t=null,i=null,o=0;e;){for(o++,r=e,u=0,n=0;n<a&&(u++,r=r.nextZ);n++);for(s=a;u>0||s>0&&r;)0!==u&&(0===s||!r||e.z<=r.z)?(l=e,e=e.nextZ,u--):(l=r,r=r.nextZ,s--),i?i.nextZ=l:t=l,l.prevZ=i,i=l;e=r}i.nextZ=null,a*=2}while(o>1)}(l)}(t,r,l,i);for(var u,s,a=t;t.prev!==t.next;)if(u=t.prev,s=t.next,i?me(t,r,l,i):ve(t))n.push(u.i/e),n.push(t.i/e),n.push(s.i/e),Ae(t),t=s.next,a=s.next;else if((t=s)===a){o?1===o?_e(t=be(t,n,e),n,e,r,l,i,2):2===o&&xe(t,n,e,r,l,i):_e(ye(t),n,e,r,l,i,1);break}}}function ve(t){var n=t.prev,e=t,r=t.next;if(Ie(n,e,r)>=0)return!1;for(var l=t.next.next;l!==t.prev;){if(Me(n.x,n.y,e.x,e.y,r.x,r.y,l.x,l.y)&&Ie(l.prev,l,l.next)>=0)return!1;l=l.next}return!0}function me(t,n,e,r){var l=t.prev,i=t,o=t.next;if(Ie(l,i,o)>=0)return!1;for(var u=l.x<i.x?l.x<o.x?l.x:o.x:i.x<o.x?i.x:o.x,s=l.y<i.y?l.y<o.y?l.y:o.y:i.y<o.y?i.y:o.y,a=l.x>i.x?l.x>o.x?l.x:o.x:i.x>o.x?i.x:o.x,h=l.y>i.y?l.y>o.y?l.y:o.y:i.y>o.y?i.y:o.y,c=Ce(u,s,n,e,r),f=Ce(a,h,n,e,r),p=t.prevZ,d=t.nextZ;p&&p.z>=c&&d&&d.z<=f;){if(p!==t.prev&&p!==t.next&&Me(l.x,l.y,i.x,i.y,o.x,o.y,p.x,p.y)&&Ie(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,d!==t.prev&&d!==t.next&&Me(l.x,l.y,i.x,i.y,o.x,o.y,d.x,d.y)&&Ie(d.prev,d,d.next)>=0)return!1;d=d.nextZ}for(;p&&p.z>=c;){if(p!==t.prev&&p!==t.next&&Me(l.x,l.y,i.x,i.y,o.x,o.y,p.x,p.y)&&Ie(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;d&&d.z<=f;){if(d!==t.prev&&d!==t.next&&Me(l.x,l.y,i.x,i.y,o.x,o.y,d.x,d.y)&&Ie(d.prev,d,d.next)>=0)return!1;d=d.nextZ}return!0}function be(t,n,e){var r=t;do{var l=r.prev,i=r.next.next;!Pe(l,i)&&Re(l,r,r.next,i)&&Te(l,i)&&Te(i,l)&&(n.push(l.i/e),n.push(r.i/e),n.push(i.i/e),Ae(r),Ae(r.next),r=t=i),r=r.next}while(r!==t);return r}function xe(t,n,e,r,l,i){var o=t;do{for(var u=o.next.next;u!==o.prev;){if(o.i!==u.i&&Se(o,u)){var s=Ne(o,u);return o=ye(o,o.next),s=ye(s,s.next),_e(o,n,e,r,l,i),void _e(s,n,e,r,l,i)}u=u.next}o=o.next}while(o!==t)}function we(t,n){return t.x-n.x}function Ee(t,n){if(n=function(t,n){var e,r=n,l=t.x,i=t.y,o=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var u=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(u<=l&&u>o){if(o=u,u===l){if(i===r.y)return r;if(i===r.next.y)return r.next}e=r.x<r.next.x?r:r.next}}r=r.next}while(r!==n);if(!e)return null;if(l===o)return e.prev;var s,a=e,h=e.x,c=e.y,f=1/0;for(r=e.next;r!==a;)l>=r.x&&r.x>=h&&l!==r.x&&Me(i<c?l:o,i,h,c,i<c?o:l,i,r.x,r.y)&&((s=Math.abs(i-r.y)/(l-r.x))<f||s===f&&r.x>e.x)&&Te(r,t)&&(e=r,f=s),r=r.next;return e}(t,n)){var e=Ne(n,t);ye(e,e.next)}}function Ce(t,n,e,r,l){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-e)*l)|t<<8))|t<<4))|t<<2))|t<<1))|(n=1431655765&((n=858993459&((n=252645135&((n=16711935&((n=32767*(n-r)*l)|n<<8))|n<<4))|n<<2))|n<<1))<<1}function Oe(t){var n=t,e=t;do{n.x<e.x&&(e=n),n=n.next}while(n!==t);return e}function Me(t,n,e,r,l,i,o,u){return(l-o)*(n-u)-(t-o)*(i-u)>=0&&(t-o)*(r-u)-(e-o)*(n-u)>=0&&(e-o)*(i-u)-(l-o)*(r-u)>=0}function Se(t,n){return t.next.i!==n.i&&t.prev.i!==n.i&&!function(t,n){var e=t;do{if(e.i!==t.i&&e.next.i!==t.i&&e.i!==n.i&&e.next.i!==n.i&&Re(e,e.next,t,n))return!0;e=e.next}while(e!==t);return!1}(t,n)&&Te(t,n)&&Te(n,t)&&function(t,n){var e=t,r=!1,l=(t.x+n.x)/2,i=(t.y+n.y)/2;do{e.y>i!=e.next.y>i&&e.next.y!==e.y&&l<(e.next.x-e.x)*(i-e.y)/(e.next.y-e.y)+e.x&&(r=!r),e=e.next}while(e!==t);return r}(t,n)}function Ie(t,n,e){return(n.y-t.y)*(e.x-n.x)-(n.x-t.x)*(e.y-n.y)}function Pe(t,n){return t.x===n.x&&t.y===n.y}function Re(t,n,e,r){return!!(Pe(t,n)&&Pe(e,r)||Pe(t,r)&&Pe(e,n))||Ie(t,n,e)>0!=Ie(t,n,r)>0&&Ie(e,r,t)>0!=Ie(e,r,n)>0}function Te(t,n){return Ie(t.prev,t,t.next)<0?Ie(t,n,t.next)>=0&&Ie(t,t.prev,n)>=0:Ie(t,n,t.prev)<0||Ie(t,t.next,n)<0}function Ne(t,n){var e=new je(t.i,t.x,t.y),r=new je(n.i,n.x,n.y),l=t.next,i=n.prev;return t.next=n,n.prev=t,e.next=l,l.prev=e,r.next=e,e.prev=r,i.next=r,r.prev=i,r}function Le(t,n,e,r){var l=new je(t,n,e);return r?(l.next=r.next,l.prev=r,r.next.prev=l,r.next=l):(l.prev=l,l.next=l),l}function Ae(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function je(t,n,e){this.i=t,this.x=n,this.y=e,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function De(t,n,e,r){for(var l=0,i=n,o=e-r;i<e;i+=r)l+=(t[o]-t[i])*(t[i+1]+t[o+1]),o=i;return l}function ke(t){var n=function(t){for(var n=t[0][0].length,e={vertices:[],holes:[],dimensions:n},r=0,l=0;l<t.length;l++){for(var i=0;i<t[l].length;i++)for(var o=0;o<n;o++)e.vertices.push(t[l][i][o]);l>0&&(r+=t[l-1].length,e.holes.push(r))}return e}(t),e=fe(n.vertices,n.holes,2),r=[],l=[];e.forEach((function(t,r){var i=e[r];l.push([n.vertices[2*i],n.vertices[2*i+1]])}));for(var i=0;i<l.length;i+=3){var o=l.slice(i,i+3);o.push(l[i]),r.push(a([o]))}return r}function Fe(t,n){if(!t)throw new Error("targetPoint is required");if(!n)throw new Error("points is required");var e,r=1/0,l=0;return D(n,(function(n,e){var i=_n(t,n);i<r&&(l=e,r=i)})),(e=wn(n.features[l])).properties.featureIndex=l,e.properties.distanceToPoint=r,e}function Ge(t){if(!t)throw new Error("geojson is required");var n=[];return B(t,(function(t){!function(t,n){var e=[],r=t.geometry;if(null!==r){switch(r.type){case"Polygon":e=Q(r);break;case"LineString":e=[Q(r)]}e.forEach((function(e){(function(t,n){var e=[];return t.reduce((function(t,r){var l=c([t,r],n);return l.bbox=function(t,n){var e=t[0],r=t[1],l=n[0],i=n[1];return[e<l?e:l,r<i?r:i,e>l?e:l,r>i?r:i]}(t,r),e.push(l),r})),e})(e,t.properties).forEach((function(t){t.id=n.length,n.push(t)}))}))}}(t,n)})),p(n)}de.deviation=function(t,n,e,r){var l=n&&n.length,i=l?n[0]*e:t.length,o=Math.abs(De(t,0,i,e));if(l)for(var u=0,s=n.length;u<s;u++){var a=n[u]*e,h=u<s-1?n[u+1]*e:t.length;o-=Math.abs(De(t,a,h,e))}var c=0;for(u=0;u<r.length;u+=3){var f=r[u]*e,p=r[u+1]*e,d=r[u+2]*e;c+=Math.abs((t[f]-t[d])*(t[p+1]-t[f+1])-(t[f]-t[p])*(t[d+1]-t[f+1]))}return 0===o&&0===c?0:Math.abs((c-o)/o)},de.flatten=function(t){for(var n=t[0][0].length,e={vertices:[],holes:[],dimensions:n},r=0,l=0;l<t.length;l++){for(var i=0;i<t[l].length;i++)for(var o=0;o<n;o++)e.vertices.push(t[l][i][o]);l>0&&(r+=t[l-1].length,e.holes.push(r))}return e},fe.default=pe;var ze=Ft((function(t,n){function e(t,n,e){void 0===e&&(e={});var r={type:"Feature"};return(0===e.id||e.id)&&(r.id=e.id),e.bbox&&(r.bbox=e.bbox),r.properties=n||{},r.geometry=t,r}function r(t,n,r){if(void 0===r&&(r={}),!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");if(t.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!p(t[0])||!p(t[1]))throw new Error("coordinates must contain numbers");return e({type:"Point",coordinates:t},n,r)}function l(t,n,r){void 0===r&&(r={});for(var l=0,i=t;l<i.length;l++){var o=i[l];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<o[o.length-1].length;u++)if(o[o.length-1][u]!==o[0][u])throw new Error("First and last Position are not equivalent.")}return e({type:"Polygon",coordinates:t},n,r)}function i(t,n,r){if(void 0===r&&(r={}),t.length<2)throw new Error("coordinates must be an array of two or more positions");return e({type:"LineString",coordinates:t},n,r)}function o(t,n){void 0===n&&(n={});var e={type:"FeatureCollection"};return n.id&&(e.id=n.id),n.bbox&&(e.bbox=n.bbox),e.features=t,e}function u(t,n,r){return void 0===r&&(r={}),e({type:"MultiLineString",coordinates:t},n,r)}function s(t,n,r){return void 0===r&&(r={}),e({type:"MultiPoint",coordinates:t},n,r)}function a(t,n,r){return void 0===r&&(r={}),e({type:"MultiPolygon",coordinates:t},n,r)}function h(t,e){void 0===e&&(e="kilometers");var r=n.factors[e];if(!r)throw new Error(e+" units is invalid");return t*r}function c(t,e){void 0===e&&(e="kilometers");var r=n.factors[e];if(!r)throw new Error(e+" units is invalid");return t/r}function f(t){return t%(2*Math.PI)*180/Math.PI}function p(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}Object.defineProperty(n,"__esModule",{value:!0}),n.earthRadius=6371008.8,n.factors={centimeters:100*n.earthRadius,centimetres:100*n.earthRadius,degrees:n.earthRadius/111325,feet:3.28084*n.earthRadius,inches:39.37*n.earthRadius,kilometers:n.earthRadius/1e3,kilometres:n.earthRadius/1e3,meters:n.earthRadius,metres:n.earthRadius,miles:n.earthRadius/1609.344,millimeters:1e3*n.earthRadius,millimetres:1e3*n.earthRadius,nauticalmiles:n.earthRadius/1852,radians:1,yards:1.0936*n.earthRadius},n.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/n.earthRadius,yards:1.0936133},n.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},n.feature=e,n.geometry=function(t,n,e){switch(t){case"Point":return r(n).geometry;case"LineString":return i(n).geometry;case"Polygon":return l(n).geometry;case"MultiPoint":return s(n).geometry;case"MultiLineString":return u(n).geometry;case"MultiPolygon":return a(n).geometry;default:throw new Error(t+" is invalid")}},n.point=r,n.points=function(t,n,e){return void 0===e&&(e={}),o(t.map((function(t){return r(t,n)})),e)},n.polygon=l,n.polygons=function(t,n,e){return void 0===e&&(e={}),o(t.map((function(t){return l(t,n)})),e)},n.lineString=i,n.lineStrings=function(t,n,e){return void 0===e&&(e={}),o(t.map((function(t){return i(t,n)})),e)},n.featureCollection=o,n.multiLineString=u,n.multiPoint=s,n.multiPolygon=a,n.geometryCollection=function(t,n,r){return void 0===r&&(r={}),e({type:"GeometryCollection",geometries:t},n,r)},n.round=function(t,n){if(void 0===n&&(n=0),n&&!(n>=0))throw new Error("precision must be a positive number");var e=Math.pow(10,n||0);return Math.round(t*e)/e},n.radiansToLength=h,n.lengthToRadians=c,n.lengthToDegrees=function(t,n){return f(c(t,n))},n.bearingToAzimuth=function(t){var n=t%360;return n<0&&(n+=360),n},n.radiansToDegrees=f,n.degreesToRadians=function(t){return t%360*Math.PI/180},n.convertLength=function(t,n,e){if(void 0===n&&(n="kilometers"),void 0===e&&(e="kilometers"),!(t>=0))throw new Error("length must be a positive number");return h(c(t,n),e)},n.convertArea=function(t,e,r){if(void 0===e&&(e="meters"),void 0===r&&(r="kilometers"),!(t>=0))throw new Error("area must be a positive number");var l=n.areaFactors[e];if(!l)throw new Error("invalid original units");var i=n.areaFactors[r];if(!i)throw new Error("invalid final units");return t/l*i},n.isNumber=p,n.isObject=function(t){return!!t&&t.constructor===Object},n.validateBBox=function(t){if(!t)throw new Error("bbox is required");if(!Array.isArray(t))throw new Error("bbox must be an Array");if(4!==t.length&&6!==t.length)throw new Error("bbox must be an Array of 4 or 6 numbers");t.forEach((function(t){if(!p(t))throw new Error("bbox must only contain numbers")}))},n.validateId=function(t){if(!t)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string")}}));function Be(t,n,e){if(null!==t)for(var r,l,i,o,u,s,a,h,c=0,f=0,p=t.type,d="FeatureCollection"===p,g="Feature"===p,y=d?t.features.length:1,_=0;_<y;_++){u=(h=!!(a=d?t.features[_].geometry:g?t.geometry:t)&&"GeometryCollection"===a.type)?a.geometries.length:1;for(var v=0;v<u;v++){var m=0,b=0;if(null!==(o=h?a.geometries[v]:a)){s=o.coordinates;var x=o.type;switch(c=!e||"Polygon"!==x&&"MultiPolygon"!==x?0:1,x){case null:break;case"Point":if(!1===n(s,f,_,m,b))return!1;f++,m++;break;case"LineString":case"MultiPoint":for(r=0;r<s.length;r++){if(!1===n(s[r],f,_,m,b))return!1;f++,"MultiPoint"===x&&m++}"LineString"===x&&m++;break;case"Polygon":case"MultiLineString":for(r=0;r<s.length;r++){for(l=0;l<s[r].length-c;l++){if(!1===n(s[r][l],f,_,m,b))return!1;f++}"MultiLineString"===x&&m++,"Polygon"===x&&b++}"Polygon"===x&&m++;break;case"MultiPolygon":for(r=0;r<s.length;r++){for(b=0,l=0;l<s[r].length;l++){for(i=0;i<s[r][l].length-c;i++){if(!1===n(s[r][l][i],f,_,m,b))return!1;f++}b++}m++}break;case"GeometryCollection":for(r=0;r<o.geometries.length;r++)if(!1===Be(o.geometries[r],n,e))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function Ue(t,n){var e;switch(t.type){case"FeatureCollection":for(e=0;e<t.features.length&&!1!==n(t.features[e].properties,e);e++);break;case"Feature":n(t.properties,0)}}function qe(t,n){if("Feature"===t.type)n(t,0);else if("FeatureCollection"===t.type)for(var e=0;e<t.features.length&&!1!==n(t.features[e],e);e++);}function Ye(t,n){var e,r,l,i,o,u,s,a,h,c,f=0,p="FeatureCollection"===t.type,d="Feature"===t.type,g=p?t.features.length:1;for(e=0;e<g;e++){for(u=p?t.features[e].geometry:d?t.geometry:t,a=p?t.features[e].properties:d?t.properties:{},h=p?t.features[e].bbox:d?t.bbox:void 0,c=p?t.features[e].id:d?t.id:void 0,o=(s=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,l=0;l<o;l++)if(null!==(i=s?u.geometries[l]:u))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===n(i,f,a,h,c))return!1;break;case"GeometryCollection":for(r=0;r<i.geometries.length;r++)if(!1===n(i.geometries[r],f,a,h,c))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===n(null,f,a,h,c))return!1;f++}}function Xe(t,n){Ye(t,(function(t,e,r,l,i){var o,u=null===t?null:t.type;switch(u){case null:case"Point":case"LineString":case"Polygon":return!1!==n(ze.feature(t,r,{bbox:l,id:i}),e,0)&&void 0}switch(u){case"MultiPoint":o="Point";break;case"MultiLineString":o="LineString";break;case"MultiPolygon":o="Polygon"}for(var s=0;s<t.coordinates.length;s++){var a={type:o,coordinates:t.coordinates[s]};if(!1===n(ze.feature(a,r),e,s))return!1}}))}function Ve(t,n){Xe(t,(function(t,e,r){var l=0;if(t.geometry){var i=t.geometry.type;if("Point"!==i&&"MultiPoint"!==i){var o,u=0,s=0,a=0;return!1!==Be(t,(function(i,h,c,f,p){if(void 0===o||e>u||f>s||p>a)return o=i,u=e,s=f,a=p,void(l=0);var d=ze.lineString([o,i],t.properties);if(!1===n(d,e,r,p,l))return!1;l++,o=i}))&&void 0}}}))}function We(t,n){if(!t)throw new Error("geojson is required");Xe(t,(function(t,e,r){if(null!==t.geometry){var l=t.geometry.type,i=t.geometry.coordinates;switch(l){case"LineString":if(!1===n(t,e,r,0,0))return!1;break;case"Polygon":for(var o=0;o<i.length;o++)if(!1===n(ze.lineString(i[o],t.properties),e,r,o))return!1}}}))}var Ze=Be,He=qe,Ke=Xe,Je=Ye,Qe=We,$e=Ue,tr=Ve,nr=Object.defineProperty({coordAll:function(t){var n=[];return Be(t,(function(t){n.push(t)})),n},coordEach:Ze,coordReduce:function(t,n,e,r){var l=e;return Be(t,(function(t,r,i,o,u){l=0===r&&void 0===e?t:n(l,t,r,i,o,u)}),r),l},featureEach:He,featureReduce:function(t,n,e){var r=e;return qe(t,(function(t,l){r=0===l&&void 0===e?t:n(r,t,l)})),r},findPoint:function(t,n){if(n=n||{},!ze.isObject(n))throw new Error("options is invalid");var e,r=n.featureIndex||0,l=n.multiFeatureIndex||0,i=n.geometryIndex||0,o=n.coordIndex||0,u=n.properties;switch(t.type){case"FeatureCollection":r<0&&(r=t.features.length+r),u=u||t.features[r].properties,e=t.features[r].geometry;break;case"Feature":u=u||t.properties,e=t.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":e=t;break;default:throw new Error("geojson is invalid")}if(null===e)return null;var s=e.coordinates;switch(e.type){case"Point":return ze.point(s,u,n);case"MultiPoint":return l<0&&(l=s.length+l),ze.point(s[l],u,n);case"LineString":return o<0&&(o=s.length+o),ze.point(s[o],u,n);case"Polygon":return i<0&&(i=s.length+i),o<0&&(o=s[i].length+o),ze.point(s[i][o],u,n);case"MultiLineString":return l<0&&(l=s.length+l),o<0&&(o=s[l].length+o),ze.point(s[l][o],u,n);case"MultiPolygon":return l<0&&(l=s.length+l),i<0&&(i=s[l].length+i),o<0&&(o=s[l][i].length-o),ze.point(s[l][i][o],u,n)}throw new Error("geojson is invalid")},findSegment:function(t,n){if(n=n||{},!ze.isObject(n))throw new Error("options is invalid");var e,r=n.featureIndex||0,l=n.multiFeatureIndex||0,i=n.geometryIndex||0,o=n.segmentIndex||0,u=n.properties;switch(t.type){case"FeatureCollection":r<0&&(r=t.features.length+r),u=u||t.features[r].properties,e=t.features[r].geometry;break;case"Feature":u=u||t.properties,e=t.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":e=t;break;default:throw new Error("geojson is invalid")}if(null===e)return null;var s=e.coordinates;switch(e.type){case"Point":case"MultiPoint":return null;case"LineString":return o<0&&(o=s.length+o-1),ze.lineString([s[o],s[o+1]],u,n);case"Polygon":return i<0&&(i=s.length+i),o<0&&(o=s[i].length+o-1),ze.lineString([s[i][o],s[i][o+1]],u,n);case"MultiLineString":return l<0&&(l=s.length+l),o<0&&(o=s[l].length+o-1),ze.lineString([s[l][o],s[l][o+1]],u,n);case"MultiPolygon":return l<0&&(l=s.length+l),i<0&&(i=s[l].length+i),o<0&&(o=s[l][i].length-o-1),ze.lineString([s[l][i][o],s[l][i][o+1]],u,n)}throw new Error("geojson is invalid")},flattenEach:Ke,flattenReduce:function(t,n,e){var r=e;return Xe(t,(function(t,l,i){r=0===l&&0===i&&void 0===e?t:n(r,t,l,i)})),r},geomEach:Je,geomReduce:function(t,n,e){var r=e;return Ye(t,(function(t,l,i,o,u){r=0===l&&void 0===e?t:n(r,t,l,i,o,u)})),r},lineEach:Qe,lineReduce:function(t,n,e){var r=e;return We(t,(function(t,l,i,o){r=0===l&&void 0===e?t:n(r,t,l,i,o)})),r},propEach:$e,propReduce:function(t,n,e){var r=e;return Ue(t,(function(t,l){r=0===l&&void 0===e?t:n(r,t,l)})),r},segmentEach:tr,segmentReduce:function(t,n,e){var r=e,l=!1;return Ve(t,(function(t,i,o,u,s){r=!1===l&&void 0===e?t:n(r,t,i,o,u,s),l=!0})),r}},"__esModule",{value:!0});function er(t){var n=[1/0,1/0,-1/0,-1/0];return nr.coordEach(t,(function(t){n[0]>t[0]&&(n[0]=t[0]),n[1]>t[1]&&(n[1]=t[1]),n[2]<t[0]&&(n[2]=t[0]),n[3]<t[1]&&(n[3]=t[1])})),n}er.default=er;var rr=er,lr=Object.defineProperty({default:rr},"__esModule",{value:!0}).default,ir=nr.featureEach,or=(nr.coordEach,ze.polygon,ze.featureCollection);function ur(t){var n=Et(t);return n.insert=function(t){if("Feature"!==t.type)throw new Error("invalid feature");return t.bbox=t.bbox?t.bbox:lr(t),Et.prototype.insert.call(this,t)},n.load=function(t){var n=[];return Array.isArray(t)?t.forEach((function(t){if("Feature"!==t.type)throw new Error("invalid features");t.bbox=t.bbox?t.bbox:lr(t),n.push(t)})):ir(t,(function(t){if("Feature"!==t.type)throw new Error("invalid features");t.bbox=t.bbox?t.bbox:lr(t),n.push(t)})),Et.prototype.load.call(this,n)},n.remove=function(t,n){if("Feature"!==t.type)throw new Error("invalid feature");return t.bbox=t.bbox?t.bbox:lr(t),Et.prototype.remove.call(this,t,n)},n.clear=function(){return Et.prototype.clear.call(this)},n.search=function(t){var n=Et.prototype.search.call(this,this.toBBox(t));return or(n)},n.collides=function(t){return Et.prototype.collides.call(this,this.toBBox(t))},n.all=function(){var t=Et.prototype.all.call(this);return or(t)},n.toJSON=function(){return Et.prototype.toJSON.call(this)},n.fromJSON=function(t){return Et.prototype.fromJSON.call(this,t)},n.toBBox=function(t){var n;if(t.bbox)n=t.bbox;else if(Array.isArray(t)&&4===t.length)n=t;else if(Array.isArray(t)&&6===t.length)n=[t[0],t[1],t[3],t[4]];else if("Feature"===t.type)n=lr(t);else{if("FeatureCollection"!==t.type)throw new Error("invalid geojson");n=lr(t)}return{minX:n[0],minY:n[1],maxX:n[2],maxY:n[3]}},n}var sr=ur,ar=ur;function hr(t,n){var e={},r=[];if("LineString"===t.type&&(t=i(t)),"LineString"===n.type&&(n=i(n)),"Feature"===t.type&&"Feature"===n.type&&null!==t.geometry&&null!==n.geometry&&"LineString"===t.geometry.type&&"LineString"===n.geometry.type&&2===t.geometry.coordinates.length&&2===n.geometry.coordinates.length){var l=cr(t,n);return l&&r.push(l),p(r)}var o=sr();return o.load(Ge(n)),D(Ge(t),(function(t){D(o.search(t),(function(n){var l=cr(t,n);if(l){var i=Q(l).join(",");e[i]||(e[i]=!0,r.push(l))}}))})),p(r)}function cr(t,n){var e=Q(t),r=Q(n);if(2!==e.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==r.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var l=e[0][0],i=e[0][1],o=e[1][0],s=e[1][1],a=r[0][0],h=r[0][1],c=r[1][0],f=r[1][1],p=(f-h)*(o-l)-(c-a)*(s-i);if(0===p)return null;var d=((c-a)*(i-h)-(f-h)*(l-a))/p,g=((o-l)*(i-h)-(s-i)*(l-a))/p;return d>=0&&d<=1&&g>=0&&g<=1?u([l+d*(o-l),i+d*(s-i)]):null}function fr(t,n,e){void 0===e&&(e={});var r=u([1/0,1/0],{dist:1/0}),l=0;return B(t,(function(t){for(var i=Q(t),o=0;o<i.length-1;o++){var s=u(i[o]);s.properties.dist=_n(n,s,e);var a=u(i[o+1]);a.properties.dist=_n(n,a,e);var h=_n(s,a,e),f=Math.max(s.properties.dist,a.properties.dist),p=se(s,a),d=oe(n,f,p+90,e),g=oe(n,f,p-90,e),y=hr(c([d.geometry.coordinates,g.geometry.coordinates]),c([s.geometry.coordinates,a.geometry.coordinates])),_=null;y.features.length>0&&((_=y.features[0]).properties.dist=_n(n,_,e),_.properties.location=l+_n(s,_,e)),s.properties.dist<r.properties.dist&&((r=s).properties.index=o,r.properties.location=l),a.properties.dist<r.properties.dist&&((r=a).properties.index=o+1,r.properties.location=l+h),_&&_.properties.dist<r.properties.dist&&((r=_).properties.index=o),l+=h}})),r}function pr(t,e,r){void 0===r&&(r={});var l=J(t),i=J(e);return i[0]+=i[0]-l[0]>180?-360:l[0]-i[0]>180?360:0,O(function(t,e,r){var l=r=void 0===r?n:Number(r),i=t[1]*Math.PI/180,o=e[1]*Math.PI/180,u=o-i,s=Math.abs(e[0]-t[0])*Math.PI/180;s>Math.PI&&(s-=2*Math.PI);var a=Math.log(Math.tan(o/2+Math.PI/4)/Math.tan(i/2+Math.PI/4)),h=Math.abs(a)>1e-11?u/a:Math.cos(i);return Math.sqrt(u*u+h*h*s*s)*l}(l,i),"meters",r.units)}function dr(t,n,e){if(void 0===e&&(e={}),e.method||(e.method="geodesic"),e.units||(e.units="kilometers"),!t)throw new Error("pt is required");if(Array.isArray(t)?t=u(t):"Point"===t.type?t=i(t):nt(t,"Point","point"),!n)throw new Error("line is required");Array.isArray(n)?n=c(n):"LineString"===n.type?n=i(n):nt(n,"LineString","line");var r=1/0,l=t.geometry.coordinates;return q(n,(function(t){var n=t.geometry.coordinates[0],i=t.geometry.coordinates[1],o=function(t,n,e,r){var l=[e[0]-n[0],e[1]-n[1]],i=gr([t[0]-n[0],t[1]-n[1]],l);if(i<=0)return yr(t,n,{method:r.method,units:"degrees"});var o=gr(l,l);if(o<=i)return yr(t,e,{method:r.method,units:"degrees"});var u=i/o;return yr(t,[n[0]+u*l[0],n[1]+u*l[1]],{method:r.method,units:"degrees"})}(l,n,i,e);o<r&&(r=o)})),O(r,"degrees",e.units)}function gr(t,n){return t[0]*n[0]+t[1]*n[1]}function yr(t,n,e){return"planar"===e.method?pr(t,n,e):_n(t,n,e)}function _r(t,n,e,r,l,i,o,u){var s,a,h,c,f={x:null,y:null,onLine1:!1,onLine2:!1};return 0==(s=(u-i)*(e-t)-(o-l)*(r-n))?null!==f.x&&null!==f.y&&f:(c=(e-t)*(a=n-i)-(r-n)*(h=t-l),a=((o-l)*a-(u-i)*h)/s,h=c/s,f.x=t+a*(e-t),f.y=n+a*(r-n),a>=0&&a<=1&&(f.onLine1=!0),h>=0&&h<=1&&(f.onLine2=!0),!(!f.onLine1||!f.onLine2)&&[f.x,f.y])}function vr(t){for(var n=function(t){return"FeatureCollection"!==t.type?"Feature"!==t.type?p([i(t)]):p([t]):t}(t),e=ae(n),r=!1,l=0;!r&&l<n.features.length;){var o,s=n.features[l].geometry,a=!1;if("Point"===s.type)e.geometry.coordinates[0]===s.coordinates[0]&&e.geometry.coordinates[1]===s.coordinates[1]&&(r=!0);else if("MultiPoint"===s.type){var h=!1;for(o=0;!h&&o<s.coordinates.length;)e.geometry.coordinates[0]===s.coordinates[o][0]&&e.geometry.coordinates[1]===s.coordinates[o][1]&&(r=!0,h=!0),o++}else if("LineString"===s.type)for(o=0;!a&&o<s.coordinates.length-1;)mr(e.geometry.coordinates[0],e.geometry.coordinates[1],s.coordinates[o][0],s.coordinates[o][1],s.coordinates[o+1][0],s.coordinates[o+1][1])&&(a=!0,r=!0),o++;else if("MultiLineString"===s.type)for(var c=0;c<s.coordinates.length;){a=!1,o=0;for(var f=s.coordinates[c];!a&&o<f.length-1;)mr(e.geometry.coordinates[0],e.geometry.coordinates[1],f[o][0],f[o][1],f[o+1][0],f[o+1][1])&&(a=!0,r=!0),o++;c++}else"Polygon"!==s.type&&"MultiPolygon"!==s.type||dn(e,s)&&(r=!0);l++}if(r)return e;var d=p([]);for(l=0;l<n.features.length;l++)d.features=d.features.concat(ce(n.features[l]).features);return u(Fe(e,d).geometry.coordinates)}function mr(t,n,e,r,l,i){return Math.sqrt((l-e)*(l-e)+(i-r)*(i-r))===Math.sqrt((t-e)*(t-e)+(n-r)*(n-r))+Math.sqrt((l-t)*(l-t)+(i-n)*(i-n))}function br(t){return z(t,(function(t,n){return t+function(t){var n,e=0;switch(t.type){case"Polygon":return xr(t.coordinates);case"MultiPolygon":for(n=0;n<t.coordinates.length;n++)e+=xr(t.coordinates[n]);return e;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}(n)}),0)}function xr(t){var n=0;if(t&&t.length>0){n+=Math.abs(wr(t[0]));for(var e=1;e<t.length;e++)n-=Math.abs(wr(t[e]))}return n}function wr(t){var n,e,r,l,i,o,u=0,s=t.length;if(s>2){for(o=0;o<s;o++)o===s-2?(r=s-2,l=s-1,i=0):o===s-1?(r=s-1,l=0,i=1):(r=o,l=o+1,i=o+2),n=t[r],e=t[l],u+=(Er(t[i][0])-Er(n[0]))*Math.sin(Er(e[1]));u=6378137*u*6378137/2}return u}function Er(t){return t*Math.PI/180}function Cr(t,n){return void 0===n&&(n={}),Y(t,(function(t,e){var r=e.geometry.coordinates;return t+_n(r[0],r[1],n)}),0)}function Or(t,n,e,r){if(!I(r=r||{}))throw new Error("options is invalid");var l,i=[];if("Feature"===t.type)l=t.geometry.coordinates;else{if("LineString"!==t.type)throw new Error("input must be a LineString Feature or Geometry");l=t.coordinates}for(var o,u,s,a=l.length,h=0,f=0;f<l.length&&!(n>=h&&f===l.length-1);f++){if(h>n&&0===i.length){if(!(o=n-h))return i.push(l[f]),c(i);u=se(l[f],l[f-1])-180,s=oe(l[f],o,u,r),i.push(s.geometry.coordinates)}if(h>=e)return(o=e-h)?(u=se(l[f],l[f-1])-180,s=oe(l[f],o,u,r),i.push(s.geometry.coordinates),c(i)):(i.push(l[f]),c(i));if(h>=n&&i.push(l[f]),f===l.length-1)return c(i);h+=_n(l[f],l[f+1],r)}if(h<n&&l.length===a)throw new Error("Start position is beyond line");var p=l[l.length-1];return c([p,p])}function Mr(t,n,e){void 0===e&&(e={});for(var r=J(t),l=Q(n),i=0;i<l.length-1;i++){var o=!1;if(e.ignoreEndVertices&&(0===i&&(o="start"),i===l.length-2&&(o="end"),0===i&&i+1===l.length-1&&(o="both")),Sr(l[i],l[i+1],r,o,void 0===e.epsilon?null:e.epsilon))return!0}return!1}function Sr(t,n,e,r,l){var i=e[0],o=e[1],u=t[0],s=t[1],a=n[0],h=n[1],c=a-u,f=h-s,p=(e[0]-u)*f-(e[1]-s)*c;if(null!==l){if(Math.abs(p)>l)return!1}else if(0!==p)return!1;return r?"start"===r?Math.abs(c)>=Math.abs(f)?c>0?u<i&&i<=a:a<=i&&i<u:f>0?s<o&&o<=h:h<=o&&o<s:"end"===r?Math.abs(c)>=Math.abs(f)?c>0?u<=i&&i<a:a<i&&i<=u:f>0?s<=o&&o<h:h<o&&o<=s:"both"===r&&(Math.abs(c)>=Math.abs(f)?c>0?u<i&&i<a:a<i&&i<u:f>0?s<o&&o<h:h<o&&o<s):Math.abs(c)>=Math.abs(f)?c>0?u<=i&&i<=a:a<=i&&i<=u:f>0?s<=o&&o<=h:h<=o&&o<=s}function Ir(t,n){var e=rt(t),r=rt(n),l=e.type,i=r.type;switch(l){case"Point":switch(i){case"MultiPoint":return function(t,n){var e,r=!1;for(e=0;e<n.coordinates.length;e++)if(Rr(n.coordinates[e],t.coordinates)){r=!0;break}return r}(e,r);case"LineString":return Mr(e,r,{ignoreEndVertices:!0});case"Polygon":case"MultiPolygon":return dn(e,r,{ignoreBoundary:!0});default:throw new Error("feature2 "+i+" geometry not supported")}case"MultiPoint":switch(i){case"MultiPoint":return function(t,n){for(var e=0;e<t.coordinates.length;e++){for(var r=!1,l=0;l<n.coordinates.length;l++)Rr(t.coordinates[e],n.coordinates[l])&&(r=!0);if(!r)return!1}return!0}(e,r);case"LineString":return function(t,n){for(var e=!1,r=0;r<t.coordinates.length;r++){if(!Mr(t.coordinates[r],n))return!1;e||(e=Mr(t.coordinates[r],n,{ignoreEndVertices:!0}))}return e}(e,r);case"Polygon":case"MultiPolygon":return function(t,n){for(var e=!0,r=!1,l=0;l<t.coordinates.length;l++){if(!(r=dn(t.coordinates[1],n))){e=!1;break}r=dn(t.coordinates[1],n,{ignoreBoundary:!0})}return e&&r}(e,r);default:throw new Error("feature2 "+i+" geometry not supported")}case"LineString":switch(i){case"LineString":return function(t,n){for(var e=0;e<t.coordinates.length;e++)if(!Mr(t.coordinates[e],n))return!1;return!0}(e,r);case"Polygon":case"MultiPolygon":return function(t,n){if(!Pr(K(n),K(t)))return!1;for(var e=!1,r=0;r<t.coordinates.length-1;r++){if(!dn(t.coordinates[r],n))return!1;e||(e=dn(t.coordinates[r],n,{ignoreBoundary:!0})),e||(e=dn(Tr(t.coordinates[r],t.coordinates[r+1]),n,{ignoreBoundary:!0}))}return e}(e,r);default:throw new Error("feature2 "+i+" geometry not supported")}case"Polygon":switch(i){case"Polygon":case"MultiPolygon":return function(t,n){var e=K(t);if(!Pr(K(n),e))return!1;for(var r=0;r<t.coordinates[0].length;r++)if(!dn(t.coordinates[0][r],n))return!1;return!0}(e,r);default:throw new Error("feature2 "+i+" geometry not supported")}default:throw new Error("feature1 "+l+" geometry not supported")}}function Pr(t,n){return!(t[0]>n[0]||t[2]<n[2]||t[1]>n[1]||t[3]<n[3])}function Rr(t,n){return t[0]===n[0]&&t[1]===n[1]}function Tr(t,n){return[(t[0]+n[0])/2,(t[1]+n[1])/2]}function Nr(t,n,e){void 0===e&&(e={}),e.mask&&!e.units&&(e.units="kilometers");for(var r=[],l=t[0],i=t[1],o=t[2],s=t[3],a=n/_n([l,i],[o,i],e)*(o-l),h=n/_n([l,i],[l,s],e)*(s-i),c=o-l,f=s-i,d=Math.floor(c/a),g=(f-Math.floor(f/h)*h)/2,y=l+(c-d*a)/2;y<=o;){for(var _=i+g;_<=s;){var v=u([y,_],e.properties);e.mask?Ir(v,e.mask)&&r.push(v):r.push(v),_+=h}y+=a}return p(r)}function Lr(t,n){void 0===n&&(n={});var e=n.precision,r=n.coordinates,l=n.mutate;if(e=null==e||isNaN(e)?6:e,r=null==r||isNaN(r)?3:r,!t)throw new Error("<geojson> is required");if("number"!=typeof e)throw new Error("<precision> must be a number");if("number"!=typeof r)throw new Error("<coordinates> must be a number");!1!==l&&void 0!==l||(t=JSON.parse(JSON.stringify(t)));var i=Math.pow(10,e);return N(t,(function(t){!function(t,n,e){t.length>e&&t.splice(e,t.length);for(var r=0;r<t.length;r++)t[r]=Math.round(t[r]*n)/n}(t,i,r)})),t}function Ar(t){if(!t)throw new Error("geojson is required");var n=[];return B(t,(function(t){n.push(t)})),p(n)}function jr(t,n){if(!t||!n)return!1;if(t.length!==n.length)return!1;for(var e=0,r=t.length;e<r;e++)if(t[e]instanceof Array&&n[e]instanceof Array){if(!jr(t[e],n[e]))return!1}else if(t[e]!==n[e])return!1;return!0}function Dr(t){if("Feature"!=t.type)throw new Error("The input must a geojson object of type Feature");if(void 0===t.geometry||null==t.geometry)throw new Error("The input must a geojson object with a non-empty geometry");if("Polygon"!=t.geometry.type)throw new Error("The input must be a geojson Polygon");for(var n=t.geometry.coordinates.length,e=[],r=0;r<n;r++){var l=t.geometry.coordinates[r];Br(l[0],l[l.length-1])||l.push(l[0]),e.push.apply(e,l.slice(0,l.length-1))}if(!function(t){for(var n={},e=1,r=0,l=t.length;r<l;++r){if(Object.prototype.hasOwnProperty.call(n,t[r])){e=0;break}n[t[r]]=1}return e}(e))throw new Error("The input polygon may not have duplicate vertices (except for the first and last vertex of each ring)");var i=e.length,o=function(t,n,e){if("Polygon"!==t.geometry.type)throw new Error("The input feature must be a Polygon");void 0===e&&(e=1);var r=t.geometry.coordinates,l=[],i={};if(e){for(var o=[],u=0;u<r.length;u++)for(var s=0;s<r[u].length-1;s++)o.push(g(u,s));var a=Et();a.load(o)}for(var h=0;h<r.length;h++)for(var c=0;c<r[h].length-1;c++)if(e)a.search(g(h,c)).forEach((function(t){var n=t.ring,e=t.edge;d(h,c,n,e)}));else for(var f=0;f<r.length;f++)for(var p=0;p<r[f].length-1;p++)d(h,c,f,p);return n||(l={type:"Feature",geometry:{type:"MultiPoint",coordinates:l}}),l;function d(t,e,o,u){var s,a,h=r[t][e],c=r[t][e+1],f=r[o][u],p=r[o][u+1],d=function(t,n,e,r){if(jr(t,e)||jr(t,r)||jr(n,e)||jr(r,e))return null;var l=t[0],i=t[1],o=n[0],u=n[1],s=e[0],a=e[1],h=r[0],c=r[1],f=(l-o)*(a-c)-(i-u)*(s-h);return 0===f?null:[((l*u-i*o)*(s-h)-(l-o)*(s*c-a*h))/f,((l*u-i*o)*(a-c)-(i-u)*(s*c-a*h))/f]}(h,c,f,p);if(null!==d&&(s=c[0]!==h[0]?(d[0]-h[0])/(c[0]-h[0]):(d[1]-h[1])/(c[1]-h[1]),a=p[0]!==f[0]?(d[0]-f[0])/(p[0]-f[0]):(d[1]-f[1])/(p[1]-f[1]),!(s>=1||s<=0||a>=1||a<=0))){var g=d,y=!i[g];y&&(i[g]=!0),n?l.push(n(d,t,e,h,c,s,o,u,f,p,a,y)):l.push(d)}}function g(t,n){var e,l,i,o,u=r[t][n],s=r[t][n+1];return u[0]<s[0]?(e=u[0],l=s[0]):(e=s[0],l=u[0]),u[1]<s[1]?(i=u[1],o=s[1]):(i=s[1],o=u[1]),{minX:e,minY:i,maxX:l,maxY:o,ring:t,edge:n}}}(t,(function(t,n,e,r,l,i,o,u,s,a,h,c){return[t,n,e,r,l,i,o,u,s,a,h,c]})),u=o.length;if(0==u){var s=[];for(r=0;r<n;r++)s.push(a([t.geometry.coordinates[r]],{parent:-1,winding:zr(t.geometry.coordinates[r])}));var h=p(s);return F(),G(),h}var c=[],f=[];for(r=0;r<n;r++){c.push([]);for(var d=0;d<t.geometry.coordinates[r].length-1;d++)c[r].push([new kr(t.geometry.coordinates[r][Ur(d+1,t.geometry.coordinates[r].length-1)],1,[r,d],[r,Ur(d+1,t.geometry.coordinates[r].length-1)],void 0)]),f.push(new Fr(t.geometry.coordinates[r][d],[r,Ur(d-1,t.geometry.coordinates[r].length-1)],[r,d],void 0,void 0,!1,!0))}for(r=0;r<u;r++)c[o[r][1]][o[r][2]].push(new kr(o[r][0],o[r][5],[o[r][1],o[r][2]],[o[r][6],o[r][7]],void 0)),o[r][11]&&f.push(new Fr(o[r][0],[o[r][1],o[r][2]],[o[r][6],o[r][7]],void 0,void 0,!0,!0));var g=f.length;for(r=0;r<c.length;r++)for(d=0;d<c[r].length;d++)c[r][d].sort((function(t,n){return t.param<n.param?-1:1}));var y=[];for(r=0;r<g;r++)y.push({minX:f[r].coord[0],minY:f[r].coord[1],maxX:f[r].coord[0],maxY:f[r].coord[1],index:r});var _=Et();for(_.load(y),r=0;r<c.length;r++)for(d=0;d<c[r].length;d++)for(var v=0;v<c[r][d].length;v++){b=v==c[r][d].length-1?c[r][Ur(d+1,t.geometry.coordinates[r].length-1)][0].coord:c[r][d][v+1].coord;var m=_.search({minX:b[0],minY:b[1],maxX:b[0],maxY:b[1]})[0];c[r][d][v].nxtIsectAlongEdgeIn=m.index}for(r=0;r<c.length;r++)for(d=0;d<c[r].length;d++)for(v=0;v<c[r][d].length;v++){var b=c[r][d][v].coord,x=(m=_.search({minX:b[0],minY:b[1],maxX:b[0],maxY:b[1]})[0]).index;x<i?f[x].nxtIsectAlongRingAndEdge2=c[r][d][v].nxtIsectAlongEdgeIn:Br(f[x].ringAndEdge1,c[r][d][v].ringAndEdgeIn)?f[x].nxtIsectAlongRingAndEdge1=c[r][d][v].nxtIsectAlongEdgeIn:f[x].nxtIsectAlongRingAndEdge2=c[r][d][v].nxtIsectAlongEdgeIn}var w=[];for(r=0,d=0;d<n;d++){var E=r;for(v=0;v<t.geometry.coordinates[d].length-1;v++)f[r].coord[0]<f[E].coord[0]&&(E=r),r++;var C=f[E].nxtIsectAlongRingAndEdge2;for(v=0;v<f.length;v++)if(f[v].nxtIsectAlongRingAndEdge1==E||f[v].nxtIsectAlongRingAndEdge2==E){var O=v;break}var M=Gr([f[O].coord,f[E].coord,f[C].coord],!0)?1:-1;w.push({isect:E,parent:-1,winding:M})}for(w.sort((function(t,n){return f[t.isect].coord>f[n.isect].coord?-1:1})),s=[];w.length>0;){var S=w.pop(),I=S.isect,P=S.parent,R=S.winding,T=s.length,N=[f[I].coord],L=I;if(f[I].ringAndEdge1Walkable)var A=f[I].ringAndEdge1,j=f[I].nxtIsectAlongRingAndEdge1;else A=f[I].ringAndEdge2,j=f[I].nxtIsectAlongRingAndEdge2;for(;!Br(f[I].coord,f[j].coord);){N.push(f[j].coord);var D=void 0;for(r=0;r<w.length;r++)if(w[r].isect==j){D=r;break}if(null!=D&&w.splice(D,1),Br(A,f[j].ringAndEdge1)){if(A=f[j].ringAndEdge2,f[j].ringAndEdge2Walkable=!1,f[j].ringAndEdge1Walkable){var k={isect:j};Gr([f[L].coord,f[j].coord,f[f[j].nxtIsectAlongRingAndEdge2].coord],1==R)?(k.parent=P,k.winding=-R):(k.parent=T,k.winding=R),w.push(k)}L=j,j=f[j].nxtIsectAlongRingAndEdge2}else A=f[j].ringAndEdge1,f[j].ringAndEdge1Walkable=!1,f[j].ringAndEdge2Walkable&&(k={isect:j},Gr([f[L].coord,f[j].coord,f[f[j].nxtIsectAlongRingAndEdge1].coord],1==R)?(k.parent=P,k.winding=-R):(k.parent=T,k.winding=R),w.push(k)),L=j,j=f[j].nxtIsectAlongRingAndEdge1}N.push(f[j].coord),s.push(a([N],{index:T,parent:P,winding:R,netWinding:void 0}))}function F(){for(var t=[],n=0;n<h.features.length;n++)-1==h.features[n].properties.parent&&t.push(n);if(t.length>1)for(n=0;n<t.length;n++){for(var e=-1,r=0;r<h.features.length;r++)t[n]!=r&&dn(h.features[t[n]].geometry.coordinates[0][0],h.features[r],{ignoreBoundary:!0})&&br(h.features[r])<1/0&&(e=r);h.features[t[n]].properties.parent=e}}function G(){for(var t=0;t<h.features.length;t++)if(-1==h.features[t].properties.parent){var n=h.features[t].properties.winding;h.features[t].properties.netWinding=n,z(t,n)}}function z(t,n){for(var e=0;e<h.features.length;e++)if(h.features[e].properties.parent==t){var r=n+h.features[e].properties.winding;h.features[e].properties.netWinding=r,z(e,r)}}return h=p(s),F(),G(),h}sr.default=ar;var kr=function(t,n,e,r,l){this.coord=t,this.param=n,this.ringAndEdgeIn=e,this.ringAndEdgeOut=r,this.nxtIsectAlongEdgeIn=l},Fr=function(t,n,e,r,l,i,o){this.coord=t,this.ringAndEdge1=n,this.ringAndEdge2=e,this.nxtIsectAlongRingAndEdge1=r,this.nxtIsectAlongRingAndEdge2=l,this.ringAndEdge1Walkable=i,this.ringAndEdge2Walkable=o};function Gr(t,n){if(void 0===n&&(n=!0),3!=t.length)throw new Error("This function requires an array of three points [x,y]");return(t[1][0]-t[0][0])*(t[2][1]-t[0][1])-(t[1][1]-t[0][1])*(t[2][0]-t[0][0])>=0==n}function zr(t){for(var n=0,e=0;e<t.length-1;e++)t[e][0]<t[n][0]&&(n=e);if(Gr([t[Ur(n-1,t.length-1)],t[n],t[Ur(n+1,t.length-1)]],!0))var r=1;else r=-1;return r}function Br(t,n){if(!t||!n)return!1;if(t.length!=n.length)return!1;for(var e=0,r=t.length;e<r;e++)if(t[e]instanceof Array&&n[e]instanceof Array){if(!Br(t[e],n[e]))return!1}else if(t[e]!=n[e])return!1;return!0}function Ur(t,n){return(t%n+n)%n}var qr=Math.PI/180,Yr=180/Math.PI,Xr=function(t,n){this.lon=t,this.lat=n,this.x=qr*t,this.y=qr*n};Xr.prototype.view=function(){return String(this.lon).slice(0,4)+","+String(this.lat).slice(0,4)},Xr.prototype.antipode=function(){var t=-1*this.lat,n=this.lon<0?180+this.lon:-1*(180-this.lon);return new Xr(n,t)};var Vr=function(){this.coords=[],this.length=0};Vr.prototype.move_to=function(t){this.length++,this.coords.push(t)};var Wr=function(t){this.properties=t||{},this.geometries=[]};Wr.prototype.json=function(){if(this.geometries.length<=0)return{geometry:{type:"LineString",coordinates:null},type:"Feature",properties:this.properties};if(1===this.geometries.length)return{geometry:{type:"LineString",coordinates:this.geometries[0].coords},type:"Feature",properties:this.properties};for(var t=[],n=0;n<this.geometries.length;n++)t.push(this.geometries[n].coords);return{geometry:{type:"MultiLineString",coordinates:t},type:"Feature",properties:this.properties}},Wr.prototype.wkt=function(){for(var t="",n="LINESTRING(",e=function(t){n+=t[0]+" "+t[1]+","},r=0;r<this.geometries.length;r++){if(0===this.geometries[r].coords.length)return"LINESTRING(empty)";this.geometries[r].coords.forEach(e),t+=n.substring(0,n.length-1)+")"}return t};var Zr=function(t,n,e){if(!t||void 0===t.x||void 0===t.y)throw new Error("GreatCircle constructor expects two args: start and end objects with x and y properties");if(!n||void 0===n.x||void 0===n.y)throw new Error("GreatCircle constructor expects two args: start and end objects with x and y properties");this.start=new Xr(t.x,t.y),this.end=new Xr(n.x,n.y),this.properties=e||{};var r=this.start.x-this.end.x,l=this.start.y-this.end.y,i=Math.pow(Math.sin(l/2),2)+Math.cos(this.start.y)*Math.cos(this.end.y)*Math.pow(Math.sin(r/2),2);if(this.g=2*Math.asin(Math.sqrt(i)),this.g===Math.PI)throw new Error("it appears "+t.view()+" and "+n.view()+" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite");if(isNaN(this.g))throw new Error("could not calculate great circle between "+t+" and "+n)};function Hr(t,n){var e=[],r=sr();return B(n,(function(n){if(e.forEach((function(t,n){t.id=n})),e.length){var l=r.search(n);if(l.features.length){var i=Jr(n,l);e=e.filter((function(t){return t.id!==i.id})),r.remove(i),D(Kr(i,n),(function(t){e.push(t),r.insert(t)}))}}else(e=Kr(t,n).features).forEach((function(t){t.bbox||(t.bbox=ie(K(t)))})),r.load(p(e))})),p(e)}function Kr(t,n){var e=[],r=Q(t)[0],l=Q(t)[t.geometry.coordinates.length-1];if(Qr(r,J(n))||Qr(l,J(n)))return p([t]);var i=sr(),o=Ge(t);i.load(o);var u=i.search(n);if(!u.features.length)return p([t]);var s=Jr(n,u),a=k(o,(function(t,r,l){var i=Q(r)[1],o=J(n);return l===s.id?(t.push(o),e.push(c(t)),Qr(o,i)?[o]:[o,i]):(t.push(i),t)}),[r]);return a.length>1&&e.push(c(a)),p(e)}function Jr(t,n){if(!n.features.length)throw new Error("lines must contain features");if(1===n.features.length)return n.features[0];var e,r=1/0;return D(n,(function(n){var l=fr(n,t).properties.dist;l<r&&(e=n,r=l)})),e}function Qr(t,n){return t[0]===n[0]&&t[1]===n[1]}function $r(t,n,e,r,l){void 0===l&&(l={});var i=l.steps||64,o=tl(e),u=tl(r),s=Array.isArray(t)||"Feature"!==t.type?{}:t.properties;if(o===u)return c(ue(t,n,l).geometry.coordinates[0],s);for(var a=o,h=o<u?u:u+360,f=a,p=[],d=0;f<h;)p.push(oe(t,n,f,l).geometry.coordinates),f=a+360*++d/i;return f>h&&p.push(oe(t,n,h,l).geometry.coordinates),c(p,s)}function tl(t){var n=t%360;return n<0&&(n+=360),n}function nl(t,n){void 0===n&&(n={});var e=rt(t);switch(n.properties||"Feature"!==t.type||(n.properties=t.properties),e.type){case"Polygon":return el(e,n);case"MultiPolygon":return function(t,n){void 0===n&&(n={});var e=rt(t).coordinates,r=n.properties?n.properties:"Feature"===t.type?t.properties:{},l=[];return e.forEach((function(t){l.push(rl(t,r))})),p(l)}(e,n);default:throw new Error("invalid poly")}}function el(t,n){return void 0===n&&(n={}),rl(rt(t).coordinates,n.properties?n.properties:"Feature"===t.type?t.properties:{})}function rl(t,n){return t.length>1?d(t,n):c(t[0],n)}function ll(t,n){var e,r,l;void 0===n&&(n={});var i=n.properties,o=null===(e=n.autoComplete)||void 0===e||e,u=null===(r=n.orderCoords)||void 0===r||r;switch(null!==(l=n.mutate)&&void 0!==l&&l||(t=wn(t)),t.type){case"FeatureCollection":var s=[];return t.features.forEach((function(t){s.push(Q(il(t,{},o,u)))})),y(s,i);default:return il(t,i,o,u)}}function il(t,n,e,r){n=n||("Feature"===t.type?t.properties:{});var l=rt(t),i=l.coordinates,o=l.type;if(!i.length)throw new Error("line must contain coordinates");switch(o){case"LineString":return e&&(i=ol(i)),a([i],n);case"MultiLineString":var u=[],s=0;return i.forEach((function(t){if(e&&(t=ol(t)),r){var n=function(t){var n=t[0],e=t[1],r=t[2],l=t[3];return Math.abs(n-r)*Math.abs(e-l)}(K(c(t)));n>s?(u.unshift(t),s=n):u.push(t)}else u.push(t)})),a(u,n);default:throw new Error("geometry type "+o+" is not supported")}}function ol(t){var n=t[0],e=n[0],r=n[1],l=t[t.length-1],i=l[0],o=l[1];return e===i&&r===o||t.push(n),t}function ul(t,n){var e,r,l,i,o,u,s;for(r=1;r<=8;r*=2){for(e=[],i=!(al(l=t[t.length-1],n)&r),o=0;o<t.length;o++)(s=!(al(u=t[o],n)&r))!==i&&e.push(sl(l,u,r,n)),s&&e.push(u),l=u,i=s;if(!(t=e).length)break}return e}function sl(t,n,e,r){return 8&e?[t[0]+(n[0]-t[0])*(r[3]-t[1])/(n[1]-t[1]),r[3]]:4&e?[t[0]+(n[0]-t[0])*(r[1]-t[1])/(n[1]-t[1]),r[1]]:2&e?[r[2],t[1]+(n[1]-t[1])*(r[2]-t[0])/(n[0]-t[0])]:1&e?[r[0],t[1]+(n[1]-t[1])*(r[0]-t[0])/(n[0]-t[0])]:null}function al(t,n){var e=0;return t[0]<n[0]?e|=1:t[0]>n[2]&&(e|=2),t[1]<n[1]?e|=4:t[1]>n[3]&&(e|=8),e}function hl(t,n){for(var e=[],r=0,l=t;r<l.length;r++){var i=ul(l[r],n);i.length>0&&(i[0][0]===i[i.length-1][0]&&i[0][1]===i[i.length-1][1]||i.push(i[0]),i.length>=4&&e.push(i))}return e}Zr.prototype.interpolate=function(t){var n=Math.sin((1-t)*this.g)/Math.sin(this.g),e=Math.sin(t*this.g)/Math.sin(this.g),r=n*Math.cos(this.start.y)*Math.cos(this.start.x)+e*Math.cos(this.end.y)*Math.cos(this.end.x),l=n*Math.cos(this.start.y)*Math.sin(this.start.x)+e*Math.cos(this.end.y)*Math.sin(this.end.x),i=n*Math.sin(this.start.y)+e*Math.sin(this.end.y),o=Yr*Math.atan2(i,Math.sqrt(Math.pow(r,2)+Math.pow(l,2)));return[Yr*Math.atan2(l,r),o]},Zr.prototype.Arc=function(t,n){var e=[];if(!t||t<=2)e.push([this.start.lon,this.start.lat]),e.push([this.end.lon,this.end.lat]);else for(var r=1/(t-1),l=0;l<t;++l){var i=r*l,o=this.interpolate(i);e.push(o)}for(var u=!1,s=0,a=n&&n.offset?n.offset:10,h=180-a,c=-180+a,f=360-a,p=1;p<e.length;++p){var d=e[p-1][0],g=e[p][0],y=Math.abs(g-d);y>f&&(g>h&&d<c||d>h&&g<c)?u=!0:y>s&&(s=y)}var _=[];if(u&&s<a){var v=[];_.push(v);for(var m=0;m<e.length;++m){var b=parseFloat(e[m][0]);if(m>0&&Math.abs(b-e[m-1][0])>f){var x=parseFloat(e[m-1][0]),w=parseFloat(e[m-1][1]),E=parseFloat(e[m][0]),C=parseFloat(e[m][1]);if(x>-180&&x<c&&180===E&&m+1<e.length&&e[m-1][0]>-180&&e[m-1][0]<c){v.push([-180,e[m][1]]),m++,v.push([e[m][0],e[m][1]]);continue}if(x>h&&x<180&&-180===E&&m+1<e.length&&e[m-1][0]>h&&e[m-1][0]<180){v.push([180,e[m][1]]),m++,v.push([e[m][0],e[m][1]]);continue}if(x<c&&E>h){var O=x;x=E,E=O;var M=w;w=C,C=M}if(x>h&&E<c&&(E+=360),x<=180&&E>=180&&x<E){var S=(180-x)/(E-x),I=S*C+(1-S)*w;v.push([e[m-1][0]>h?180:-180,I]),(v=[]).push([e[m-1][0]>h?-180:180,I]),_.push(v)}else v=[],_.push(v);v.push([b,e[m][1]])}else v.push([e[m][0],e[m][1]])}}else{var P=[];_.push(P);for(var R=0;R<e.length;++R)P.push([e[R][0],e[R][1]])}for(var T=new Wr(this.properties),N=0;N<_.length;++N){var L=new Vr;T.geometries.push(L);for(var A=_[N],j=0;j<A.length;++j)L.move_to(A[j])}return T};var cl=Ft((function(t,n){function e(t){var n=[];for(var e in t)n.push(e);return n}(t.exports="function"==typeof Object.keys?Object.keys:e).shim=e})),fl=Ft((function(t,n){var e="[object Arguments]"==function(){return Object.prototype.toString.call(arguments)}();function r(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function l(t){return t&&"object"==typeof t&&"number"==typeof t.length&&Object.prototype.hasOwnProperty.call(t,"callee")&&!Object.prototype.propertyIsEnumerable.call(t,"callee")||!1}(n=t.exports=e?r:l).supported=r,n.unsupported=l})),pl=Ft((function(t){var n=Array.prototype.slice,e=t.exports=function(t,i,o){return o||(o={}),t===i||(t instanceof Date&&i instanceof Date?t.getTime()===i.getTime():!t||!i||"object"!=typeof t&&"object"!=typeof i?o.strict?t===i:t==i:function(t,i,o){var u,s;if(r(t)||r(i))return!1;if(t.prototype!==i.prototype)return!1;if(fl(t))return!!fl(i)&&(t=n.call(t),i=n.call(i),e(t,i,o));if(l(t)){if(!l(i))return!1;if(t.length!==i.length)return!1;for(u=0;u<t.length;u++)if(t[u]!==i[u])return!1;return!0}try{var a=cl(t),h=cl(i)}catch(t){return!1}if(a.length!=h.length)return!1;for(a.sort(),h.sort(),u=a.length-1;u>=0;u--)if(a[u]!=h[u])return!1;for(u=a.length-1;u>=0;u--)if(s=a[u],!e(t[s],i[s],o))return!1;return typeof t==typeof i}(t,i,o))};function r(t){return null==t}function l(t){return!(!t||"object"!=typeof t||"number"!=typeof t.length||"function"!=typeof t.copy||"function"!=typeof t.slice||t.length>0&&"number"!=typeof t[0])}}));function dl(t,n,e){if(void 0===e&&(e={}),!I(e=e||{}))throw new Error("options is invalid");var r,l=e.tolerance||0,i=[],o=sr(),u=Ge(t);return o.load(u),q(n,(function(t){var n=!1;t&&(D(o.search(t),(function(e){if(!1===n){var i=Q(t).sort(),o=Q(e).sort();pl(i,o)||(0===l?Mr(i[0],e)&&Mr(i[1],e):fr(e,i[0]).properties.dist<=l&&fr(e,i[1]).properties.dist<=l)?(n=!0,r=r?gl(r,t):t):(0===l?Mr(o[0],t)&&Mr(o[1],t):fr(t,o[0]).properties.dist<=l&&fr(t,o[1]).properties.dist<=l)&&(r=r?gl(r,e):e)}})),!1===n&&r&&(i.push(r),r=void 0))})),r&&i.push(r),p(i)}function gl(t,n){var e=Q(n),r=Q(t),l=r[0],i=r[r.length-1],o=t.geometry.coordinates;return pl(e[0],l)?o.unshift(e[1]):pl(e[0],i)?o.push(e[1]):pl(e[1],l)?o.unshift(e[0]):pl(e[1],i)&&o.push(e[0]),t}function yl(t){var n=t%360;return n<0&&(n+=360),n}function _l(t,n,e){var r;return void 0===e&&(e={}),(r=e.final?vl(J(n),J(t)):vl(J(t),J(n)))>180?-(360-r):r}function vl(t,n){var e=C(t[1]),r=C(n[1]),l=C(n[0]-t[0]);l>Math.PI&&(l-=2*Math.PI),l<-Math.PI&&(l+=2*Math.PI);var i=Math.log(Math.tan(r/2+Math.PI/4)/Math.tan(e/2+Math.PI/4));return(E(Math.atan2(l,i))+360)%360}function ml(t,e,r,l){void 0===l&&(l={});var i=e<0,o=O(Math.abs(e),l.units,"meters");i&&(o=-Math.abs(o));var s=J(t),a=function(t,e,r,l){var i=e/(l=void 0===l?n:Number(l)),o=t[0]*Math.PI/180,u=C(t[1]),s=C(r),a=i*Math.cos(s),h=u+a;Math.abs(h)>Math.PI/2&&(h=h>0?Math.PI-h:-Math.PI-h);var c=Math.log(Math.tan(h/2+Math.PI/4)/Math.tan(u/2+Math.PI/4)),f=Math.abs(c)>1e-11?a/c:Math.cos(u);return[(180*(o+i*Math.sin(s)/f)/Math.PI+540)%360-180,180*h/Math.PI]}(s,o,r);return a[0]+=a[0]-s[0]>180?-360:s[0]-a[0]>180?360:0,u(a,l.properties)}function bl(t,n,e,r,l,i){for(var o=0;o<t.length;o++){var u=t[o],s=t[o+1];o===t.length-1&&(s=t[0]),r=wl(u,s,n),e<=0&&r>0?wl(n,u,l)<0||(l=u):e>0&&r<=0&&(xl(n,u,i)||(i=u)),e=r}return[l,i]}function xl(t,n,e){return wl(t,n,e)>0}function wl(t,n,e){return(n[0]-t[0])*(e[1]-t[1])-(e[0]-t[0])*(n[1]-t[1])}function El(t){for(var n,e,r=Q(t),l=0,i=1;i<r.length;)n=e||r[0],l+=((e=r[i])[0]-n[0])*(e[1]+n[1]),i++;return l>0}function Cl(t,n){switch("Feature"===t.type?t.geometry.type:t.type){case"GeometryCollection":return G(t,(function(t){Cl(t,n)})),t;case"LineString":return Ol(Q(t),n),t;case"Polygon":return Ml(Q(t),n),t;case"MultiLineString":return Q(t).forEach((function(t){Ol(t,n)})),t;case"MultiPolygon":return Q(t).forEach((function(t){Ml(t,n)})),t;case"Point":case"MultiPoint":return t}}function Ol(t,n){El(t)===n&&t.reverse()}function Ml(t,n){El(t[0])!==n&&t[0].reverse();for(var e=1;e<t.length;e++)El(t[e])===n&&t[e].reverse()}var Sl={successCallback:null,verbose:!1,polygons:!1},Il={};function Pl(t,n,e,r){r=r||{};for(var l=Object.keys(Sl),i=0;i<l.length;i++){var o=l[i],u=r[o];u=null!=u?u:Sl[o],Il[o]=u}Il.verbose&&console.log("MarchingSquaresJS-isoBands: computing isobands for ["+n+":"+(n+e)+"]");var s,a=function(t,n,e){for(var r=t.length-1,l=t[0].length-1,i={rows:r,cols:l,cells:[]},o=n+Math.abs(e),u=0;u<r;++u){i.cells[u]=[];for(var s=0;s<l;++s){var a=0,h=t[u+1][s],c=t[u+1][s+1],f=t[u][s+1],p=t[u][s];if(!(isNaN(h)||isNaN(c)||isNaN(f)||isNaN(p))){a|=h<n?0:h>o?128:64,a|=c<n?0:c>o?32:16,a|=f<n?0:f>o?8:4;var d=+(a|=p<n?0:p>o?2:1),g=0;if(17===a||18===a||33===a||34===a||38===a||68===a||72===a||98===a||102===a||132===a||136===a||137===a||152===a||153===a){var y=(h+c+f+p)/4;g=y>o?2:y<n?0:1,34===a?1===g?a=35:0===g&&(a=136):136===a?1===g?(a=35,g=4):0===g&&(a=34):17===a?1===g?(a=155,g=4):0===g&&(a=153):68===a?1===g?(a=103,g=4):0===g&&(a=102):153===a?1===g&&(a=155):102===a?1===g&&(a=103):152===a?g<2&&(a=156,g=1):137===a?g<2&&(a=139,g=1):98===a?g<2&&(a=99,g=1):38===a?g<2&&(a=39,g=1):18===a?g>0?(a=156,g=4):a=152:33===a?g>0?(a=139,g=4):a=137:72===a?g>0?(a=99,g=4):a=98:132===a&&(g>0?(a=39,g=4):a=38)}if(0!=a&&170!=a){var _,v,m,b,x,w,E,C;_=v=m=b=x=w=E=C=.5;var O=[];1===a?(m=1-_i(n,f,p),C=1-_i(n,h,p),O.push(ci[a])):169===a?(m=_i(o,p,f),C=_i(o,p,h),O.push(ci[a])):4===a?(w=1-_i(n,c,f),b=_i(n,p,f),O.push(ai[a])):166===a?(w=_i(o,f,c),b=1-_i(o,f,p),O.push(ai[a])):16===a?(x=_i(n,f,c),v=_i(n,h,c),O.push(si[a])):154===a?(x=1-_i(o,c,f),v=1-_i(o,c,h),O.push(si[a])):64===a?(E=_i(n,p,h),_=1-_i(n,c,h),O.push(pi[a])):106===a?(E=1-_i(o,h,p),_=_i(o,h,c),O.push(pi[a])):168===a?(b=_i(o,p,f),m=_i(n,p,f),C=_i(n,p,h),E=_i(o,p,h),O.push(hi[a]),O.push(ci[a])):2===a?(b=1-_i(n,f,p),m=1-_i(o,f,p),C=1-_i(o,h,p),E=1-_i(n,h,p),O.push(hi[a]),O.push(ci[a])):162===a?(x=_i(o,f,c),w=_i(n,f,c),b=1-_i(n,f,p),m=1-_i(o,f,p),O.push(hi[a]),O.push(ci[a])):8===a?(x=1-_i(n,c,f),w=1-_i(o,c,f),b=_i(o,p,f),m=_i(n,p,f),O.push(si[a]),O.push(ai[a])):138===a?(x=1-_i(n,c,f),w=1-_i(o,c,f),_=1-_i(o,c,h),v=1-_i(n,c,h),O.push(si[a]),O.push(ai[a])):32===a?(x=_i(o,f,c),w=_i(n,f,c),_=_i(n,h,c),v=_i(o,h,c),O.push(si[a]),O.push(ai[a])):42===a?(C=1-_i(o,h,p),E=1-_i(n,h,p),_=_i(n,h,c),v=_i(o,h,c),O.push(fi[a]),O.push(pi[a])):128===a&&(C=_i(n,p,h),E=_i(o,p,h),_=1-_i(o,c,h),v=1-_i(n,c,h),O.push(fi[a]),O.push(pi[a])),5===a?(w=1-_i(n,c,f),C=1-_i(n,h,p),O.push(ai[a])):165===a?(w=_i(o,f,c),C=_i(o,p,h),O.push(ai[a])):20===a?(b=_i(n,p,f),v=_i(n,h,c),O.push(hi[a])):150===a?(b=1-_i(o,f,p),v=1-_i(o,c,h),O.push(hi[a])):80===a?(x=_i(n,f,c),E=_i(n,p,h),O.push(si[a])):90===a?(x=1-_i(o,c,f),E=1-_i(o,h,p),O.push(si[a])):65===a?(m=1-_i(n,f,p),_=1-_i(n,c,h),O.push(ci[a])):105===a?(m=_i(o,p,f),_=_i(o,h,c),O.push(ci[a])):160===a?(x=_i(o,f,c),w=_i(n,f,c),C=_i(n,p,h),E=_i(o,p,h),O.push(si[a]),O.push(ai[a])):10===a?(x=1-_i(n,c,f),w=1-_i(o,c,f),C=1-_i(o,h,p),E=1-_i(n,h,p),O.push(si[a]),O.push(ai[a])):130===a?(b=1-_i(n,f,p),m=1-_i(o,f,p),_=1-_i(o,c,h),v=1-_i(n,c,h),O.push(hi[a]),O.push(ci[a])):40===a?(b=_i(o,p,f),m=_i(n,p,f),_=_i(n,h,c),v=_i(o,h,c),O.push(hi[a]),O.push(ci[a])):101===a?(w=_i(o,f,c),_=_i(o,h,c),O.push(ai[a])):69===a?(w=1-_i(n,c,f),_=1-_i(n,c,h),O.push(ai[a])):149===a?(C=_i(o,p,h),v=1-_i(o,c,h),O.push(fi[a])):21===a?(C=1-_i(n,h,p),v=_i(n,h,c),O.push(fi[a])):86===a?(b=1-_i(o,f,p),E=1-_i(o,h,p),O.push(hi[a])):84===a?(b=_i(n,p,f),E=_i(n,p,h),O.push(hi[a])):89===a?(x=1-_i(o,c,f),m=_i(o,p,f),O.push(ci[a])):81===a?(x=_i(n,f,c),m=1-_i(n,f,p),O.push(ci[a])):96===a?(x=_i(o,f,c),w=_i(n,f,c),E=_i(n,p,h),_=_i(o,h,c),O.push(si[a]),O.push(ai[a])):74===a?(x=1-_i(n,c,f),w=1-_i(o,c,f),E=1-_i(o,h,p),_=1-_i(n,c,h),O.push(si[a]),O.push(ai[a])):24===a?(x=1-_i(o,c,f),b=_i(o,p,f),m=_i(n,p,f),v=_i(n,h,c),O.push(si[a]),O.push(ci[a])):146===a?(x=_i(n,f,c),b=1-_i(n,f,p),m=1-_i(o,f,p),v=1-_i(o,c,h),O.push(si[a]),O.push(ci[a])):6===a?(w=1-_i(n,c,f),b=1-_i(o,f,p),C=1-_i(o,h,p),E=1-_i(n,h,p),O.push(ai[a]),O.push(hi[a])):164===a?(w=_i(o,f,c),b=_i(n,p,f),C=_i(n,p,h),E=_i(o,p,h),O.push(ai[a]),O.push(hi[a])):129===a?(m=1-_i(n,f,p),C=_i(o,p,h),_=1-_i(o,c,h),v=1-_i(n,c,h),O.push(ci[a]),O.push(fi[a])):41===a?(m=_i(o,p,f),C=1-_i(n,h,p),_=_i(n,h,c),v=_i(o,h,c),O.push(ci[a]),O.push(fi[a])):66===a?(b=1-_i(n,f,p),m=1-_i(o,f,p),E=1-_i(o,h,p),_=1-_i(n,c,h),O.push(hi[a]),O.push(ci[a])):104===a?(b=_i(o,p,f),m=_i(n,p,f),E=_i(n,p,h),_=_i(o,h,c),O.push(ci[a]),O.push(di[a])):144===a?(x=_i(n,f,c),C=_i(n,p,h),E=_i(o,p,h),v=1-_i(o,c,h),O.push(si[a]),O.push(pi[a])):26===a?(x=1-_i(o,c,f),C=1-_i(o,h,p),E=1-_i(n,h,p),v=_i(n,h,c),O.push(si[a]),O.push(pi[a])):36===a?(w=_i(o,f,c),b=_i(n,p,f),_=_i(n,h,c),v=_i(o,h,c),O.push(ai[a]),O.push(hi[a])):134===a?(w=1-_i(n,c,f),b=1-_i(o,f,p),_=1-_i(o,c,h),v=1-_i(n,c,h),O.push(ai[a]),O.push(hi[a])):9===a?(x=1-_i(n,c,f),w=1-_i(o,c,f),m=_i(o,p,f),C=1-_i(n,h,p),O.push(si[a]),O.push(ai[a])):161===a?(x=_i(o,f,c),w=_i(n,f,c),m=1-_i(n,f,p),C=_i(o,p,h),O.push(si[a]),O.push(ai[a])):37===a?(w=_i(o,f,c),C=1-_i(n,h,p),_=_i(n,h,c),v=_i(o,h,c),O.push(ai[a]),O.push(fi[a])):133===a?(w=1-_i(n,c,f),C=_i(o,p,h),_=1-_i(o,c,h),v=1-_i(n,c,h),O.push(ai[a]),O.push(fi[a])):148===a?(b=_i(n,p,f),C=_i(n,p,h),E=_i(o,p,h),v=1-_i(o,c,h),O.push(hi[a]),O.push(pi[a])):22===a?(b=1-_i(o,f,p),C=1-_i(o,h,p),E=1-_i(n,h,p),v=_i(n,h,c),O.push(hi[a]),O.push(pi[a])):82===a?(x=_i(n,f,c),b=1-_i(n,f,p),m=1-_i(o,f,p),E=1-_i(o,h,p),O.push(si[a]),O.push(ci[a])):88===a?(x=1-_i(o,c,f),b=_i(o,p,f),m=_i(n,p,f),E=_i(n,p,h),O.push(si[a]),O.push(ci[a])):73===a?(x=1-_i(n,c,f),w=1-_i(o,c,f),m=_i(o,p,f),_=1-_i(n,c,h),O.push(si[a]),O.push(ai[a])):97===a?(x=_i(o,f,c),w=_i(n,f,c),m=1-_i(n,f,p),_=_i(o,h,c),O.push(si[a]),O.push(ai[a])):145===a?(x=_i(n,f,c),m=1-_i(n,f,p),C=_i(o,p,h),v=1-_i(o,c,h),O.push(si[a]),O.push(fi[a])):25===a?(x=1-_i(o,c,f),m=_i(o,p,f),C=1-_i(n,h,p),v=_i(n,h,c),O.push(si[a]),O.push(fi[a])):70===a?(w=1-_i(n,c,f),b=1-_i(o,f,p),E=1-_i(o,h,p),_=1-_i(n,c,h),O.push(ai[a]),O.push(hi[a])):100===a?(w=_i(o,f,c),b=_i(n,p,f),E=_i(n,p,h),_=_i(o,h,c),O.push(ai[a]),O.push(hi[a])):34===a?(0===g?(x=1-_i(n,c,f),w=1-_i(o,c,f),b=_i(o,p,f),m=_i(n,p,f),C=_i(n,p,h),E=_i(o,p,h),_=1-_i(o,c,h),v=1-_i(n,c,h)):(x=_i(o,f,c),w=_i(n,f,c),b=1-_i(n,f,p),m=1-_i(o,f,p),C=1-_i(o,h,p),E=1-_i(n,h,p),_=_i(n,h,c),v=_i(o,h,c)),O.push(si[a]),O.push(ai[a]),O.push(fi[a]),O.push(pi[a])):35===a?(4===g?(x=1-_i(n,c,f),w=1-_i(o,c,f),b=_i(o,p,f),m=_i(n,p,f),C=_i(n,p,h),E=_i(o,p,h),_=1-_i(o,c,h),v=1-_i(n,c,h)):(x=_i(o,f,c),w=_i(n,f,c),b=1-_i(n,f,p),m=1-_i(o,f,p),C=1-_i(o,h,p),E=1-_i(n,h,p),_=_i(n,h,c),v=_i(o,h,c)),O.push(si[a]),O.push(ai[a]),O.push(ci[a]),O.push(pi[a])):136===a?(0===g?(x=_i(o,f,c),w=_i(n,f,c),b=1-_i(n,f,p),m=1-_i(o,f,p),C=1-_i(o,h,p),E=1-_i(n,h,p),_=_i(n,h,c),v=_i(o,h,c)):(x=1-_i(n,c,f),w=1-_i(o,c,f),b=_i(o,p,f),m=_i(n,p,f),C=_i(n,p,h),E=_i(o,p,h),_=1-_i(o,c,h),v=1-_i(n,c,h)),O.push(si[a]),O.push(ai[a]),O.push(fi[a]),O.push(pi[a])):153===a?(0===g?(x=_i(n,f,c),m=1-_i(n,f,p),C=1-_i(n,h,p),v=_i(n,h,c)):(x=1-_i(o,c,f),m=_i(o,p,f),C=_i(o,p,h),v=1-_i(o,c,h)),O.push(si[a]),O.push(ci[a])):102===a?(0===g?(w=1-_i(n,c,f),b=_i(n,p,f),E=_i(n,p,h),_=1-_i(n,c,h)):(w=_i(o,f,c),b=1-_i(o,f,p),E=1-_i(o,h,p),_=_i(o,h,c)),O.push(ai[a]),O.push(pi[a])):155===a?(4===g?(x=_i(n,f,c),m=1-_i(n,f,p),C=1-_i(n,h,p),v=_i(n,h,c)):(x=1-_i(o,c,f),m=_i(o,p,f),C=_i(o,p,h),v=1-_i(o,c,h)),O.push(si[a]),O.push(fi[a])):103===a?(4===g?(w=1-_i(n,c,f),b=_i(n,p,f),E=_i(n,p,h),_=1-_i(n,c,h)):(w=_i(o,f,c),b=1-_i(o,f,p),E=1-_i(o,h,p),_=_i(o,h,c)),O.push(ai[a]),O.push(hi[a])):152===a?(0===g?(x=_i(n,f,c),b=1-_i(n,f,p),m=1-_i(o,f,p),C=1-_i(o,h,p),E=1-_i(n,h,p),v=_i(n,h,c)):(x=1-_i(o,c,f),b=_i(o,p,f),m=_i(n,p,f),C=_i(n,p,h),E=_i(o,p,h),v=1-_i(o,c,h)),O.push(si[a]),O.push(hi[a]),O.push(ci[a])):156===a?(4===g?(x=_i(n,f,c),b=1-_i(n,f,p),m=1-_i(o,f,p),C=1-_i(o,h,p),E=1-_i(n,h,p),v=_i(n,h,c)):(x=1-_i(o,c,f),b=_i(o,p,f),m=_i(n,p,f),C=_i(n,p,h),E=_i(o,p,h),v=1-_i(o,c,h)),O.push(si[a]),O.push(ci[a]),O.push(pi[a])):137===a?(0===g?(x=_i(o,f,c),w=_i(n,f,c),m=1-_i(n,f,p),C=1-_i(n,h,p),_=_i(n,h,c),v=_i(o,h,c)):(x=1-_i(n,c,f),w=1-_i(o,c,f),m=_i(o,p,f),C=_i(o,p,h),_=1-_i(o,c,h),v=1-_i(n,c,h)),O.push(si[a]),O.push(ai[a]),O.push(ci[a])):139===a?(4===g?(x=_i(o,f,c),w=_i(n,f,c),m=1-_i(n,f,p),C=1-_i(n,h,p),_=_i(n,h,c),v=_i(o,h,c)):(x=1-_i(n,c,f),w=1-_i(o,c,f),m=_i(o,p,f),C=_i(o,p,h),_=1-_i(o,c,h),v=1-_i(n,c,h)),O.push(si[a]),O.push(ai[a]),O.push(fi[a])):98===a?(0===g?(x=1-_i(n,c,f),w=1-_i(o,c,f),b=_i(o,p,f),m=_i(n,p,f),E=_i(n,p,h),_=1-_i(n,c,h)):(x=_i(o,f,c),w=_i(n,f,c),b=1-_i(n,f,p),m=1-_i(o,f,p),E=1-_i(o,h,p),_=_i(o,h,c)),O.push(si[a]),O.push(ai[a]),O.push(pi[a])):99===a?(4===g?(x=1-_i(n,c,f),w=1-_i(o,c,f),b=_i(o,p,f),m=_i(n,p,f),E=_i(n,p,h),_=1-_i(n,c,h)):(x=_i(o,f,c),w=_i(n,f,c),b=1-_i(n,f,p),m=1-_i(o,f,p),E=1-_i(o,h,p),_=_i(o,h,c)),O.push(si[a]),O.push(ai[a]),O.push(ci[a])):38===a?(0===g?(w=1-_i(n,c,f),b=_i(n,p,f),C=_i(n,p,h),E=_i(o,p,h),_=1-_i(o,c,h),v=1-_i(n,c,h)):(w=_i(o,f,c),b=1-_i(o,f,p),C=1-_i(o,h,p),E=1-_i(n,h,p),_=_i(n,h,c),v=_i(o,h,c)),O.push(ai[a]),O.push(fi[a]),O.push(pi[a])):39===a?(4===g?(w=1-_i(n,c,f),b=_i(n,p,f),C=_i(n,p,h),E=_i(o,p,h),_=1-_i(o,c,h),v=1-_i(n,c,h)):(w=_i(o,f,c),b=1-_i(o,f,p),C=1-_i(o,h,p),E=1-_i(n,h,p),_=_i(n,h,c),v=_i(o,h,c)),O.push(ai[a]),O.push(hi[a]),O.push(pi[a])):85===a&&(x=1,w=0,b=1,m=0,C=0,E=1,_=0,v=1),(_<0||_>1||v<0||v>1||x<0||x>1||b<0||b>1||C<0||C>1||E<0||E>1)&&console.log("MarchingSquaresJS-isoBands: "+a+" "+d+" "+h+","+c+","+f+","+p+" "+g+" "+_+" "+v+" "+x+" "+w+" "+b+" "+m+" "+C+" "+E),i.cells[u][s]={cval:a,cval_real:d,flipped:g,topleft:_,topright:v,righttop:x,rightbottom:w,bottomright:b,bottomleft:m,leftbottom:C,lefttop:E,edges:O}}}}}return i}(t,n,e);return Il.polygons?(Il.verbose&&console.log("MarchingSquaresJS-isoBands: returning single polygons for each grid cell"),s=function(t){var n=[],e=0;return t.cells.forEach((function(t,r){t.forEach((function(t,l){if(void 0!==t){var i=yi[t.cval](t);"object"==typeof i&&vi(i)?"object"==typeof i[0]&&vi(i[0])?"object"==typeof i[0][0]&&vi(i[0][0])?i.forEach((function(t){t.forEach((function(t){t[0]+=l,t[1]+=r})),n[e++]=t})):(i.forEach((function(t){t[0]+=l,t[1]+=r})),n[e++]=i):console.log("MarchingSquaresJS-isoBands: bandcell polygon with malformed coordinates"):console.log("MarchingSquaresJS-isoBands: bandcell polygon with null coordinates")}}))})),n}(a)):(Il.verbose&&console.log("MarchingSquaresJS-isoBands: returning polygon paths for entire data grid"),s=function(t){for(var n=[],e=t.rows,r=t.cols,l=[],i=0;i<e;i++)for(var o=0;o<r;o++)if(void 0!==t.cells[i][o]&&t.cells[i][o].edges.length>0){var u=bi(t.cells[i][o]),s=null,a=o,h=i;null!==u&&l.push([u.p[0]+a,u.p[1]+h]);do{if(null===(s=xi(t.cells[h][a],u.x,u.y,u.o)))break;if(l.push([s.p[0]+a,s.p[1]+h]),a+=s.x,u=s,(h+=s.y)<0||h>=e||a<0||a>=r||void 0===t.cells[h][a]){var c=mi(t,a-=s.x,h-=s.y,s.x,s.y,s.o);if(null===c)break;c.path.forEach((function(t){l.push(t)})),a=c.i,h=c.j,u=c}}while(void 0!==t.cells[h][a]&&t.cells[h][a].edges.length>0);n.push(l),l=[],t.cells[i][o].edges.length>0&&o--}return n}(a)),"function"==typeof Il.successCallback&&Il.successCallback(s),s}var Rl=[],Tl=[],Nl=[],Ll=[],Al=[],jl=[],Dl=[],kl=[],Fl=[],Gl=[],zl=[],Bl=[],Ul=[],ql=[],Yl=[],Xl=[],Vl=[],Wl=[],Zl=[],Hl=[],Kl=[],Jl=[],Ql=[],$l=[];Dl[85]=Gl[85]=-1,kl[85]=zl[85]=0,Fl[85]=Bl[85]=1,Zl[85]=Jl[85]=1,Hl[85]=Ql[85]=0,Kl[85]=$l[85]=1,Rl[85]=Ll[85]=0,Tl[85]=Al[85]=-1,Nl[85]=Yl[85]=0,Xl[85]=Ul[85]=0,Vl[85]=ql[85]=1,jl[85]=Wl[85]=1,Jl[1]=Jl[169]=0,Ql[1]=Ql[169]=-1,$l[1]=$l[169]=0,Ul[1]=Ul[169]=-1,ql[1]=ql[169]=0,Yl[1]=Yl[169]=0,Gl[4]=Gl[166]=0,zl[4]=zl[166]=-1,Bl[4]=Bl[166]=1,Xl[4]=Xl[166]=1,Vl[4]=Vl[166]=0,Wl[4]=Wl[166]=0,Dl[16]=Dl[154]=0,kl[16]=kl[154]=1,Fl[16]=Fl[154]=1,Ll[16]=Ll[154]=1,Al[16]=Al[154]=0,jl[16]=jl[154]=1,Zl[64]=Zl[106]=0,Hl[64]=Hl[106]=1,Kl[64]=Kl[106]=0,Rl[64]=Rl[106]=-1,Tl[64]=Tl[106]=0,Nl[64]=Nl[106]=1,Zl[2]=Zl[168]=0,Hl[2]=Hl[168]=-1,Kl[2]=Kl[168]=1,Jl[2]=Jl[168]=0,Ql[2]=Ql[168]=-1,$l[2]=$l[168]=0,Ul[2]=Ul[168]=-1,ql[2]=ql[168]=0,Yl[2]=Yl[168]=0,Xl[2]=Xl[168]=-1,Vl[2]=Vl[168]=0,Wl[2]=Wl[168]=1,Dl[8]=Dl[162]=0,kl[8]=kl[162]=-1,Fl[8]=Fl[162]=0,Gl[8]=Gl[162]=0,zl[8]=zl[162]=-1,Bl[8]=Bl[162]=1,Ul[8]=Ul[162]=1,ql[8]=ql[162]=0,Yl[8]=Yl[162]=1,Xl[8]=Xl[162]=1,Vl[8]=Vl[162]=0,Wl[8]=Wl[162]=0,Dl[32]=Dl[138]=0,kl[32]=kl[138]=1,Fl[32]=Fl[138]=1,Gl[32]=Gl[138]=0,zl[32]=zl[138]=1,Bl[32]=Bl[138]=0,Rl[32]=Rl[138]=1,Tl[32]=Tl[138]=0,Nl[32]=Nl[138]=0,Ll[32]=Ll[138]=1,Al[32]=Al[138]=0,jl[32]=jl[138]=1,Jl[128]=Jl[42]=0,Ql[128]=Ql[42]=1,$l[128]=$l[42]=1,Zl[128]=Zl[42]=0,Hl[128]=Hl[42]=1,Kl[128]=Kl[42]=0,Rl[128]=Rl[42]=-1,Tl[128]=Tl[42]=0,Nl[128]=Nl[42]=1,Ll[128]=Ll[42]=-1,Al[128]=Al[42]=0,jl[128]=jl[42]=0,Gl[5]=Gl[165]=-1,zl[5]=zl[165]=0,Bl[5]=Bl[165]=0,Jl[5]=Jl[165]=1,Ql[5]=Ql[165]=0,$l[5]=$l[165]=0,Xl[20]=Xl[150]=0,Vl[20]=Vl[150]=1,Wl[20]=Wl[150]=1,Ll[20]=Ll[150]=0,Al[20]=Al[150]=-1,jl[20]=jl[150]=1,Dl[80]=Dl[90]=-1,kl[80]=kl[90]=0,Fl[80]=Fl[90]=1,Zl[80]=Zl[90]=1,Hl[80]=Hl[90]=0,Kl[80]=Kl[90]=1,Ul[65]=Ul[105]=0,ql[65]=ql[105]=1,Yl[65]=Yl[105]=0,Rl[65]=Rl[105]=0,Tl[65]=Tl[105]=-1,Nl[65]=Nl[105]=0,Dl[160]=Dl[10]=-1,kl[160]=kl[10]=0,Fl[160]=Fl[10]=1,Gl[160]=Gl[10]=-1,zl[160]=zl[10]=0,Bl[160]=Bl[10]=0,Jl[160]=Jl[10]=1,Ql[160]=Ql[10]=0,$l[160]=$l[10]=0,Zl[160]=Zl[10]=1,Hl[160]=Hl[10]=0,Kl[160]=Kl[10]=1,Xl[130]=Xl[40]=0,Vl[130]=Vl[40]=1,Wl[130]=Wl[40]=1,Ul[130]=Ul[40]=0,ql[130]=ql[40]=1,Yl[130]=Yl[40]=0,Rl[130]=Rl[40]=0,Tl[130]=Tl[40]=-1,Nl[130]=Nl[40]=0,Ll[130]=Ll[40]=0,Al[130]=Al[40]=-1,jl[130]=jl[40]=1,Gl[37]=Gl[133]=0,zl[37]=zl[133]=1,Bl[37]=Bl[133]=1,Jl[37]=Jl[133]=0,Ql[37]=Ql[133]=1,$l[37]=$l[133]=0,Rl[37]=Rl[133]=-1,Tl[37]=Tl[133]=0,Nl[37]=Nl[133]=0,Ll[37]=Ll[133]=1,Al[37]=Al[133]=0,jl[37]=jl[133]=0,Xl[148]=Xl[22]=-1,Vl[148]=Vl[22]=0,Wl[148]=Wl[22]=0,Jl[148]=Jl[22]=0,Ql[148]=Ql[22]=-1,$l[148]=$l[22]=1,Zl[148]=Zl[22]=0,Hl[148]=Hl[22]=1,Kl[148]=Kl[22]=1,Ll[148]=Ll[22]=-1,Al[148]=Al[22]=0,jl[148]=jl[22]=1,Dl[82]=Dl[88]=0,kl[82]=kl[88]=-1,Fl[82]=Fl[88]=1,Xl[82]=Xl[88]=1,Vl[82]=Vl[88]=0,Wl[82]=Wl[88]=1,Ul[82]=Ul[88]=-1,ql[82]=ql[88]=0,Yl[82]=Yl[88]=1,Zl[82]=Zl[88]=0,Hl[82]=Hl[88]=-1,Kl[82]=Kl[88]=0,Dl[73]=Dl[97]=0,kl[73]=kl[97]=1,Fl[73]=Fl[97]=0,Gl[73]=Gl[97]=0,zl[73]=zl[97]=-1,Bl[73]=Bl[97]=0,Ul[73]=Ul[97]=1,ql[73]=ql[97]=0,Yl[73]=Yl[97]=0,Rl[73]=Rl[97]=1,Tl[73]=Tl[97]=0,Nl[73]=Nl[97]=1,Dl[145]=Dl[25]=0,kl[145]=kl[25]=-1,Fl[145]=Fl[25]=0,Ul[145]=Ul[25]=1,ql[145]=ql[25]=0,Yl[145]=Yl[25]=1,Jl[145]=Jl[25]=0,Ql[145]=Ql[25]=1,$l[145]=$l[25]=1,Ll[145]=Ll[25]=-1,Al[145]=Al[25]=0,jl[145]=jl[25]=0,Gl[70]=Gl[100]=0,zl[70]=zl[100]=1,Bl[70]=Bl[100]=0,Xl[70]=Xl[100]=-1,Vl[70]=Vl[100]=0,Wl[70]=Wl[100]=1,Zl[70]=Zl[100]=0,Hl[70]=Hl[100]=-1,Kl[70]=Kl[100]=1,Rl[70]=Rl[100]=1,Tl[70]=Tl[100]=0,Nl[70]=Nl[100]=0,Gl[101]=Gl[69]=0,zl[101]=zl[69]=1,Bl[101]=Bl[69]=0,Rl[101]=Rl[69]=1,Tl[101]=Tl[69]=0,Nl[101]=Nl[69]=0,Jl[149]=Jl[21]=0,Ql[149]=Ql[21]=1,$l[149]=$l[21]=1,Ll[149]=Ll[21]=-1,Al[149]=Al[21]=0,jl[149]=jl[21]=0,Xl[86]=Xl[84]=-1,Vl[86]=Vl[84]=0,Wl[86]=Wl[84]=1,Zl[86]=Zl[84]=0,Hl[86]=Hl[84]=-1,Kl[86]=Kl[84]=1,Dl[89]=Dl[81]=0,kl[89]=kl[81]=-1,Fl[89]=Fl[81]=0,Ul[89]=Ul[81]=1,ql[89]=ql[81]=0,Yl[89]=Yl[81]=1,Dl[96]=Dl[74]=0,kl[96]=kl[74]=1,Fl[96]=Fl[74]=0,Gl[96]=Gl[74]=-1,zl[96]=zl[74]=0,Bl[96]=Bl[74]=1,Zl[96]=Zl[74]=1,Hl[96]=Hl[74]=0,Kl[96]=Kl[74]=0,Rl[96]=Rl[74]=1,Tl[96]=Tl[74]=0,Nl[96]=Nl[74]=1,Dl[24]=Dl[146]=0,kl[24]=kl[146]=-1,Fl[24]=Fl[146]=1,Xl[24]=Xl[146]=1,Vl[24]=Vl[146]=0,Wl[24]=Wl[146]=1,Ul[24]=Ul[146]=0,ql[24]=ql[146]=1,Yl[24]=Yl[146]=1,Ll[24]=Ll[146]=0,Al[24]=Al[146]=-1,jl[24]=jl[146]=0,Gl[6]=Gl[164]=-1,zl[6]=zl[164]=0,Bl[6]=Bl[164]=1,Xl[6]=Xl[164]=-1,Vl[6]=Vl[164]=0,Wl[6]=Wl[164]=0,Jl[6]=Jl[164]=0,Ql[6]=Ql[164]=-1,$l[6]=$l[164]=1,Zl[6]=Zl[164]=1,Hl[6]=Hl[164]=0,Kl[6]=Kl[164]=0,Ul[129]=Ul[41]=0,ql[129]=ql[41]=1,Yl[129]=Yl[41]=1,Jl[129]=Jl[41]=0,Ql[129]=Ql[41]=1,$l[129]=$l[41]=0,Rl[129]=Rl[41]=-1,Tl[129]=Tl[41]=0,Nl[129]=Nl[41]=0,Ll[129]=Ll[41]=0,Al[129]=Al[41]=-1,jl[129]=jl[41]=0,Xl[66]=Xl[104]=0,Vl[66]=Vl[104]=1,Wl[66]=Wl[104]=0,Ul[66]=Ul[104]=-1,ql[66]=ql[104]=0,Yl[66]=Yl[104]=1,Zl[66]=Zl[104]=0,Hl[66]=Hl[104]=-1,Kl[66]=Kl[104]=0,Rl[66]=Rl[104]=0,Tl[66]=Tl[104]=-1,Nl[66]=Nl[104]=1,Dl[144]=Dl[26]=-1,kl[144]=kl[26]=0,Fl[144]=Fl[26]=0,Jl[144]=Jl[26]=1,Ql[144]=Ql[26]=0,$l[144]=$l[26]=1,Zl[144]=Zl[26]=0,Hl[144]=Hl[26]=1,Kl[144]=Kl[26]=1,Ll[144]=Ll[26]=-1,Al[144]=Al[26]=0,jl[144]=jl[26]=1,Gl[36]=Gl[134]=0,zl[36]=zl[134]=1,Bl[36]=Bl[134]=1,Xl[36]=Xl[134]=0,Vl[36]=Vl[134]=1,Wl[36]=Wl[134]=0,Rl[36]=Rl[134]=0,Tl[36]=Tl[134]=-1,Nl[36]=Nl[134]=1,Ll[36]=Ll[134]=1,Al[36]=Al[134]=0,jl[36]=jl[134]=0,Dl[9]=Dl[161]=-1,kl[9]=kl[161]=0,Fl[9]=Fl[161]=0,Gl[9]=Gl[161]=0,zl[9]=zl[161]=-1,Bl[9]=Bl[161]=0,Ul[9]=Ul[161]=1,ql[9]=ql[161]=0,Yl[9]=Yl[161]=0,Jl[9]=Jl[161]=1,Ql[9]=Ql[161]=0,$l[9]=$l[161]=1,Dl[136]=0,kl[136]=1,Fl[136]=1,Gl[136]=0,zl[136]=1,Bl[136]=0,Xl[136]=-1,Vl[136]=0,Wl[136]=1,Ul[136]=-1,ql[136]=0,Yl[136]=0,Jl[136]=0,Ql[136]=-1,$l[136]=0,Zl[136]=0,Hl[136]=-1,Kl[136]=1,Rl[136]=1,Tl[136]=0,Nl[136]=0,Ll[136]=1,Al[136]=0,jl[136]=1,Dl[34]=0,kl[34]=-1,Fl[34]=0,Gl[34]=0,zl[34]=-1,Bl[34]=1,Xl[34]=1,Vl[34]=0,Wl[34]=0,Ul[34]=1,ql[34]=0,Yl[34]=1,Jl[34]=0,Ql[34]=1,$l[34]=1,Zl[34]=0,Hl[34]=1,Kl[34]=0,Rl[34]=-1,Tl[34]=0,Nl[34]=1,Ll[34]=-1,Al[34]=0,jl[34]=0,Dl[35]=0,kl[35]=1,Fl[35]=1,Gl[35]=0,zl[35]=-1,Bl[35]=1,Xl[35]=1,Vl[35]=0,Wl[35]=0,Ul[35]=-1,ql[35]=0,Yl[35]=0,Jl[35]=0,Ql[35]=-1,$l[35]=0,Zl[35]=0,Hl[35]=1,Kl[35]=0,Rl[35]=-1,Tl[35]=0,Nl[35]=1,Ll[35]=1,Al[35]=0,jl[35]=1,Dl[153]=0,kl[153]=1,Fl[153]=1,Ul[153]=-1,ql[153]=0,Yl[153]=0,Jl[153]=0,Ql[153]=-1,$l[153]=0,Ll[153]=1,Al[153]=0,jl[153]=1,Gl[102]=0,zl[102]=-1,Bl[102]=1,Xl[102]=1,Vl[102]=0,Wl[102]=0,Zl[102]=0,Hl[102]=1,Kl[102]=0,Rl[102]=-1,Tl[102]=0,Nl[102]=1,Dl[155]=0,kl[155]=-1,Fl[155]=0,Ul[155]=1,ql[155]=0,Yl[155]=1,Jl[155]=0,Ql[155]=1,$l[155]=1,Ll[155]=-1,Al[155]=0,jl[155]=0,Gl[103]=0,zl[103]=1,Bl[103]=0,Xl[103]=-1,Vl[103]=0,Wl[103]=1,Zl[103]=0,Hl[103]=-1,Kl[103]=1,Rl[103]=1,Tl[103]=0,Nl[103]=0,Dl[152]=0,kl[152]=1,Fl[152]=1,Xl[152]=-1,Vl[152]=0,Wl[152]=1,Ul[152]=-1,ql[152]=0,Yl[152]=0,Jl[152]=0,Ql[152]=-1,$l[152]=0,Zl[152]=0,Hl[152]=-1,Kl[152]=1,Ll[152]=1,Al[152]=0,jl[152]=1,Dl[156]=0,kl[156]=-1,Fl[156]=1,Xl[156]=1,Vl[156]=0,Wl[156]=1,Ul[156]=-1,ql[156]=0,Yl[156]=0,Jl[156]=0,Ql[156]=-1,$l[156]=0,Zl[156]=0,Hl[156]=1,Kl[156]=1,Ll[156]=-1,Al[156]=0,jl[156]=1,Dl[137]=0,kl[137]=1,Fl[137]=1,Gl[137]=0,zl[137]=1,Bl[137]=0,Ul[137]=-1,ql[137]=0,Yl[137]=0,Jl[137]=0,Ql[137]=-1,$l[137]=0,Rl[137]=1,Tl[137]=0,Nl[137]=0,Ll[137]=1,Al[137]=0,jl[137]=1,Dl[139]=0,kl[139]=1,Fl[139]=1,Gl[139]=0,zl[139]=-1,Bl[139]=0,Ul[139]=1,ql[139]=0,Yl[139]=0,Jl[139]=0,Ql[139]=1,$l[139]=0,Rl[139]=-1,Tl[139]=0,Nl[139]=0,Ll[139]=1,Al[139]=0,jl[139]=1,Dl[98]=0,kl[98]=-1,Fl[98]=0,Gl[98]=0,zl[98]=-1,Bl[98]=1,Xl[98]=1,Vl[98]=0,Wl[98]=0,Ul[98]=1,ql[98]=0,Yl[98]=1,Zl[98]=0,Hl[98]=1,Kl[98]=0,Rl[98]=-1,Tl[98]=0,Nl[98]=1,Dl[99]=0,kl[99]=1,Fl[99]=0,Gl[99]=0,zl[99]=-1,Bl[99]=1,Xl[99]=1,Vl[99]=0,Wl[99]=0,Ul[99]=-1,ql[99]=0,Yl[99]=1,Zl[99]=0,Hl[99]=-1,Kl[99]=0,Rl[99]=1,Tl[99]=0,Nl[99]=1,Gl[38]=0,zl[38]=-1,Bl[38]=1,Xl[38]=1,Vl[38]=0,Wl[38]=0,Jl[38]=0,Ql[38]=1,$l[38]=1,Zl[38]=0,Hl[38]=1,Kl[38]=0,Rl[38]=-1,Tl[38]=0,Nl[38]=1,Ll[38]=-1,Al[38]=0,jl[38]=0,Gl[39]=0,zl[39]=1,Bl[39]=1,Xl[39]=-1,Vl[39]=0,Wl[39]=0,Jl[39]=0,Ql[39]=-1,$l[39]=1,Zl[39]=0,Hl[39]=1,Kl[39]=0,Rl[39]=-1,Tl[39]=0,Nl[39]=1,Ll[39]=1,Al[39]=0,jl[39]=0;var ti=function(t){return[[t.bottomleft,0],[0,0],[0,t.leftbottom]]},ni=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0]]},ei=function(t){return[[t.topright,1],[1,1],[1,t.righttop]]},ri=function(t){return[[0,t.lefttop],[0,1],[t.topleft,1]]},li=function(t){return[[t.bottomright,0],[t.bottomleft,0],[0,t.leftbottom],[0,t.lefttop]]},ii=function(t){return[[t.bottomright,0],[t.bottomleft,0],[1,t.righttop],[1,t.rightbottom]]},oi=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.topleft,1],[t.topright,1]]},ui=function(t){return[[0,t.leftbottom],[0,t.lefttop],[t.topleft,1],[t.topright,1]]},si=[],ai=[],hi=[],ci=[],fi=[],pi=[],di=[],gi=[];ci[1]=fi[1]=18,ci[169]=fi[169]=18,hi[4]=ai[4]=12,hi[166]=ai[166]=12,si[16]=gi[16]=4,si[154]=gi[154]=4,pi[64]=di[64]=22,pi[106]=di[106]=22,hi[2]=pi[2]=17,ci[2]=fi[2]=18,hi[168]=pi[168]=17,ci[168]=fi[168]=18,si[8]=ci[8]=9,ai[8]=hi[8]=12,si[162]=ci[162]=9,ai[162]=hi[162]=12,si[32]=gi[32]=4,ai[32]=di[32]=1,si[138]=gi[138]=4,ai[138]=di[138]=1,fi[128]=gi[128]=21,pi[128]=di[128]=22,fi[42]=gi[42]=21,pi[42]=di[42]=22,ai[5]=fi[5]=14,ai[165]=fi[165]=14,hi[20]=gi[20]=6,hi[150]=gi[150]=6,si[80]=pi[80]=11,si[90]=pi[90]=11,ci[65]=di[65]=3,ci[105]=di[105]=3,si[160]=pi[160]=11,ai[160]=fi[160]=14,si[10]=pi[10]=11,ai[10]=fi[10]=14,hi[130]=gi[130]=6,ci[130]=di[130]=3,hi[40]=gi[40]=6,ci[40]=di[40]=3,ai[101]=di[101]=1,ai[69]=di[69]=1,fi[149]=gi[149]=21,fi[21]=gi[21]=21,hi[86]=pi[86]=17,hi[84]=pi[84]=17,si[89]=ci[89]=9,si[81]=ci[81]=9,si[96]=di[96]=0,ai[96]=pi[96]=15,si[74]=di[74]=0,ai[74]=pi[74]=15,si[24]=hi[24]=8,ci[24]=gi[24]=7,si[146]=hi[146]=8,ci[146]=gi[146]=7,ai[6]=pi[6]=15,hi[6]=fi[6]=16,ai[164]=pi[164]=15,hi[164]=fi[164]=16,ci[129]=gi[129]=7,fi[129]=di[129]=20,ci[41]=gi[41]=7,fi[41]=di[41]=20,hi[66]=di[66]=2,ci[66]=pi[66]=19,hi[104]=di[104]=2,ci[104]=pi[104]=19,si[144]=fi[144]=10,pi[144]=gi[144]=23,si[26]=fi[26]=10,pi[26]=gi[26]=23,ai[36]=gi[36]=5,hi[36]=di[36]=2,ai[134]=gi[134]=5,hi[134]=di[134]=2,si[9]=fi[9]=10,ai[9]=ci[9]=13,si[161]=fi[161]=10,ai[161]=ci[161]=13,ai[37]=gi[37]=5,fi[37]=di[37]=20,ai[133]=gi[133]=5,fi[133]=di[133]=20,hi[148]=fi[148]=16,pi[148]=gi[148]=23,hi[22]=fi[22]=16,pi[22]=gi[22]=23,si[82]=hi[82]=8,ci[82]=pi[82]=19,si[88]=hi[88]=8,ci[88]=pi[88]=19,si[73]=di[73]=0,ai[73]=ci[73]=13,si[97]=di[97]=0,ai[97]=ci[97]=13,si[145]=ci[145]=9,fi[145]=gi[145]=21,si[25]=ci[25]=9,fi[25]=gi[25]=21,ai[70]=di[70]=1,hi[70]=pi[70]=17,ai[100]=di[100]=1,hi[100]=pi[100]=17,si[34]=ci[34]=9,ai[34]=hi[34]=12,fi[34]=gi[34]=21,pi[34]=di[34]=22,si[136]=gi[136]=4,ai[136]=di[136]=1,hi[136]=pi[136]=17,ci[136]=fi[136]=18,si[35]=gi[35]=4,ai[35]=hi[35]=12,ci[35]=fi[35]=18,pi[35]=di[35]=22,si[153]=gi[153]=4,ci[153]=fi[153]=18,ai[102]=hi[102]=12,pi[102]=di[102]=22,si[155]=ci[155]=9,fi[155]=gi[155]=23,ai[103]=di[103]=1,hi[103]=pi[103]=17,si[152]=gi[152]=4,hi[152]=pi[152]=17,ci[152]=fi[152]=18,si[156]=hi[156]=8,ci[156]=fi[156]=18,pi[156]=gi[156]=23,si[137]=gi[137]=4,ai[137]=di[137]=1,ci[137]=fi[137]=18,si[139]=gi[139]=4,ai[139]=ci[139]=13,fi[139]=di[139]=20,si[98]=ci[98]=9,ai[98]=hi[98]=12,pi[98]=di[98]=22,si[99]=di[99]=0,ai[99]=hi[99]=12,ci[99]=pi[99]=19,ai[38]=hi[38]=12,fi[38]=gi[38]=21,pi[38]=di[38]=22,ai[39]=gi[39]=5,hi[39]=fi[39]=16,pi[39]=di[39]=22;var yi=[];function _i(t,n,e){return(t-n)/(e-n)}function vi(t){return t.constructor.toString().indexOf("Array")>-1}function mi(t,n,e,r,l,i){for(var o=t.cells[e][n],u=o.cval_real,s=n+r,a=e+l,h=[],c=!1;!c;){if(void 0===t.cells[a]||void 0===t.cells[a][s])if(a-=l,s-=r,u=(o=t.cells[a][s]).cval_real,-1===l)if(0===i)if(1&u)h.push([s,a]),r=-1,l=0,i=0;else{if(!(4&u)){h.push([s+o.bottomright,a]),r=0,l=1,i=1,c=!0;break}h.push([s+1,a]),r=1,l=0,i=0}else{if(!(1&u)){if(4&u){h.push([s+o.bottomright,a]),r=0,l=1,i=1,c=!0;break}h.push([s+o.bottomleft,a]),r=0,l=1,i=0,c=!0;break}h.push([s,a]),r=-1,l=0,i=0}else if(1===l)if(0===i){if(!(16&u)){if(64&u){h.push([s+o.topleft,a+1]),r=0,l=-1,i=0,c=!0;break}h.push([s+o.topright,a+1]),r=0,l=-1,i=1,c=!0;break}h.push([s+1,a+1]),r=1,l=0,i=1}else h.push([s+1,a+1]),r=1,l=0,i=1;else if(-1===r)if(0===i){if(!(64&u)){if(1&u){h.push([s,a+o.leftbottom]),r=1,l=0,i=0,c=!0;break}h.push([s,a+o.lefttop]),r=1,l=0,i=1,c=!0;break}h.push([s,a+1]),r=0,l=1,i=0}else{if(!(64&u)){console.log("MarchingSquaresJS-isoBands: wtf");break}h.push([s,a+1]),r=0,l=1,i=0}else{if(1!==r){console.log("MarchingSquaresJS-isoBands: we came from nowhere!");break}if(0===i){if(!(4&u)){h.push([s+1,a+o.rightbottom]),r=-1,l=0,i=0,c=!0;break}h.push([s+1,a]),r=0,l=-1,i=1}else{if(!(4&u)){if(16&u){h.push([s+1,a+o.righttop]),r=-1,l=0,i=1;break}h.push([s+1,a+o.rightbottom]),r=-1,l=0,i=0,c=!0;break}h.push([s+1,a]),r=0,l=-1,i=1}}else if(u=(o=t.cells[a][s]).cval_real,-1===r)if(0===i)if(void 0!==t.cells[a-1]&&void 0!==t.cells[a-1][s])r=0,l=-1,i=1;else{if(!(1&u)){h.push([s+o.bottomright,a]),r=0,l=1,i=1,c=!0;break}h.push([s,a])}else{if(!(64&u)){console.log("MarchingSquaresJS-isoBands: found entry from top at "+s+","+a);break}console.log("MarchingSquaresJS-isoBands: proceeding in x-direction!")}else if(1===r){if(0===i){console.log("MarchingSquaresJS-isoBands: wtf");break}if(void 0!==t.cells[a+1]&&void 0!==t.cells[a+1][s])r=0,l=1,i=0;else{if(!(16&u)){h.push([s+o.topleft,a+1]),r=0,l=-1,i=0,c=!0;break}h.push([s+1,a+1]),r=1,l=0,i=1}}else if(-1===l){if(1!==i){console.log("MarchingSquaresJS-isoBands: wtf");break}if(void 0!==t.cells[a][s+1])r=1,l=0,i=1;else{if(!(4&u)){h.push([s+1,a+o.righttop]),r=-1,l=0,i=1,c=!0;break}h.push([s+1,a]),r=0,l=-1,i=1}}else{if(1!==l){console.log("MarchingSquaresJS-isoBands: where did we came from???");break}if(0!==i){console.log("MarchingSquaresJS-isoBands: wtf");break}if(void 0!==t.cells[a][s-1])r=-1,l=0,i=0;else{if(!(64&u)){h.push([s,a+o.leftbottom]),r=1,l=0,i=0,c=!0;break}h.push([s,a+1]),r=0,l=1,i=0}}if(a+=l,(s+=r)===n&&a===e)break}return{path:h,i:s,j:a,x:r,y:l,o:i}}function bi(t){if(t.edges.length>0){var n=t.edges[t.edges.length-1],e=t.cval_real;switch(n){case 0:return 16&e?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[t.topleft,1],x:0,y:-1,o:0};case 1:return 4&e?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 2:return 4&e?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[t.topleft,1],x:0,y:-1,o:0};case 3:return 1&e?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 4:return 16&e?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[t.topright,1],x:0,y:-1,o:1};case 5:return 4&e?{p:[t.topright,1],x:0,y:-1,o:1}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 6:return 4&e?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[t.topright,1],x:0,y:-1,o:1};case 7:return 1&e?{p:[t.topright,1],x:0,y:-1,o:1}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 8:return 4&e?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[1,t.righttop],x:-1,y:0,o:1};case 9:return 1&e?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 10:return 1&e?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[1,t.righttop],x:-1,y:0,o:1};case 11:return 64&e?{p:[1,t.righttop],x:-1,y:0,o:1}:{p:[0,t.lefttop],x:1,y:0,o:1};case 12:return 4&e?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 13:return 1&e?{p:[1,t.rightbottom],x:-1,y:0,o:0}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 14:return 1&e?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[1,t.rightbottom],x:-1,y:0,o:0};case 15:return 64&e?{p:[1,t.rightbottom],x:-1,y:0,o:0}:{p:[0,t.lefttop],x:1,y:0,o:1};case 16:return 4&e?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[0,t.leftbottom],x:1,y:0,o:0};case 17:return 64&e?{p:[t.bottomright,0],x:0,y:1,o:1}:{p:[0,t.lefttop],x:1,y:0,o:1};case 18:return 1&e?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[t.bottomleft,0],x:0,y:1,o:0};case 19:return 64&e?{p:[t.bottomleft,0],x:0,y:1,o:0}:{p:[0,t.lefttop],x:1,y:0,o:1};case 20:return 64&e?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[0,t.leftbottom],x:1,y:0,o:0};case 21:return 16&e?{p:[0,t.leftbottom],x:1,y:0,o:0}:{p:[t.topright,1],x:0,y:-1,o:1};case 22:return 64&e?{p:[t.topleft,1],x:0,y:-1,o:0}:{p:[0,t.lefttop],x:1,y:0,o:1};case 23:return 16&e?{p:[0,t.lefttop],x:1,y:0,o:1}:{p:[t.topright,1],x:0,y:-1,o:1};default:console.log("MarchingSquaresJS-isoBands: edge index out of range!"),console.log(t)}}return null}function xi(t,n,e,r){var l,i,o,u,s,a=t.cval;switch(n){case-1:switch(r){case 0:l=ai[a],o=Gl[a],u=zl[a],s=Bl[a];break;default:l=si[a],o=Dl[a],u=kl[a],s=Fl[a]}break;case 1:switch(r){case 0:l=fi[a],o=Jl[a],u=Ql[a],s=$l[a];break;default:l=pi[a],o=Zl[a],u=Hl[a],s=Kl[a]}break;default:switch(e){case-1:switch(r){case 0:l=di[a],o=Rl[a],u=Tl[a],s=Nl[a];break;default:l=gi[a],o=Ll[a],u=Al[a],s=jl[a]}break;case 1:switch(r){case 0:l=ci[a],o=Ul[a],u=ql[a],s=Yl[a];break;default:l=hi[a],o=Xl[a],u=Vl[a],s=Wl[a]}}}if(i=t.edges.indexOf(l),void 0===t.edges[i])return null;switch(function(t,n){delete t.edges[n];for(var e=n+1;e<t.edges.length;e++)t.edges[e-1]=t.edges[e];t.edges.pop()}(t,i),a=t.cval_real,l){case 0:16&a?(n=t.topleft,e=1):(n=1,e=t.righttop);break;case 1:4&a?(n=1,e=t.rightbottom):(n=t.topleft,e=1);break;case 2:4&a?(n=t.topleft,e=1):(n=t.bottomright,e=0);break;case 3:1&a?(n=t.bottomleft,e=0):(n=t.topleft,e=1);break;case 4:16&a?(n=t.topright,e=1):(n=1,e=t.righttop);break;case 5:4&a?(n=1,e=t.rightbottom):(n=t.topright,e=1);break;case 6:4&a?(n=t.topright,e=1):(n=t.bottomright,e=0);break;case 7:1&a?(n=t.bottomleft,e=0):(n=t.topright,e=1);break;case 8:4&a?(n=1,e=t.righttop):(n=t.bottomright,e=0);break;case 9:1&a?(n=t.bottomleft,e=0):(n=1,e=t.righttop);break;case 10:1&a?(n=1,e=t.righttop):(n=0,e=t.leftbottom);break;case 11:64&a?(n=0,e=t.lefttop):(n=1,e=t.righttop);break;case 12:4&a?(n=1,e=t.rightbottom):(n=t.bottomright,e=0);break;case 13:1&a?(n=t.bottomleft,e=0):(n=1,e=t.rightbottom);break;case 14:1&a?(n=1,e=t.rightbottom):(n=0,e=t.leftbottom);break;case 15:64&a?(n=0,e=t.lefttop):(n=1,e=t.rightbottom);break;case 16:4&a?(n=0,e=t.leftbottom):(n=t.bottomright,e=0);break;case 17:64&a?(n=0,e=t.lefttop):(n=t.bottomright,e=0);break;case 18:1&a?(n=t.bottomleft,e=0):(n=0,e=t.leftbottom);break;case 19:64&a?(n=0,e=t.lefttop):(n=t.bottomleft,e=0);break;case 20:64&a?(n=0,e=t.leftbottom):(n=t.topleft,e=1);break;case 21:16&a?(n=t.topright,e=1):(n=0,e=t.leftbottom);break;case 22:64&a?(n=0,e=t.lefttop):(n=t.topleft,e=1);break;case 23:16&a?(n=t.topright,e=1):(n=0,e=t.lefttop);break;default:return console.log("MarchingSquaresJS-isoBands: edge index out of range!"),console.log(t),null}return void 0!==n&&void 0!==e&&void 0!==o&&void 0!==u&&void 0!==s||(console.log("MarchingSquaresJS-isoBands: undefined value!"),console.log(t),console.log(n+" "+e+" "+o+" "+u+" "+s)),{p:[n,e],x:o,y:u,o:s}}function wi(t){var n=[],e=[];t.forEach((function(t){var r=br(a([t]));e.push(r),n.push({ring:t,area:r})})),e.sort((function(t,n){return n-t}));var r=[];return e.forEach((function(t){for(var e=0;e<n.length;e++)if(n[e].area===t){r.push(n[e].ring),n.splice(e,1);break}})),r}function Ei(t){for(var n=t.map((function(t){return{lrCoordinates:t,grouped:!1}})),e=[];!Oi(n);)for(var r=0;r<n.length;r++)if(!n[r].grouped){var l=[];l.push(n[r].lrCoordinates),n[r].grouped=!0;for(var i=a([n[r].lrCoordinates]),o=r+1;o<n.length;o++)n[o].grouped||Ci(a([n[o].lrCoordinates]),i)&&(l.push(n[o].lrCoordinates),n[o].grouped=!0);e.push(l)}return e}function Ci(t,n){for(var e=ce(t),r=0;r<e.features.length;r++)if(!dn(e.features[r],n))return!1;return!0}function Oi(t){for(var n=0;n<t.length;n++)if(!1===t[n].grouped)return!1;return!0}function Mi(t,n,e){if(!I(e=e||{}))throw new Error("options is invalid");var r=e.pivot,l=e.mutate;if(!t)throw new Error("geojson is required");if(null==n||isNaN(n))throw new Error("angle is required");return 0===n||(r||(r=he(t)),!1!==l&&void 0!==l||(t=wn(t)),N(t,(function(t){var e=_l(r,t)+n,l=pr(r,t),i=Q(ml(r,l,e));t[0]=i[0],t[1]=i[1]}))),t}function Si(t,n,e){if(!I(e=e||{}))throw new Error("options is invalid");var r=e.origin,l=e.mutate;if(!t)throw new Error("geojson required");if("number"!=typeof n||0===n)throw new Error("invalid factor");var i=Array.isArray(r)||"object"==typeof r;return!0!==l&&(t=wn(t)),"FeatureCollection"!==t.type||i?Ii(t,n,r):(D(t,(function(e,l){t.features[l]=Ii(e,n,r)})),t)}function Ii(t,n,e){var r="Point"===lt(t);return e=function(t,n){if(null==n&&(n="centroid"),Array.isArray(n)||"object"==typeof n)return J(n);var e=t.bbox?t.bbox:K(t),r=e[0],l=e[1],i=e[2],o=e[3];switch(n){case"sw":case"southwest":case"westsouth":case"bottomleft":return u([r,l]);case"se":case"southeast":case"eastsouth":case"bottomright":return u([i,l]);case"nw":case"northwest":case"westnorth":case"topleft":return u([r,o]);case"ne":case"northeast":case"eastnorth":case"topright":return u([i,o]);case"center":return ae(t);case void 0:case null:case"centroid":return he(t);default:throw new Error("invalid origin")}}(t,e),1===n||r||N(t,(function(t){var r=pr(e,t),l=_l(e,t),i=Q(ml(e,r*n,l));t[0]=i[0],t[1]=i[1],3===t.length&&(t[2]*=n)})),t}function Pi(t){var n=t[0],e=t[1];return[e[0]-n[0],e[1]-n[1]]}function Ri(t,n){return t[0]*n[1]-n[0]*t[1]}function Ti(t,n,e){var r=[],l=x(n,e),i=Q(t),o=[];return i.forEach((function(t,n){if(n!==i.length-1){var e=(a=t,h=i[n+1],c=l,f=Math.sqrt((a[0]-h[0])*(a[0]-h[0])+(a[1]-h[1])*(a[1]-h[1])),p=a[0]+c*(h[1]-a[1])/f,d=h[0]+c*(h[1]-a[1])/f,[[p,a[1]+c*(a[0]-h[0])/f],[d,h[1]+c*(a[0]-h[0])/f]]);if(r.push(e),n>0){var u=r[n-1],s=function(t,n){return!function(t,n){return 0===Ri(Pi(t),Pi(n))}(t,n)&&function(t,n){var e,r,l=t[0],i=Pi(t),o=n[0],u=Pi(n),s=Ri(i,u);return function(t,n){return[t[0]+n[0],t[1]+n[1]]}(l,function(t,n){return[t*n[0],t*n[1]]}(Ri((r=l,[(e=o)[0]-r[0],e[1]-r[1]]),u)/s,i))}(t,n)}(e,u);!1!==s&&(u[1]=s,e[0]=s),o.push(u[0]),n===i.length-2&&(o.push(e[0]),o.push(e[1]))}2===i.length&&(o.push(e[0]),o.push(e[1]))}var a,h,c,f,p,d})),c(o,t.properties)}function Ni(t,n,e){var r=n[0]-t[0],l=n[1]-t[1],i=e[0]-n[0];return function(t){return(t>0)-(t<0)||+t}(r*(e[1]-n[1])-i*l)}function Li(t,n){return n.geometry.coordinates[0].every((function(n){return dn(u(n),t)}))}yi[1]=yi[169]=ti,yi[4]=yi[166]=ni,yi[16]=yi[154]=ei,yi[64]=yi[106]=ri,yi[168]=yi[2]=li,yi[162]=yi[8]=ii,yi[138]=yi[32]=oi,yi[42]=yi[128]=ui,yi[5]=yi[165]=function(t){return[[0,0],[0,t.leftbottom],[1,t.rightbottom],[1,0]]},yi[20]=yi[150]=function(t){return[[1,0],[t.bottomright,0],[t.topright,1],[1,1]]},yi[80]=yi[90]=function(t){return[[1,1],[1,t.righttop],[0,t.lefttop],[0,1]]},yi[65]=yi[105]=function(t){return[[t.bottomleft,0],[0,0],[0,1],[t.topleft,1]]},yi[160]=yi[10]=function(t){return[[1,t.righttop],[1,t.rightbottom],[0,t.leftbottom],[0,t.lefttop]]},yi[130]=yi[40]=function(t){return[[t.topleft,1],[t.topright,1],[t.bottomright,0],[t.bottomleft,0]]},yi[85]=function(){return[[0,0],[0,1],[1,1],[1,0]]},yi[101]=yi[69]=function(t){return[[1,t.rightbottom],[1,0],[0,0],[0,1],[t.topleft,1]]},yi[149]=yi[21]=function(t){return[[t.topright,1],[1,1],[1,0],[0,0],[0,t.leftbottom]]},yi[86]=yi[84]=function(t){return[[1,0],[t.bottomright,0],[0,t.lefttop],[0,1],[1,1]]},yi[89]=yi[81]=function(t){return[[1,1],[1,t.righttop],[t.bottomleft,0],[0,0],[0,1]]},yi[96]=yi[74]=function(t){return[[1,t.righttop],[1,t.rightbottom],[0,t.lefttop],[0,1],[t.topleft,1]]},yi[24]=yi[146]=function(t){return[[1,1],[1,t.righttop],[t.bottomright,0],[t.bottomleft,0],[t.topright,1]]},yi[6]=yi[164]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.leftbottom],[0,t.lefttop]]},yi[129]=yi[41]=function(t){return[[t.topright,1],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topleft,1]]},yi[66]=yi[104]=function(t){return[[t.bottomright,0],[t.bottomleft,0],[0,t.lefttop],[0,1],[t.topleft,1]]},yi[144]=yi[26]=function(t){return[[1,1],[1,t.righttop],[0,t.leftbottom],[0,t.lefttop],[t.topright,1]]},yi[36]=yi[134]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[t.topleft,1],[t.topright,1]]},yi[9]=yi[161]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomleft,0],[0,0],[0,t.leftbottom]]},yi[37]=yi[133]=function(t){return[[1,t.rightbottom],[1,0],[0,0],[0,t.leftbottom],[t.topleft,1],[t.topright,1]]},yi[148]=yi[22]=function(t){return[[1,1],[1,0],[t.bottomright,0],[0,t.leftbottom],[0,t.lefttop],[t.topright,1]]},yi[82]=yi[88]=function(t){return[[1,1],[1,t.righttop],[t.bottomright,0],[t.bottomleft,0],[0,t.lefttop],[0,1]]},yi[73]=yi[97]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomleft,0],[0,0],[0,1],[t.topleft,1]]},yi[145]=yi[25]=function(t){return[[1,1],[1,t.righttop],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topright,1]]},yi[70]=yi[100]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.lefttop],[0,1],[t.topleft,1]]},yi[34]=function(t){return[ui(t),ii(t)]},yi[35]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomright,0],[t.bottomleft,0],[0,t.leftbottom],[0,t.lefttop],[t.topleft,1],[t.topright,1]]},yi[136]=function(t){return[oi(t),li(t)]},yi[153]=function(t){return[ei(t),ti(t)]},yi[102]=function(t){return[ni(t),ri(t)]},yi[155]=function(t){return[[1,1],[1,t.righttop],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topright,1]]},yi[103]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.lefttop],[0,1],[t.topleft,1]]},yi[152]=function(t){return[ei(t),li(t)]},yi[156]=function(t){return[[1,1],[1,t.righttop],[t.bottomright,0],[t.bottomleft,0],[0,t.leftbottom],[0,t.lefttop],[t.topright,1]]},yi[137]=function(t){return[oi(t),ti(t)]},yi[139]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomleft,0],[0,0],[0,t.leftbottom],[t.topleft,1],[t.topright,1]]},yi[98]=function(t){return[ii(t),ri(t)]},yi[99]=function(t){return[[1,t.righttop],[1,t.rightbottom],[t.bottomright,0],[t.bottomleft,0],[0,t.lefttop],[0,1],[t.topleft,1]]},yi[38]=function(t){return[ni(t),ui(t)]},yi[39]=function(t){return[[1,t.rightbottom],[1,0],[t.bottomright,0],[0,t.leftbottom],[0,t.lefttop],[t.topleft,1],[t.topright,1]]};var Ai=function(){function t(n){this.id=t.buildId(n),this.coordinates=n,this.innerEdges=[],this.outerEdges=[],this.outerEdgesSorted=!1}return t.buildId=function(t){return t.join(",")},t.prototype.removeInnerEdge=function(t){this.innerEdges=this.innerEdges.filter((function(n){return n.from.id!==t.from.id}))},t.prototype.removeOuterEdge=function(t){this.outerEdges=this.outerEdges.filter((function(n){return n.to.id!==t.to.id}))},t.prototype.addOuterEdge=function(t){this.outerEdges.push(t),this.outerEdgesSorted=!1},t.prototype.sortOuterEdges=function(){var t=this;this.outerEdgesSorted||(this.outerEdges.sort((function(n,e){var r=n.to,l=e.to;if(r.coordinates[0]-t.coordinates[0]>=0&&l.coordinates[0]-t.coordinates[0]<0)return 1;if(r.coordinates[0]-t.coordinates[0]<0&&l.coordinates[0]-t.coordinates[0]>=0)return-1;if(r.coordinates[0]-t.coordinates[0]==0&&l.coordinates[0]-t.coordinates[0]==0)return r.coordinates[1]-t.coordinates[1]>=0||l.coordinates[1]-t.coordinates[1]>=0?r.coordinates[1]-l.coordinates[1]:l.coordinates[1]-r.coordinates[1];var i=Ni(t.coordinates,r.coordinates,l.coordinates);return i<0?1:i>0?-1:Math.pow(r.coordinates[0]-t.coordinates[0],2)+Math.pow(r.coordinates[1]-t.coordinates[1],2)-(Math.pow(l.coordinates[0]-t.coordinates[0],2)+Math.pow(l.coordinates[1]-t.coordinates[1],2))})),this.outerEdgesSorted=!0)},t.prototype.getOuterEdges=function(){return this.sortOuterEdges(),this.outerEdges},t.prototype.getOuterEdge=function(t){return this.sortOuterEdges(),this.outerEdges[t]},t.prototype.addInnerEdge=function(t){this.innerEdges.push(t)},t}(),ji=function(){function t(t,n){this.from=t,this.to=n,this.next=void 0,this.label=void 0,this.symetric=void 0,this.ring=void 0,this.from.addOuterEdge(this),this.to.addInnerEdge(this)}return t.prototype.getSymetric=function(){return this.symetric||(this.symetric=new t(this.to,this.from),this.symetric.symetric=this),this.symetric},t.prototype.deleteEdge=function(){this.from.removeOuterEdge(this),this.to.removeInnerEdge(this)},t.prototype.isEqual=function(t){return this.from.id===t.from.id&&this.to.id===t.to.id},t.prototype.toString=function(){return"Edge { "+this.from.id+" -> "+this.to.id+" }"},t.prototype.toLineString=function(){return c([this.from.coordinates,this.to.coordinates])},t.prototype.compareTo=function(t){return Ni(t.from.coordinates,t.to.coordinates,this.to.coordinates)},t}(),Di=function(){function t(){this.edges=[],this.polygon=void 0,this.envelope=void 0}return t.prototype.push=function(t){this.edges.push(t),this.polygon=this.envelope=void 0},t.prototype.get=function(t){return this.edges[t]},Object.defineProperty(t.prototype,"length",{get:function(){return this.edges.length},enumerable:!0,configurable:!0}),t.prototype.forEach=function(t){this.edges.forEach(t)},t.prototype.map=function(t){return this.edges.map(t)},t.prototype.some=function(t){return this.edges.some(t)},t.prototype.isValid=function(){return!0},t.prototype.isHole=function(){var t=this,n=this.edges.reduce((function(n,e,r){return e.from.coordinates[1]>t.edges[n].from.coordinates[1]&&(n=r),n}),0),e=(0===n?this.length:n)-1,r=(n+1)%this.length,l=Ni(this.edges[e].from.coordinates,this.edges[n].from.coordinates,this.edges[r].from.coordinates);return 0===l?this.edges[e].from.coordinates[0]>this.edges[r].from.coordinates[0]:l>0},t.prototype.toMultiPoint=function(){return g(this.edges.map((function(t){return t.from.coordinates})))},t.prototype.toPolygon=function(){if(this.polygon)return this.polygon;var t=this.edges.map((function(t){return t.from.coordinates}));return t.push(this.edges[0].from.coordinates),this.polygon=a([t])},t.prototype.getEnvelope=function(){return this.envelope?this.envelope:this.envelope=le(this.toPolygon())},t.findEdgeRingContaining=function(t,n){var e,r,l=t.getEnvelope();return n.forEach((function(n){var i,o,s,a,h,c,f=n.getEnvelope();if(r&&(e=r.getEnvelope()),o=l,s=(i=f).geometry.coordinates[0].map((function(t){return t[0]})),a=i.geometry.coordinates[0].map((function(t){return t[1]})),h=o.geometry.coordinates[0].map((function(t){return t[0]})),c=o.geometry.coordinates[0].map((function(t){return t[1]})),(Math.max.apply(null,s)!==Math.max.apply(null,h)||Math.max.apply(null,a)!==Math.max.apply(null,c)||Math.min.apply(null,s)!==Math.min.apply(null,h)||Math.min.apply(null,a)!==Math.min.apply(null,c))&&Li(f,l)){for(var p=t.map((function(t){return t.from.coordinates})),d=void 0,g=function(t){n.some((function(n){return e=t,r=n.from.coordinates,e[0]===r[0]&&e[1]===r[1];var e,r}))||(d=t)},y=0,_=p;y<_.length;y++)g(_[y]);d&&n.inside(u(d))&&(r&&!Li(e,f)||(r=n))}})),r},t.prototype.inside=function(t){return dn(t,this.toPolygon())},t}(),ki=function(){function t(){this.edges=[],this.nodes={}}return t.fromGeoJson=function(n){!function(t){if(!t)throw new Error("No geojson passed");if("FeatureCollection"!==t.type&&"GeometryCollection"!==t.type&&"MultiLineString"!==t.type&&"LineString"!==t.type&&"Feature"!==t.type)throw new Error("Invalid input type '"+t.type+"'. Geojson must be FeatureCollection, GeometryCollection, LineString, MultiLineString or Feature")}(n);var e=new t;return B(n,(function(t){nt(t,"LineString","Graph::fromGeoJson"),L(t,(function(t,n){if(t){var r=e.getNode(t),l=e.getNode(n);e.addEdge(r,l)}return n}))})),e},t.prototype.getNode=function(t){var n=Ai.buildId(t),e=this.nodes[n];return e||(e=this.nodes[n]=new Ai(t)),e},t.prototype.addEdge=function(t,n){var e=new ji(t,n),r=e.getSymetric();this.edges.push(e),this.edges.push(r)},t.prototype.deleteDangles=function(){var t=this;Object.keys(this.nodes).map((function(n){return t.nodes[n]})).forEach((function(n){return t._removeIfDangle(n)}))},t.prototype._removeIfDangle=function(t){var n=this;if(t.innerEdges.length<=1){var e=t.getOuterEdges().map((function(t){return t.to}));this.removeNode(t),e.forEach((function(t){return n._removeIfDangle(t)}))}},t.prototype.deleteCutEdges=function(){var t=this;this._computeNextCWEdges(),this._findLabeledEdgeRings(),this.edges.forEach((function(n){n.label===n.symetric.label&&(t.removeEdge(n.symetric),t.removeEdge(n))}))},t.prototype._computeNextCWEdges=function(t){var n=this;void 0===t?Object.keys(this.nodes).forEach((function(t){return n._computeNextCWEdges(n.nodes[t])})):t.getOuterEdges().forEach((function(n,e){t.getOuterEdge((0===e?t.getOuterEdges().length:e)-1).symetric.next=n}))},t.prototype._computeNextCCWEdges=function(t,n){for(var e,r,l=t.getOuterEdges(),i=l.length-1;i>=0;--i){var o=l[i],u=o.symetric,s=void 0,a=void 0;o.label===n&&(s=o),u.label===n&&(a=u),s&&a&&(a&&(r=a),s&&(r&&(r.next=s,r=void 0),e||(e=s)))}r&&(r.next=e)},t.prototype._findLabeledEdgeRings=function(){var t=[],n=0;return this.edges.forEach((function(e){if(!(e.label>=0)){t.push(e);var r=e;do{r.label=n,r=r.next}while(!e.isEqual(r));n++}})),t},t.prototype.getEdgeRings=function(){var t=this;this._computeNextCWEdges(),this.edges.forEach((function(t){t.label=void 0})),this._findLabeledEdgeRings().forEach((function(n){t._findIntersectionNodes(n).forEach((function(e){t._computeNextCCWEdges(e,n.label)}))}));var n=[];return this.edges.forEach((function(e){e.ring||n.push(t._findEdgeRing(e))})),n},t.prototype._findIntersectionNodes=function(t){var n=[],e=t,r=function(){var r=0;e.from.getOuterEdges().forEach((function(n){n.label===t.label&&++r})),r>1&&n.push(e.from),e=e.next};do{r()}while(!t.isEqual(e));return n},t.prototype._findEdgeRing=function(t){var n=t,e=new Di;do{e.push(n),n.ring=e,n=n.next}while(!t.isEqual(n));return e},t.prototype.removeNode=function(t){var n=this;t.getOuterEdges().forEach((function(t){return n.removeEdge(t)})),t.innerEdges.forEach((function(t){return n.removeEdge(t)})),delete this.nodes[t.id]},t.prototype.removeEdge=function(t){this.edges=this.edges.filter((function(n){return!n.isEqual(t)})),t.deleteEdge()},t}();function Fi(t,n){var e=!0;return B(t,(function(t){B(n,(function(n){if(!1===e)return!1;e=function(t,n){switch(t.type){case"Point":switch(n.type){case"Point":return e=t.coordinates,r=n.coordinates,!(e[0]===r[0]&&e[1]===r[1]);case"LineString":return!Gi(n,t);case"Polygon":return!dn(t,n)}break;case"LineString":switch(n.type){case"Point":return!Gi(t,n);case"LineString":return!function(t,n){return hr(t,n).features.length>0}(t,n);case"Polygon":return!zi(n,t)}break;case"Polygon":switch(n.type){case"Point":return!dn(n,t);case"LineString":return!zi(t,n);case"Polygon":return!function(t,n){for(var e=0,r=t.coordinates[0];e<r.length;e++)if(dn(r[e],n))return!0;for(var l=0,i=n.coordinates[0];l<i.length;l++)if(dn(i[l],t))return!0;return hr(nl(t),nl(n)).features.length>0}(n,t)}}var e,r;return!1}(t.geometry,n.geometry)}))})),e}function Gi(t,n){for(var e=0;e<t.coordinates.length-1;e++)if(Bi(t.coordinates[e],t.coordinates[e+1],n.coordinates))return!0;return!1}function zi(t,n){for(var e=0,r=n.coordinates;e<r.length;e++)if(dn(r[e],t))return!0;return hr(n,nl(t)).features.length>0}function Bi(t,n,e){var r=e[0]-t[0],l=e[1]-t[1],i=n[0]-t[0],o=n[1]-t[1];return 0==r*o-l*i&&(Math.abs(i)>=Math.abs(o)?i>0?t[0]<=e[0]&&e[0]<=n[0]:n[0]<=e[0]&&e[0]<=t[0]:o>0?t[1]<=e[1]&&e[1]<=n[1]:n[1]<=e[1]&&e[1]<=t[1])}function Ui(t,n){return!(t[0]>n[0]||t[2]<n[2]||t[1]>n[1]||t[3]<n[3])}function qi(t,n){return t[0]===n[0]&&t[1]===n[1]}function Yi(t,n){return[(t[0]+n[0])/2,(t[1]+n[1])/2]}function Xi(t,n){for(var e=!1,r=!1,l=t.coordinates.length,i=0;i<l&&!e&&!r;){for(var o=0;o<n.coordinates.length-1;o++){var u=!0;0!==o&&o!==n.coordinates.length-2||(u=!1),Zi(n.coordinates[o],n.coordinates[o+1],t.coordinates[i],u)?e=!0:r=!0}i++}return e&&r}function Vi(t,n){return hr(t,el(n)).features.length>0}function Wi(t,n){for(var e=!1,r=!1,l=t.coordinates.length,i=0;i<l&&(!e||!r);i++)dn(u(t.coordinates[i]),n)?e=!0:r=!0;return r&&e}function Zi(t,n,e,r){var l=e[0]-t[0],i=e[1]-t[1],o=n[0]-t[0],u=n[1]-t[1];return 0==l*u-i*o&&(r?Math.abs(o)>=Math.abs(u)?o>0?t[0]<=e[0]&&e[0]<=n[0]:n[0]<=e[0]&&e[0]<=t[0]:u>0?t[1]<=e[1]&&e[1]<=n[1]:n[1]<=e[1]&&e[1]<=t[1]:Math.abs(o)>=Math.abs(u)?o>0?t[0]<e[0]&&e[0]<n[0]:n[0]<e[0]&&e[0]<t[0]:u>0?t[1]<e[1]&&e[1]<n[1]:n[1]<e[1]&&e[1]<t[1])}var Hi=function(t){this.precision=t&&t.precision?t.precision:17,this.direction=!(!t||!t.direction)&&t.direction,this.pseudoNode=!(!t||!t.pseudoNode)&&t.pseudoNode,this.objectComparator=t&&t.objectComparator?t.objectComparator:Qi};function Ki(t){return t.coordinates.map((function(n){return{type:t.type.replace("Multi",""),coordinates:n}}))}function Ji(t,n){return t.hasOwnProperty("coordinates")?t.coordinates.length===n.coordinates.length:t.length===n.length}function Qi(t,n){return pl(t,n,{strict:!0})}Hi.prototype.compare=function(t,n){if(t.type!==n.type||!Ji(t,n))return!1;switch(t.type){case"Point":return this.compareCoord(t.coordinates,n.coordinates);case"LineString":return this.compareLine(t.coordinates,n.coordinates,0,!1);case"Polygon":return this.comparePolygon(t,n);case"Feature":return this.compareFeature(t,n);default:if(0===t.type.indexOf("Multi")){var e=this,r=Ki(t),l=Ki(n);return r.every((function(t){return this.some((function(n){return e.compare(t,n)}))}),l)}}return!1},Hi.prototype.compareCoord=function(t,n){if(t.length!==n.length)return!1;for(var e=0;e<t.length;e++)if(t[e].toFixed(this.precision)!==n[e].toFixed(this.precision))return!1;return!0},Hi.prototype.compareLine=function(t,n,e,r){if(!Ji(t,n))return!1;var l=this.pseudoNode?t:this.removePseudo(t),i=this.pseudoNode?n:this.removePseudo(n);if(!r||this.compareCoord(l[0],i[0])||(i=this.fixStartIndex(i,l))){var o=this.compareCoord(l[e],i[e]);return this.direction||o?this.comparePath(l,i):!!this.compareCoord(l[e],i[i.length-(1+e)])&&this.comparePath(l.slice().reverse(),i)}},Hi.prototype.fixStartIndex=function(t,n){for(var e,r=-1,l=0;l<t.length;l++)if(this.compareCoord(t[l],n[0])){r=l;break}return r>=0&&(e=[].concat(t.slice(r,t.length),t.slice(1,r+1))),e},Hi.prototype.comparePath=function(t,n){var e=this;return t.every((function(t,n){return e.compareCoord(t,this[n])}),n)},Hi.prototype.comparePolygon=function(t,n){if(this.compareLine(t.coordinates[0],n.coordinates[0],1,!0)){var e=t.coordinates.slice(1,t.coordinates.length),r=n.coordinates.slice(1,n.coordinates.length),l=this;return e.every((function(t){return this.some((function(n){return l.compareLine(t,n,1,!0)}))}),r)}return!1},Hi.prototype.compareFeature=function(t,n){return!(t.id!==n.id||!this.objectComparator(t.properties,n.properties)||!this.compareBBox(t,n))&&this.compare(t.geometry,n.geometry)},Hi.prototype.compareBBox=function(t,n){return!!(!t.bbox&&!n.bbox||t.bbox&&n.bbox&&this.compareCoord(t.bbox,n.bbox))},Hi.prototype.removePseudo=function(t){return t};var $i=Hi;function to(t,n){var e=!1;return B(t,(function(t){B(n,(function(n){if(!0===e)return!0;e=!Fi(t.geometry,n.geometry)}))})),e}var no=Ft((function(t){function n(t,n,e,r){this.dataset=[],this.epsilon=1,this.minPts=2,this.distance=this._euclideanDistance,this.clusters=[],this.noise=[],this._visited=[],this._assigned=[],this._datasetLength=0,this._init(t,n,e,r)}n.prototype.run=function(t,n,e,r){this._init(t,n,e,r);for(var l=0;l<this._datasetLength;l++)if(1!==this._visited[l]){this._visited[l]=1;var i=this._regionQuery(l);if(i.length<this.minPts)this.noise.push(l);else{var o=this.clusters.length;this.clusters.push([]),this._addToCluster(l,o),this._expandCluster(o,i)}}return this.clusters},n.prototype._init=function(t,n,e,r){if(t){if(!(t instanceof Array))throw Error("Dataset must be of type array, "+typeof t+" given");this.dataset=t,this.clusters=[],this.noise=[],this._datasetLength=t.length,this._visited=new Array(this._datasetLength),this._assigned=new Array(this._datasetLength)}n&&(this.epsilon=n),e&&(this.minPts=e),r&&(this.distance=r)},n.prototype._expandCluster=function(t,n){for(var e=0;e<n.length;e++){var r=n[e];if(1!==this._visited[r]){this._visited[r]=1;var l=this._regionQuery(r);l.length>=this.minPts&&(n=this._mergeArrays(n,l))}1!==this._assigned[r]&&this._addToCluster(r,t)}},n.prototype._addToCluster=function(t,n){this.clusters[n].push(t),this._assigned[t]=1},n.prototype._regionQuery=function(t){for(var n=[],e=0;e<this._datasetLength;e++)this.distance(this.dataset[t],this.dataset[e])<this.epsilon&&n.push(e);return n},n.prototype._mergeArrays=function(t,n){for(var e=n.length,r=0;r<e;r++){var l=n[r];t.indexOf(l)<0&&t.push(l)}return t},n.prototype._euclideanDistance=function(t,n){for(var e=0,r=Math.min(t.length,n.length);r--;)e+=(t[r]-n[r])*(t[r]-n[r]);return Math.sqrt(e)},t.exports&&(t.exports=n)})),eo=Ft((function(t){function n(t,n,e){this.k=3,this.dataset=[],this.assignments=[],this.centroids=[],this.init(t,n,e)}n.prototype.init=function(t,n,e){this.assignments=[],this.centroids=[],void 0!==t&&(this.dataset=t),void 0!==n&&(this.k=n),void 0!==e&&(this.distance=e)},n.prototype.run=function(t,n){this.init(t,n);for(var e=this.dataset.length,r=0;r<this.k;r++)this.centroids[r]=this.randomCentroid();for(var l=!0;l;){l=this.assign();for(var i=0;i<this.k;i++){for(var o=new Array(h),u=0,s=0;s<h;s++)o[s]=0;for(var a=0;a<e;a++){var h=this.dataset[a].length;if(i===this.assignments[a]){for(s=0;s<h;s++)o[s]+=this.dataset[a][s];u++}}if(u>0){for(s=0;s<h;s++)o[s]/=u;this.centroids[i]=o}else this.centroids[i]=this.randomCentroid(),l=!0}}return this.getClusters()},n.prototype.randomCentroid=function(){var t,n,e=this.dataset.length-1;do{n=Math.round(Math.random()*e),t=this.dataset[n]}while(this.centroids.indexOf(t)>=0);return t},n.prototype.assign=function(){for(var t,n=!1,e=this.dataset.length,r=0;r<e;r++)(t=this.argmin(this.dataset[r],this.centroids,this.distance))!=this.assignments[r]&&(this.assignments[r]=t,n=!0);return n},n.prototype.getClusters=function(){for(var t,n=new Array(this.k),e=0;e<this.assignments.length;e++)void 0===n[t=this.assignments[e]]&&(n[t]=[]),n[t].push(e);return n},n.prototype.argmin=function(t,n,e){for(var r,l=Number.MAX_VALUE,i=0,o=n.length,u=0;u<o;u++)(r=e(t,n[u]))<l&&(l=r,i=u);return i},n.prototype.distance=function(t,n){for(var e=0,r=Math.min(t.length,n.length);r--;){var l=t[r]-n[r];e+=l*l}return Math.sqrt(e)},t.exports&&(t.exports=n)})),ro=Ft((function(t){function n(t,n,e){this._queue=[],this._priorities=[],this._sorting="desc",this._init(t,n,e)}n.prototype.insert=function(t,n){for(var e=this._queue.length,r=e;r--;){var l=this._priorities[r];"desc"===this._sorting?n>l&&(e=r):n<l&&(e=r)}this._insertAt(t,n,e)},n.prototype.remove=function(t){for(var n=this._queue.length;n--;)if(t===this._queue[n]){this._queue.splice(n,1),this._priorities.splice(n,1);break}},n.prototype.forEach=function(t){this._queue.forEach(t)},n.prototype.getElements=function(){return this._queue},n.prototype.getElementPriority=function(t){return this._priorities[t]},n.prototype.getPriorities=function(){return this._priorities},n.prototype.getElementsWithPriorities=function(){for(var t=[],n=0,e=this._queue.length;n<e;n++)t.push([this._queue[n],this._priorities[n]]);return t},n.prototype._init=function(t,n,e){if(t&&n){if(this._queue=[],this._priorities=[],t.length!==n.length)throw new Error("Arrays must have the same length");for(var r=0;r<t.length;r++)this.insert(t[r],n[r])}e&&(this._sorting=e)},n.prototype._insertAt=function(t,n,e){this._queue.length===e?(this._queue.push(t),this._priorities.push(n)):(this._queue.splice(e,0,t),this._priorities.splice(e,0,n))},t.exports&&(t.exports=n)})),lo=Ft((function(t){if(t.exports)var n=ro;function e(t,n,e,r){this.epsilon=1,this.minPts=1,this.distance=this._euclideanDistance,this._reachability=[],this._processed=[],this._coreDistance=0,this._orderedList=[],this._init(t,n,e,r)}e.prototype.run=function(t,e,r,l){this._init(t,e,r,l);for(var i=0,o=this.dataset.length;i<o;i++)if(1!==this._processed[i]){this._processed[i]=1,this.clusters.push([i]);var u=this.clusters.length-1;this._orderedList.push(i);var s=new n(null,null,"asc"),a=this._regionQuery(i);void 0!==this._distanceToCore(i)&&(this._updateQueue(i,a,s),this._expandCluster(u,s))}return this.clusters},e.prototype.getReachabilityPlot=function(){for(var t=[],n=0,e=this._orderedList.length;n<e;n++){var r=this._orderedList[n],l=this._reachability[r];t.push([r,l])}return t},e.prototype._init=function(t,n,e,r){if(t){if(!(t instanceof Array))throw Error("Dataset must be of type array, "+typeof t+" given");this.dataset=t,this.clusters=[],this._reachability=new Array(this.dataset.length),this._processed=new Array(this.dataset.length),this._coreDistance=0,this._orderedList=[]}n&&(this.epsilon=n),e&&(this.minPts=e),r&&(this.distance=r)},e.prototype._updateQueue=function(t,n,e){var r=this;this._coreDistance=this._distanceToCore(t),n.forEach((function(n){if(void 0===r._processed[n]){var l=r.distance(r.dataset[t],r.dataset[n]),i=Math.max(r._coreDistance,l);void 0===r._reachability[n]?(r._reachability[n]=i,e.insert(n,i)):i<r._reachability[n]&&(r._reachability[n]=i,e.remove(n),e.insert(n,i))}}))},e.prototype._expandCluster=function(t,n){for(var e=n.getElements(),r=0,l=e.length;r<l;r++){var i=e[r];if(void 0===this._processed[i]){var o=this._regionQuery(i);this._processed[i]=1,this.clusters[t].push(i),this._orderedList.push(i),void 0!==this._distanceToCore(i)&&(this._updateQueue(i,o,n),this._expandCluster(t,n))}}},e.prototype._distanceToCore=function(t){for(var n=this.epsilon,e=0;e<n;e++)if(this._regionQuery(t,e).length>=this.minPts)return e},e.prototype._regionQuery=function(t,n){n=n||this.epsilon;for(var e=[],r=0,l=this.dataset.length;r<l;r++)this.distance(this.dataset[t],this.dataset[r])<n&&e.push(r);return e},e.prototype._euclideanDistance=function(t,n){for(var e=0,r=Math.min(t.length,n.length);r--;)e+=(t[r]-n[r])*(t[r]-n[r]);return Math.sqrt(e)},t.exports&&(t.exports=e)})),io=Ft((function(t){t.exports&&(t.exports={DBSCAN:no,KMEANS:eo,OPTICS:lo,PriorityQueue:ro})})),oo=function(t,n,e){for(var r=t.length,l=0,i=0;i<r;i++){var o=(t[i]||0)-(n[i]||0);l+=o*o}return e?Math.sqrt(l):l},uo=oo,so=function(t,n,e){var r=Math.abs(t-n);return e?r:r*r},ao=oo;function ho(t,n,e){e=e||[];for(var r=0;r<t;r++)e[r]=n;return e}var co=function(t,n,e,r){var l=[],i=[],o=[],u=[],s=!1,a=r||1e4,h=t.length,c=t[0].length,f=c>0,p=[];if(e)l="kmrand"==e?function(t,n){for(var e={},r=[],l=n<<2,i=t.length,o=t[0].length>0;r.length<n&&l-- >0;){var u=t[Math.floor(Math.random()*i)],s=o?u.join("_"):""+u;e[s]||(e[s]=!0,r.push(u))}if(r.length<n)throw new Error("Error initializating clusters");return r}(t,n):"kmpp"==e?function(t,n){var e=t[0].length?uo:so,r=[],l=t.length,i=t[0].length>0,o=t[Math.floor(Math.random()*l)];for(i&&o.join("_"),r.push(o);r.length<n;){for(var u=[],s=r.length,a=0,h=[],c=0;c<l;c++){for(var f=1/0,p=0;p<s;p++){var d=e(t[c],r[p]);d<=f&&(f=d)}u[c]=f}for(var g=0;g<l;g++)a+=u[g];for(var y=0;y<l;y++)h[y]={i:y,v:t[y],pr:u[y]/a,cs:0};h.sort((function(t,n){return t.pr-n.pr})),h[0].cs=h[0].pr;for(var _=1;_<l;_++)h[_].cs=h[_-1].cs+h[_].pr;for(var v=Math.random(),m=0;m<l-1&&h[m++].cs<v;);r.push(h[m-1].v)}return r}(t,n):e;else for(var d={};l.length<n;){var g=Math.floor(Math.random()*h);d[g]||(d[g]=!0,l.push(t[g]))}do{ho(n,0,p);for(var y=0;y<h;y++){for(var _=1/0,v=0,m=0;m<n;m++)(u=f?ao(t[y],l[m]):Math.abs(t[y]-l[m]))<=_&&(_=u,v=m);o[y]=v,p[v]++}for(var b=[],x=(i=[],0);x<n;x++)b[x]=f?ho(c,0,b[x]):0,i[x]=l[x];if(f){for(var w=0;w<n;w++)l[w]=[];for(var E=0;E<h;E++)for(var C=b[o[E]],O=t[E],M=0;M<c;M++)C[M]+=O[M];s=!0;for(var S=0;S<n;S++){for(var I=l[S],P=b[S],R=i[S],T=p[S],N=0;N<c;N++)I[N]=P[N]/T||0;if(s)for(var L=0;L<c;L++)if(R[L]!=I[L]){s=!1;break}}}else{for(var A=0;A<h;A++)b[o[A]]+=t[A];for(var j=0;j<n;j++)l[j]=b[j]/p[j]||0;s=!0;for(var D=0;D<n;D++)if(i[D]!=l[D]){s=!1;break}}s=s||--a<=0}while(!s);return{it:1e4-a,k:n,idxs:o,centroids:l}};function fo(t,n){return w(_l(t[0],t[1]))===w(_l(n[0],n[1]))}function po(t,n){if(t.geometry&&t.geometry.type)return t.geometry.type;if(t.type)return t.type;throw new Error("Invalid GeoJSON object for "+n)}function go(t){for(var n=t,e=[];n.parent;)e.unshift(n),n=n.parent;return e}var yo={search:function(t,n,e,r){t.cleanDirty();var l=(r=r||{}).heuristic||yo.heuristics.manhattan,i=r.closest||!1,o=new mo((function(t){return t.f})),u=n;for(n.h=l(n,e),o.push(n);o.size()>0;){var s=o.pop();if(s===e)return go(s);s.closed=!0;for(var a=t.neighbors(s),h=0,c=a.length;h<c;++h){var f=a[h];if(!f.closed&&!f.isWall()){var p=s.g+f.getCost(s),d=f.visited;(!d||p<f.g)&&(f.visited=!0,f.parent=s,f.h=f.h||l(f,e),f.g=p,f.f=f.g+f.h,t.markDirty(f),i&&(f.h<u.h||f.h===u.h&&f.g<u.g)&&(u=f),d?o.rescoreElement(f):o.push(f))}}}return i?go(u):[]},heuristics:{manhattan:function(t,n){return Math.abs(n.x-t.x)+Math.abs(n.y-t.y)},diagonal:function(t,n){var e=Math.sqrt(2),r=Math.abs(n.x-t.x),l=Math.abs(n.y-t.y);return 1*(r+l)+(e-2)*Math.min(r,l)}},cleanNode:function(t){t.f=0,t.g=0,t.h=0,t.visited=!1,t.closed=!1,t.parent=null}};function _o(t,n){n=n||{},this.nodes=[],this.diagonal=!!n.diagonal,this.grid=[];for(var e=0;e<t.length;e++){this.grid[e]=[];for(var r=0,l=t[e];r<l.length;r++){var i=new vo(e,r,l[r]);this.grid[e][r]=i,this.nodes.push(i)}}this.init()}function vo(t,n,e){this.x=t,this.y=n,this.weight=e}function mo(t){this.content=[],this.scoreFunction=t}function bo(t,n){for(var e=0;e<n.features.length;e++)if(dn(t,n.features[e]))return!0;return!1}function xo(t){return function(){return t}}function wo(t){return t[0]}function Eo(t){return t[1]}function Co(){this._=null}function Oo(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function Mo(t,n){var e=n,r=n.R,l=e.U;l?l.L===e?l.L=r:l.R=r:t._=r,r.U=l,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function So(t,n){var e=n,r=n.L,l=e.U;l?l.L===e?l.L=r:l.R=r:t._=r,r.U=l,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function Io(t){for(;t.L;)t=t.L;return t}function Po(t,n,e,r){var l=[null,null],i=$o.push(l)-1;return l.left=t,l.right=n,e&&To(l,t,n,e),r&&To(l,n,t,r),Jo[t.index].halfedges.push(i),Jo[n.index].halfedges.push(i),l}function Ro(t,n,e){var r=[n,e];return r.left=t,r}function To(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function No(t,n,e,r,l){var i,o=t[0],u=t[1],s=o[0],a=o[1],h=0,c=1,f=u[0]-s,p=u[1]-a;if(i=n-s,f||!(i>0)){if(i/=f,f<0){if(i<h)return;i<c&&(c=i)}else if(f>0){if(i>c)return;i>h&&(h=i)}if(i=r-s,f||!(i<0)){if(i/=f,f<0){if(i>c)return;i>h&&(h=i)}else if(f>0){if(i<h)return;i<c&&(c=i)}if(i=e-a,p||!(i>0)){if(i/=p,p<0){if(i<h)return;i<c&&(c=i)}else if(p>0){if(i>c)return;i>h&&(h=i)}if(i=l-a,p||!(i<0)){if(i/=p,p<0){if(i>c)return;i>h&&(h=i)}else if(p>0){if(i<h)return;i<c&&(c=i)}return!(h>0||c<1)||(h>0&&(t[0]=[s+h*f,a+h*p]),c<1&&(t[1]=[s+c*f,a+c*p]),!0)}}}}}function Lo(t,n,e,r,l){var i=t[1];if(i)return!0;var o,u,s=t[0],a=t.left,h=t.right,c=a[0],f=a[1],p=h[0],d=h[1],g=(c+p)/2,y=(f+d)/2;if(d===f){if(g<n||g>=r)return;if(c>p){if(s){if(s[1]>=l)return}else s=[g,e];i=[g,l]}else{if(s){if(s[1]<e)return}else s=[g,l];i=[g,e]}}else if(u=y-(o=(c-p)/(d-f))*g,o<-1||o>1)if(c>p){if(s){if(s[1]>=l)return}else s=[(e-u)/o,e];i=[(l-u)/o,l]}else{if(s){if(s[1]<e)return}else s=[(l-u)/o,l];i=[(e-u)/o,e]}else if(f<d){if(s){if(s[0]>=r)return}else s=[n,o*n+u];i=[r,o*r+u]}else{if(s){if(s[0]<n)return}else s=[r,o*r+u];i=[n,o*n+u]}return t[0]=s,t[1]=i,!0}function Ao(t,n){var e=t.site,r=n.left,l=n.right;return e===l&&(l=r,r=e),l?Math.atan2(l[1]-r[1],l[0]-r[0]):(e===r?(r=n[1],l=n[0]):(r=n[0],l=n[1]),Math.atan2(r[0]-l[0],l[1]-r[1]))}function jo(t,n){return n[+(n.left!==t.site)]}function Do(t,n){return n[+(n.left===t.site)]}_o.prototype.init=function(){this.dirtyNodes=[];for(var t=0;t<this.nodes.length;t++)yo.cleanNode(this.nodes[t])},_o.prototype.cleanDirty=function(){for(var t=0;t<this.dirtyNodes.length;t++)yo.cleanNode(this.dirtyNodes[t]);this.dirtyNodes=[]},_o.prototype.markDirty=function(t){this.dirtyNodes.push(t)},_o.prototype.neighbors=function(t){var n=[],e=t.x,r=t.y,l=this.grid;return l[e-1]&&l[e-1][r]&&n.push(l[e-1][r]),l[e+1]&&l[e+1][r]&&n.push(l[e+1][r]),l[e]&&l[e][r-1]&&n.push(l[e][r-1]),l[e]&&l[e][r+1]&&n.push(l[e][r+1]),this.diagonal&&(l[e-1]&&l[e-1][r-1]&&n.push(l[e-1][r-1]),l[e+1]&&l[e+1][r-1]&&n.push(l[e+1][r-1]),l[e-1]&&l[e-1][r+1]&&n.push(l[e-1][r+1]),l[e+1]&&l[e+1][r+1]&&n.push(l[e+1][r+1])),n},_o.prototype.toString=function(){for(var t,n,e,r,l=[],i=this.grid,o=0,u=i.length;o<u;o++){for(t=[],e=0,r=(n=i[o]).length;e<r;e++)t.push(n[e].weight);l.push(t.join(" "))}return l.join("\n")},vo.prototype.toString=function(){return"["+this.x+" "+this.y+"]"},vo.prototype.getCost=function(t){return t&&t.x!==this.x&&t.y!==this.y?1.41421*this.weight:this.weight},vo.prototype.isWall=function(){return 0===this.weight},mo.prototype={push:function(t){this.content.push(t),this.sinkDown(this.content.length-1)},pop:function(){var t=this.content[0],n=this.content.pop();return this.content.length>0&&(this.content[0]=n,this.bubbleUp(0)),t},remove:function(t){var n=this.content.indexOf(t),e=this.content.pop();n!==this.content.length-1&&(this.content[n]=e,this.scoreFunction(e)<this.scoreFunction(t)?this.sinkDown(n):this.bubbleUp(n))},size:function(){return this.content.length},rescoreElement:function(t){this.sinkDown(this.content.indexOf(t))},sinkDown:function(t){for(var n=this.content[t];t>0;){var e=(t+1>>1)-1,r=this.content[e];if(!(this.scoreFunction(n)<this.scoreFunction(r)))break;this.content[e]=n,this.content[t]=r,t=e}},bubbleUp:function(t){for(var n=this.content.length,e=this.content[t],r=this.scoreFunction(e);;){var l,i=t+1<<1,o=i-1,u=null;if(o<n){var s=this.content[o];(l=this.scoreFunction(s))<r&&(u=o)}if(i<n){var a=this.content[i];this.scoreFunction(a)<(null===u?r:l)&&(u=i)}if(null===u)break;this.content[t]=this.content[u],this.content[u]=e,t=u}}},Co.prototype={constructor:Co,insert:function(t,n){var e,r,l;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){for(t=t.R;t.L;)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=Io(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);for(n.L=n.R=null,n.U=e,n.C=!0,t=n;e&&e.C;)e===(r=e.U).L?(l=r.R)&&l.C?(e.C=l.C=!1,r.C=!0,t=r):(t===e.R&&(Mo(this,e),e=(t=e).U),e.C=!1,r.C=!0,So(this,r)):(l=r.L)&&l.C?(e.C=l.C=!1,r.C=!0,t=r):(t===e.L&&(So(this,e),e=(t=e).U),e.C=!1,r.C=!0,Mo(this,r)),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,l=t.U,i=t.L,o=t.R;if(e=i?o?Io(o):i:o,l?l.L===t?l.L=e:l.R=e:this._=e,i&&o?(r=e.C,e.C=t.C,e.L=i,i.U=e,e!==o?(l=e.U,e.U=t.U,t=e.R,l.L=t,e.R=o,o.U=e):(e.U=l,l=e,t=e.R)):(r=t.C,t=e),t&&(t.U=l),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===l.L){if((n=l.R).C&&(n.C=!1,l.C=!0,Mo(this,l),n=l.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,So(this,n),n=l.R),n.C=l.C,l.C=n.R.C=!1,Mo(this,l),t=this._;break}}else if((n=l.L).C&&(n.C=!1,l.C=!0,So(this,l),n=l.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,Mo(this,n),n=l.L),n.C=l.C,l.C=n.L.C=!1,So(this,l),t=this._;break}n.C=!0,t=l,l=l.U}while(!t.C);t&&(t.C=!1)}}};var ko,Fo=[];function Go(){Oo(this),this.x=this.y=this.arc=this.site=this.cy=null}function zo(t){var n=t.P,e=t.N;if(n&&e){var r=n.site,l=t.site,i=e.site;if(r!==i){var o=l[0],u=l[1],s=r[0]-o,a=r[1]-u,h=i[0]-o,c=i[1]-u,f=2*(s*c-a*h);if(!(f>=-nu)){var p=s*s+a*a,d=h*h+c*c,g=(c*p-a*d)/f,y=(s*d-h*p)/f,_=Fo.pop()||new Go;_.arc=t,_.site=l,_.x=g+o,_.y=(_.cy=y+u)+Math.sqrt(g*g+y*y),t.circle=_;for(var v=null,m=Qo._;m;)if(_.y<m.y||_.y===m.y&&_.x<=m.x){if(!m.L){v=m.P;break}m=m.L}else{if(!m.R){v=m;break}m=m.R}Qo.insert(v,_),v||(ko=_)}}}}function Bo(t){var n=t.circle;n&&(n.P||(ko=n.N),Qo.remove(n),Fo.push(n),Oo(n),t.circle=null)}var Uo=[];function qo(){Oo(this),this.edge=this.site=this.circle=null}function Yo(t){var n=Uo.pop()||new qo;return n.site=t,n}function Xo(t){Bo(t),Ko.remove(t),Uo.push(t),Oo(t)}function Vo(t){var n=t.circle,e=n.x,r=n.cy,l=[e,r],i=t.P,o=t.N,u=[t];Xo(t);for(var s=i;s.circle&&Math.abs(e-s.circle.x)<tu&&Math.abs(r-s.circle.cy)<tu;)i=s.P,u.unshift(s),Xo(s),s=i;u.unshift(s),Bo(s);for(var a=o;a.circle&&Math.abs(e-a.circle.x)<tu&&Math.abs(r-a.circle.cy)<tu;)o=a.N,u.push(a),Xo(a),a=o;u.push(a),Bo(a);var h,c=u.length;for(h=1;h<c;++h)a=u[h],s=u[h-1],To(a.edge,s.site,a.site,l);s=u[0],(a=u[c-1]).edge=Po(s.site,a.site,null,l),zo(s),zo(a)}function Wo(t){for(var n,e,r,l,i=t[0],o=t[1],u=Ko._;u;)if((r=Zo(u,o)-i)>tu)u=u.L;else{if(!((l=i-Ho(u,o))>tu)){r>-tu?(n=u.P,e=u):l>-tu?(n=u,e=u.N):n=e=u;break}if(!u.R){n=u;break}u=u.R}!function(t){Jo[t.index]={site:t,halfedges:[]}}(t);var s=Yo(t);if(Ko.insert(n,s),n||e){if(n===e)return Bo(n),e=Yo(n.site),Ko.insert(s,e),s.edge=e.edge=Po(n.site,s.site),zo(n),void zo(e);if(e){Bo(n),Bo(e);var a=n.site,h=a[0],c=a[1],f=t[0]-h,p=t[1]-c,d=e.site,g=d[0]-h,y=d[1]-c,_=2*(f*y-p*g),v=f*f+p*p,m=g*g+y*y,b=[(y*v-p*m)/_+h,(f*m-g*v)/_+c];To(e.edge,a,d,b),s.edge=Po(a,t,null,b),e.edge=Po(t,d,null,b),zo(n),zo(e)}else s.edge=Po(n.site,s.site)}}function Zo(t,n){var e=t.site,r=e[0],l=e[1],i=l-n;if(!i)return r;var o=t.P;if(!o)return-1/0;var u=(e=o.site)[0],s=e[1],a=s-n;if(!a)return u;var h=u-r,c=1/i-1/a,f=h/a;return c?(-f+Math.sqrt(f*f-2*c*(h*h/(-2*a)-s+a/2+l-i/2)))/c+r:(r+u)/2}function Ho(t,n){var e=t.N;if(e)return Zo(e,n);var r=t.site;return r[1]===n?r[0]:1/0}var Ko,Jo,Qo,$o,tu=1e-6,nu=1e-12;function eu(t,n){return n[1]-t[1]||n[0]-t[0]}function ru(t,n){var e,r,l,i=t.sort(eu).pop();for($o=[],Jo=new Array(t.length),Ko=new Co,Qo=new Co;;)if(l=ko,i&&(!l||i[1]<l.y||i[1]===l.y&&i[0]<l.x))i[0]===e&&i[1]===r||(Wo(i),e=i[0],r=i[1]),i=t.pop();else{if(!l)break;Vo(l.arc)}if(function(){for(var t,n,e,r,l=0,i=Jo.length;l<i;++l)if((t=Jo[l])&&(r=(n=t.halfedges).length)){var o=new Array(r),u=new Array(r);for(e=0;e<r;++e)o[e]=e,u[e]=Ao(t,$o[n[e]]);for(o.sort((function(t,n){return u[n]-u[t]})),e=0;e<r;++e)u[e]=n[o[e]];for(e=0;e<r;++e)n[e]=u[e]}}(),n){var o=+n[0][0],u=+n[0][1],s=+n[1][0],a=+n[1][1];!function(t,n,e,r){for(var l,i=$o.length;i--;)Lo(l=$o[i],t,n,e,r)&&No(l,t,n,e,r)&&(Math.abs(l[0][0]-l[1][0])>tu||Math.abs(l[0][1]-l[1][1])>tu)||delete $o[i]}(o,u,s,a),function(t,n,e,r){var l,i,o,u,s,a,h,c,f,p,d,g,y=Jo.length,_=!0;for(l=0;l<y;++l)if(i=Jo[l]){for(o=i.site,u=(s=i.halfedges).length;u--;)$o[s[u]]||s.splice(u,1);for(u=0,a=s.length;u<a;)d=(p=Do(i,$o[s[u]]))[0],g=p[1],c=(h=jo(i,$o[s[++u%a]]))[0],f=h[1],(Math.abs(d-c)>tu||Math.abs(g-f)>tu)&&(s.splice(u,0,$o.push(Ro(o,p,Math.abs(d-t)<tu&&r-g>tu?[t,Math.abs(c-t)<tu?f:r]:Math.abs(g-r)<tu&&e-d>tu?[Math.abs(f-r)<tu?c:e,r]:Math.abs(d-e)<tu&&g-n>tu?[e,Math.abs(c-e)<tu?f:n]:Math.abs(g-n)<tu&&d-t>tu?[Math.abs(f-n)<tu?c:t,n]:null))-1),++a);a&&(_=!1)}if(_){var v,m,b,x=1/0;for(l=0,_=null;l<y;++l)(i=Jo[l])&&(b=(v=(o=i.site)[0]-t)*v+(m=o[1]-n)*m)<x&&(x=b,_=i);if(_){var w=[t,n],E=[t,r],C=[e,r],O=[e,n];_.halfedges.push($o.push(Ro(o=_.site,w,E))-1,$o.push(Ro(o,E,C))-1,$o.push(Ro(o,C,O))-1,$o.push(Ro(o,O,w))-1)}}for(l=0;l<y;++l)(i=Jo[l])&&(i.halfedges.length||delete Jo[l])}(o,u,s,a)}this.edges=$o,this.cells=Jo,Ko=Qo=$o=Jo=null}function lu(t){return(t=t.slice()).push(t[0]),a([t])}function iu(t,n,e,r){var l=(r=r||{}).steps||64,i=r.units||"kilometers",o=r.angle||0,u=r.pivot||t,s=r.properties||t.properties||{};if(!t)throw new Error("center is required");if(!n)throw new Error("xSemiAxis is required");if(!e)throw new Error("ySemiAxis is required");if(!I(r))throw new Error("options must be an object");if(!S(l))throw new Error("steps must be a number");if(!S(o))throw new Error("angle must be a number");var h=J(t);if("degrees"===i)var c=C(o);else n=ml(t,n,90,{units:i}),e=ml(t,e,0,{units:i}),n=J(n)[0]-h[0],e=J(e)[1]-h[1];for(var f=[],p=0;p<l;p+=1){var d=-360*p/l,g=n*e/Math.sqrt(Math.pow(e,2)+Math.pow(n,2)*Math.pow(ou(d),2)),y=n*e/Math.sqrt(Math.pow(n,2)+Math.pow(e,2)/Math.pow(ou(d),2));if(d<-90&&d>=-270&&(g=-g),d<-180&&d>=-360&&(y=-y),"degrees"===i){var _=g*Math.cos(c)+y*Math.sin(c),v=y*Math.cos(c)-g*Math.sin(c);g=_,y=v}f.push([g+h[0],y+h[1]])}return f.push(f[0]),"degrees"===i?a([f],s):Mi(a([f],s),o,{pivot:u})}function ou(t){var n=t*Math.PI/180;return Math.tan(n)}function uu(t,n){void 0===n&&(n={});var e=0,r=0,l=0;return G(t,(function(t,i,o){var u=n.weight?null==o?void 0:o[n.weight]:void 0;if(!S(u=null==u?1:u))throw new Error("weight value must be a number for feature index "+i);(u=Number(u))>0&&N(t,(function(t){e+=t[0]*u,r+=t[1]*u,l+=u}))})),u([e/l,r/l],n.properties,n)}function su(t,n){return{x:t[0]-n[0],y:t[1]-n[1]}}function au(t,n){var e=0,r=0;N(t,(function(l,i,o,u,s){s>e&&(e=s,r=i,n.push([]));var a=i-r,h=t.coordinates[s][a+1],c=l[0],f=l[1],p=h[0],d=h[1];n[s].push([.75*c+.25*p,.75*f+.25*d]),n[s].push([.25*c+.75*p,.25*f+.75*d])}),!0),n.forEach((function(t){t.push(t[0])}))}function hu(t,n){var e=0,r=0,l=0;N(t,(function(i,o,u,s,a){s>l&&(l=s,r=o,n.push([[]])),a>e&&(e=a,r=o,n[s].push([]));var h=o-r,c=t.coordinates[s][a][h+1],f=i[0],p=i[1],d=c[0],g=c[1];n[s][a].push([.75*f+.25*d,.75*p+.25*g]),n[s][a].push([.25*f+.75*d,.25*p+.75*g])}),!0),n.forEach((function(t){t.forEach((function(t){t.push(t[0])}))}))}function cu(t,n,e){void 0===e&&(e=2);var r=J(t),l=J(n),i=r[0]-l[0],o=r[1]-l[1];return 1===e?Math.abs(i)+Math.abs(o):Math.pow(Math.pow(i,e)+Math.pow(o,e),1/e)}function fu(t,n){var e=(n=n||{}).threshold||1e4,r=n.p||2,l=n.binary||!1,i=n.alpha||-1,o=n.standardization||!1,u=[];D(t,(function(t){u.push(he(t))}));for(var s=[],a=0;a<u.length;a++)s[a]=[];for(a=0;a<u.length;a++)for(var h=a;h<u.length;h++){a===h&&(s[a][h]=0);var c=cu(u[a],u[h],r);s[a][h]=c,s[h][a]=c}for(a=0;a<u.length;a++)for(h=0;h<u.length;h++)0!==(c=s[a][h])&&(s[a][h]=l?c<=e?1:0:c<=e?Math.pow(c,i):0);if(o)for(a=0;a<u.length;a++){var f=s[a].reduce((function(t,n){return t+n}),0);for(h=0;h<u.length;h++)s[a][h]=s[a][h]/f}return s}function pu(t){for(var n=0,e=0,r=t;e<r.length;e++)n+=r[e];return n/t.length}function du(t,n){return void 0===n&&(n={}),yu(t,"mercator",n)}function gu(t,n){return void 0===n&&(n={}),yu(t,"wgs84",n)}function yu(t,n,e){void 0===e&&(e={});var r=(e=e||{}).mutate;if(!t)throw new Error("geojson is required");return Array.isArray(t)&&S(t[0])?t="mercator"===n?_u(t):vu(t):(!0!==r&&(t=wn(t)),N(t,(function(t){var e="mercator"===n?_u(t):vu(t);t[0]=e[0],t[1]=e[1]}))),t}function _u(t){var n=Math.PI/180,e=6378137,r=20037508.342789244,l=[e*(Math.abs(t[0])<=180?t[0]:t[0]-360*function(t){return t<0?-1:t>0?1:0}(t[0]))*n,e*Math.log(Math.tan(.25*Math.PI+.5*t[1]*n))];return l[0]>r&&(l[0]=r),l[0]<-r&&(l[0]=-r),l[1]>r&&(l[1]=r),l[1]<-r&&(l[1]=-r),l}function vu(t){var n=180/Math.PI,e=6378137;return[t[0]*n/e,(.5*Math.PI-2*Math.atan(Math.exp(-t[1]/e)))*n]}ru.prototype={constructor:ru,polygons:function(){var t=this.edges;return this.cells.map((function(n){var e=n.halfedges.map((function(e){return jo(n,t[e])}));return e.data=n.site.data,e}))},triangles:function(){var t=[],n=this.edges;return this.cells.forEach((function(e,r){if(i=(l=e.halfedges).length)for(var l,i,o,u,s,a,h=e.site,c=-1,f=n[l[i-1]],p=f.left===h?f.right:f.left;++c<i;)o=p,p=(f=n[l[c]]).left===h?f.right:f.left,o&&p&&r<o.index&&r<p.index&&(s=o,a=p,((u=h)[0]-a[0])*(s[1]-u[1])-(u[0]-s[0])*(a[1]-u[1])<0)&&t.push([h.data,o.data,p.data])})),t},links:function(){return this.edges.filter((function(t){return t.right})).map((function(t){return{source:t.left.data,target:t.right.data}}))},find:function(t,n,e){for(var r,l,i=this,o=i._found||0,u=i.cells.length;!(l=i.cells[o]);)if(++o>=u)return null;var s=t-l.site[0],a=n-l.site[1],h=s*s+a*a;do{l=i.cells[r=o],o=null,l.halfedges.forEach((function(e){var r=i.edges[e],u=r.left;if(u!==l.site&&u||(u=r.right)){var s=t-u[0],a=n-u[1],c=s*s+a*a;c<h&&(h=c,o=u.index)}}))}while(null!==o);return i._found=r,null==e||h<=e*e?l.site:null}};var mu=Object.freeze({__proto__:null,toMercator:du,toWgs84:gu});function bu(t){return Array.isArray(t)?Ou(t):t&&t.bbox?Ou(t.bbox):[360*Cu(),180*Cu()]}function xu(t,n){void 0===n&&(n={}),null==t&&(t=1);for(var e=[],r=0;r<t;r++)e.push(u(bu(n.bbox)));return p(e)}function wu(t,n){void 0===n&&(n={}),null==t&&(t=1),S(n.num_vertices)&&void 0!==n.num_vertices||(n.num_vertices=10),S(n.max_radial_length)&&void 0!==n.max_radial_length||(n.max_radial_length=10);for(var e=[],r=function(t){var r,l=[],i=function(){for(var t=0,n=0,e=arguments.length;n<e;n++)t+=arguments[n].length;var r=Array(t),l=0;for(n=0;n<e;n++)for(var i=arguments[n],o=0,u=i.length;o<u;o++,l++)r[l]=i[o];return r}(Array(n.num_vertices+1)).map(Math.random);i.forEach((function(t,n,e){e[n]=n>0?t+e[n-1]:t})),i.forEach((function(t){t=2*t*Math.PI/i[i.length-1];var e=Math.random();l.push([e*(n.max_radial_length||10)*Math.sin(t),e*(n.max_radial_length||10)*Math.cos(t)])})),l[l.length-1]=l[0],l=l.map((r=bu(n.bbox),function(t){return[t[0]+r[0],t[1]+r[1]]})),e.push(a([l]))},l=0;l<t;l++)r();return p(e)}function Eu(t,n){if(void 0===n&&(n={}),!I(n=n||{}))throw new Error("options is invalid");var e=n.bbox,r=n.num_vertices,l=n.max_length,i=n.max_rotation;null==t&&(t=1),(!S(r)||void 0===r||r<2)&&(r=10),S(l)&&void 0!==l||(l=1e-4),S(i)&&void 0!==i||(i=Math.PI/8);for(var o=[],u=0;u<t;u++){for(var s=[bu(e)],a=0;a<r-1;a++){var h=(0===a?2*Math.random()*Math.PI:Math.tan((s[a][1]-s[a-1][1])/(s[a][0]-s[a-1][0])))+(Math.random()-.5)*i*2,f=Math.random()*l;s.push([s[a][0]+f*Math.cos(h),s[a][1]+f*Math.sin(h)])}o.push(c(s))}return p(o)}function Cu(){return Math.random()-.5}function Ou(t){return[Math.random()*(t[2]-t[0])+t[0],Math.random()*(t[3]-t[1])+t[1]]}var Mu=Object.freeze({__proto__:null,randomPosition:bu,randomPoint:xu,randomPolygon:wu,randomLineString:Eu});function Su(t,n){if(!t)throw new Error("geojson is required");if("FeatureCollection"!==t.type)throw new Error("geojson must be a FeatureCollection");if(null==n)throw new Error("filter is required");var e=[];return D(t,(function(t){Tu(t.properties,n)&&e.push(t)})),p(e)}function Iu(t,n,e){if(!t)throw new Error("geojson is required");if("FeatureCollection"!==t.type)throw new Error("geojson must be a FeatureCollection");if(null==n)throw new Error("property is required");for(var r=Ru(t,n),l=Object.keys(r),i=0;i<l.length;i++){for(var o=l[i],u=r[o],s=[],a=0;a<u.length;a++)s.push(t.features[u[a]]);e(p(s),o,i)}}function Pu(t,n,e,r){var l=r;return Iu(t,n,(function(t,n,i){l=0===i&&void 0===r?t:e(l,t,n,i)})),l}function Ru(t,n){var e={};return D(t,(function(t,r){var l=t.properties||{};if(Object.prototype.hasOwnProperty.call(l,String(n))){var i=l[n];Object.prototype.hasOwnProperty.call(e,i)?e[i].push(r):e[i]=[r]}})),e}function Tu(t,n){if(void 0===t)return!1;var e=typeof n;if("number"===e||"string"===e)return Object.prototype.hasOwnProperty.call(t,n);if(Array.isArray(n)){for(var r=0;r<n.length;r++)if(!Tu(t,n[r]))return!1;return!0}return Nu(t,n)}function Nu(t,n){for(var e=Object.keys(n),r=0;r<e.length;r++){var l=e[r];if(t[l]!==n[l])return!1}return!0}function Lu(t,n){if(!n)return{};if(!n.length)return{};for(var e={},r=0;r<n.length;r++){var l=n[r];Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e}var Au=Object.freeze({__proto__:null,getCluster:Su,clusterEach:Iu,clusterReduce:Pu,createBins:Ru,applyFilter:Tu,propertiesContainsFilter:Nu,filterProperties:Lu}),ju=function(t,n){this.next=null,this.key=t,this.data=n,this.left=null,this.right=null
/**
     * splaytree v3.1.0
     * Fast Splay tree for Node and browser
     *
     * @author Alexander Milevski <info@w8r.name>
     * @license MIT
     * @preserve
     */};function Du(t,n){return t>n?1:t<n?-1:0}function ku(t,n,e){for(var r=new ju(null,null),l=r,i=r;;){var o=e(t,n.key);if(o<0){if(null===n.left)break;if(e(t,n.left.key)<0){var u=n.left;if(n.left=u.right,u.right=n,null===(n=u).left)break}i.left=n,i=n,n=n.left}else{if(!(o>0))break;if(null===n.right)break;if(e(t,n.right.key)>0&&(u=n.right,n.right=u.left,u.left=n,null===(n=u).right))break;l.right=n,l=n,n=n.right}}return l.right=n.left,i.left=n.right,n.left=r.right,n.right=r.left,n}function Fu(t,n,e,r){var l=new ju(t,n);if(null===e)return l.left=l.right=null,l;var i=r(t,(e=ku(t,e,r)).key);return i<0?(l.left=e.left,l.right=e,e.left=null):i>=0&&(l.right=e.right,l.left=e,e.right=null),l}function Gu(t,n,e){var r=null,l=null;if(n){var i=e((n=ku(t,n,e)).key,t);0===i?(r=n.left,l=n.right):i<0?(l=n.right,n.right=null,r=n):(r=n.left,n.left=null,l=n)}return{left:r,right:l}}var zu=function(){function t(t){void 0===t&&(t=Du),this._root=null,this._size=0,this._comparator=t}return t.prototype.insert=function(t,n){return this._size++,this._root=Fu(t,n,this._root,this._comparator)},t.prototype.add=function(t,n){var e=new ju(t,n);null===this._root&&(e.left=e.right=null,this._size++,this._root=e);var r=this._comparator,l=ku(t,this._root,r),i=r(t,l.key);return 0===i?this._root=l:(i<0?(e.left=l.left,e.right=l,l.left=null):i>0&&(e.right=l.right,e.left=l,l.right=null),this._size++,this._root=e),this._root},t.prototype.remove=function(t){this._root=this._remove(t,this._root,this._comparator)},t.prototype._remove=function(t,n,e){var r;return null===n?null:0===e(t,(n=ku(t,n,e)).key)?(null===n.left?r=n.right:(r=ku(t,n.left,e)).right=n.right,this._size--,r):n},t.prototype.pop=function(){var t=this._root;if(t){for(;t.left;)t=t.left;return this._root=ku(t.key,this._root,this._comparator),this._root=this._remove(t.key,this._root,this._comparator),{key:t.key,data:t.data}}return null},t.prototype.findStatic=function(t){for(var n=this._root,e=this._comparator;n;){var r=e(t,n.key);if(0===r)return n;n=r<0?n.left:n.right}return null},t.prototype.find=function(t){return this._root&&(this._root=ku(t,this._root,this._comparator),0!==this._comparator(t,this._root.key))?null:this._root},t.prototype.contains=function(t){for(var n=this._root,e=this._comparator;n;){var r=e(t,n.key);if(0===r)return!0;n=r<0?n.left:n.right}return!1},t.prototype.forEach=function(t,n){for(var e=this._root,r=[],l=!1;!l;)null!==e?(r.push(e),e=e.left):0!==r.length?(e=r.pop(),t.call(n,e),e=e.right):l=!0;return this},t.prototype.range=function(t,n,e,r){for(var l=[],i=this._comparator,o=this._root;0!==l.length||o;)if(o)l.push(o),o=o.left;else{if(i((o=l.pop()).key,n)>0)break;if(i(o.key,t)>=0&&e.call(r,o))return this;o=o.right}return this},t.prototype.keys=function(){var t=[];return this.forEach((function(n){var e=n.key;return t.push(e)})),t},t.prototype.values=function(){var t=[];return this.forEach((function(n){var e=n.data;return t.push(e)})),t},t.prototype.min=function(){return this._root?this.minNode(this._root).key:null},t.prototype.max=function(){return this._root?this.maxNode(this._root).key:null},t.prototype.minNode=function(t){if(void 0===t&&(t=this._root),t)for(;t.left;)t=t.left;return t},t.prototype.maxNode=function(t){if(void 0===t&&(t=this._root),t)for(;t.right;)t=t.right;return t},t.prototype.at=function(t){for(var n=this._root,e=!1,r=0,l=[];!e;)if(n)l.push(n),n=n.left;else if(l.length>0){if(n=l.pop(),r===t)return n;r++,n=n.right}else e=!0;return null},t.prototype.next=function(t){var n=this._root,e=null;if(t.right){for(e=t.right;e.left;)e=e.left;return e}for(var r=this._comparator;n;){var l=r(t.key,n.key);if(0===l)break;l<0?(e=n,n=n.left):n=n.right}return e},t.prototype.prev=function(t){var n=this._root,e=null;if(null!==t.left){for(e=t.left;e.right;)e=e.right;return e}for(var r=this._comparator;n;){var l=r(t.key,n.key);if(0===l)break;l<0?n=n.left:(e=n,n=n.right)}return e},t.prototype.clear=function(){return this._root=null,this._size=0,this},t.prototype.toList=function(){return function(t){for(var n=t,e=[],r=!1,l=new ju(null,null),i=l;!r;)n?(e.push(n),n=n.left):e.length>0?n=(n=i=i.next=e.pop()).right:r=!0;return i.next=null,l.next}(this._root)},t.prototype.load=function(t,n,e){void 0===n&&(n=[]),void 0===e&&(e=!1);var r=t.length,l=this._comparator;if(e&&function t(n,e,r,l,i){if(!(r>=l)){for(var o=n[r+l>>1],u=r-1,s=l+1;;){do{u++}while(i(n[u],o)<0);do{s--}while(i(n[s],o)>0);if(u>=s)break;var a=n[u];n[u]=n[s],n[s]=a,a=e[u],e[u]=e[s],e[s]=a}t(n,e,r,s,i),t(n,e,s+1,l,i)}}(t,n,0,r-1,l),null===this._root)this._root=function t(n,e,r,l){var i=l-r;if(i>0){var o=r+Math.floor(i/2),u=n[o],s=e[o],a=new ju(u,s);return a.left=t(n,e,r,o),a.right=t(n,e,o+1,l),a}return null}(t,n,0,r),this._size=r;else{var i=function(t,n,e){for(var r=new ju(null,null),l=r,i=t,o=n;null!==i&&null!==o;)e(i.key,o.key)<0?(l.next=i,i=i.next):(l.next=o,o=o.next),l=l.next;return null!==i?l.next=i:null!==o&&(l.next=o),r.next}(this.toList(),function(t,n){for(var e=new ju(null,null),r=e,l=0;l<t.length;l++)r=r.next=new ju(t[l],n[l]);return r.next=null,e.next}(t,n),l);r=this._size+r,this._root=function t(n,e,r){var l=r-e;if(l>0){var i=e+Math.floor(l/2),o=t(n,e,i),u=n.head;return u.left=o,n.head=n.head.next,u.right=t(n,i+1,r),u}return null}({head:i},0,r)}return this},t.prototype.isEmpty=function(){return null===this._root},Object.defineProperty(t.prototype,"size",{get:function(){return this._size},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"root",{get:function(){return this._root},enumerable:!0,configurable:!0}),t.prototype.toString=function(t){void 0===t&&(t=function(t){return String(t.key)});var n=[];return function t(n,e,r,l,i){if(n){l(e+(r?"└── ":"├── ")+i(n)+"\n");var o=e+(r?"    ":"│   ");n.left&&t(n.left,o,!1,l,i),n.right&&t(n.right,o,!0,l,i)}}(this._root,"",!0,(function(t){return n.push(t)}),t),n.join("")},t.prototype.update=function(t,n,e){var r=this._comparator,l=Gu(t,this._root,r),i=l.left,o=l.right;r(t,n)<0?o=Fu(n,e,o,r):i=Fu(n,e,i,r),this._root=function(t,n,e){return null===n?t:(null===t||((n=ku(t.key,n,e)).left=t),n)}(i,o,r)},t.prototype.split=function(t){return Gu(t,this._root,this._comparator)},t}();function Bu(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}function Uu(t,n){for(var e=0;e<n.length;e++){var r=n[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function qu(t,n,e){return n&&Uu(t.prototype,n),e&&Uu(t,e),t}var Yu=function(t,n){return t.ll.x<=n.x&&n.x<=t.ur.x&&t.ll.y<=n.y&&n.y<=t.ur.y},Xu=function(t,n){if(n.ur.x<t.ll.x||t.ur.x<n.ll.x||n.ur.y<t.ll.y||t.ur.y<n.ll.y)return null;var e=t.ll.x<n.ll.x?n.ll.x:t.ll.x,r=t.ur.x<n.ur.x?t.ur.x:n.ur.x;return{ll:{x:e,y:t.ll.y<n.ll.y?n.ll.y:t.ll.y},ur:{x:r,y:t.ur.y<n.ur.y?t.ur.y:n.ur.y}}},Vu=Number.EPSILON;void 0===Vu&&(Vu=Math.pow(2,-52));var Wu=Vu*Vu,Zu=function(t,n){if(-Vu<t&&t<Vu&&-Vu<n&&n<Vu)return 0;var e=t-n;return e*e<Wu*t*n?0:t<n?-1:1},Hu=function(){function t(){Bu(this,t),this.reset()}return qu(t,[{key:"reset",value:function(){this.xRounder=new Ku,this.yRounder=new Ku}},{key:"round",value:function(t,n){return{x:this.xRounder.round(t),y:this.yRounder.round(n)}}}]),t}(),Ku=function(){function t(){Bu(this,t),this.tree=new zu,this.round(0)}return qu(t,[{key:"round",value:function(t){var n=this.tree.add(t),e=this.tree.prev(n);if(null!==e&&0===Zu(n.key,e.key))return this.tree.remove(t),e.key;var r=this.tree.next(n);return null!==r&&0===Zu(n.key,r.key)?(this.tree.remove(t),r.key):t}}]),t}(),Ju=new Hu,Qu=function(t,n){return t.x*n.y-t.y*n.x},$u=function(t,n){return t.x*n.x+t.y*n.y},ts=function(t,n,e){var r={x:n.x-t.x,y:n.y-t.y},l={x:e.x-t.x,y:e.y-t.y},i=Qu(r,l);return Zu(i,0)},ns=function(t){return Math.sqrt($u(t,t))},es=function(t,n,e){var r={x:n.x-t.x,y:n.y-t.y},l={x:e.x-t.x,y:e.y-t.y};return $u(l,r)/ns(l)/ns(r)},rs=function(t,n,e){return 0===n.y?null:{x:t.x+n.x/n.y*(e-t.y),y:e}},ls=function(t,n,e){return 0===n.x?null:{x:e,y:t.y+n.y/n.x*(e-t.x)}},is=function(){function t(n,e){Bu(this,t),void 0===n.events?n.events=[this]:n.events.push(this),this.point=n,this.isLeft=e}return qu(t,null,[{key:"compare",value:function(n,e){var r=t.comparePoints(n.point,e.point);return 0!==r?r:(n.point!==e.point&&n.link(e),n.isLeft!==e.isLeft?n.isLeft?1:-1:us.compare(n.segment,e.segment))}},{key:"comparePoints",value:function(t,n){return t.x<n.x?-1:t.x>n.x?1:t.y<n.y?-1:t.y>n.y?1:0}}]),qu(t,[{key:"link",value:function(t){if(t.point===this.point)throw new Error("Tried to link already linked events");for(var n=t.point.events,e=0,r=n.length;e<r;e++){var l=n[e];this.point.events.push(l),l.point=this.point}this.checkForConsuming()}},{key:"checkForConsuming",value:function(){for(var t=this.point.events.length,n=0;n<t;n++){var e=this.point.events[n];if(void 0===e.segment.consumedBy)for(var r=n+1;r<t;r++){var l=this.point.events[r];void 0===l.consumedBy&&e.otherSE.point.events===l.otherSE.point.events&&e.segment.consume(l.segment)}}}},{key:"getAvailableLinkedEvents",value:function(){for(var t=[],n=0,e=this.point.events.length;n<e;n++){var r=this.point.events[n];r!==this&&!r.segment.ringOut&&r.segment.isInResult()&&t.push(r)}return t}},{key:"getLeftmostComparator",value:function(t){var n=this,e=new Map,r=function(r){var l,i,o,u,s,a=r.otherSE;e.set(r,{sine:(l=n.point,i=t.point,o=a.point,u={x:i.x-l.x,y:i.y-l.y},s={x:o.x-l.x,y:o.y-l.y},Qu(s,u)/ns(s)/ns(u)),cosine:es(n.point,t.point,a.point)})};return function(t,n){e.has(t)||r(t),e.has(n)||r(n);var l=e.get(t),i=l.sine,o=l.cosine,u=e.get(n),s=u.sine,a=u.cosine;return i>=0&&s>=0?o<a?1:o>a?-1:0:i<0&&s<0?o<a?-1:o>a?1:0:s<i?-1:s>i?1:0}}}]),t}(),os=0,us=function(){function t(n,e,r,l){Bu(this,t),this.id=++os,this.leftSE=n,n.segment=this,n.otherSE=e,this.rightSE=e,e.segment=this,e.otherSE=n,this.rings=r,this.windings=l}return qu(t,null,[{key:"compare",value:function(t,n){var e=t.leftSE.point.x,r=n.leftSE.point.x,l=t.rightSE.point.x,i=n.rightSE.point.x;if(i<e)return 1;if(l<r)return-1;var o=t.leftSE.point.y,u=n.leftSE.point.y,s=t.rightSE.point.y,a=n.rightSE.point.y;if(e<r){if(u<o&&u<s)return 1;if(u>o&&u>s)return-1;var h=t.comparePoint(n.leftSE.point);if(h<0)return 1;if(h>0)return-1;var c=n.comparePoint(t.rightSE.point);return 0!==c?c:-1}if(e>r){if(o<u&&o<a)return-1;if(o>u&&o>a)return 1;var f=n.comparePoint(t.leftSE.point);if(0!==f)return f;var p=t.comparePoint(n.rightSE.point);return p<0?1:p>0?-1:1}if(o<u)return-1;if(o>u)return 1;if(l<i){var d=n.comparePoint(t.rightSE.point);if(0!==d)return d}if(l>i){var g=t.comparePoint(n.rightSE.point);if(g<0)return 1;if(g>0)return-1}if(l!==i){var y=s-o,_=l-e,v=a-u,m=i-r;if(y>_&&v<m)return 1;if(y<_&&v>m)return-1}return l>i?1:l<i||s<a?-1:s>a?1:t.id<n.id?-1:t.id>n.id?1:0}}]),qu(t,[{key:"replaceRightSE",value:function(t){this.rightSE=t,this.rightSE.segment=this,this.rightSE.otherSE=this.leftSE,this.leftSE.otherSE=this.rightSE}},{key:"bbox",value:function(){var t=this.leftSE.point.y,n=this.rightSE.point.y;return{ll:{x:this.leftSE.point.x,y:t<n?t:n},ur:{x:this.rightSE.point.x,y:t>n?t:n}}}},{key:"vector",value:function(){return{x:this.rightSE.point.x-this.leftSE.point.x,y:this.rightSE.point.y-this.leftSE.point.y}}},{key:"isAnEndpoint",value:function(t){return t.x===this.leftSE.point.x&&t.y===this.leftSE.point.y||t.x===this.rightSE.point.x&&t.y===this.rightSE.point.y}},{key:"comparePoint",value:function(t){if(this.isAnEndpoint(t))return 0;var n=this.leftSE.point,e=this.rightSE.point,r=this.vector();if(n.x===e.x)return t.x===n.x?0:t.x<n.x?1:-1;var l=(t.y-n.y)/r.y,i=n.x+l*r.x;if(t.x===i)return 0;var o=(t.x-n.x)/r.x,u=n.y+o*r.y;return t.y===u?0:t.y<u?-1:1}},{key:"getIntersection",value:function(t){var n=this.bbox(),e=t.bbox(),r=Xu(n,e);if(null===r)return null;var l=this.leftSE.point,i=this.rightSE.point,o=t.leftSE.point,u=t.rightSE.point,s=Yu(n,o)&&0===this.comparePoint(o),a=Yu(e,l)&&0===t.comparePoint(l),h=Yu(n,u)&&0===this.comparePoint(u),c=Yu(e,i)&&0===t.comparePoint(i);if(a&&s)return c&&!h?i:!c&&h?u:null;if(a)return h&&l.x===u.x&&l.y===u.y?null:l;if(s)return c&&i.x===o.x&&i.y===o.y?null:o;if(c&&h)return null;if(c)return i;if(h)return u;var f=function(t,n,e,r){if(0===n.x)return ls(e,r,t.x);if(0===r.x)return ls(t,n,e.x);if(0===n.y)return rs(e,r,t.y);if(0===r.y)return rs(t,n,e.y);var l=Qu(n,r);if(0==l)return null;var i={x:e.x-t.x,y:e.y-t.y},o=Qu(i,n)/l,u=Qu(i,r)/l;return{x:(t.x+u*n.x+(e.x+o*r.x))/2,y:(t.y+u*n.y+(e.y+o*r.y))/2}}(l,this.vector(),o,t.vector());return null===f?null:Yu(r,f)?Ju.round(f.x,f.y):null}},{key:"split",value:function(n){var e=[],r=void 0!==n.events,l=new is(n,!0),i=new is(n,!1),o=this.rightSE;this.replaceRightSE(i),e.push(i),e.push(l);var u=new t(l,o,this.rings.slice(),this.windings.slice());return is.comparePoints(u.leftSE.point,u.rightSE.point)>0&&u.swapEvents(),is.comparePoints(this.leftSE.point,this.rightSE.point)>0&&this.swapEvents(),r&&(l.checkForConsuming(),i.checkForConsuming()),e}},{key:"swapEvents",value:function(){var t=this.rightSE;this.rightSE=this.leftSE,this.leftSE=t,this.leftSE.isLeft=!0,this.rightSE.isLeft=!1;for(var n=0,e=this.windings.length;n<e;n++)this.windings[n]*=-1}},{key:"consume",value:function(n){for(var e=this,r=n;e.consumedBy;)e=e.consumedBy;for(;r.consumedBy;)r=r.consumedBy;var l=t.compare(e,r);if(0!==l){if(l>0){var i=e;e=r,r=i}if(e.prev===r){var o=e;e=r,r=o}for(var u=0,s=r.rings.length;u<s;u++){var a=r.rings[u],h=r.windings[u],c=e.rings.indexOf(a);-1===c?(e.rings.push(a),e.windings.push(h)):e.windings[c]+=h}r.rings=null,r.windings=null,r.consumedBy=e,r.leftSE.consumedBy=e.leftSE,r.rightSE.consumedBy=e.rightSE}}},{key:"prevInResult",value:function(){return void 0!==this._prevInResult||(this.prev?this.prev.isInResult()?this._prevInResult=this.prev:this._prevInResult=this.prev.prevInResult():this._prevInResult=null),this._prevInResult}},{key:"beforeState",value:function(){if(void 0!==this._beforeState)return this._beforeState;if(this.prev){var t=this.prev.consumedBy||this.prev;this._beforeState=t.afterState()}else this._beforeState={rings:[],windings:[],multiPolys:[]};return this._beforeState}},{key:"afterState",value:function(){if(void 0!==this._afterState)return this._afterState;var t=this.beforeState();this._afterState={rings:t.rings.slice(0),windings:t.windings.slice(0),multiPolys:[]};for(var n=this._afterState.rings,e=this._afterState.windings,r=this._afterState.multiPolys,l=0,i=this.rings.length;l<i;l++){var o=this.rings[l],u=this.windings[l],s=n.indexOf(o);-1===s?(n.push(o),e.push(u)):e[s]+=u}for(var a=[],h=[],c=0,f=n.length;c<f;c++)if(0!==e[c]){var p=n[c],d=p.poly;if(-1===h.indexOf(d))if(p.isExterior)a.push(d);else{-1===h.indexOf(d)&&h.push(d);var g=a.indexOf(p.poly);-1!==g&&a.splice(g,1)}}for(var y=0,_=a.length;y<_;y++){var v=a[y].multiPoly;-1===r.indexOf(v)&&r.push(v)}return this._afterState}},{key:"isInResult",value:function(){if(this.consumedBy)return!1;if(void 0!==this._isInResult)return this._isInResult;var t=this.beforeState().multiPolys,n=this.afterState().multiPolys;switch(_s.type){case"union":var e=0===t.length,r=0===n.length;this._isInResult=e!==r;break;case"intersection":var l,i;t.length<n.length?(l=t.length,i=n.length):(l=n.length,i=t.length),this._isInResult=i===_s.numMultiPolys&&l<i;break;case"xor":var o=Math.abs(t.length-n.length);this._isInResult=o%2==1;break;case"difference":var u=function(t){return 1===t.length&&t[0].isSubject};this._isInResult=u(t)!==u(n);break;default:throw new Error("Unrecognized operation type found ".concat(_s.type))}return this._isInResult}}],[{key:"fromRing",value:function(n,e,r){var l,i,o,u=is.comparePoints(n,e);if(u<0)l=n,i=e,o=1;else{if(!(u>0))throw new Error("Tried to create degenerate segment at [".concat(n.x,", ").concat(n.y,"]"));l=e,i=n,o=-1}return new t(new is(l,!0),new is(i,!1),[r],[o])}}]),t}(),ss=function(){function t(n,e,r){if(Bu(this,t),!Array.isArray(n)||0===n.length)throw new Error("Input geometry is not a valid Polygon or MultiPolygon");if(this.poly=e,this.isExterior=r,this.segments=[],"number"!=typeof n[0][0]||"number"!=typeof n[0][1])throw new Error("Input geometry is not a valid Polygon or MultiPolygon");var l=Ju.round(n[0][0],n[0][1]);this.bbox={ll:{x:l.x,y:l.y},ur:{x:l.x,y:l.y}};for(var i=l,o=1,u=n.length;o<u;o++){if("number"!=typeof n[o][0]||"number"!=typeof n[o][1])throw new Error("Input geometry is not a valid Polygon or MultiPolygon");var s=Ju.round(n[o][0],n[o][1]);s.x===i.x&&s.y===i.y||(this.segments.push(us.fromRing(i,s,this)),s.x<this.bbox.ll.x&&(this.bbox.ll.x=s.x),s.y<this.bbox.ll.y&&(this.bbox.ll.y=s.y),s.x>this.bbox.ur.x&&(this.bbox.ur.x=s.x),s.y>this.bbox.ur.y&&(this.bbox.ur.y=s.y),i=s)}l.x===i.x&&l.y===i.y||this.segments.push(us.fromRing(i,l,this))}return qu(t,[{key:"getSweepEvents",value:function(){for(var t=[],n=0,e=this.segments.length;n<e;n++){var r=this.segments[n];t.push(r.leftSE),t.push(r.rightSE)}return t}}]),t}(),as=function(){function t(n,e){if(Bu(this,t),!Array.isArray(n))throw new Error("Input geometry is not a valid Polygon or MultiPolygon");this.exteriorRing=new ss(n[0],this,!0),this.bbox={ll:{x:this.exteriorRing.bbox.ll.x,y:this.exteriorRing.bbox.ll.y},ur:{x:this.exteriorRing.bbox.ur.x,y:this.exteriorRing.bbox.ur.y}},this.interiorRings=[];for(var r=1,l=n.length;r<l;r++){var i=new ss(n[r],this,!1);i.bbox.ll.x<this.bbox.ll.x&&(this.bbox.ll.x=i.bbox.ll.x),i.bbox.ll.y<this.bbox.ll.y&&(this.bbox.ll.y=i.bbox.ll.y),i.bbox.ur.x>this.bbox.ur.x&&(this.bbox.ur.x=i.bbox.ur.x),i.bbox.ur.y>this.bbox.ur.y&&(this.bbox.ur.y=i.bbox.ur.y),this.interiorRings.push(i)}this.multiPoly=e}return qu(t,[{key:"getSweepEvents",value:function(){for(var t=this.exteriorRing.getSweepEvents(),n=0,e=this.interiorRings.length;n<e;n++)for(var r=this.interiorRings[n].getSweepEvents(),l=0,i=r.length;l<i;l++)t.push(r[l]);return t}}]),t}(),hs=function(){function t(n,e){if(Bu(this,t),!Array.isArray(n))throw new Error("Input geometry is not a valid Polygon or MultiPolygon");try{"number"==typeof n[0][0][0]&&(n=[n])}catch(t){}this.polys=[],this.bbox={ll:{x:Number.POSITIVE_INFINITY,y:Number.POSITIVE_INFINITY},ur:{x:Number.NEGATIVE_INFINITY,y:Number.NEGATIVE_INFINITY}};for(var r=0,l=n.length;r<l;r++){var i=new as(n[r],this);i.bbox.ll.x<this.bbox.ll.x&&(this.bbox.ll.x=i.bbox.ll.x),i.bbox.ll.y<this.bbox.ll.y&&(this.bbox.ll.y=i.bbox.ll.y),i.bbox.ur.x>this.bbox.ur.x&&(this.bbox.ur.x=i.bbox.ur.x),i.bbox.ur.y>this.bbox.ur.y&&(this.bbox.ur.y=i.bbox.ur.y),this.polys.push(i)}this.isSubject=e}return qu(t,[{key:"getSweepEvents",value:function(){for(var t=[],n=0,e=this.polys.length;n<e;n++)for(var r=this.polys[n].getSweepEvents(),l=0,i=r.length;l<i;l++)t.push(r[l]);return t}}]),t}(),cs=function(){function t(n){Bu(this,t),this.events=n;for(var e=0,r=n.length;e<r;e++)n[e].segment.ringOut=this;this.poly=null}return qu(t,null,[{key:"factory",value:function(n){for(var e=[],r=0,l=n.length;r<l;r++){var i=n[r];if(i.isInResult()&&!i.ringOut){for(var o=null,u=i.leftSE,s=i.rightSE,a=[u],h=u.point,c=[];o=u,u=s,a.push(u),u.point!==h;)for(;;){var f=u.getAvailableLinkedEvents();if(0===f.length){var p=a[0].point,d=a[a.length-1].point;throw new Error("Unable to complete output ring starting at [".concat(p.x,",")+" ".concat(p.y,"]. Last matching segment found ends at")+" [".concat(d.x,", ").concat(d.y,"]."))}if(1===f.length){s=f[0].otherSE;break}for(var g=null,y=0,_=c.length;y<_;y++)if(c[y].point===u.point){g=y;break}if(null===g){c.push({index:a.length,point:u.point});var v=u.getLeftmostComparator(o);s=f.sort(v)[0].otherSE;break}var m=c.splice(g)[0],b=a.splice(m.index);b.unshift(b[0].otherSE),e.push(new t(b.reverse()))}e.push(new t(a))}}return e}}]),qu(t,[{key:"getGeom",value:function(){for(var t=this.events[0].point,n=[t],e=1,r=this.events.length-1;e<r;e++){var l=this.events[e].point,i=this.events[e+1].point;0!==ts(l,t,i)&&(n.push(l),t=l)}if(1===n.length)return null;var o=n[0],u=n[1];0===ts(o,t,u)&&n.shift(),n.push(n[0]);for(var s=this.isExteriorRing()?1:-1,a=this.isExteriorRing()?0:n.length-1,h=this.isExteriorRing()?n.length:-1,c=[],f=a;f!=h;f+=s)c.push([n[f].x,n[f].y]);return c}},{key:"isExteriorRing",value:function(){if(void 0===this._isExteriorRing){var t=this.enclosingRing();this._isExteriorRing=!t||!t.isExteriorRing()}return this._isExteriorRing}},{key:"enclosingRing",value:function(){return void 0===this._enclosingRing&&(this._enclosingRing=this._calcEnclosingRing()),this._enclosingRing}},{key:"_calcEnclosingRing",value:function(){for(var t=this.events[0],n=1,e=this.events.length;n<e;n++){var r=this.events[n];is.compare(t,r)>0&&(t=r)}for(var l=t.segment.prevInResult(),i=l?l.prevInResult():null;;){if(!l)return null;if(!i)return l.ringOut;if(i.ringOut!==l.ringOut)return i.ringOut.enclosingRing()!==l.ringOut?l.ringOut:l.ringOut.enclosingRing();l=i.prevInResult(),i=l?l.prevInResult():null}}}]),t}(),fs=function(){function t(n){Bu(this,t),this.exteriorRing=n,n.poly=this,this.interiorRings=[]}return qu(t,[{key:"addInterior",value:function(t){this.interiorRings.push(t),t.poly=this}},{key:"getGeom",value:function(){var t=[this.exteriorRing.getGeom()];if(null===t[0])return null;for(var n=0,e=this.interiorRings.length;n<e;n++){var r=this.interiorRings[n].getGeom();null!==r&&t.push(r)}return t}}]),t}(),ps=function(){function t(n){Bu(this,t),this.rings=n,this.polys=this._composePolys(n)}return qu(t,[{key:"getGeom",value:function(){for(var t=[],n=0,e=this.polys.length;n<e;n++){var r=this.polys[n].getGeom();null!==r&&t.push(r)}return t}},{key:"_composePolys",value:function(t){for(var n=[],e=0,r=t.length;e<r;e++){var l=t[e];if(!l.poly)if(l.isExteriorRing())n.push(new fs(l));else{var i=l.enclosingRing();i.poly||n.push(new fs(i)),i.poly.addInterior(l)}}return n}}]),t}(),ds=function(){function t(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:us.compare;Bu(this,t),this.queue=n,this.tree=new zu(e),this.segments=[]}return qu(t,[{key:"process",value:function(t){var n=t.segment,e=[];if(t.consumedBy)return t.isLeft?this.queue.remove(t.otherSE):this.tree.remove(n),e;var r=t.isLeft?this.tree.insert(n):this.tree.find(n);if(!r)throw new Error("Unable to find segment #".concat(n.id," ")+"[".concat(n.leftSE.point.x,", ").concat(n.leftSE.point.y,"] -> ")+"[".concat(n.rightSE.point.x,", ").concat(n.rightSE.point.y,"] ")+"in SweepLine tree. Please submit a bug report.");for(var l=r,i=r,o=void 0,u=void 0;void 0===o;)null===(l=this.tree.prev(l))?o=null:void 0===l.key.consumedBy&&(o=l.key);for(;void 0===u;)null===(i=this.tree.next(i))?u=null:void 0===i.key.consumedBy&&(u=i.key);if(t.isLeft){var s=null;if(o){var a=o.getIntersection(n);if(null!==a&&(n.isAnEndpoint(a)||(s=a),!o.isAnEndpoint(a)))for(var h=this._splitSafely(o,a),c=0,f=h.length;c<f;c++)e.push(h[c])}var p=null;if(u){var d=u.getIntersection(n);if(null!==d&&(n.isAnEndpoint(d)||(p=d),!u.isAnEndpoint(d)))for(var g=this._splitSafely(u,d),y=0,_=g.length;y<_;y++)e.push(g[y])}if(null!==s||null!==p){var v=null;v=null===s?p:null===p||is.comparePoints(s,p)<=0?s:p,this.queue.remove(n.rightSE),e.push(n.rightSE);for(var m=n.split(v),b=0,x=m.length;b<x;b++)e.push(m[b])}e.length>0?(this.tree.remove(n),e.push(t)):(this.segments.push(n),n.prev=o)}else{if(o&&u){var w=o.getIntersection(u);if(null!==w){if(!o.isAnEndpoint(w))for(var E=this._splitSafely(o,w),C=0,O=E.length;C<O;C++)e.push(E[C]);if(!u.isAnEndpoint(w))for(var M=this._splitSafely(u,w),S=0,I=M.length;S<I;S++)e.push(M[S])}}this.tree.remove(n)}return e}},{key:"_splitSafely",value:function(t,n){this.tree.remove(t);var e=t.rightSE;this.queue.remove(e);var r=t.split(n);return r.push(e),void 0===t.consumedBy&&this.tree.insert(t),r}}]),t}(),gs="undefined"!=typeof process&&process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE||1e6,ys="undefined"!=typeof process&&process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS||1e6,_s=new(function(){function t(){Bu(this,t)}return qu(t,[{key:"run",value:function(t,n,e){_s.type=t,Ju.reset();for(var r=[new hs(n,!0)],l=0,i=e.length;l<i;l++)r.push(new hs(e[l],!1));if(_s.numMultiPolys=r.length,"difference"===_s.type)for(var o=r[0],u=1;u<r.length;)null!==Xu(r[u].bbox,o.bbox)?u++:r.splice(u,1);if("intersection"===_s.type)for(var s=0,a=r.length;s<a;s++)for(var h=r[s],c=s+1,f=r.length;c<f;c++)if(null===Xu(h.bbox,r[c].bbox))return[];for(var p=new zu(is.compare),d=0,g=r.length;d<g;d++)for(var y=r[d].getSweepEvents(),_=0,v=y.length;_<v;_++)if(p.insert(y[_]),p.size>gs)throw new Error("Infinite loop when putting segment endpoints in a priority queue (queue size too big). Please file a bug report.");for(var m=new ds(p),b=p.size,x=p.pop();x;){var w=x.key;if(p.size===b){var E=w.segment;throw new Error("Unable to pop() ".concat(w.isLeft?"left":"right"," SweepEvent ")+"[".concat(w.point.x,", ").concat(w.point.y,"] from segment #").concat(E.id," ")+"[".concat(E.leftSE.point.x,", ").concat(E.leftSE.point.y,"] -> ")+"[".concat(E.rightSE.point.x,", ").concat(E.rightSE.point.y,"] from queue. ")+"Please file a bug report.")}if(p.size>gs)throw new Error("Infinite loop when passing sweep line over endpoints (queue size too big). Please file a bug report.");if(m.segments.length>ys)throw new Error("Infinite loop when passing sweep line over endpoints (too many sweep line segments). Please file a bug report.");for(var C=m.process(w),O=0,M=C.length;O<M;O++){var S=C[O];void 0===S.consumedBy&&p.insert(S)}b=p.size,x=p.pop()}Ju.reset();var I=cs.factory(m.segments);return new ps(I).getGeom()}}]),t}()),vs={union:function(t){for(var n=arguments.length,e=new Array(n>1?n-1:0),r=1;r<n;r++)e[r-1]=arguments[r];return _s.run("union",t,e)},intersection:function(t){for(var n=arguments.length,e=new Array(n>1?n-1:0),r=1;r<n;r++)e[r-1]=arguments[r];return _s.run("intersection",t,e)},xor:function(t){for(var n=arguments.length,e=new Array(n>1?n-1:0),r=1;r<n;r++)e[r-1]=arguments[r];return _s.run("xor",t,e)},difference:function(t){for(var n=arguments.length,e=new Array(n>1?n-1:0),r=1;r<n;r++)e[r-1]=arguments[r];return _s.run("difference",t,e)}};"fill"in Array.prototype||Object.defineProperty(Array.prototype,"fill",{configurable:!0,value:function(t){if(null==this)throw new TypeError(this+" is not an object");var n=Object(this),e=Math.max(Math.min(n.length,9007199254740991),0)||0,r=1 in arguments&&parseInt(Number(arguments[1]),10)||0;r=r<0?Math.max(e+r,0):Math.min(r,e);var l=2 in arguments&&void 0!==arguments[2]?parseInt(Number(arguments[2]),10)||0:e;for(l=l<0?Math.max(e+arguments[2],0):Math.min(l,e);r<l;)n[r]=t,++r;return n},writable:!0}),Number.isFinite=Number.isFinite||function(t){return"number"==typeof t&&isFinite(t)},Number.isInteger=Number.isInteger||function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t},Number.parseFloat=Number.parseFloat||parseFloat,Number.isNaN=Number.isNaN||function(t){return t!=t},Math.trunc=Math.trunc||function(t){return t<0?Math.ceil(t):Math.floor(t)};var ms=function(){};ms.prototype.interfaces_=function(){return[]},ms.prototype.getClass=function(){return ms},ms.prototype.equalsWithTolerance=function(t,n,e){return Math.abs(t-n)<=e};var bs=function(t){function n(n){t.call(this,n),this.name="IllegalArgumentException",this.message=n,this.stack=(new t).stack}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n}(Error),xs=function(){},ws={MAX_VALUE:{configurable:!0}};xs.isNaN=function(t){return Number.isNaN(t)},xs.doubleToLongBits=function(t){return t},xs.longBitsToDouble=function(t){return t},xs.isInfinite=function(t){return!Number.isFinite(t)},ws.MAX_VALUE.get=function(){return Number.MAX_VALUE},Object.defineProperties(xs,ws);var Es=function(){},Cs=function(){},Os=function(){};function Ms(){}var Ss=function t(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)this.x=0,this.y=0,this.z=t.NULL_ORDINATE;else if(1===arguments.length){var n=arguments[0];this.x=n.x,this.y=n.y,this.z=n.z}else 2===arguments.length?(this.x=arguments[0],this.y=arguments[1],this.z=t.NULL_ORDINATE):3===arguments.length&&(this.x=arguments[0],this.y=arguments[1],this.z=arguments[2])},Is={DimensionalComparator:{configurable:!0},serialVersionUID:{configurable:!0},NULL_ORDINATE:{configurable:!0},X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0}};Ss.prototype.setOrdinate=function(t,n){switch(t){case Ss.X:this.x=n;break;case Ss.Y:this.y=n;break;case Ss.Z:this.z=n;break;default:throw new bs("Invalid ordinate index: "+t)}},Ss.prototype.equals2D=function(){if(1===arguments.length){var t=arguments[0];return this.x===t.x&&this.y===t.y}if(2===arguments.length){var n=arguments[0],e=arguments[1];return!!ms.equalsWithTolerance(this.x,n.x,e)&&!!ms.equalsWithTolerance(this.y,n.y,e)}},Ss.prototype.getOrdinate=function(t){switch(t){case Ss.X:return this.x;case Ss.Y:return this.y;case Ss.Z:return this.z}throw new bs("Invalid ordinate index: "+t)},Ss.prototype.equals3D=function(t){return this.x===t.x&&this.y===t.y&&(this.z===t.z||xs.isNaN(this.z))&&xs.isNaN(t.z)},Ss.prototype.equals=function(t){return t instanceof Ss&&this.equals2D(t)},Ss.prototype.equalInZ=function(t,n){return ms.equalsWithTolerance(this.z,t.z,n)},Ss.prototype.compareTo=function(t){var n=t;return this.x<n.x?-1:this.x>n.x?1:this.y<n.y?-1:this.y>n.y?1:0},Ss.prototype.clone=function(){},Ss.prototype.copy=function(){return new Ss(this)},Ss.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+")"},Ss.prototype.distance3D=function(t){var n=this.x-t.x,e=this.y-t.y,r=this.z-t.z;return Math.sqrt(n*n+e*e+r*r)},Ss.prototype.distance=function(t){var n=this.x-t.x,e=this.y-t.y;return Math.sqrt(n*n+e*e)},Ss.prototype.hashCode=function(){var t=17;return 37*(t=37*t+Ss.hashCode(this.x))+Ss.hashCode(this.y)},Ss.prototype.setCoordinate=function(t){this.x=t.x,this.y=t.y,this.z=t.z},Ss.prototype.interfaces_=function(){return[Es,Cs,Ms]},Ss.prototype.getClass=function(){return Ss},Ss.hashCode=function(){if(1===arguments.length){var t=arguments[0],n=xs.doubleToLongBits(t);return Math.trunc((n^n)>>>32)}},Is.DimensionalComparator.get=function(){return Ps},Is.serialVersionUID.get=function(){return 0x5cbf2c235c7e5800},Is.NULL_ORDINATE.get=function(){return xs.NaN},Is.X.get=function(){return 0},Is.Y.get=function(){return 1},Is.Z.get=function(){return 2},Object.defineProperties(Ss,Is);var Ps=function(t){if(this._dimensionsToTest=2,0===arguments.length);else if(1===arguments.length){var n=arguments[0];if(2!==n&&3!==n)throw new bs("only 2 or 3 dimensions may be specified");this._dimensionsToTest=n}};Ps.prototype.compare=function(t,n){var e=t,r=n,l=Ps.compare(e.x,r.x);if(0!==l)return l;var i=Ps.compare(e.y,r.y);return 0!==i?i:this._dimensionsToTest<=2?0:Ps.compare(e.z,r.z)},Ps.prototype.interfaces_=function(){return[Os]},Ps.prototype.getClass=function(){return Ps},Ps.compare=function(t,n){return t<n?-1:t>n?1:xs.isNaN(t)?xs.isNaN(n)?0:-1:xs.isNaN(n)?1:0};var Rs=function(){};Rs.prototype.create=function(){},Rs.prototype.interfaces_=function(){return[]},Rs.prototype.getClass=function(){return Rs};var Ts=function(){},Ns={INTERIOR:{configurable:!0},BOUNDARY:{configurable:!0},EXTERIOR:{configurable:!0},NONE:{configurable:!0}};Ts.prototype.interfaces_=function(){return[]},Ts.prototype.getClass=function(){return Ts},Ts.toLocationSymbol=function(t){switch(t){case Ts.EXTERIOR:return"e";case Ts.BOUNDARY:return"b";case Ts.INTERIOR:return"i";case Ts.NONE:return"-"}throw new bs("Unknown location value: "+t)},Ns.INTERIOR.get=function(){return 0},Ns.BOUNDARY.get=function(){return 1},Ns.EXTERIOR.get=function(){return 2},Ns.NONE.get=function(){return-1},Object.defineProperties(Ts,Ns);var Ls=function(t,n){return t.interfaces_&&t.interfaces_().indexOf(n)>-1},As=function(){},js={LOG_10:{configurable:!0}};As.prototype.interfaces_=function(){return[]},As.prototype.getClass=function(){return As},As.log10=function(t){var n=Math.log(t);return xs.isInfinite(n)||xs.isNaN(n)?n:n/As.LOG_10},As.min=function(t,n,e,r){var l=t;return n<l&&(l=n),e<l&&(l=e),r<l&&(l=r),l},As.clamp=function(){if("number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){var t=arguments[0],n=arguments[1],e=arguments[2];return t<n?n:t>e?e:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var r=arguments[0],l=arguments[1],i=arguments[2];return r<l?l:r>i?i:r}},As.wrap=function(t,n){return t<0?n- -t%n:t%n},As.max=function(){if(3===arguments.length){var t=arguments[0],n=arguments[1],e=arguments[2],r=t;return n>r&&(r=n),e>r&&(r=e),r}if(4===arguments.length){var l=arguments[0],i=arguments[1],o=arguments[2],u=arguments[3],s=l;return i>s&&(s=i),o>s&&(s=o),u>s&&(s=u),s}},As.average=function(t,n){return(t+n)/2},js.LOG_10.get=function(){return Math.log(10)},Object.defineProperties(As,js);var Ds=function(t){this.str=t};Ds.prototype.append=function(t){this.str+=t},Ds.prototype.setCharAt=function(t,n){this.str=this.str.substr(0,t)+n+this.str.substr(t+1)},Ds.prototype.toString=function(t){return this.str};var ks=function(t){this.value=t};ks.prototype.intValue=function(){return this.value},ks.prototype.compareTo=function(t){return this.value<t?-1:this.value>t?1:0},ks.isNaN=function(t){return Number.isNaN(t)};var Fs=function(){};Fs.isWhitespace=function(t){return t<=32&&t>=0||127===t},Fs.toUpperCase=function(t){return t.toUpperCase()};var Gs=function t(){if(this._hi=0,this._lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if("number"==typeof arguments[0]){var n=arguments[0];this.init(n)}else if(arguments[0]instanceof t){var e=arguments[0];this.init(e)}else if("string"==typeof arguments[0]){var r=arguments[0];t.call(this,t.parse(r))}}else if(2===arguments.length){var l=arguments[0],i=arguments[1];this.init(l,i)}},zs={PI:{configurable:!0},TWO_PI:{configurable:!0},PI_2:{configurable:!0},E:{configurable:!0},NaN:{configurable:!0},EPS:{configurable:!0},SPLIT:{configurable:!0},MAX_PRINT_DIGITS:{configurable:!0},TEN:{configurable:!0},ONE:{configurable:!0},SCI_NOT_EXPONENT_CHAR:{configurable:!0},SCI_NOT_ZERO:{configurable:!0}};Gs.prototype.le=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<=t._lo},Gs.prototype.extractSignificantDigits=function(t,n){var e=this.abs(),r=Gs.magnitude(e._hi),l=Gs.TEN.pow(r);(e=e.divide(l)).gt(Gs.TEN)?(e=e.divide(Gs.TEN),r+=1):e.lt(Gs.ONE)&&(e=e.multiply(Gs.TEN),r-=1);for(var i=r+1,o=new Ds,u=Gs.MAX_PRINT_DIGITS-1,s=0;s<=u;s++){t&&s===i&&o.append(".");var a=Math.trunc(e._hi);if(a<0)break;var h=!1,c=0;a>9?(h=!0,c="9"):c="0"+a,o.append(c),e=e.subtract(Gs.valueOf(a)).multiply(Gs.TEN),h&&e.selfAdd(Gs.TEN);var f=!0,p=Gs.magnitude(e._hi);if(p<0&&Math.abs(p)>=u-s&&(f=!1),!f)break}return n[0]=r,o.toString()},Gs.prototype.sqr=function(){return this.multiply(this)},Gs.prototype.doubleValue=function(){return this._hi+this._lo},Gs.prototype.subtract=function(){if(arguments[0]instanceof Gs){var t=arguments[0];return this.add(t.negate())}if("number"==typeof arguments[0]){var n=arguments[0];return this.add(-n)}},Gs.prototype.equals=function(){if(1===arguments.length){var t=arguments[0];return this._hi===t._hi&&this._lo===t._lo}},Gs.prototype.isZero=function(){return 0===this._hi&&0===this._lo},Gs.prototype.selfSubtract=function(){if(arguments[0]instanceof Gs){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t._hi,-t._lo)}if("number"==typeof arguments[0]){var n=arguments[0];return this.isNaN()?this:this.selfAdd(-n,0)}},Gs.prototype.getSpecialNumberString=function(){return this.isZero()?"0.0":this.isNaN()?"NaN ":null},Gs.prototype.min=function(t){return this.le(t)?this:t},Gs.prototype.selfDivide=function(){if(1===arguments.length){if(arguments[0]instanceof Gs){var t=arguments[0];return this.selfDivide(t._hi,t._lo)}if("number"==typeof arguments[0]){var n=arguments[0];return this.selfDivide(n,0)}}else if(2===arguments.length){var e=arguments[0],r=arguments[1],l=null,i=null,o=null,u=null,s=null,a=null,h=null,c=null;return s=this._hi/e,c=(l=(a=Gs.SPLIT*s)-(l=a-s))*(o=(c=Gs.SPLIT*e)-(o=c-e))-(h=s*e)+l*(u=e-o)+(i=s-l)*o+i*u,c=s+(a=(this._hi-h-c+this._lo-s*r)/e),this._hi=c,this._lo=s-c+a,this}},Gs.prototype.dump=function(){return"DD<"+this._hi+", "+this._lo+">"},Gs.prototype.divide=function(){if(arguments[0]instanceof Gs){var t=arguments[0],n=null,e=null,r=null,l=null,i=null,o=null,u=null,s=null;e=(i=this._hi/t._hi)-(n=(o=Gs.SPLIT*i)-(n=o-i)),s=n*(r=(s=Gs.SPLIT*t._hi)-(r=s-t._hi))-(u=i*t._hi)+n*(l=t._hi-r)+e*r+e*l;var a=s=i+(o=(this._hi-u-s+this._lo-i*t._lo)/t._hi),h=i-s+o;return new Gs(a,h)}if("number"==typeof arguments[0]){var c=arguments[0];return xs.isNaN(c)?Gs.createNaN():Gs.copy(this).selfDivide(c,0)}},Gs.prototype.ge=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>=t._lo},Gs.prototype.pow=function(t){if(0===t)return Gs.valueOf(1);var n=new Gs(this),e=Gs.valueOf(1),r=Math.abs(t);if(r>1)for(;r>0;)r%2==1&&e.selfMultiply(n),(r/=2)>0&&(n=n.sqr());else e=n;return t<0?e.reciprocal():e},Gs.prototype.ceil=function(){if(this.isNaN())return Gs.NaN;var t=Math.ceil(this._hi),n=0;return t===this._hi&&(n=Math.ceil(this._lo)),new Gs(t,n)},Gs.prototype.compareTo=function(t){var n=t;return this._hi<n._hi?-1:this._hi>n._hi?1:this._lo<n._lo?-1:this._lo>n._lo?1:0},Gs.prototype.rint=function(){return this.isNaN()?this:this.add(.5).floor()},Gs.prototype.setValue=function(){if(arguments[0]instanceof Gs){var t=arguments[0];return this.init(t),this}if("number"==typeof arguments[0]){var n=arguments[0];return this.init(n),this}},Gs.prototype.max=function(t){return this.ge(t)?this:t},Gs.prototype.sqrt=function(){if(this.isZero())return Gs.valueOf(0);if(this.isNegative())return Gs.NaN;var t=1/Math.sqrt(this._hi),n=this._hi*t,e=Gs.valueOf(n),r=this.subtract(e.sqr())._hi*(.5*t);return e.add(r)},Gs.prototype.selfAdd=function(){if(1===arguments.length){if(arguments[0]instanceof Gs){var t=arguments[0];return this.selfAdd(t._hi,t._lo)}if("number"==typeof arguments[0]){var n=arguments[0],e=null,r=null,l=null,i=null,o=null,u=null;return i=(l=this._hi+n)-(o=l-this._hi),r=(u=(i=n-o+(this._hi-i))+this._lo)+(l-(e=l+u)),this._hi=e+r,this._lo=r+(e-this._hi),this}}else if(2===arguments.length){var s=arguments[0],a=arguments[1],h=null,c=null,f=null,p=null,d=null,g=null,y=null;p=this._hi+s,c=this._lo+a,d=p-(g=p-this._hi),f=c-(y=c-this._lo);var _=(h=p+(g=(d=s-g+(this._hi-d))+c))+(g=(f=a-y+(this._lo-f))+(g+(p-h))),v=g+(h-_);return this._hi=_,this._lo=v,this}},Gs.prototype.selfMultiply=function(){if(1===arguments.length){if(arguments[0]instanceof Gs){var t=arguments[0];return this.selfMultiply(t._hi,t._lo)}if("number"==typeof arguments[0]){var n=arguments[0];return this.selfMultiply(n,0)}}else if(2===arguments.length){var e=arguments[0],r=arguments[1],l=null,i=null,o=null,u=null,s=null,a=null;l=(s=Gs.SPLIT*this._hi)-this._hi,a=Gs.SPLIT*e,l=s-l,i=this._hi-l,o=a-e;var h=(s=this._hi*e)+(a=l*(o=a-o)-s+l*(u=e-o)+i*o+i*u+(this._hi*r+this._lo*e)),c=a+(l=s-h);return this._hi=h,this._lo=c,this}},Gs.prototype.selfSqr=function(){return this.selfMultiply(this)},Gs.prototype.floor=function(){if(this.isNaN())return Gs.NaN;var t=Math.floor(this._hi),n=0;return t===this._hi&&(n=Math.floor(this._lo)),new Gs(t,n)},Gs.prototype.negate=function(){return this.isNaN()?this:new Gs(-this._hi,-this._lo)},Gs.prototype.clone=function(){},Gs.prototype.multiply=function(){if(arguments[0]instanceof Gs){var t=arguments[0];return t.isNaN()?Gs.createNaN():Gs.copy(this).selfMultiply(t)}if("number"==typeof arguments[0]){var n=arguments[0];return xs.isNaN(n)?Gs.createNaN():Gs.copy(this).selfMultiply(n,0)}},Gs.prototype.isNaN=function(){return xs.isNaN(this._hi)},Gs.prototype.intValue=function(){return Math.trunc(this._hi)},Gs.prototype.toString=function(){var t=Gs.magnitude(this._hi);return t>=-3&&t<=20?this.toStandardNotation():this.toSciNotation()},Gs.prototype.toStandardNotation=function(){var t=this.getSpecialNumberString();if(null!==t)return t;var n=new Array(1).fill(null),e=this.extractSignificantDigits(!0,n),r=n[0]+1,l=e;if("."===e.charAt(0))l="0"+e;else if(r<0)l="0."+Gs.stringOfChar("0",-r)+e;else if(-1===e.indexOf(".")){var i=r-e.length;l=e+Gs.stringOfChar("0",i)+".0"}return this.isNegative()?"-"+l:l},Gs.prototype.reciprocal=function(){var t,n,e,r,l=null,i=null,o=null,u=null;t=(e=1/this._hi)-(l=(o=Gs.SPLIT*e)-(l=o-e)),i=(u=Gs.SPLIT*this._hi)-this._hi;var s=e+(o=(1-(r=e*this._hi)-(u=l*(i=u-i)-r+l*(n=this._hi-i)+t*i+t*n)-e*this._lo)/this._hi);return new Gs(s,e-s+o)},Gs.prototype.toSciNotation=function(){if(this.isZero())return Gs.SCI_NOT_ZERO;var t=this.getSpecialNumberString();if(null!==t)return t;var n=new Array(1).fill(null),e=this.extractSignificantDigits(!1,n),r=Gs.SCI_NOT_EXPONENT_CHAR+n[0];if("0"===e.charAt(0))throw new Error("Found leading zero: "+e);var l="";e.length>1&&(l=e.substring(1));var i=e.charAt(0)+"."+l;return this.isNegative()?"-"+i+r:i+r},Gs.prototype.abs=function(){return this.isNaN()?Gs.NaN:this.isNegative()?this.negate():new Gs(this)},Gs.prototype.isPositive=function(){return(this._hi>0||0===this._hi)&&this._lo>0},Gs.prototype.lt=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<t._lo},Gs.prototype.add=function(){if(arguments[0]instanceof Gs){var t=arguments[0];return Gs.copy(this).selfAdd(t)}if("number"==typeof arguments[0]){var n=arguments[0];return Gs.copy(this).selfAdd(n)}},Gs.prototype.init=function(){if(1===arguments.length){if("number"==typeof arguments[0]){var t=arguments[0];this._hi=t,this._lo=0}else if(arguments[0]instanceof Gs){var n=arguments[0];this._hi=n._hi,this._lo=n._lo}}else if(2===arguments.length){var e=arguments[0],r=arguments[1];this._hi=e,this._lo=r}},Gs.prototype.gt=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>t._lo},Gs.prototype.isNegative=function(){return(this._hi<0||0===this._hi)&&this._lo<0},Gs.prototype.trunc=function(){return this.isNaN()?Gs.NaN:this.isPositive()?this.floor():this.ceil()},Gs.prototype.signum=function(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0},Gs.prototype.interfaces_=function(){return[Ms,Es,Cs]},Gs.prototype.getClass=function(){return Gs},Gs.sqr=function(t){return Gs.valueOf(t).selfMultiply(t)},Gs.valueOf=function(){if("string"==typeof arguments[0]){var t=arguments[0];return Gs.parse(t)}if("number"==typeof arguments[0]){var n=arguments[0];return new Gs(n)}},Gs.sqrt=function(t){return Gs.valueOf(t).sqrt()},Gs.parse=function(t){for(var n=0,e=t.length;Fs.isWhitespace(t.charAt(n));)n++;var r=!1;if(n<e){var l=t.charAt(n);"-"!==l&&"+"!==l||(n++,"-"===l&&(r=!0))}for(var i=new Gs,o=0,u=0,s=0;!(n>=e);){var a=t.charAt(n);if(n++,Fs.isDigit(a)){var h=a-"0";i.selfMultiply(Gs.TEN),i.selfAdd(h),o++}else{if("."!==a){if("e"===a||"E"===a){var c=t.substring(n);try{s=ks.parseInt(c)}catch(n){throw n instanceof Error?new Error("Invalid exponent "+c+" in string "+t):n}break}throw new Error("Unexpected character '"+a+"' at position "+n+" in string "+t)}u=o}}var f=i,p=o-u-s;if(0===p)f=i;else if(p>0){var d=Gs.TEN.pow(p);f=i.divide(d)}else if(p<0){var g=Gs.TEN.pow(-p);f=i.multiply(g)}return r?f.negate():f},Gs.createNaN=function(){return new Gs(xs.NaN,xs.NaN)},Gs.copy=function(t){return new Gs(t)},Gs.magnitude=function(t){var n=Math.abs(t),e=Math.log(n)/Math.log(10),r=Math.trunc(Math.floor(e));return 10*Math.pow(10,r)<=n&&(r+=1),r},Gs.stringOfChar=function(t,n){for(var e=new Ds,r=0;r<n;r++)e.append(t);return e.toString()},zs.PI.get=function(){return new Gs(3.141592653589793,12246467991473532e-32)},zs.TWO_PI.get=function(){return new Gs(6.283185307179586,24492935982947064e-32)},zs.PI_2.get=function(){return new Gs(1.5707963267948966,6123233995736766e-32)},zs.E.get=function(){return new Gs(2.718281828459045,14456468917292502e-32)},zs.NaN.get=function(){return new Gs(xs.NaN,xs.NaN)},zs.EPS.get=function(){return 123259516440783e-46},zs.SPLIT.get=function(){return 134217729},zs.MAX_PRINT_DIGITS.get=function(){return 32},zs.TEN.get=function(){return Gs.valueOf(10)},zs.ONE.get=function(){return Gs.valueOf(1)},zs.SCI_NOT_EXPONENT_CHAR.get=function(){return"E"},zs.SCI_NOT_ZERO.get=function(){return"0.0E0"},Object.defineProperties(Gs,zs);var Bs=function(){},Us={DP_SAFE_EPSILON:{configurable:!0}};Bs.prototype.interfaces_=function(){return[]},Bs.prototype.getClass=function(){return Bs},Bs.orientationIndex=function(t,n,e){var r=Bs.orientationIndexFilter(t,n,e);if(r<=1)return r;var l=Gs.valueOf(n.x).selfAdd(-t.x),i=Gs.valueOf(n.y).selfAdd(-t.y),o=Gs.valueOf(e.x).selfAdd(-n.x),u=Gs.valueOf(e.y).selfAdd(-n.y);return l.selfMultiply(u).selfSubtract(i.selfMultiply(o)).signum()},Bs.signOfDet2x2=function(t,n,e,r){return t.multiply(r).selfSubtract(n.multiply(e)).signum()},Bs.intersection=function(t,n,e,r){var l=Gs.valueOf(r.y).selfSubtract(e.y).selfMultiply(Gs.valueOf(n.x).selfSubtract(t.x)),i=Gs.valueOf(r.x).selfSubtract(e.x).selfMultiply(Gs.valueOf(n.y).selfSubtract(t.y)),o=l.subtract(i),u=Gs.valueOf(r.x).selfSubtract(e.x).selfMultiply(Gs.valueOf(t.y).selfSubtract(e.y)),s=Gs.valueOf(r.y).selfSubtract(e.y).selfMultiply(Gs.valueOf(t.x).selfSubtract(e.x)),a=u.subtract(s).selfDivide(o).doubleValue(),h=Gs.valueOf(t.x).selfAdd(Gs.valueOf(n.x).selfSubtract(t.x).selfMultiply(a)).doubleValue(),c=Gs.valueOf(n.x).selfSubtract(t.x).selfMultiply(Gs.valueOf(t.y).selfSubtract(e.y)),f=Gs.valueOf(n.y).selfSubtract(t.y).selfMultiply(Gs.valueOf(t.x).selfSubtract(e.x)),p=c.subtract(f).selfDivide(o).doubleValue(),d=Gs.valueOf(e.y).selfAdd(Gs.valueOf(r.y).selfSubtract(e.y).selfMultiply(p)).doubleValue();return new Ss(h,d)},Bs.orientationIndexFilter=function(t,n,e){var r=null,l=(t.x-e.x)*(n.y-e.y),i=(t.y-e.y)*(n.x-e.x),o=l-i;if(l>0){if(i<=0)return Bs.signum(o);r=l+i}else{if(!(l<0))return Bs.signum(o);if(i>=0)return Bs.signum(o);r=-l-i}var u=Bs.DP_SAFE_EPSILON*r;return o>=u||-o>=u?Bs.signum(o):2},Bs.signum=function(t){return t>0?1:t<0?-1:0},Us.DP_SAFE_EPSILON.get=function(){return 1e-15},Object.defineProperties(Bs,Us);var qs=function(){},Ys={X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0},M:{configurable:!0}};Ys.X.get=function(){return 0},Ys.Y.get=function(){return 1},Ys.Z.get=function(){return 2},Ys.M.get=function(){return 3},qs.prototype.setOrdinate=function(t,n,e){},qs.prototype.size=function(){},qs.prototype.getOrdinate=function(t,n){},qs.prototype.getCoordinate=function(){},qs.prototype.getCoordinateCopy=function(t){},qs.prototype.getDimension=function(){},qs.prototype.getX=function(t){},qs.prototype.clone=function(){},qs.prototype.expandEnvelope=function(t){},qs.prototype.copy=function(){},qs.prototype.getY=function(t){},qs.prototype.toCoordinateArray=function(){},qs.prototype.interfaces_=function(){return[Cs]},qs.prototype.getClass=function(){return qs},Object.defineProperties(qs,Ys);var Xs=function(){},Vs=function(t){function n(){t.call(this,"Projective point not representable on the Cartesian plane.")}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(Xs),Ws=function(){};Ws.arraycopy=function(t,n,e,r,l){for(var i=0,o=n;o<n+l;o++)e[r+i]=t[o],i++},Ws.getProperty=function(t){return{"line.separator":"\n"}[t]};var Zs=function t(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){var n=arguments[0];this.x=n.x,this.y=n.y,this.w=1}else if(2===arguments.length){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var e=arguments[0],r=arguments[1];this.x=e,this.y=r,this.w=1}else if(arguments[0]instanceof t&&arguments[1]instanceof t){var l=arguments[0],i=arguments[1];this.x=l.y*i.w-i.y*l.w,this.y=i.x*l.w-l.x*i.w,this.w=l.x*i.y-i.x*l.y}else if(arguments[0]instanceof Ss&&arguments[1]instanceof Ss){var o=arguments[0],u=arguments[1];this.x=o.y-u.y,this.y=u.x-o.x,this.w=o.x*u.y-u.x*o.y}}else if(3===arguments.length){var s=arguments[0],a=arguments[1],h=arguments[2];this.x=s,this.y=a,this.w=h}else if(4===arguments.length){var c=arguments[0],f=arguments[1],p=arguments[2],d=arguments[3],g=c.y-f.y,y=f.x-c.x,_=c.x*f.y-f.x*c.y,v=p.y-d.y,m=d.x-p.x,b=p.x*d.y-d.x*p.y;this.x=y*b-m*_,this.y=v*_-g*b,this.w=g*m-v*y}};Zs.prototype.getY=function(){var t=this.y/this.w;if(xs.isNaN(t)||xs.isInfinite(t))throw new Vs;return t},Zs.prototype.getX=function(){var t=this.x/this.w;if(xs.isNaN(t)||xs.isInfinite(t))throw new Vs;return t},Zs.prototype.getCoordinate=function(){var t=new Ss;return t.x=this.getX(),t.y=this.getY(),t},Zs.prototype.interfaces_=function(){return[]},Zs.prototype.getClass=function(){return Zs},Zs.intersection=function(t,n,e,r){var l=t.y-n.y,i=n.x-t.x,o=t.x*n.y-n.x*t.y,u=e.y-r.y,s=r.x-e.x,a=e.x*r.y-r.x*e.y,h=l*s-u*i,c=(i*a-s*o)/h,f=(u*o-l*a)/h;if(xs.isNaN(c)||xs.isInfinite(c)||xs.isNaN(f)||xs.isInfinite(f))throw new Vs;return new Ss(c,f)};var Hs=function t(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof Ss){var n=arguments[0];this.init(n.x,n.x,n.y,n.y)}else if(arguments[0]instanceof t){var e=arguments[0];this.init(e)}}else if(2===arguments.length){var r=arguments[0],l=arguments[1];this.init(r.x,l.x,r.y,l.y)}else if(4===arguments.length){var i=arguments[0],o=arguments[1],u=arguments[2],s=arguments[3];this.init(i,o,u,s)}},Ks={serialVersionUID:{configurable:!0}};Hs.prototype.getArea=function(){return this.getWidth()*this.getHeight()},Hs.prototype.equals=function(t){if(!(t instanceof Hs))return!1;var n=t;return this.isNull()?n.isNull():this._maxx===n.getMaxX()&&this._maxy===n.getMaxY()&&this._minx===n.getMinX()&&this._miny===n.getMinY()},Hs.prototype.intersection=function(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new Hs;var n=this._minx>t._minx?this._minx:t._minx,e=this._miny>t._miny?this._miny:t._miny,r=this._maxx<t._maxx?this._maxx:t._maxx,l=this._maxy<t._maxy?this._maxy:t._maxy;return new Hs(n,r,e,l)},Hs.prototype.isNull=function(){return this._maxx<this._minx},Hs.prototype.getMaxX=function(){return this._maxx},Hs.prototype.covers=function(){if(1===arguments.length){if(arguments[0]instanceof Ss){var t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof Hs){var n=arguments[0];return!this.isNull()&&!n.isNull()&&n.getMinX()>=this._minx&&n.getMaxX()<=this._maxx&&n.getMinY()>=this._miny&&n.getMaxY()<=this._maxy}}else if(2===arguments.length){var e=arguments[0],r=arguments[1];return!this.isNull()&&e>=this._minx&&e<=this._maxx&&r>=this._miny&&r<=this._maxy}},Hs.prototype.intersects=function(){if(1===arguments.length){if(arguments[0]instanceof Hs){var t=arguments[0];return!this.isNull()&&!t.isNull()&&!(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}if(arguments[0]instanceof Ss){var n=arguments[0];return this.intersects(n.x,n.y)}}else if(2===arguments.length){var e=arguments[0],r=arguments[1];return!this.isNull()&&!(e>this._maxx||e<this._minx||r>this._maxy||r<this._miny)}},Hs.prototype.getMinY=function(){return this._miny},Hs.prototype.getMinX=function(){return this._minx},Hs.prototype.expandToInclude=function(){if(1===arguments.length){if(arguments[0]instanceof Ss){var t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof Hs){var n=arguments[0];if(n.isNull())return null;this.isNull()?(this._minx=n.getMinX(),this._maxx=n.getMaxX(),this._miny=n.getMinY(),this._maxy=n.getMaxY()):(n._minx<this._minx&&(this._minx=n._minx),n._maxx>this._maxx&&(this._maxx=n._maxx),n._miny<this._miny&&(this._miny=n._miny),n._maxy>this._maxy&&(this._maxy=n._maxy))}}else if(2===arguments.length){var e=arguments[0],r=arguments[1];this.isNull()?(this._minx=e,this._maxx=e,this._miny=r,this._maxy=r):(e<this._minx&&(this._minx=e),e>this._maxx&&(this._maxx=e),r<this._miny&&(this._miny=r),r>this._maxy&&(this._maxy=r))}},Hs.prototype.minExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),n=this.getHeight();return t<n?t:n},Hs.prototype.getWidth=function(){return this.isNull()?0:this._maxx-this._minx},Hs.prototype.compareTo=function(t){var n=t;return this.isNull()?n.isNull()?0:-1:n.isNull()?1:this._minx<n._minx?-1:this._minx>n._minx?1:this._miny<n._miny?-1:this._miny>n._miny?1:this._maxx<n._maxx?-1:this._maxx>n._maxx?1:this._maxy<n._maxy?-1:this._maxy>n._maxy?1:0},Hs.prototype.translate=function(t,n){if(this.isNull())return null;this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+n,this.getMaxY()+n)},Hs.prototype.toString=function(){return"Env["+this._minx+" : "+this._maxx+", "+this._miny+" : "+this._maxy+"]"},Hs.prototype.setToNull=function(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1},Hs.prototype.getHeight=function(){return this.isNull()?0:this._maxy-this._miny},Hs.prototype.maxExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),n=this.getHeight();return t>n?t:n},Hs.prototype.expandBy=function(){if(1===arguments.length){var t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){var n=arguments[0],e=arguments[1];if(this.isNull())return null;this._minx-=n,this._maxx+=n,this._miny-=e,this._maxy+=e,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}},Hs.prototype.contains=function(){if(1===arguments.length){if(arguments[0]instanceof Hs){var t=arguments[0];return this.covers(t)}if(arguments[0]instanceof Ss){var n=arguments[0];return this.covers(n)}}else if(2===arguments.length){var e=arguments[0],r=arguments[1];return this.covers(e,r)}},Hs.prototype.centre=function(){return this.isNull()?null:new Ss((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)},Hs.prototype.init=function(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof Ss){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof Hs){var n=arguments[0];this._minx=n._minx,this._maxx=n._maxx,this._miny=n._miny,this._maxy=n._maxy}}else if(2===arguments.length){var e=arguments[0],r=arguments[1];this.init(e.x,r.x,e.y,r.y)}else if(4===arguments.length){var l=arguments[0],i=arguments[1],o=arguments[2],u=arguments[3];l<i?(this._minx=l,this._maxx=i):(this._minx=i,this._maxx=l),o<u?(this._miny=o,this._maxy=u):(this._miny=u,this._maxy=o)}},Hs.prototype.getMaxY=function(){return this._maxy},Hs.prototype.distance=function(t){if(this.intersects(t))return 0;var n=0;this._maxx<t._minx?n=t._minx-this._maxx:this._minx>t._maxx&&(n=this._minx-t._maxx);var e=0;return this._maxy<t._miny?e=t._miny-this._maxy:this._miny>t._maxy&&(e=this._miny-t._maxy),0===n?e:0===e?n:Math.sqrt(n*n+e*e)},Hs.prototype.hashCode=function(){var t=17;return 37*(t=37*(t=37*(t=37*t+Ss.hashCode(this._minx))+Ss.hashCode(this._maxx))+Ss.hashCode(this._miny))+Ss.hashCode(this._maxy)},Hs.prototype.interfaces_=function(){return[Es,Ms]},Hs.prototype.getClass=function(){return Hs},Hs.intersects=function(){if(3===arguments.length){var t=arguments[0],n=arguments[1],e=arguments[2];return e.x>=(t.x<n.x?t.x:n.x)&&e.x<=(t.x>n.x?t.x:n.x)&&e.y>=(t.y<n.y?t.y:n.y)&&e.y<=(t.y>n.y?t.y:n.y)}if(4===arguments.length){var r=arguments[0],l=arguments[1],i=arguments[2],o=arguments[3],u=Math.min(i.x,o.x),s=Math.max(i.x,o.x),a=Math.min(r.x,l.x),h=Math.max(r.x,l.x);return!(a>s||h<u||(u=Math.min(i.y,o.y),s=Math.max(i.y,o.y),a=Math.min(r.y,l.y),h=Math.max(r.y,l.y),a>s||h<u))}},Ks.serialVersionUID.get=function(){return 0x51845cd552189800},Object.defineProperties(Hs,Ks);var Js={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,emptyTypeStr:/^\s*(\w+)\s*EMPTY\s*$/,spaces:/\s+/,parenComma:/\)\s*,\s*\(/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,trimParens:/^\s*\(?(.*?)\)?\s*$/},Qs=function(t){this.geometryFactory=t||new kh};Qs.prototype.read=function(t){var n,e,r;t=t.replace(/[\n\r]/g," ");var l=Js.typeStr.exec(t);if(-1!==t.search("EMPTY")&&((l=Js.emptyTypeStr.exec(t))[2]=void 0),l&&(e=l[1].toLowerCase(),r=l[2],ta[e]&&(n=ta[e].apply(this,[r]))),void 0===n)throw new Error("Could not parse WKT "+t);return n},Qs.prototype.write=function(t){return this.extractGeometry(t)},Qs.prototype.extractGeometry=function(t){var n=t.getGeometryType().toLowerCase();if(!$s[n])return null;var e=n.toUpperCase();return t.isEmpty()?e+" EMPTY":e+"("+$s[n].apply(this,[t])+")"};var $s={coordinate:function(t){return t.x+" "+t.y},point:function(t){return $s.coordinate.call(this,t._coordinates._coordinates[0])},multipoint:function(t){for(var n=[],e=0,r=t._geometries.length;e<r;++e)n.push("("+$s.point.apply(this,[t._geometries[e]])+")");return n.join(",")},linestring:function(t){for(var n=[],e=0,r=t._points._coordinates.length;e<r;++e)n.push($s.coordinate.apply(this,[t._points._coordinates[e]]));return n.join(",")},linearring:function(t){for(var n=[],e=0,r=t._points._coordinates.length;e<r;++e)n.push($s.coordinate.apply(this,[t._points._coordinates[e]]));return n.join(",")},multilinestring:function(t){for(var n=[],e=0,r=t._geometries.length;e<r;++e)n.push("("+$s.linestring.apply(this,[t._geometries[e]])+")");return n.join(",")},polygon:function(t){var n=[];n.push("("+$s.linestring.apply(this,[t._shell])+")");for(var e=0,r=t._holes.length;e<r;++e)n.push("("+$s.linestring.apply(this,[t._holes[e]])+")");return n.join(",")},multipolygon:function(t){for(var n=[],e=0,r=t._geometries.length;e<r;++e)n.push("("+$s.polygon.apply(this,[t._geometries[e]])+")");return n.join(",")},geometrycollection:function(t){for(var n=[],e=0,r=t._geometries.length;e<r;++e)n.push(this.extractGeometry(t._geometries[e]));return n.join(",")}},ta={point:function(t){if(void 0===t)return this.geometryFactory.createPoint();var n=t.trim().split(Js.spaces);return this.geometryFactory.createPoint(new Ss(Number.parseFloat(n[0]),Number.parseFloat(n[1])))},multipoint:function(t){var n;if(void 0===t)return this.geometryFactory.createMultiPoint();for(var e=t.trim().split(","),r=[],l=0,i=e.length;l<i;++l)n=e[l].replace(Js.trimParens,"$1"),r.push(ta.point.apply(this,[n]));return this.geometryFactory.createMultiPoint(r)},linestring:function(t){if(void 0===t)return this.geometryFactory.createLineString();for(var n,e=t.trim().split(","),r=[],l=0,i=e.length;l<i;++l)n=e[l].trim().split(Js.spaces),r.push(new Ss(Number.parseFloat(n[0]),Number.parseFloat(n[1])));return this.geometryFactory.createLineString(r)},linearring:function(t){if(void 0===t)return this.geometryFactory.createLinearRing();for(var n,e=t.trim().split(","),r=[],l=0,i=e.length;l<i;++l)n=e[l].trim().split(Js.spaces),r.push(new Ss(Number.parseFloat(n[0]),Number.parseFloat(n[1])));return this.geometryFactory.createLinearRing(r)},multilinestring:function(t){var n;if(void 0===t)return this.geometryFactory.createMultiLineString();for(var e=t.trim().split(Js.parenComma),r=[],l=0,i=e.length;l<i;++l)n=e[l].replace(Js.trimParens,"$1"),r.push(ta.linestring.apply(this,[n]));return this.geometryFactory.createMultiLineString(r)},polygon:function(t){var n,e,r;if(void 0===t)return this.geometryFactory.createPolygon();for(var l,i=t.trim().split(Js.parenComma),o=[],u=0,s=i.length;u<s;++u)n=i[u].replace(Js.trimParens,"$1"),e=ta.linestring.apply(this,[n]),r=this.geometryFactory.createLinearRing(e._points),0===u?l=r:o.push(r);return this.geometryFactory.createPolygon(l,o)},multipolygon:function(t){var n;if(void 0===t)return this.geometryFactory.createMultiPolygon();for(var e=t.trim().split(Js.doubleParenComma),r=[],l=0,i=e.length;l<i;++l)n=e[l].replace(Js.trimParens,"$1"),r.push(ta.polygon.apply(this,[n]));return this.geometryFactory.createMultiPolygon(r)},geometrycollection:function(t){if(void 0===t)return this.geometryFactory.createGeometryCollection();for(var n=(t=t.replace(/,\s*([A-Za-z])/g,"|$1")).trim().split("|"),e=[],r=0,l=n.length;r<l;++r)e.push(this.read(n[r]));return this.geometryFactory.createGeometryCollection(e)}},na=function(t){this.parser=new Qs(t)};na.prototype.write=function(t){return this.parser.write(t)},na.toLineString=function(t,n){if(2!==arguments.length)throw new Error("Not implemented");return"LINESTRING ( "+t.x+" "+t.y+", "+n.x+" "+n.y+" )"};var ea=function(t){function n(n){t.call(this,n),this.name="RuntimeException",this.message=n,this.stack=(new t).stack}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n}(Error),ra=function(t){function n(){if(t.call(this),0===arguments.length)t.call(this);else if(1===arguments.length){var n=arguments[0];t.call(this,n)}}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(ea),la=function(){};la.prototype.interfaces_=function(){return[]},la.prototype.getClass=function(){return la},la.shouldNeverReachHere=function(){if(0===arguments.length)la.shouldNeverReachHere(null);else if(1===arguments.length){var t=arguments[0];throw new ra("Should never reach here"+(null!==t?": "+t:""))}},la.isTrue=function(){var t;if(1===arguments.length)la.isTrue(arguments[0],null);else if(2===arguments.length&&(t=arguments[1],!arguments[0]))throw null===t?new ra:new ra(t)},la.equals=function(){var t,n,e;if(2===arguments.length)la.equals(t=arguments[0],n=arguments[1],null);else if(3===arguments.length&&(t=arguments[0],e=arguments[2],!(n=arguments[1]).equals(t)))throw new ra("Expected "+t+" but encountered "+n+(null!==e?": "+e:""))};var ia=function(){this._result=null,this._inputLines=Array(2).fill().map((function(){return Array(2)})),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new Ss,this._intPt[1]=new Ss,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0},oa={DONT_INTERSECT:{configurable:!0},DO_INTERSECT:{configurable:!0},COLLINEAR:{configurable:!0},NO_INTERSECTION:{configurable:!0},POINT_INTERSECTION:{configurable:!0},COLLINEAR_INTERSECTION:{configurable:!0}};ia.prototype.getIndexAlongSegment=function(t,n){return this.computeIntLineIndex(),this._intLineIndex[t][n]},ia.prototype.getTopologySummary=function(){var t=new Ds;return this.isEndPoint()&&t.append(" endpoint"),this._isProper&&t.append(" proper"),this.isCollinear()&&t.append(" collinear"),t.toString()},ia.prototype.computeIntersection=function(t,n,e,r){this._inputLines[0][0]=t,this._inputLines[0][1]=n,this._inputLines[1][0]=e,this._inputLines[1][1]=r,this._result=this.computeIntersect(t,n,e,r)},ia.prototype.getIntersectionNum=function(){return this._result},ia.prototype.computeIntLineIndex=function(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map((function(){return Array(2)})),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){var t=arguments[0],n=this.getEdgeDistance(t,0),e=this.getEdgeDistance(t,1);n>e?(this._intLineIndex[t][0]=0,this._intLineIndex[t][1]=1):(this._intLineIndex[t][0]=1,this._intLineIndex[t][1]=0)}},ia.prototype.isProper=function(){return this.hasIntersection()&&this._isProper},ia.prototype.setPrecisionModel=function(t){this._precisionModel=t},ia.prototype.isInteriorIntersection=function(){var t=this;if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){for(var n=arguments[0],e=0;e<this._result;e++)if(!t._intPt[e].equals2D(t._inputLines[n][0])&&!t._intPt[e].equals2D(t._inputLines[n][1]))return!0;return!1}},ia.prototype.getIntersection=function(t){return this._intPt[t]},ia.prototype.isEndPoint=function(){return this.hasIntersection()&&!this._isProper},ia.prototype.hasIntersection=function(){return this._result!==ia.NO_INTERSECTION},ia.prototype.getEdgeDistance=function(t,n){return ia.computeEdgeDistance(this._intPt[n],this._inputLines[t][0],this._inputLines[t][1])},ia.prototype.isCollinear=function(){return this._result===ia.COLLINEAR_INTERSECTION},ia.prototype.toString=function(){return na.toLineString(this._inputLines[0][0],this._inputLines[0][1])+" - "+na.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()},ia.prototype.getEndpoint=function(t,n){return this._inputLines[t][n]},ia.prototype.isIntersection=function(t){for(var n=0;n<this._result;n++)if(this._intPt[n].equals2D(t))return!0;return!1},ia.prototype.getIntersectionAlongSegment=function(t,n){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[t][n]]},ia.prototype.interfaces_=function(){return[]},ia.prototype.getClass=function(){return ia},ia.computeEdgeDistance=function(t,n,e){var r=Math.abs(e.x-n.x),l=Math.abs(e.y-n.y),i=-1;if(t.equals(n))i=0;else if(t.equals(e))i=r>l?r:l;else{var o=Math.abs(t.x-n.x),u=Math.abs(t.y-n.y);0!==(i=r>l?o:u)||t.equals(n)||(i=Math.max(o,u))}return la.isTrue(!(0===i&&!t.equals(n)),"Bad distance calculation"),i},ia.nonRobustComputeEdgeDistance=function(t,n,e){var r=t.x-n.x,l=t.y-n.y,i=Math.sqrt(r*r+l*l);return la.isTrue(!(0===i&&!t.equals(n)),"Invalid distance calculation"),i},oa.DONT_INTERSECT.get=function(){return 0},oa.DO_INTERSECT.get=function(){return 1},oa.COLLINEAR.get=function(){return 2},oa.NO_INTERSECTION.get=function(){return 0},oa.POINT_INTERSECTION.get=function(){return 1},oa.COLLINEAR_INTERSECTION.get=function(){return 2},Object.defineProperties(ia,oa);var ua=function(t){function n(){t.apply(this,arguments)}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.isInSegmentEnvelopes=function(t){var n=new Hs(this._inputLines[0][0],this._inputLines[0][1]),e=new Hs(this._inputLines[1][0],this._inputLines[1][1]);return n.contains(t)&&e.contains(t)},n.prototype.computeIntersection=function(){if(3!==arguments.length)return t.prototype.computeIntersection.apply(this,arguments);var n=arguments[0],e=arguments[1],r=arguments[2];if(this._isProper=!1,Hs.intersects(e,r,n)&&0===ha.orientationIndex(e,r,n)&&0===ha.orientationIndex(r,e,n))return this._isProper=!0,(n.equals(e)||n.equals(r))&&(this._isProper=!1),this._result=t.POINT_INTERSECTION,null;this._result=t.NO_INTERSECTION},n.prototype.normalizeToMinimum=function(t,n,e,r,l){l.x=this.smallestInAbsValue(t.x,n.x,e.x,r.x),l.y=this.smallestInAbsValue(t.y,n.y,e.y,r.y),t.x-=l.x,t.y-=l.y,n.x-=l.x,n.y-=l.y,e.x-=l.x,e.y-=l.y,r.x-=l.x,r.y-=l.y},n.prototype.safeHCoordinateIntersection=function(t,e,r,l){var i=null;try{i=Zs.intersection(t,e,r,l)}catch(o){if(!(o instanceof Vs))throw o;i=n.nearestEndpoint(t,e,r,l)}return i},n.prototype.intersection=function(t,e,r,l){var i=this.intersectionWithNormalization(t,e,r,l);return this.isInSegmentEnvelopes(i)||(i=new Ss(n.nearestEndpoint(t,e,r,l))),null!==this._precisionModel&&this._precisionModel.makePrecise(i),i},n.prototype.smallestInAbsValue=function(t,n,e,r){var l=t,i=Math.abs(l);return Math.abs(n)<i&&(l=n,i=Math.abs(n)),Math.abs(e)<i&&(l=e,i=Math.abs(e)),Math.abs(r)<i&&(l=r),l},n.prototype.checkDD=function(t,n,e,r,l){var i=Bs.intersection(t,n,e,r),o=this.isInSegmentEnvelopes(i);Ws.out.println("DD in env = "+o+"  --------------------- "+i),l.distance(i)>1e-4&&Ws.out.println("Distance = "+l.distance(i))},n.prototype.intersectionWithNormalization=function(t,n,e,r){var l=new Ss(t),i=new Ss(n),o=new Ss(e),u=new Ss(r),s=new Ss;this.normalizeToEnvCentre(l,i,o,u,s);var a=this.safeHCoordinateIntersection(l,i,o,u);return a.x+=s.x,a.y+=s.y,a},n.prototype.computeCollinearIntersection=function(n,e,r,l){var i=Hs.intersects(n,e,r),o=Hs.intersects(n,e,l),u=Hs.intersects(r,l,n),s=Hs.intersects(r,l,e);return i&&o?(this._intPt[0]=r,this._intPt[1]=l,t.COLLINEAR_INTERSECTION):u&&s?(this._intPt[0]=n,this._intPt[1]=e,t.COLLINEAR_INTERSECTION):i&&u?(this._intPt[0]=r,this._intPt[1]=n,!r.equals(n)||o||s?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):i&&s?(this._intPt[0]=r,this._intPt[1]=e,!r.equals(e)||o||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):o&&u?(this._intPt[0]=l,this._intPt[1]=n,!l.equals(n)||i||s?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):o&&s?(this._intPt[0]=l,this._intPt[1]=e,!l.equals(e)||i||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):t.NO_INTERSECTION},n.prototype.normalizeToEnvCentre=function(t,n,e,r,l){var i=t.x<n.x?t.x:n.x,o=t.y<n.y?t.y:n.y,u=t.x>n.x?t.x:n.x,s=t.y>n.y?t.y:n.y,a=e.x<r.x?e.x:r.x,h=e.y<r.y?e.y:r.y,c=e.x>r.x?e.x:r.x,f=e.y>r.y?e.y:r.y,p=((i>a?i:a)+(u<c?u:c))/2,d=((o>h?o:h)+(s<f?s:f))/2;l.x=p,l.y=d,t.x-=l.x,t.y-=l.y,n.x-=l.x,n.y-=l.y,e.x-=l.x,e.y-=l.y,r.x-=l.x,r.y-=l.y},n.prototype.computeIntersect=function(n,e,r,l){if(this._isProper=!1,!Hs.intersects(n,e,r,l))return t.NO_INTERSECTION;var i=ha.orientationIndex(n,e,r),o=ha.orientationIndex(n,e,l);if(i>0&&o>0||i<0&&o<0)return t.NO_INTERSECTION;var u=ha.orientationIndex(r,l,n),s=ha.orientationIndex(r,l,e);return u>0&&s>0||u<0&&s<0?t.NO_INTERSECTION:0===i&&0===o&&0===u&&0===s?this.computeCollinearIntersection(n,e,r,l):(0===i||0===o||0===u||0===s?(this._isProper=!1,n.equals2D(r)||n.equals2D(l)?this._intPt[0]=n:e.equals2D(r)||e.equals2D(l)?this._intPt[0]=e:0===i?this._intPt[0]=new Ss(r):0===o?this._intPt[0]=new Ss(l):0===u?this._intPt[0]=new Ss(n):0===s&&(this._intPt[0]=new Ss(e))):(this._isProper=!0,this._intPt[0]=this.intersection(n,e,r,l)),t.POINT_INTERSECTION)},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n.nearestEndpoint=function(t,n,e,r){var l=t,i=ha.distancePointLine(t,e,r),o=ha.distancePointLine(n,e,r);return o<i&&(i=o,l=n),(o=ha.distancePointLine(e,t,n))<i&&(i=o,l=e),(o=ha.distancePointLine(r,t,n))<i&&(i=o,l=r),l},n}(ia),sa=function(){};sa.prototype.interfaces_=function(){return[]},sa.prototype.getClass=function(){return sa},sa.orientationIndex=function(t,n,e){var r=n.x-t.x,l=n.y-t.y,i=e.x-n.x,o=e.y-n.y;return sa.signOfDet2x2(r,l,i,o)},sa.signOfDet2x2=function(t,n,e,r){var l=null,i=null,o=null;if(l=1,0===t||0===r)return 0===n||0===e?0:n>0?e>0?-l:l:e>0?l:-l;if(0===n||0===e)return r>0?t>0?l:-l:t>0?-l:l;if(n>0?r>0?n<=r||(l=-l,i=t,t=e,e=i,i=n,n=r,r=i):n<=-r?(l=-l,e=-e,r=-r):(i=t,t=-e,e=i,i=n,n=-r,r=i):r>0?-n<=r?(l=-l,t=-t,n=-n):(i=-t,t=e,e=i,i=-n,n=r,r=i):n>=r?(t=-t,n=-n,e=-e,r=-r):(l=-l,i=-t,t=-e,e=i,i=-n,n=-r,r=i),t>0){if(!(e>0))return l;if(!(t<=e))return l}else{if(e>0)return-l;if(!(t>=e))return-l;l=-l,t=-t,e=-e}for(;;){if((r-=(o=Math.floor(e/t))*n)<0)return-l;if(r>n)return l;if(t>(e-=o*t)+e){if(n<r+r)return l}else{if(n>r+r)return-l;e=t-e,r=n-r,l=-l}if(0===r)return 0===e?0:-l;if(0===e)return l;if((n-=(o=Math.floor(t/e))*r)<0)return l;if(n>r)return-l;if(e>(t-=o*e)+t){if(r<n+n)return-l}else{if(r>n+n)return l;t=e-t,n=r-n,l=-l}if(0===n)return 0===t?0:l;if(0===t)return-l}};var aa=function(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;var t=arguments[0];this._p=t};aa.prototype.countSegment=function(t,n){if(t.x<this._p.x&&n.x<this._p.x)return null;if(this._p.x===n.x&&this._p.y===n.y)return this._isPointOnSegment=!0,null;if(t.y===this._p.y&&n.y===this._p.y){var e=t.x,r=n.x;return e>r&&(e=n.x,r=t.x),this._p.x>=e&&this._p.x<=r&&(this._isPointOnSegment=!0),null}if(t.y>this._p.y&&n.y<=this._p.y||n.y>this._p.y&&t.y<=this._p.y){var l=t.x-this._p.x,i=t.y-this._p.y,o=n.x-this._p.x,u=n.y-this._p.y,s=sa.signOfDet2x2(l,i,o,u);if(0===s)return this._isPointOnSegment=!0,null;u<i&&(s=-s),s>0&&this._crossingCount++}},aa.prototype.isPointInPolygon=function(){return this.getLocation()!==Ts.EXTERIOR},aa.prototype.getLocation=function(){return this._isPointOnSegment?Ts.BOUNDARY:this._crossingCount%2==1?Ts.INTERIOR:Ts.EXTERIOR},aa.prototype.isOnSegment=function(){return this._isPointOnSegment},aa.prototype.interfaces_=function(){return[]},aa.prototype.getClass=function(){return aa},aa.locatePointInRing=function(){if(arguments[0]instanceof Ss&&Ls(arguments[1],qs)){for(var t=arguments[0],n=arguments[1],e=new aa(t),r=new Ss,l=new Ss,i=1;i<n.size();i++)if(n.getCoordinate(i,r),n.getCoordinate(i-1,l),e.countSegment(r,l),e.isOnSegment())return e.getLocation();return e.getLocation()}if(arguments[0]instanceof Ss&&arguments[1]instanceof Array){for(var o=arguments[0],u=arguments[1],s=new aa(o),a=1;a<u.length;a++){var h=u[a],c=u[a-1];if(s.countSegment(h,c),s.isOnSegment())return s.getLocation()}return s.getLocation()}};var ha=function(){},ca={CLOCKWISE:{configurable:!0},RIGHT:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},LEFT:{configurable:!0},COLLINEAR:{configurable:!0},STRAIGHT:{configurable:!0}};ha.prototype.interfaces_=function(){return[]},ha.prototype.getClass=function(){return ha},ha.orientationIndex=function(t,n,e){return Bs.orientationIndex(t,n,e)},ha.signedArea=function(){if(arguments[0]instanceof Array){var t=arguments[0];if(t.length<3)return 0;for(var n=0,e=t[0].x,r=1;r<t.length-1;r++){var l=t[r].x-e,i=t[r+1].y,o=t[r-1].y;n+=l*(o-i)}return n/2}if(Ls(arguments[0],qs)){var u=arguments[0],s=u.size();if(s<3)return 0;var a=new Ss,h=new Ss,c=new Ss;u.getCoordinate(0,h),u.getCoordinate(1,c);var f=h.x;c.x-=f;for(var p=0,d=1;d<s-1;d++)a.y=h.y,h.x=c.x,h.y=c.y,u.getCoordinate(d+1,c),c.x-=f,p+=h.x*(a.y-c.y);return p/2}},ha.distanceLineLine=function(t,n,e,r){if(t.equals(n))return ha.distancePointLine(t,e,r);if(e.equals(r))return ha.distancePointLine(r,t,n);var l=!1;if(Hs.intersects(t,n,e,r)){var i=(n.x-t.x)*(r.y-e.y)-(n.y-t.y)*(r.x-e.x);if(0===i)l=!0;else{var o=(t.y-e.y)*(r.x-e.x)-(t.x-e.x)*(r.y-e.y),u=((t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y))/i,s=o/i;(s<0||s>1||u<0||u>1)&&(l=!0)}}else l=!0;return l?As.min(ha.distancePointLine(t,e,r),ha.distancePointLine(n,e,r),ha.distancePointLine(e,t,n),ha.distancePointLine(r,t,n)):0},ha.isPointInRing=function(t,n){return ha.locatePointInRing(t,n)!==Ts.EXTERIOR},ha.computeLength=function(t){var n=t.size();if(n<=1)return 0;var e=0,r=new Ss;t.getCoordinate(0,r);for(var l=r.x,i=r.y,o=1;o<n;o++){t.getCoordinate(o,r);var u=r.x,s=r.y,a=u-l,h=s-i;e+=Math.sqrt(a*a+h*h),l=u,i=s}return e},ha.isCCW=function(t){var n=t.length-1;if(n<3)throw new bs("Ring has fewer than 4 points, so orientation cannot be determined");for(var e=t[0],r=0,l=1;l<=n;l++){var i=t[l];i.y>e.y&&(e=i,r=l)}var o=r;do{(o-=1)<0&&(o=n)}while(t[o].equals2D(e)&&o!==r);var u=r;do{u=(u+1)%n}while(t[u].equals2D(e)&&u!==r);var s=t[o],a=t[u];if(s.equals2D(e)||a.equals2D(e)||s.equals2D(a))return!1;var h=ha.computeOrientation(s,e,a);return 0===h?s.x>a.x:h>0},ha.locatePointInRing=function(t,n){return aa.locatePointInRing(t,n)},ha.distancePointLinePerpendicular=function(t,n,e){var r=(e.x-n.x)*(e.x-n.x)+(e.y-n.y)*(e.y-n.y),l=((n.y-t.y)*(e.x-n.x)-(n.x-t.x)*(e.y-n.y))/r;return Math.abs(l)*Math.sqrt(r)},ha.computeOrientation=function(t,n,e){return ha.orientationIndex(t,n,e)},ha.distancePointLine=function(){if(2===arguments.length){var t=arguments[0],n=arguments[1];if(0===n.length)throw new bs("Line array must contain at least one vertex");for(var e=t.distance(n[0]),r=0;r<n.length-1;r++){var l=ha.distancePointLine(t,n[r],n[r+1]);l<e&&(e=l)}return e}if(3===arguments.length){var i=arguments[0],o=arguments[1],u=arguments[2];if(o.x===u.x&&o.y===u.y)return i.distance(o);var s=(u.x-o.x)*(u.x-o.x)+(u.y-o.y)*(u.y-o.y),a=((i.x-o.x)*(u.x-o.x)+(i.y-o.y)*(u.y-o.y))/s;if(a<=0)return i.distance(o);if(a>=1)return i.distance(u);var h=((o.y-i.y)*(u.x-o.x)-(o.x-i.x)*(u.y-o.y))/s;return Math.abs(h)*Math.sqrt(s)}},ha.isOnLine=function(t,n){for(var e=new ua,r=1;r<n.length;r++){var l=n[r-1],i=n[r];if(e.computeIntersection(t,l,i),e.hasIntersection())return!0}return!1},ca.CLOCKWISE.get=function(){return-1},ca.RIGHT.get=function(){return ha.CLOCKWISE},ca.COUNTERCLOCKWISE.get=function(){return 1},ca.LEFT.get=function(){return ha.COUNTERCLOCKWISE},ca.COLLINEAR.get=function(){return 0},ca.STRAIGHT.get=function(){return ha.COLLINEAR},Object.defineProperties(ha,ca);var fa=function(){};fa.prototype.filter=function(t){},fa.prototype.interfaces_=function(){return[]},fa.prototype.getClass=function(){return fa};var pa=function(){var t=arguments[0];this._envelope=null,this._factory=null,this._SRID=null,this._userData=null,this._factory=t,this._SRID=t.getSRID()},da={serialVersionUID:{configurable:!0},SORTINDEX_POINT:{configurable:!0},SORTINDEX_MULTIPOINT:{configurable:!0},SORTINDEX_LINESTRING:{configurable:!0},SORTINDEX_LINEARRING:{configurable:!0},SORTINDEX_MULTILINESTRING:{configurable:!0},SORTINDEX_POLYGON:{configurable:!0},SORTINDEX_MULTIPOLYGON:{configurable:!0},SORTINDEX_GEOMETRYCOLLECTION:{configurable:!0},geometryChangedFilter:{configurable:!0}};pa.prototype.isGeometryCollection=function(){return this.getSortIndex()===pa.SORTINDEX_GEOMETRYCOLLECTION},pa.prototype.getFactory=function(){return this._factory},pa.prototype.getGeometryN=function(t){return this},pa.prototype.getArea=function(){return 0},pa.prototype.isRectangle=function(){return!1},pa.prototype.equals=function(){if(arguments[0]instanceof pa){var t=arguments[0];return null!==t&&this.equalsTopo(t)}if(arguments[0]instanceof Object){var n=arguments[0];if(!(n instanceof pa))return!1;var e=n;return this.equalsExact(e)}},pa.prototype.equalsExact=function(t){return this===t||this.equalsExact(t,0)},pa.prototype.geometryChanged=function(){this.apply(pa.geometryChangedFilter)},pa.prototype.geometryChangedAction=function(){this._envelope=null},pa.prototype.equalsNorm=function(t){return null!==t&&this.norm().equalsExact(t.norm())},pa.prototype.getLength=function(){return 0},pa.prototype.getNumGeometries=function(){return 1},pa.prototype.compareTo=function(){if(1===arguments.length){var t=arguments[0],n=t;return this.getSortIndex()!==n.getSortIndex()?this.getSortIndex()-n.getSortIndex():this.isEmpty()&&n.isEmpty()?0:this.isEmpty()?-1:n.isEmpty()?1:this.compareToSameClass(t)}if(2===arguments.length){var e=arguments[0],r=arguments[1];return this.getSortIndex()!==e.getSortIndex()?this.getSortIndex()-e.getSortIndex():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(e,r)}},pa.prototype.getUserData=function(){return this._userData},pa.prototype.getSRID=function(){return this._SRID},pa.prototype.getEnvelope=function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())},pa.prototype.checkNotGeometryCollection=function(t){if(t.getSortIndex()===pa.SORTINDEX_GEOMETRYCOLLECTION)throw new bs("This method does not support GeometryCollection arguments")},pa.prototype.equal=function(t,n,e){return 0===e?t.equals(n):t.distance(n)<=e},pa.prototype.norm=function(){var t=this.copy();return t.normalize(),t},pa.prototype.getPrecisionModel=function(){return this._factory.getPrecisionModel()},pa.prototype.getEnvelopeInternal=function(){return null===this._envelope&&(this._envelope=this.computeEnvelopeInternal()),new Hs(this._envelope)},pa.prototype.setSRID=function(t){this._SRID=t},pa.prototype.setUserData=function(t){this._userData=t},pa.prototype.compare=function(t,n){for(var e=t.iterator(),r=n.iterator();e.hasNext()&&r.hasNext();){var l=e.next(),i=r.next(),o=l.compareTo(i);if(0!==o)return o}return e.hasNext()?1:r.hasNext()?-1:0},pa.prototype.hashCode=function(){return this.getEnvelopeInternal().hashCode()},pa.prototype.isGeometryCollectionOrDerived=function(){return this.getSortIndex()===pa.SORTINDEX_GEOMETRYCOLLECTION||this.getSortIndex()===pa.SORTINDEX_MULTIPOINT||this.getSortIndex()===pa.SORTINDEX_MULTILINESTRING||this.getSortIndex()===pa.SORTINDEX_MULTIPOLYGON},pa.prototype.interfaces_=function(){return[Cs,Es,Ms]},pa.prototype.getClass=function(){return pa},pa.hasNonEmptyElements=function(t){for(var n=0;n<t.length;n++)if(!t[n].isEmpty())return!0;return!1},pa.hasNullElements=function(t){for(var n=0;n<t.length;n++)if(null===t[n])return!0;return!1},da.serialVersionUID.get=function(){return 0x799ea46522854c00},da.SORTINDEX_POINT.get=function(){return 0},da.SORTINDEX_MULTIPOINT.get=function(){return 1},da.SORTINDEX_LINESTRING.get=function(){return 2},da.SORTINDEX_LINEARRING.get=function(){return 3},da.SORTINDEX_MULTILINESTRING.get=function(){return 4},da.SORTINDEX_POLYGON.get=function(){return 5},da.SORTINDEX_MULTIPOLYGON.get=function(){return 6},da.SORTINDEX_GEOMETRYCOLLECTION.get=function(){return 7},da.geometryChangedFilter.get=function(){return ga},Object.defineProperties(pa,da);var ga=function(){};ga.interfaces_=function(){return[fa]},ga.filter=function(t){t.geometryChangedAction()};var ya=function(){};ya.prototype.filter=function(t){},ya.prototype.interfaces_=function(){return[]},ya.prototype.getClass=function(){return ya};var _a=function(){},va={Mod2BoundaryNodeRule:{configurable:!0},EndPointBoundaryNodeRule:{configurable:!0},MultiValentEndPointBoundaryNodeRule:{configurable:!0},MonoValentEndPointBoundaryNodeRule:{configurable:!0},MOD2_BOUNDARY_RULE:{configurable:!0},ENDPOINT_BOUNDARY_RULE:{configurable:!0},MULTIVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},MONOVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},OGC_SFS_BOUNDARY_RULE:{configurable:!0}};_a.prototype.isInBoundary=function(t){},_a.prototype.interfaces_=function(){return[]},_a.prototype.getClass=function(){return _a},va.Mod2BoundaryNodeRule.get=function(){return ma},va.EndPointBoundaryNodeRule.get=function(){return ba},va.MultiValentEndPointBoundaryNodeRule.get=function(){return xa},va.MonoValentEndPointBoundaryNodeRule.get=function(){return wa},va.MOD2_BOUNDARY_RULE.get=function(){return new ma},va.ENDPOINT_BOUNDARY_RULE.get=function(){return new ba},va.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new xa},va.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new wa},va.OGC_SFS_BOUNDARY_RULE.get=function(){return _a.MOD2_BOUNDARY_RULE},Object.defineProperties(_a,va);var ma=function(){};ma.prototype.isInBoundary=function(t){return t%2==1},ma.prototype.interfaces_=function(){return[_a]},ma.prototype.getClass=function(){return ma};var ba=function(){};ba.prototype.isInBoundary=function(t){return t>0},ba.prototype.interfaces_=function(){return[_a]},ba.prototype.getClass=function(){return ba};var xa=function(){};xa.prototype.isInBoundary=function(t){return t>1},xa.prototype.interfaces_=function(){return[_a]},xa.prototype.getClass=function(){return xa};var wa=function(){};wa.prototype.isInBoundary=function(t){return 1===t},wa.prototype.interfaces_=function(){return[_a]},wa.prototype.getClass=function(){return wa};var Ea=function(){};function Ca(t){this.message=t||""}Ea.prototype.add=function(){},Ea.prototype.addAll=function(){},Ea.prototype.isEmpty=function(){},Ea.prototype.iterator=function(){},Ea.prototype.size=function(){},Ea.prototype.toArray=function(){},Ea.prototype.remove=function(){},Ca.prototype=new Error,Ca.prototype.name="IndexOutOfBoundsException";var Oa=function(){};Oa.prototype.hasNext=function(){},Oa.prototype.next=function(){},Oa.prototype.remove=function(){};var Ma=function(t){function n(){t.apply(this,arguments)}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.get=function(){},n.prototype.set=function(){},n.prototype.isEmpty=function(){},n}(Ea);function Sa(t){this.message=t||""}Sa.prototype=new Error,Sa.prototype.name="NoSuchElementException";var Ia=function(t){function n(){t.call(this),this.array_=[],arguments[0]instanceof Ea&&this.addAll(arguments[0])}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.ensureCapacity=function(){},n.prototype.interfaces_=function(){return[t,Ea]},n.prototype.add=function(t){return 1===arguments.length?this.array_.push(t):this.array_.splice(arguments[0],arguments[1]),!0},n.prototype.clear=function(){this.array_=[]},n.prototype.addAll=function(t){for(var n=t.iterator();n.hasNext();)this.add(n.next());return!0},n.prototype.set=function(t,n){var e=this.array_[t];return this.array_[t]=n,e},n.prototype.iterator=function(){return new Pa(this)},n.prototype.get=function(t){if(t<0||t>=this.size())throw new Ca;return this.array_[t]},n.prototype.isEmpty=function(){return 0===this.array_.length},n.prototype.size=function(){return this.array_.length},n.prototype.toArray=function(){for(var t=[],n=0,e=this.array_.length;n<e;n++)t.push(this.array_[n]);return t},n.prototype.remove=function(t){for(var n=!1,e=0,r=this.array_.length;e<r;e++)if(this.array_[e]===t){this.array_.splice(e,1),n=!0;break}return n},n}(Ma),Pa=function(t){function n(n){t.call(this),this.arrayList_=n,this.position_=0}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.next=function(){if(this.position_===this.arrayList_.size())throw new Sa;return this.arrayList_.get(this.position_++)},n.prototype.hasNext=function(){return this.position_<this.arrayList_.size()},n.prototype.set=function(t){return this.arrayList_.set(this.position_-1,t)},n.prototype.remove=function(){this.arrayList_.remove(this.arrayList_.get(this.position_))},n}(Oa),Ra=function(t){function n(){if(t.call(this),0===arguments.length);else if(1===arguments.length){var n=arguments[0];this.ensureCapacity(n.length),this.add(n,!0)}else if(2===arguments.length){var e=arguments[0],r=arguments[1];this.ensureCapacity(e.length),this.add(e,r)}}t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n;var e={coordArrayType:{configurable:!0}};return e.coordArrayType.get=function(){return new Array(0).fill(null)},n.prototype.getCoordinate=function(t){return this.get(t)},n.prototype.addAll=function(){var n=this;if(2===arguments.length){for(var e=arguments[0],r=arguments[1],l=!1,i=e.iterator();i.hasNext();)n.add(i.next(),r),l=!0;return l}return t.prototype.addAll.apply(this,arguments)},n.prototype.clone=function(){for(var n=t.prototype.clone.call(this),e=0;e<this.size();e++)n.add(e,this.get(e).copy());return n},n.prototype.toCoordinateArray=function(){return this.toArray(n.coordArrayType)},n.prototype.add=function(){var n=this;if(1===arguments.length){var e=arguments[0];t.prototype.add.call(this,e)}else if(2===arguments.length){if(arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){var r=arguments[0],l=arguments[1];return this.add(r,l,!0),!0}if(arguments[0]instanceof Ss&&"boolean"==typeof arguments[1]){var i=arguments[0],o=arguments[1];if(!o&&this.size()>=1){var u=this.get(this.size()-1);if(u.equals2D(i))return null}t.prototype.add.call(this,i)}else if(arguments[0]instanceof Object&&"boolean"==typeof arguments[1]){var s=arguments[0],a=arguments[1];return this.add(s,a),!0}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){var h=arguments[0],c=arguments[1],f=arguments[2];if(f)for(var p=0;p<h.length;p++)n.add(h[p],c);else for(var d=h.length-1;d>=0;d--)n.add(h[d],c);return!0}if("boolean"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof Ss){var g=arguments[0],y=arguments[1],_=arguments[2];if(!_){var v=this.size();if(v>0){if(g>0){var m=this.get(g-1);if(m.equals2D(y))return null}if(g<v){var b=this.get(g);if(b.equals2D(y))return null}}}t.prototype.add.call(this,g,y)}}else if(4===arguments.length){var x=arguments[0],w=arguments[1],E=arguments[2],C=arguments[3],O=1;E>C&&(O=-1);for(var M=E;M!==C;M+=O)n.add(x[M],w);return!0}},n.prototype.closeRing=function(){this.size()>0&&this.add(new Ss(this.get(0)),!1)},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},Object.defineProperties(n,e),n}(Ia),Ta=function(){},Na={ForwardComparator:{configurable:!0},BidirectionalComparator:{configurable:!0},coordArrayType:{configurable:!0}};Na.ForwardComparator.get=function(){return La},Na.BidirectionalComparator.get=function(){return Aa},Na.coordArrayType.get=function(){return new Array(0).fill(null)},Ta.prototype.interfaces_=function(){return[]},Ta.prototype.getClass=function(){return Ta},Ta.isRing=function(t){return!(t.length<4||!t[0].equals2D(t[t.length-1]))},Ta.ptNotInList=function(t,n){for(var e=0;e<t.length;e++){var r=t[e];if(Ta.indexOf(r,n)<0)return r}return null},Ta.scroll=function(t,n){var e=Ta.indexOf(n,t);if(e<0)return null;var r=new Array(t.length).fill(null);Ws.arraycopy(t,e,r,0,t.length-e),Ws.arraycopy(t,0,r,t.length-e,e),Ws.arraycopy(r,0,t,0,t.length)},Ta.equals=function(){if(2===arguments.length){var t=arguments[0],n=arguments[1];if(t===n)return!0;if(null===t||null===n)return!1;if(t.length!==n.length)return!1;for(var e=0;e<t.length;e++)if(!t[e].equals(n[e]))return!1;return!0}if(3===arguments.length){var r=arguments[0],l=arguments[1],i=arguments[2];if(r===l)return!0;if(null===r||null===l)return!1;if(r.length!==l.length)return!1;for(var o=0;o<r.length;o++)if(0!==i.compare(r[o],l[o]))return!1;return!0}},Ta.intersection=function(t,n){for(var e=new Ra,r=0;r<t.length;r++)n.intersects(t[r])&&e.add(t[r],!0);return e.toCoordinateArray()},Ta.hasRepeatedPoints=function(t){for(var n=1;n<t.length;n++)if(t[n-1].equals(t[n]))return!0;return!1},Ta.removeRepeatedPoints=function(t){return Ta.hasRepeatedPoints(t)?new Ra(t,!1).toCoordinateArray():t},Ta.reverse=function(t){for(var n=t.length-1,e=Math.trunc(n/2),r=0;r<=e;r++){var l=t[r];t[r]=t[n-r],t[n-r]=l}},Ta.removeNull=function(t){for(var n=0,e=0;e<t.length;e++)null!==t[e]&&n++;var r=new Array(n).fill(null);if(0===n)return r;for(var l=0,i=0;i<t.length;i++)null!==t[i]&&(r[l++]=t[i]);return r},Ta.copyDeep=function(){if(1===arguments.length){for(var t=arguments[0],n=new Array(t.length).fill(null),e=0;e<t.length;e++)n[e]=new Ss(t[e]);return n}if(5===arguments.length)for(var r=arguments[0],l=arguments[1],i=arguments[2],o=arguments[3],u=arguments[4],s=0;s<u;s++)i[o+s]=new Ss(r[l+s])},Ta.isEqualReversed=function(t,n){for(var e=0;e<t.length;e++){var r=t[e],l=n[t.length-e-1];if(0!==r.compareTo(l))return!1}return!0},Ta.envelope=function(t){for(var n=new Hs,e=0;e<t.length;e++)n.expandToInclude(t[e]);return n},Ta.toCoordinateArray=function(t){return t.toArray(Ta.coordArrayType)},Ta.atLeastNCoordinatesOrNothing=function(t,n){return n.length>=t?n:[]},Ta.indexOf=function(t,n){for(var e=0;e<n.length;e++)if(t.equals(n[e]))return e;return-1},Ta.increasingDirection=function(t){for(var n=0;n<Math.trunc(t.length/2);n++){var e=t.length-1-n,r=t[n].compareTo(t[e]);if(0!==r)return r}return 1},Ta.compare=function(t,n){for(var e=0;e<t.length&&e<n.length;){var r=t[e].compareTo(n[e]);if(0!==r)return r;e++}return e<n.length?-1:e<t.length?1:0},Ta.minCoordinate=function(t){for(var n=null,e=0;e<t.length;e++)(null===n||n.compareTo(t[e])>0)&&(n=t[e]);return n},Ta.extract=function(t,n,e){n=As.clamp(n,0,t.length);var r=(e=As.clamp(e,-1,t.length))-n+1;e<0&&(r=0),n>=t.length&&(r=0),e<n&&(r=0);var l=new Array(r).fill(null);if(0===r)return l;for(var i=0,o=n;o<=e;o++)l[i++]=t[o];return l},Object.defineProperties(Ta,Na);var La=function(){};La.prototype.compare=function(t,n){return Ta.compare(t,n)},La.prototype.interfaces_=function(){return[Os]},La.prototype.getClass=function(){return La};var Aa=function(){};Aa.prototype.compare=function(t,n){var e=t,r=n;if(e.length<r.length)return-1;if(e.length>r.length)return 1;if(0===e.length)return 0;var l=Ta.compare(e,r);return Ta.isEqualReversed(e,r)?0:l},Aa.prototype.OLDcompare=function(t,n){var e=t,r=n;if(e.length<r.length)return-1;if(e.length>r.length)return 1;if(0===e.length)return 0;for(var l=Ta.increasingDirection(e),i=Ta.increasingDirection(r),o=l>0?0:e.length-1,u=i>0?0:e.length-1,s=0;s<e.length;s++){var a=e[o].compareTo(r[u]);if(0!==a)return a;o+=l,u+=i}return 0},Aa.prototype.interfaces_=function(){return[Os]},Aa.prototype.getClass=function(){return Aa};var ja=function(){};ja.prototype.get=function(){},ja.prototype.put=function(){},ja.prototype.size=function(){},ja.prototype.values=function(){},ja.prototype.entrySet=function(){};var Da=function(t){function n(){t.apply(this,arguments)}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n}(ja);function ka(t){this.message=t||""}function Fa(){}ka.prototype=new Error,ka.prototype.name="OperationNotSupported",Fa.prototype=new Ea,Fa.prototype.contains=function(){};var Ga=function(t){function n(){t.call(this),this.array_=[],arguments[0]instanceof Ea&&this.addAll(arguments[0])}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.contains=function(t){for(var n=0,e=this.array_.length;n<e;n++)if(this.array_[n]===t)return!0;return!1},n.prototype.add=function(t){return!this.contains(t)&&(this.array_.push(t),!0)},n.prototype.addAll=function(t){for(var n=t.iterator();n.hasNext();)this.add(n.next());return!0},n.prototype.remove=function(t){throw new Error},n.prototype.size=function(){return this.array_.length},n.prototype.isEmpty=function(){return 0===this.array_.length},n.prototype.toArray=function(){for(var t=[],n=0,e=this.array_.length;n<e;n++)t.push(this.array_[n]);return t},n.prototype.iterator=function(){return new za(this)},n}(Fa),za=function(t){function n(n){t.call(this),this.hashSet_=n,this.position_=0}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.next=function(){if(this.position_===this.hashSet_.size())throw new Sa;return this.hashSet_.array_[this.position_++]},n.prototype.hasNext=function(){return this.position_<this.hashSet_.size()},n.prototype.remove=function(){throw new ka},n}(Oa);function Ba(t){return null===t?0:t.color}function Ua(t){return null===t?null:t.parent}function qa(t,n){null!==t&&(t.color=n)}function Ya(t){return null===t?null:t.left}function Xa(t){return null===t?null:t.right}function Va(){this.root_=null,this.size_=0}Va.prototype=new Da,Va.prototype.get=function(t){for(var n=this.root_;null!==n;){var e=t.compareTo(n.key);if(e<0)n=n.left;else{if(!(e>0))return n.value;n=n.right}}return null},Va.prototype.put=function(t,n){if(null===this.root_)return this.root_={key:t,value:n,left:null,right:null,parent:null,color:0,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var e,r,l=this.root_;do{if(e=l,(r=t.compareTo(l.key))<0)l=l.left;else{if(!(r>0)){var i=l.value;return l.value=n,i}l=l.right}}while(null!==l);var o={key:t,left:null,right:null,value:n,parent:e,color:0,getValue:function(){return this.value},getKey:function(){return this.key}};return r<0?e.left=o:e.right=o,this.fixAfterInsertion(o),this.size_++,null},Va.prototype.fixAfterInsertion=function(t){var n=this;for(t.color=1;null!=t&&t!==this.root_&&1===t.parent.color;)if(Ua(t)===Ya(Ua(Ua(t)))){var e=Xa(Ua(Ua(t)));1===Ba(e)?(qa(Ua(t),0),qa(e,0),qa(Ua(Ua(t)),1),t=Ua(Ua(t))):(t===Xa(Ua(t))&&(t=Ua(t),n.rotateLeft(t)),qa(Ua(t),0),qa(Ua(Ua(t)),1),n.rotateRight(Ua(Ua(t))))}else{var r=Ya(Ua(Ua(t)));1===Ba(r)?(qa(Ua(t),0),qa(r,0),qa(Ua(Ua(t)),1),t=Ua(Ua(t))):(t===Ya(Ua(t))&&(t=Ua(t),n.rotateRight(t)),qa(Ua(t),0),qa(Ua(Ua(t)),1),n.rotateLeft(Ua(Ua(t))))}this.root_.color=0},Va.prototype.values=function(){var t=new Ia,n=this.getFirstEntry();if(null!==n)for(t.add(n.value);null!==(n=Va.successor(n));)t.add(n.value);return t},Va.prototype.entrySet=function(){var t=new Ga,n=this.getFirstEntry();if(null!==n)for(t.add(n);null!==(n=Va.successor(n));)t.add(n);return t},Va.prototype.rotateLeft=function(t){if(null!=t){var n=t.right;t.right=n.left,null!=n.left&&(n.left.parent=t),n.parent=t.parent,null===t.parent?this.root_=n:t.parent.left===t?t.parent.left=n:t.parent.right=n,n.left=t,t.parent=n}},Va.prototype.rotateRight=function(t){if(null!=t){var n=t.left;t.left=n.right,null!=n.right&&(n.right.parent=t),n.parent=t.parent,null===t.parent?this.root_=n:t.parent.right===t?t.parent.right=n:t.parent.left=n,n.right=t,t.parent=n}},Va.prototype.getFirstEntry=function(){var t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t},Va.successor=function(t){if(null===t)return null;if(null!==t.right){for(var n=t.right;null!==n.left;)n=n.left;return n}for(var e=t.parent,r=t;null!==e&&r===e.right;)r=e,e=e.parent;return e},Va.prototype.size=function(){return this.size_};var Wa=function(){};function Za(){}function Ha(){this.array_=[],arguments[0]instanceof Ea&&this.addAll(arguments[0])}Wa.prototype.interfaces_=function(){return[]},Wa.prototype.getClass=function(){return Wa},Za.prototype=new Fa,Ha.prototype=new Za,Ha.prototype.contains=function(t){for(var n=0,e=this.array_.length;n<e;n++)if(0===this.array_[n].compareTo(t))return!0;return!1},Ha.prototype.add=function(t){if(this.contains(t))return!1;for(var n=0,e=this.array_.length;n<e;n++)if(1===this.array_[n].compareTo(t))return this.array_.splice(n,0,t),!0;return this.array_.push(t),!0},Ha.prototype.addAll=function(t){for(var n=t.iterator();n.hasNext();)this.add(n.next());return!0},Ha.prototype.remove=function(t){throw new ka},Ha.prototype.size=function(){return this.array_.length},Ha.prototype.isEmpty=function(){return 0===this.array_.length},Ha.prototype.toArray=function(){for(var t=[],n=0,e=this.array_.length;n<e;n++)t.push(this.array_[n]);return t},Ha.prototype.iterator=function(){return new Ka(this)};var Ka=function(t){this.treeSet_=t,this.position_=0};Ka.prototype.next=function(){if(this.position_===this.treeSet_.size())throw new Sa;return this.treeSet_.array_[this.position_++]},Ka.prototype.hasNext=function(){return this.position_<this.treeSet_.size()},Ka.prototype.remove=function(){throw new ka};var Ja=function(){};Ja.sort=function(){var t,n,e,r,l=arguments[0];if(1===arguments.length)r=function(t,n){return t.compareTo(n)},l.sort(r);else if(2===arguments.length)e=arguments[1],r=function(t,n){return e.compare(t,n)},l.sort(r);else if(3===arguments.length){(n=l.slice(arguments[1],arguments[2])).sort();var i=l.slice(0,arguments[1]).concat(n,l.slice(arguments[2],l.length));for(l.splice(0,l.length),t=0;t<i.length;t++)l.push(i[t])}else if(4===arguments.length)for(n=l.slice(arguments[1],arguments[2]),e=arguments[3],r=function(t,n){return e.compare(t,n)},n.sort(r),i=l.slice(0,arguments[1]).concat(n,l.slice(arguments[2],l.length)),l.splice(0,l.length),t=0;t<i.length;t++)l.push(i[t])},Ja.asList=function(t){for(var n=new Ia,e=0,r=t.length;e<r;e++)n.add(t[e]);return n};var Qa=function(){},$a={P:{configurable:!0},L:{configurable:!0},A:{configurable:!0},FALSE:{configurable:!0},TRUE:{configurable:!0},DONTCARE:{configurable:!0},SYM_FALSE:{configurable:!0},SYM_TRUE:{configurable:!0},SYM_DONTCARE:{configurable:!0},SYM_P:{configurable:!0},SYM_L:{configurable:!0},SYM_A:{configurable:!0}};$a.P.get=function(){return 0},$a.L.get=function(){return 1},$a.A.get=function(){return 2},$a.FALSE.get=function(){return-1},$a.TRUE.get=function(){return-2},$a.DONTCARE.get=function(){return-3},$a.SYM_FALSE.get=function(){return"F"},$a.SYM_TRUE.get=function(){return"T"},$a.SYM_DONTCARE.get=function(){return"*"},$a.SYM_P.get=function(){return"0"},$a.SYM_L.get=function(){return"1"},$a.SYM_A.get=function(){return"2"},Qa.prototype.interfaces_=function(){return[]},Qa.prototype.getClass=function(){return Qa},Qa.toDimensionSymbol=function(t){switch(t){case Qa.FALSE:return Qa.SYM_FALSE;case Qa.TRUE:return Qa.SYM_TRUE;case Qa.DONTCARE:return Qa.SYM_DONTCARE;case Qa.P:return Qa.SYM_P;case Qa.L:return Qa.SYM_L;case Qa.A:return Qa.SYM_A}throw new bs("Unknown dimension value: "+t)},Qa.toDimensionValue=function(t){switch(Fs.toUpperCase(t)){case Qa.SYM_FALSE:return Qa.FALSE;case Qa.SYM_TRUE:return Qa.TRUE;case Qa.SYM_DONTCARE:return Qa.DONTCARE;case Qa.SYM_P:return Qa.P;case Qa.SYM_L:return Qa.L;case Qa.SYM_A:return Qa.A}throw new bs("Unknown dimension symbol: "+t)},Object.defineProperties(Qa,$a);var th=function(){};th.prototype.filter=function(t){},th.prototype.interfaces_=function(){return[]},th.prototype.getClass=function(){return th};var nh=function(){};nh.prototype.filter=function(t,n){},nh.prototype.isDone=function(){},nh.prototype.isGeometryChanged=function(){},nh.prototype.interfaces_=function(){return[]},nh.prototype.getClass=function(){return nh};var eh=function(t){function n(n,e){if(t.call(this,e),this._geometries=n||[],t.hasNullElements(this._geometries))throw new bs("geometries must not contain null elements")}t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n;var e={serialVersionUID:{configurable:!0}};return n.prototype.computeEnvelopeInternal=function(){for(var t=new Hs,n=0;n<this._geometries.length;n++)t.expandToInclude(this._geometries[n].getEnvelopeInternal());return t},n.prototype.getGeometryN=function(t){return this._geometries[t]},n.prototype.getSortIndex=function(){return t.SORTINDEX_GEOMETRYCOLLECTION},n.prototype.getCoordinates=function(){for(var t=new Array(this.getNumPoints()).fill(null),n=-1,e=0;e<this._geometries.length;e++)for(var r=this._geometries[e].getCoordinates(),l=0;l<r.length;l++)t[++n]=r[l];return t},n.prototype.getArea=function(){for(var t=0,n=0;n<this._geometries.length;n++)t+=this._geometries[n].getArea();return t},n.prototype.equalsExact=function(){var n=this;if(2===arguments.length){var e=arguments[0],r=arguments[1];if(!this.isEquivalentClass(e))return!1;var l=e;if(this._geometries.length!==l._geometries.length)return!1;for(var i=0;i<this._geometries.length;i++)if(!n._geometries[i].equalsExact(l._geometries[i],r))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},n.prototype.normalize=function(){for(var t=0;t<this._geometries.length;t++)this._geometries[t].normalize();Ja.sort(this._geometries)},n.prototype.getCoordinate=function(){return this.isEmpty()?null:this._geometries[0].getCoordinate()},n.prototype.getBoundaryDimension=function(){for(var t=Qa.FALSE,n=0;n<this._geometries.length;n++)t=Math.max(t,this._geometries[n].getBoundaryDimension());return t},n.prototype.getDimension=function(){for(var t=Qa.FALSE,n=0;n<this._geometries.length;n++)t=Math.max(t,this._geometries[n].getDimension());return t},n.prototype.getLength=function(){for(var t=0,n=0;n<this._geometries.length;n++)t+=this._geometries[n].getLength();return t},n.prototype.getNumPoints=function(){for(var t=0,n=0;n<this._geometries.length;n++)t+=this._geometries[n].getNumPoints();return t},n.prototype.getNumGeometries=function(){return this._geometries.length},n.prototype.reverse=function(){for(var t=this._geometries.length,n=new Array(t).fill(null),e=0;e<this._geometries.length;e++)n[e]=this._geometries[e].reverse();return this.getFactory().createGeometryCollection(n)},n.prototype.compareToSameClass=function(){var t=this;if(1===arguments.length){var n=arguments[0],e=new Ha(Ja.asList(this._geometries)),r=new Ha(Ja.asList(n._geometries));return this.compare(e,r)}if(2===arguments.length){for(var l=arguments[0],i=arguments[1],o=l,u=this.getNumGeometries(),s=o.getNumGeometries(),a=0;a<u&&a<s;){var h=t.getGeometryN(a),c=o.getGeometryN(a),f=h.compareToSameClass(c,i);if(0!==f)return f;a++}return a<u?1:a<s?-1:0}},n.prototype.apply=function(){var t=this;if(Ls(arguments[0],ya))for(var n=arguments[0],e=0;e<this._geometries.length;e++)t._geometries[e].apply(n);else if(Ls(arguments[0],nh)){var r=arguments[0];if(0===this._geometries.length)return null;for(var l=0;l<this._geometries.length&&(t._geometries[l].apply(r),!r.isDone());l++);r.isGeometryChanged()&&this.geometryChanged()}else if(Ls(arguments[0],th)){var i=arguments[0];i.filter(this);for(var o=0;o<this._geometries.length;o++)t._geometries[o].apply(i)}else if(Ls(arguments[0],fa)){var u=arguments[0];u.filter(this);for(var s=0;s<this._geometries.length;s++)t._geometries[s].apply(u)}},n.prototype.getBoundary=function(){return this.checkNotGeometryCollection(this),la.shouldNeverReachHere(),null},n.prototype.clone=function(){var n=t.prototype.clone.call(this);n._geometries=new Array(this._geometries.length).fill(null);for(var e=0;e<this._geometries.length;e++)n._geometries[e]=this._geometries[e].clone();return n},n.prototype.getGeometryType=function(){return"GeometryCollection"},n.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new n(t,this._factory)},n.prototype.isEmpty=function(){for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isEmpty())return!1;return!0},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},e.serialVersionUID.get=function(){return-0x4f07bcb1f857d800},Object.defineProperties(n,e),n}(pa),rh=function(t){function n(){t.apply(this,arguments)}t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n;var e={serialVersionUID:{configurable:!0}};return n.prototype.getSortIndex=function(){return pa.SORTINDEX_MULTILINESTRING},n.prototype.equalsExact=function(){if(2===arguments.length){var n=arguments[0],e=arguments[1];return!!this.isEquivalentClass(n)&&t.prototype.equalsExact.call(this,n,e)}return t.prototype.equalsExact.apply(this,arguments)},n.prototype.getBoundaryDimension=function(){return this.isClosed()?Qa.FALSE:0},n.prototype.isClosed=function(){if(this.isEmpty())return!1;for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isClosed())return!1;return!0},n.prototype.getDimension=function(){return 1},n.prototype.reverse=function(){for(var t=this._geometries.length,n=new Array(t).fill(null),e=0;e<this._geometries.length;e++)n[t-1-e]=this._geometries[e].reverse();return this.getFactory().createMultiLineString(n)},n.prototype.getBoundary=function(){return new lh(this).getBoundary()},n.prototype.getGeometryType=function(){return"MultiLineString"},n.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new n(t,this._factory)},n.prototype.interfaces_=function(){return[Wa]},n.prototype.getClass=function(){return n},e.serialVersionUID.get=function(){return 0x7155d2ab4afa8000},Object.defineProperties(n,e),n}(eh),lh=function(){if(this._geom=null,this._geomFact=null,this._bnRule=null,this._endpointMap=null,1===arguments.length){var t=arguments[0],n=_a.MOD2_BOUNDARY_RULE;this._geom=t,this._geomFact=t.getFactory(),this._bnRule=n}else if(2===arguments.length){var e=arguments[0],r=arguments[1];this._geom=e,this._geomFact=e.getFactory(),this._bnRule=r}};lh.prototype.boundaryMultiLineString=function(t){if(this._geom.isEmpty())return this.getEmptyMultiPoint();var n=this.computeBoundaryCoordinates(t);return 1===n.length?this._geomFact.createPoint(n[0]):this._geomFact.createMultiPointFromCoords(n)},lh.prototype.getBoundary=function(){return this._geom instanceof gh?this.boundaryLineString(this._geom):this._geom instanceof rh?this.boundaryMultiLineString(this._geom):this._geom.getBoundary()},lh.prototype.boundaryLineString=function(t){return this._geom.isEmpty()?this.getEmptyMultiPoint():t.isClosed()?this._bnRule.isInBoundary(2)?t.getStartPoint():this._geomFact.createMultiPoint():this._geomFact.createMultiPoint([t.getStartPoint(),t.getEndPoint()])},lh.prototype.getEmptyMultiPoint=function(){return this._geomFact.createMultiPoint()},lh.prototype.computeBoundaryCoordinates=function(t){var n=this,e=new Ia;this._endpointMap=new Va;for(var r=0;r<t.getNumGeometries();r++){var l=t.getGeometryN(r);0!==l.getNumPoints()&&(n.addEndpoint(l.getCoordinateN(0)),n.addEndpoint(l.getCoordinateN(l.getNumPoints()-1)))}for(var i=this._endpointMap.entrySet().iterator();i.hasNext();){var o=i.next(),u=o.getValue().count;n._bnRule.isInBoundary(u)&&e.add(o.getKey())}return Ta.toCoordinateArray(e)},lh.prototype.addEndpoint=function(t){var n=this._endpointMap.get(t);null===n&&(n=new ih,this._endpointMap.put(t,n)),n.count++},lh.prototype.interfaces_=function(){return[]},lh.prototype.getClass=function(){return lh},lh.getBoundary=function(){if(1===arguments.length){var t=arguments[0],n=new lh(t);return n.getBoundary()}if(2===arguments.length){var e=arguments[0],r=arguments[1],l=new lh(e,r);return l.getBoundary()}};var ih=function(){this.count=null};function oh(){}function uh(){}ih.prototype.interfaces_=function(){return[]},ih.prototype.getClass=function(){return ih};var sh=function(){};function ah(){}function hh(){}function ch(){}var fh=function(){},ph={NEWLINE:{configurable:!0},SIMPLE_ORDINATE_FORMAT:{configurable:!0}};fh.prototype.interfaces_=function(){return[]},fh.prototype.getClass=function(){return fh},fh.chars=function(t,n){for(var e=new Array(n).fill(null),r=0;r<n;r++)e[r]=t;return String(e)},fh.getStackTrace=function(){if(1===arguments.length){var t=arguments[0],n=new ah,e=new oh(n);return t.printStackTrace(e),n.toString()}if(2===arguments.length){for(var r=arguments[0],l=arguments[1],i="",o=new uh(fh.getStackTrace(r)),u=new ch(o),s=0;s<l;s++)try{i+=u.readLine()+fh.NEWLINE}catch(t){if(!(t instanceof hh))throw t;la.shouldNeverReachHere()}return i}},fh.split=function(t,n){for(var e=n.length,r=new Ia,l=""+t,i=l.indexOf(n);i>=0;){var o=l.substring(0,i);r.add(o),i=(l=l.substring(i+e)).indexOf(n)}l.length>0&&r.add(l);for(var u=new Array(r.size()).fill(null),s=0;s<u.length;s++)u[s]=r.get(s);return u},fh.toString=function(){if(1===arguments.length){var t=arguments[0];return fh.SIMPLE_ORDINATE_FORMAT.format(t)}},fh.spaces=function(t){return fh.chars(" ",t)},ph.NEWLINE.get=function(){return Ws.getProperty("line.separator")},ph.SIMPLE_ORDINATE_FORMAT.get=function(){return new sh("0.#")},Object.defineProperties(fh,ph);var dh=function(){};dh.prototype.interfaces_=function(){return[]},dh.prototype.getClass=function(){return dh},dh.copyCoord=function(t,n,e,r){for(var l=Math.min(t.getDimension(),e.getDimension()),i=0;i<l;i++)e.setOrdinate(r,i,t.getOrdinate(n,i))},dh.isRing=function(t){var n=t.size();return 0===n||!(n<=3)&&t.getOrdinate(0,qs.X)===t.getOrdinate(n-1,qs.X)&&t.getOrdinate(0,qs.Y)===t.getOrdinate(n-1,qs.Y)},dh.isEqual=function(t,n){var e=t.size();if(e!==n.size())return!1;for(var r=Math.min(t.getDimension(),n.getDimension()),l=0;l<e;l++)for(var i=0;i<r;i++){var o=t.getOrdinate(l,i),u=n.getOrdinate(l,i);if(!(t.getOrdinate(l,i)===n.getOrdinate(l,i)||xs.isNaN(o)&&xs.isNaN(u)))return!1}return!0},dh.extend=function(t,n,e){var r=t.create(e,n.getDimension()),l=n.size();if(dh.copy(n,0,r,0,l),l>0)for(var i=l;i<e;i++)dh.copy(n,l-1,r,i,1);return r},dh.reverse=function(t){for(var n=t.size()-1,e=Math.trunc(n/2),r=0;r<=e;r++)dh.swap(t,r,n-r)},dh.swap=function(t,n,e){if(n===e)return null;for(var r=0;r<t.getDimension();r++){var l=t.getOrdinate(n,r);t.setOrdinate(n,r,t.getOrdinate(e,r)),t.setOrdinate(e,r,l)}},dh.copy=function(t,n,e,r,l){for(var i=0;i<l;i++)dh.copyCoord(t,n+i,e,r+i)},dh.toString=function(){if(1===arguments.length){var t=arguments[0],n=t.size();if(0===n)return"()";var e=t.getDimension(),r=new Ds;r.append("(");for(var l=0;l<n;l++){l>0&&r.append(" ");for(var i=0;i<e;i++)i>0&&r.append(","),r.append(fh.toString(t.getOrdinate(l,i)))}return r.append(")"),r.toString()}},dh.ensureValidRing=function(t,n){var e=n.size();return 0===e?n:e<=3?dh.createClosedRing(t,n,4):n.getOrdinate(0,qs.X)===n.getOrdinate(e-1,qs.X)&&n.getOrdinate(0,qs.Y)===n.getOrdinate(e-1,qs.Y)?n:dh.createClosedRing(t,n,e+1)},dh.createClosedRing=function(t,n,e){var r=t.create(e,n.getDimension()),l=n.size();dh.copy(n,0,r,0,l);for(var i=l;i<e;i++)dh.copy(n,0,r,i,1);return r};var gh=function(t){function n(n,e){t.call(this,e),this._points=null,this.init(n)}t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n;var e={serialVersionUID:{configurable:!0}};return n.prototype.computeEnvelopeInternal=function(){return this.isEmpty()?new Hs:this._points.expandEnvelope(new Hs)},n.prototype.isRing=function(){return this.isClosed()&&this.isSimple()},n.prototype.getSortIndex=function(){return t.SORTINDEX_LINESTRING},n.prototype.getCoordinates=function(){return this._points.toCoordinateArray()},n.prototype.equalsExact=function(){var n=this;if(2===arguments.length){var e=arguments[0],r=arguments[1];if(!this.isEquivalentClass(e))return!1;var l=e;if(this._points.size()!==l._points.size())return!1;for(var i=0;i<this._points.size();i++)if(!n.equal(n._points.getCoordinate(i),l._points.getCoordinate(i),r))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},n.prototype.normalize=function(){for(var t=this,n=0;n<Math.trunc(this._points.size()/2);n++){var e=t._points.size()-1-n;if(!t._points.getCoordinate(n).equals(t._points.getCoordinate(e)))return t._points.getCoordinate(n).compareTo(t._points.getCoordinate(e))>0&&dh.reverse(t._points),null}},n.prototype.getCoordinate=function(){return this.isEmpty()?null:this._points.getCoordinate(0)},n.prototype.getBoundaryDimension=function(){return this.isClosed()?Qa.FALSE:0},n.prototype.isClosed=function(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))},n.prototype.getEndPoint=function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)},n.prototype.getDimension=function(){return 1},n.prototype.getLength=function(){return ha.computeLength(this._points)},n.prototype.getNumPoints=function(){return this._points.size()},n.prototype.reverse=function(){var t=this._points.copy();return dh.reverse(t),this.getFactory().createLineString(t)},n.prototype.compareToSameClass=function(){var t=this;if(1===arguments.length){for(var n=arguments[0],e=n,r=0,l=0;r<this._points.size()&&l<e._points.size();){var i=t._points.getCoordinate(r).compareTo(e._points.getCoordinate(l));if(0!==i)return i;r++,l++}return r<this._points.size()?1:l<e._points.size()?-1:0}if(2===arguments.length){var o=arguments[0],u=arguments[1],s=o;return u.compare(this._points,s._points)}},n.prototype.apply=function(){var t=this;if(Ls(arguments[0],ya))for(var n=arguments[0],e=0;e<this._points.size();e++)n.filter(t._points.getCoordinate(e));else if(Ls(arguments[0],nh)){var r=arguments[0];if(0===this._points.size())return null;for(var l=0;l<this._points.size()&&(r.filter(t._points,l),!r.isDone());l++);r.isGeometryChanged()&&this.geometryChanged()}else if(Ls(arguments[0],th)){var i=arguments[0];i.filter(this)}else if(Ls(arguments[0],fa)){var o=arguments[0];o.filter(this)}},n.prototype.getBoundary=function(){return new lh(this).getBoundary()},n.prototype.isEquivalentClass=function(t){return t instanceof n},n.prototype.clone=function(){var n=t.prototype.clone.call(this);return n._points=this._points.clone(),n},n.prototype.getCoordinateN=function(t){return this._points.getCoordinate(t)},n.prototype.getGeometryType=function(){return"LineString"},n.prototype.copy=function(){return new n(this._points.copy(),this._factory)},n.prototype.getCoordinateSequence=function(){return this._points},n.prototype.isEmpty=function(){return 0===this._points.size()},n.prototype.init=function(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new bs("Invalid number of points in LineString (found "+t.size()+" - must be 0 or >= 2)");this._points=t},n.prototype.isCoordinate=function(t){for(var n=0;n<this._points.size();n++)if(this._points.getCoordinate(n).equals(t))return!0;return!1},n.prototype.getStartPoint=function(){return this.isEmpty()?null:this.getPointN(0)},n.prototype.getPointN=function(t){return this.getFactory().createPoint(this._points.getCoordinate(t))},n.prototype.interfaces_=function(){return[Wa]},n.prototype.getClass=function(){return n},e.serialVersionUID.get=function(){return 0x2b2b51ba435c8e00},Object.defineProperties(n,e),n}(pa),yh=function(){};yh.prototype.interfaces_=function(){return[]},yh.prototype.getClass=function(){return yh};var _h=function(t){function n(n,e){t.call(this,e),this._coordinates=n||null,this.init(this._coordinates)}t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n;var e={serialVersionUID:{configurable:!0}};return n.prototype.computeEnvelopeInternal=function(){if(this.isEmpty())return new Hs;var t=new Hs;return t.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),t},n.prototype.getSortIndex=function(){return t.SORTINDEX_POINT},n.prototype.getCoordinates=function(){return this.isEmpty()?[]:[this.getCoordinate()]},n.prototype.equalsExact=function(){if(2===arguments.length){var n=arguments[0],e=arguments[1];return!!this.isEquivalentClass(n)&&(!(!this.isEmpty()||!n.isEmpty())||this.isEmpty()===n.isEmpty()&&this.equal(n.getCoordinate(),this.getCoordinate(),e))}return t.prototype.equalsExact.apply(this,arguments)},n.prototype.normalize=function(){},n.prototype.getCoordinate=function(){return 0!==this._coordinates.size()?this._coordinates.getCoordinate(0):null},n.prototype.getBoundaryDimension=function(){return Qa.FALSE},n.prototype.getDimension=function(){return 0},n.prototype.getNumPoints=function(){return this.isEmpty()?0:1},n.prototype.reverse=function(){return this.copy()},n.prototype.getX=function(){if(null===this.getCoordinate())throw new Error("getX called on empty Point");return this.getCoordinate().x},n.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0],n=t;return this.getCoordinate().compareTo(n.getCoordinate())}if(2===arguments.length){var e=arguments[0],r=arguments[1],l=e;return r.compare(this._coordinates,l._coordinates)}},n.prototype.apply=function(){if(Ls(arguments[0],ya)){var t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(Ls(arguments[0],nh)){var n=arguments[0];if(this.isEmpty())return null;n.filter(this._coordinates,0),n.isGeometryChanged()&&this.geometryChanged()}else if(Ls(arguments[0],th)){var e=arguments[0];e.filter(this)}else if(Ls(arguments[0],fa)){var r=arguments[0];r.filter(this)}},n.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},n.prototype.clone=function(){var n=t.prototype.clone.call(this);return n._coordinates=this._coordinates.clone(),n},n.prototype.getGeometryType=function(){return"Point"},n.prototype.copy=function(){return new n(this._coordinates.copy(),this._factory)},n.prototype.getCoordinateSequence=function(){return this._coordinates},n.prototype.getY=function(){if(null===this.getCoordinate())throw new Error("getY called on empty Point");return this.getCoordinate().y},n.prototype.isEmpty=function(){return 0===this._coordinates.size()},n.prototype.init=function(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),la.isTrue(t.size()<=1),this._coordinates=t},n.prototype.isSimple=function(){return!0},n.prototype.interfaces_=function(){return[yh]},n.prototype.getClass=function(){return n},e.serialVersionUID.get=function(){return 0x44077bad161cbc00},Object.defineProperties(n,e),n}(pa),vh=function(){};vh.prototype.interfaces_=function(){return[]},vh.prototype.getClass=function(){return vh};var mh=function(t){function n(n,e,r){if(t.call(this,r),this._shell=null,this._holes=null,null===n&&(n=this.getFactory().createLinearRing()),null===e&&(e=[]),t.hasNullElements(e))throw new bs("holes must not contain null elements");if(n.isEmpty()&&t.hasNonEmptyElements(e))throw new bs("shell is empty but holes are not");this._shell=n,this._holes=e}t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n;var e={serialVersionUID:{configurable:!0}};return n.prototype.computeEnvelopeInternal=function(){return this._shell.getEnvelopeInternal()},n.prototype.getSortIndex=function(){return t.SORTINDEX_POLYGON},n.prototype.getCoordinates=function(){if(this.isEmpty())return[];for(var t=new Array(this.getNumPoints()).fill(null),n=-1,e=this._shell.getCoordinates(),r=0;r<e.length;r++)t[++n]=e[r];for(var l=0;l<this._holes.length;l++)for(var i=this._holes[l].getCoordinates(),o=0;o<i.length;o++)t[++n]=i[o];return t},n.prototype.getArea=function(){var t=0;t+=Math.abs(ha.signedArea(this._shell.getCoordinateSequence()));for(var n=0;n<this._holes.length;n++)t-=Math.abs(ha.signedArea(this._holes[n].getCoordinateSequence()));return t},n.prototype.isRectangle=function(){if(0!==this.getNumInteriorRing())return!1;if(null===this._shell)return!1;if(5!==this._shell.getNumPoints())return!1;for(var t=this._shell.getCoordinateSequence(),n=this.getEnvelopeInternal(),e=0;e<5;e++){var r=t.getX(e);if(r!==n.getMinX()&&r!==n.getMaxX())return!1;var l=t.getY(e);if(l!==n.getMinY()&&l!==n.getMaxY())return!1}for(var i=t.getX(0),o=t.getY(0),u=1;u<=4;u++){var s=t.getX(u),a=t.getY(u);if(s!==i==(a!==o))return!1;i=s,o=a}return!0},n.prototype.equalsExact=function(){var n=this;if(2===arguments.length){var e=arguments[0],r=arguments[1];if(!this.isEquivalentClass(e))return!1;var l=e,i=this._shell,o=l._shell;if(!i.equalsExact(o,r))return!1;if(this._holes.length!==l._holes.length)return!1;for(var u=0;u<this._holes.length;u++)if(!n._holes[u].equalsExact(l._holes[u],r))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},n.prototype.normalize=function(){var t=this;if(0===arguments.length){this.normalize(this._shell,!0);for(var n=0;n<this._holes.length;n++)t.normalize(t._holes[n],!1);Ja.sort(this._holes)}else if(2===arguments.length){var e=arguments[0],r=arguments[1];if(e.isEmpty())return null;var l=new Array(e.getCoordinates().length-1).fill(null);Ws.arraycopy(e.getCoordinates(),0,l,0,l.length);var i=Ta.minCoordinate(e.getCoordinates());Ta.scroll(l,i),Ws.arraycopy(l,0,e.getCoordinates(),0,l.length),e.getCoordinates()[l.length]=l[0],ha.isCCW(e.getCoordinates())===r&&Ta.reverse(e.getCoordinates())}},n.prototype.getCoordinate=function(){return this._shell.getCoordinate()},n.prototype.getNumInteriorRing=function(){return this._holes.length},n.prototype.getBoundaryDimension=function(){return 1},n.prototype.getDimension=function(){return 2},n.prototype.getLength=function(){var t=0;t+=this._shell.getLength();for(var n=0;n<this._holes.length;n++)t+=this._holes[n].getLength();return t},n.prototype.getNumPoints=function(){for(var t=this._shell.getNumPoints(),n=0;n<this._holes.length;n++)t+=this._holes[n].getNumPoints();return t},n.prototype.reverse=function(){var t=this.copy();t._shell=this._shell.copy().reverse(),t._holes=new Array(this._holes.length).fill(null);for(var n=0;n<this._holes.length;n++)t._holes[n]=this._holes[n].copy().reverse();return t},n.prototype.convexHull=function(){return this.getExteriorRing().convexHull()},n.prototype.compareToSameClass=function(){var t=this;if(1===arguments.length){var n=arguments[0],e=this._shell,r=n._shell;return e.compareToSameClass(r)}if(2===arguments.length){var l=arguments[0],i=arguments[1],o=l,u=this._shell,s=o._shell,a=u.compareToSameClass(s,i);if(0!==a)return a;for(var h=this.getNumInteriorRing(),c=o.getNumInteriorRing(),f=0;f<h&&f<c;){var p=t.getInteriorRingN(f),d=o.getInteriorRingN(f),g=p.compareToSameClass(d,i);if(0!==g)return g;f++}return f<h?1:f<c?-1:0}},n.prototype.apply=function(t){var n=this;if(Ls(t,ya)){this._shell.apply(t);for(var e=0;e<this._holes.length;e++)n._holes[e].apply(t)}else if(Ls(t,nh)){if(this._shell.apply(t),!t.isDone())for(var r=0;r<this._holes.length&&(n._holes[r].apply(t),!t.isDone());r++);t.isGeometryChanged()&&this.geometryChanged()}else if(Ls(t,th))t.filter(this);else if(Ls(t,fa)){t.filter(this),this._shell.apply(t);for(var l=0;l<this._holes.length;l++)n._holes[l].apply(t)}},n.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();var t=new Array(this._holes.length+1).fill(null);t[0]=this._shell;for(var n=0;n<this._holes.length;n++)t[n+1]=this._holes[n];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)},n.prototype.clone=function(){var n=t.prototype.clone.call(this);n._shell=this._shell.clone(),n._holes=new Array(this._holes.length).fill(null);for(var e=0;e<this._holes.length;e++)n._holes[e]=this._holes[e].clone();return n},n.prototype.getGeometryType=function(){return"Polygon"},n.prototype.copy=function(){for(var t=this._shell.copy(),e=new Array(this._holes.length).fill(null),r=0;r<e.length;r++)e[r]=this._holes[r].copy();return new n(t,e,this._factory)},n.prototype.getExteriorRing=function(){return this._shell},n.prototype.isEmpty=function(){return this._shell.isEmpty()},n.prototype.getInteriorRingN=function(t){return this._holes[t]},n.prototype.interfaces_=function(){return[vh]},n.prototype.getClass=function(){return n},e.serialVersionUID.get=function(){return-0x307ffefd8dc97200},Object.defineProperties(n,e),n}(pa),bh=function(t){function n(){t.apply(this,arguments)}t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n;var e={serialVersionUID:{configurable:!0}};return n.prototype.getSortIndex=function(){return pa.SORTINDEX_MULTIPOINT},n.prototype.isValid=function(){return!0},n.prototype.equalsExact=function(){if(2===arguments.length){var n=arguments[0],e=arguments[1];return!!this.isEquivalentClass(n)&&t.prototype.equalsExact.call(this,n,e)}return t.prototype.equalsExact.apply(this,arguments)},n.prototype.getCoordinate=function(){if(1===arguments.length){var n=arguments[0];return this._geometries[n].getCoordinate()}return t.prototype.getCoordinate.apply(this,arguments)},n.prototype.getBoundaryDimension=function(){return Qa.FALSE},n.prototype.getDimension=function(){return 0},n.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},n.prototype.getGeometryType=function(){return"MultiPoint"},n.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new n(t,this._factory)},n.prototype.interfaces_=function(){return[yh]},n.prototype.getClass=function(){return n},e.serialVersionUID.get=function(){return-0x6fb1ed4162e0fc00},Object.defineProperties(n,e),n}(eh),xh=function(t){function n(n,e){n instanceof Ss&&e instanceof kh&&(n=e.getCoordinateSequenceFactory().create(n)),t.call(this,n,e),this.validateConstruction()}t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n;var e={MINIMUM_VALID_SIZE:{configurable:!0},serialVersionUID:{configurable:!0}};return n.prototype.getSortIndex=function(){return pa.SORTINDEX_LINEARRING},n.prototype.getBoundaryDimension=function(){return Qa.FALSE},n.prototype.isClosed=function(){return!!this.isEmpty()||t.prototype.isClosed.call(this)},n.prototype.reverse=function(){var t=this._points.copy();return dh.reverse(t),this.getFactory().createLinearRing(t)},n.prototype.validateConstruction=function(){if(!this.isEmpty()&&!t.prototype.isClosed.call(this))throw new bs("Points of LinearRing do not form a closed linestring");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<n.MINIMUM_VALID_SIZE)throw new bs("Invalid number of points in LinearRing (found "+this.getCoordinateSequence().size()+" - must be 0 or >= 4)")},n.prototype.getGeometryType=function(){return"LinearRing"},n.prototype.copy=function(){return new n(this._points.copy(),this._factory)},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},e.MINIMUM_VALID_SIZE.get=function(){return 4},e.serialVersionUID.get=function(){return-0x3b229e262367a600},Object.defineProperties(n,e),n}(gh),wh=function(t){function n(){t.apply(this,arguments)}t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n;var e={serialVersionUID:{configurable:!0}};return n.prototype.getSortIndex=function(){return pa.SORTINDEX_MULTIPOLYGON},n.prototype.equalsExact=function(){if(2===arguments.length){var n=arguments[0],e=arguments[1];return!!this.isEquivalentClass(n)&&t.prototype.equalsExact.call(this,n,e)}return t.prototype.equalsExact.apply(this,arguments)},n.prototype.getBoundaryDimension=function(){return 1},n.prototype.getDimension=function(){return 2},n.prototype.reverse=function(){for(var t=this._geometries.length,n=new Array(t).fill(null),e=0;e<this._geometries.length;e++)n[e]=this._geometries[e].reverse();return this.getFactory().createMultiPolygon(n)},n.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();for(var t=new Ia,n=0;n<this._geometries.length;n++)for(var e=this._geometries[n].getBoundary(),r=0;r<e.getNumGeometries();r++)t.add(e.getGeometryN(r));var l=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(l))},n.prototype.getGeometryType=function(){return"MultiPolygon"},n.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new n(t,this._factory)},n.prototype.interfaces_=function(){return[vh]},n.prototype.getClass=function(){return n},e.serialVersionUID.get=function(){return-0x7a5aa1369171980},Object.defineProperties(n,e),n}(eh),Eh=function(t){this._factory=t||null,this._isUserDataCopied=!1},Ch={NoOpGeometryOperation:{configurable:!0},CoordinateOperation:{configurable:!0},CoordinateSequenceOperation:{configurable:!0}};Eh.prototype.setCopyUserData=function(t){this._isUserDataCopied=t},Eh.prototype.edit=function(t,n){if(null===t)return null;var e=this.editInternal(t,n);return this._isUserDataCopied&&e.setUserData(t.getUserData()),e},Eh.prototype.editInternal=function(t,n){return null===this._factory&&(this._factory=t.getFactory()),t instanceof eh?this.editGeometryCollection(t,n):t instanceof mh?this.editPolygon(t,n):t instanceof _h||t instanceof gh?n.edit(t,this._factory):(la.shouldNeverReachHere("Unsupported Geometry class: "+t.getClass().getName()),null)},Eh.prototype.editGeometryCollection=function(t,n){for(var e=n.edit(t,this._factory),r=new Ia,l=0;l<e.getNumGeometries();l++){var i=this.edit(e.getGeometryN(l),n);null===i||i.isEmpty()||r.add(i)}return e.getClass()===bh?this._factory.createMultiPoint(r.toArray([])):e.getClass()===rh?this._factory.createMultiLineString(r.toArray([])):e.getClass()===wh?this._factory.createMultiPolygon(r.toArray([])):this._factory.createGeometryCollection(r.toArray([]))},Eh.prototype.editPolygon=function(t,n){var e=n.edit(t,this._factory);if(null===e&&(e=this._factory.createPolygon(null)),e.isEmpty())return e;var r=this.edit(e.getExteriorRing(),n);if(null===r||r.isEmpty())return this._factory.createPolygon();for(var l=new Ia,i=0;i<e.getNumInteriorRing();i++){var o=this.edit(e.getInteriorRingN(i),n);null===o||o.isEmpty()||l.add(o)}return this._factory.createPolygon(r,l.toArray([]))},Eh.prototype.interfaces_=function(){return[]},Eh.prototype.getClass=function(){return Eh},Eh.GeometryEditorOperation=function(){},Ch.NoOpGeometryOperation.get=function(){return Oh},Ch.CoordinateOperation.get=function(){return Mh},Ch.CoordinateSequenceOperation.get=function(){return Sh},Object.defineProperties(Eh,Ch);var Oh=function(){};Oh.prototype.edit=function(t,n){return t},Oh.prototype.interfaces_=function(){return[Eh.GeometryEditorOperation]},Oh.prototype.getClass=function(){return Oh};var Mh=function(){};Mh.prototype.edit=function(t,n){var e=this.editCoordinates(t.getCoordinates(),t);return null===e?t:t instanceof xh?n.createLinearRing(e):t instanceof gh?n.createLineString(e):t instanceof _h?e.length>0?n.createPoint(e[0]):n.createPoint():t},Mh.prototype.interfaces_=function(){return[Eh.GeometryEditorOperation]},Mh.prototype.getClass=function(){return Mh};var Sh=function(){};Sh.prototype.edit=function(t,n){return t instanceof xh?n.createLinearRing(this.edit(t.getCoordinateSequence(),t)):t instanceof gh?n.createLineString(this.edit(t.getCoordinateSequence(),t)):t instanceof _h?n.createPoint(this.edit(t.getCoordinateSequence(),t)):t},Sh.prototype.interfaces_=function(){return[Eh.GeometryEditorOperation]},Sh.prototype.getClass=function(){return Sh};var Ih=function(){var t=this;if(this._dimension=3,this._coordinates=null,1===arguments.length){if(arguments[0]instanceof Array)this._coordinates=arguments[0],this._dimension=3;else if(Number.isInteger(arguments[0])){var n=arguments[0];this._coordinates=new Array(n).fill(null);for(var e=0;e<n;e++)t._coordinates[e]=new Ss}else if(Ls(arguments[0],qs)){var r=arguments[0];if(null===r)return this._coordinates=new Array(0).fill(null),null;this._dimension=r.getDimension(),this._coordinates=new Array(r.size()).fill(null);for(var l=0;l<this._coordinates.length;l++)t._coordinates[l]=r.getCoordinateCopy(l)}}else if(2===arguments.length)if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var i=arguments[0],o=arguments[1];this._coordinates=i,this._dimension=o,null===i&&(this._coordinates=new Array(0).fill(null))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var u=arguments[0],s=arguments[1];this._coordinates=new Array(u).fill(null),this._dimension=s;for(var a=0;a<u;a++)t._coordinates[a]=new Ss}},Ph={serialVersionUID:{configurable:!0}};Ih.prototype.setOrdinate=function(t,n,e){switch(n){case qs.X:this._coordinates[t].x=e;break;case qs.Y:this._coordinates[t].y=e;break;case qs.Z:this._coordinates[t].z=e;break;default:throw new bs("invalid ordinateIndex")}},Ih.prototype.size=function(){return this._coordinates.length},Ih.prototype.getOrdinate=function(t,n){switch(n){case qs.X:return this._coordinates[t].x;case qs.Y:return this._coordinates[t].y;case qs.Z:return this._coordinates[t].z}return xs.NaN},Ih.prototype.getCoordinate=function(){if(1===arguments.length){var t=arguments[0];return this._coordinates[t]}if(2===arguments.length){var n=arguments[0],e=arguments[1];e.x=this._coordinates[n].x,e.y=this._coordinates[n].y,e.z=this._coordinates[n].z}},Ih.prototype.getCoordinateCopy=function(t){return new Ss(this._coordinates[t])},Ih.prototype.getDimension=function(){return this._dimension},Ih.prototype.getX=function(t){return this._coordinates[t].x},Ih.prototype.clone=function(){for(var t=new Array(this.size()).fill(null),n=0;n<this._coordinates.length;n++)t[n]=this._coordinates[n].clone();return new Ih(t,this._dimension)},Ih.prototype.expandEnvelope=function(t){for(var n=0;n<this._coordinates.length;n++)t.expandToInclude(this._coordinates[n]);return t},Ih.prototype.copy=function(){for(var t=new Array(this.size()).fill(null),n=0;n<this._coordinates.length;n++)t[n]=this._coordinates[n].copy();return new Ih(t,this._dimension)},Ih.prototype.toString=function(){if(this._coordinates.length>0){var t=new Ds(17*this._coordinates.length);t.append("("),t.append(this._coordinates[0]);for(var n=1;n<this._coordinates.length;n++)t.append(", "),t.append(this._coordinates[n]);return t.append(")"),t.toString()}return"()"},Ih.prototype.getY=function(t){return this._coordinates[t].y},Ih.prototype.toCoordinateArray=function(){return this._coordinates},Ih.prototype.interfaces_=function(){return[qs,Ms]},Ih.prototype.getClass=function(){return Ih},Ph.serialVersionUID.get=function(){return-0xcb44a778db18e00},Object.defineProperties(Ih,Ph);var Rh=function(){},Th={serialVersionUID:{configurable:!0},instanceObject:{configurable:!0}};Rh.prototype.readResolve=function(){return Rh.instance()},Rh.prototype.create=function(){if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new Ih(t)}if(Ls(arguments[0],qs)){var n=arguments[0];return new Ih(n)}}else if(2===arguments.length){var e=arguments[0],r=arguments[1];return r>3&&(r=3),r<2?new Ih(e):new Ih(e,r)}},Rh.prototype.interfaces_=function(){return[Rs,Ms]},Rh.prototype.getClass=function(){return Rh},Rh.instance=function(){return Rh.instanceObject},Th.serialVersionUID.get=function(){return-0x38e49fa6cf6f2e00},Th.instanceObject.get=function(){return new Rh},Object.defineProperties(Rh,Th);var Nh=function(t){function n(){t.call(this),this.map_=new Map}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.get=function(t){return this.map_.get(t)||null},n.prototype.put=function(t,n){return this.map_.set(t,n),n},n.prototype.values=function(){for(var t=new Ia,n=this.map_.values(),e=n.next();!e.done;)t.add(e.value),e=n.next();return t},n.prototype.entrySet=function(){var t=new Ga;return this.map_.entries().forEach((function(n){return t.add(n)})),t},n.prototype.size=function(){return this.map_.size()},n}(ja),Lh=function t(){if(this._modelType=null,this._scale=null,0===arguments.length)this._modelType=t.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof jh){var n=arguments[0];this._modelType=n,n===t.FIXED&&this.setScale(1)}else if("number"==typeof arguments[0]){var e=arguments[0];this._modelType=t.FIXED,this.setScale(e)}else if(arguments[0]instanceof t){var r=arguments[0];this._modelType=r._modelType,this._scale=r._scale}},Ah={serialVersionUID:{configurable:!0},maximumPreciseValue:{configurable:!0}};Lh.prototype.equals=function(t){if(!(t instanceof Lh))return!1;var n=t;return this._modelType===n._modelType&&this._scale===n._scale},Lh.prototype.compareTo=function(t){var n=t,e=this.getMaximumSignificantDigits(),r=n.getMaximumSignificantDigits();return new ks(e).compareTo(new ks(r))},Lh.prototype.getScale=function(){return this._scale},Lh.prototype.isFloating=function(){return this._modelType===Lh.FLOATING||this._modelType===Lh.FLOATING_SINGLE},Lh.prototype.getType=function(){return this._modelType},Lh.prototype.toString=function(){var t="UNKNOWN";return this._modelType===Lh.FLOATING?t="Floating":this._modelType===Lh.FLOATING_SINGLE?t="Floating-Single":this._modelType===Lh.FIXED&&(t="Fixed (Scale="+this.getScale()+")"),t},Lh.prototype.makePrecise=function(){if("number"==typeof arguments[0]){var t=arguments[0];return xs.isNaN(t)||this._modelType===Lh.FLOATING_SINGLE?t:this._modelType===Lh.FIXED?Math.round(t*this._scale)/this._scale:t}if(arguments[0]instanceof Ss){var n=arguments[0];if(this._modelType===Lh.FLOATING)return null;n.x=this.makePrecise(n.x),n.y=this.makePrecise(n.y)}},Lh.prototype.getMaximumSignificantDigits=function(){var t=16;return this._modelType===Lh.FLOATING?t=16:this._modelType===Lh.FLOATING_SINGLE?t=6:this._modelType===Lh.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t},Lh.prototype.setScale=function(t){this._scale=Math.abs(t)},Lh.prototype.interfaces_=function(){return[Ms,Es]},Lh.prototype.getClass=function(){return Lh},Lh.mostPrecise=function(t,n){return t.compareTo(n)>=0?t:n},Ah.serialVersionUID.get=function(){return 0x6bee6404e9a25c00},Ah.maximumPreciseValue.get=function(){return 9007199254740992},Object.defineProperties(Lh,Ah);var jh=function t(n){this._name=n||null,t.nameToTypeMap.put(n,this)},Dh={serialVersionUID:{configurable:!0},nameToTypeMap:{configurable:!0}};jh.prototype.readResolve=function(){return jh.nameToTypeMap.get(this._name)},jh.prototype.toString=function(){return this._name},jh.prototype.interfaces_=function(){return[Ms]},jh.prototype.getClass=function(){return jh},Dh.serialVersionUID.get=function(){return-552860263173159e4},Dh.nameToTypeMap.get=function(){return new Nh},Object.defineProperties(jh,Dh),Lh.Type=jh,Lh.FIXED=new jh("FIXED"),Lh.FLOATING=new jh("FLOATING"),Lh.FLOATING_SINGLE=new jh("FLOATING SINGLE");var kh=function t(){this._precisionModel=new Lh,this._SRID=0,this._coordinateSequenceFactory=t.getDefaultCoordinateSequenceFactory(),0===arguments.length||(1===arguments.length?Ls(arguments[0],Rs)?this._coordinateSequenceFactory=arguments[0]:arguments[0]instanceof Lh&&(this._precisionModel=arguments[0]):2===arguments.length?(this._precisionModel=arguments[0],this._SRID=arguments[1]):3===arguments.length&&(this._precisionModel=arguments[0],this._SRID=arguments[1],this._coordinateSequenceFactory=arguments[2]))},Fh={serialVersionUID:{configurable:!0}};kh.prototype.toGeometry=function(t){return t.isNull()?this.createPoint(null):t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new Ss(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new Ss(t.getMinX(),t.getMinY()),new Ss(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new Ss(t.getMinX(),t.getMinY()),new Ss(t.getMinX(),t.getMaxY()),new Ss(t.getMaxX(),t.getMaxY()),new Ss(t.getMaxX(),t.getMinY()),new Ss(t.getMinX(),t.getMinY())]),null)},kh.prototype.createLineString=function(t){return t?t instanceof Array?new gh(this.getCoordinateSequenceFactory().create(t),this):Ls(t,qs)?new gh(t,this):void 0:new gh(this.getCoordinateSequenceFactory().create([]),this)},kh.prototype.createMultiLineString=function(){if(0===arguments.length)return new rh(null,this);if(1===arguments.length){var t=arguments[0];return new rh(t,this)}},kh.prototype.buildGeometry=function(t){for(var n=null,e=!1,r=!1,l=t.iterator();l.hasNext();){var i=l.next(),o=i.getClass();null===n&&(n=o),o!==n&&(e=!0),i.isGeometryCollectionOrDerived()&&(r=!0)}if(null===n)return this.createGeometryCollection();if(e||r)return this.createGeometryCollection(kh.toGeometryArray(t));var u=t.iterator().next();if(t.size()>1){if(u instanceof mh)return this.createMultiPolygon(kh.toPolygonArray(t));if(u instanceof gh)return this.createMultiLineString(kh.toLineStringArray(t));if(u instanceof _h)return this.createMultiPoint(kh.toPointArray(t));la.shouldNeverReachHere("Unhandled class: "+u.getClass().getName())}return u},kh.prototype.createMultiPointFromCoords=function(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)},kh.prototype.createPoint=function(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Ss){var t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(Ls(arguments[0],qs)){var n=arguments[0];return new _h(n,this)}}},kh.prototype.getCoordinateSequenceFactory=function(){return this._coordinateSequenceFactory},kh.prototype.createPolygon=function(){if(0===arguments.length)return new mh(null,null,this);if(1===arguments.length){if(Ls(arguments[0],qs)){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){var n=arguments[0];return this.createPolygon(this.createLinearRing(n))}if(arguments[0]instanceof xh){var e=arguments[0];return this.createPolygon(e,null)}}else if(2===arguments.length){var r=arguments[0],l=arguments[1];return new mh(r,l,this)}},kh.prototype.getSRID=function(){return this._SRID},kh.prototype.createGeometryCollection=function(){if(0===arguments.length)return new eh(null,this);if(1===arguments.length){var t=arguments[0];return new eh(t,this)}},kh.prototype.createGeometry=function(t){return new Eh(this).edit(t,{edit:function(){if(2===arguments.length){var t=arguments[0];return this._coordinateSequenceFactory.create(t)}}})},kh.prototype.getPrecisionModel=function(){return this._precisionModel},kh.prototype.createLinearRing=function(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(Ls(arguments[0],qs)){var n=arguments[0];return new xh(n,this)}}},kh.prototype.createMultiPolygon=function(){if(0===arguments.length)return new wh(null,this);if(1===arguments.length){var t=arguments[0];return new wh(t,this)}},kh.prototype.createMultiPoint=function(){var t=this;if(0===arguments.length)return new bh(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){var n=arguments[0];return new bh(n,this)}if(arguments[0]instanceof Array){var e=arguments[0];return this.createMultiPoint(null!==e?this.getCoordinateSequenceFactory().create(e):null)}if(Ls(arguments[0],qs)){var r=arguments[0];if(null===r)return this.createMultiPoint(new Array(0).fill(null));for(var l=new Array(r.size()).fill(null),i=0;i<r.size();i++){var o=t.getCoordinateSequenceFactory().create(1,r.getDimension());dh.copy(r,i,o,0,1),l[i]=t.createPoint(o)}return this.createMultiPoint(l)}}},kh.prototype.interfaces_=function(){return[Ms]},kh.prototype.getClass=function(){return kh},kh.toMultiPolygonArray=function(t){var n=new Array(t.size()).fill(null);return t.toArray(n)},kh.toGeometryArray=function(t){if(null===t)return null;var n=new Array(t.size()).fill(null);return t.toArray(n)},kh.getDefaultCoordinateSequenceFactory=function(){return Rh.instance()},kh.toMultiLineStringArray=function(t){var n=new Array(t.size()).fill(null);return t.toArray(n)},kh.toLineStringArray=function(t){var n=new Array(t.size()).fill(null);return t.toArray(n)},kh.toMultiPointArray=function(t){var n=new Array(t.size()).fill(null);return t.toArray(n)},kh.toLinearRingArray=function(t){var n=new Array(t.size()).fill(null);return t.toArray(n)},kh.toPointArray=function(t){var n=new Array(t.size()).fill(null);return t.toArray(n)},kh.toPolygonArray=function(t){var n=new Array(t.size()).fill(null);return t.toArray(n)},kh.createPointFromInternalCoord=function(t,n){return n.getPrecisionModel().makePrecise(t),n.getFactory().createPoint(t)},Fh.serialVersionUID.get=function(){return-0x5ea75f2051eeb400},Object.defineProperties(kh,Fh);var Gh=["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"],zh=function(t){this.geometryFactory=t||new kh};zh.prototype.read=function(t){var n,e=(n="string"==typeof t?JSON.parse(t):t).type;if(!Bh[e])throw new Error("Unknown GeoJSON type: "+n.type);return-1!==Gh.indexOf(e)?Bh[e].apply(this,[n.coordinates]):"GeometryCollection"===e?Bh[e].apply(this,[n.geometries]):Bh[e].apply(this,[n])},zh.prototype.write=function(t){var n=t.getGeometryType();if(!Uh[n])throw new Error("Geometry is not supported");return Uh[n].apply(this,[t])};var Bh={Feature:function(t){var n={};for(var e in t)n[e]=t[e];if(t.geometry){var r=t.geometry.type;if(!Bh[r])throw new Error("Unknown GeoJSON type: "+t.type);n.geometry=this.read(t.geometry)}return t.bbox&&(n.bbox=Bh.bbox.apply(this,[t.bbox])),n},FeatureCollection:function(t){var n={};if(t.features){n.features=[];for(var e=0;e<t.features.length;++e)n.features.push(this.read(t.features[e]))}return t.bbox&&(n.bbox=this.parse.bbox.apply(this,[t.bbox])),n},coordinates:function(t){for(var n=[],e=0;e<t.length;++e){var r=t[e];n.push(new Ss(r[0],r[1]))}return n},bbox:function(t){return this.geometryFactory.createLinearRing([new Ss(t[0],t[1]),new Ss(t[2],t[1]),new Ss(t[2],t[3]),new Ss(t[0],t[3]),new Ss(t[0],t[1])])},Point:function(t){var n=new Ss(t[0],t[1]);return this.geometryFactory.createPoint(n)},MultiPoint:function(t){for(var n=[],e=0;e<t.length;++e)n.push(Bh.Point.apply(this,[t[e]]));return this.geometryFactory.createMultiPoint(n)},LineString:function(t){var n=Bh.coordinates.apply(this,[t]);return this.geometryFactory.createLineString(n)},MultiLineString:function(t){for(var n=[],e=0;e<t.length;++e)n.push(Bh.LineString.apply(this,[t[e]]));return this.geometryFactory.createMultiLineString(n)},Polygon:function(t){for(var n=Bh.coordinates.apply(this,[t[0]]),e=this.geometryFactory.createLinearRing(n),r=[],l=1;l<t.length;++l){var i=t[l],o=Bh.coordinates.apply(this,[i]),u=this.geometryFactory.createLinearRing(o);r.push(u)}return this.geometryFactory.createPolygon(e,r)},MultiPolygon:function(t){for(var n=[],e=0;e<t.length;++e){var r=t[e];n.push(Bh.Polygon.apply(this,[r]))}return this.geometryFactory.createMultiPolygon(n)},GeometryCollection:function(t){for(var n=[],e=0;e<t.length;++e){var r=t[e];n.push(this.read(r))}return this.geometryFactory.createGeometryCollection(n)}},Uh={coordinate:function(t){return[t.x,t.y]},Point:function(t){return{type:"Point",coordinates:Uh.coordinate.apply(this,[t.getCoordinate()])}},MultiPoint:function(t){for(var n=[],e=0;e<t._geometries.length;++e){var r=t._geometries[e],l=Uh.Point.apply(this,[r]);n.push(l.coordinates)}return{type:"MultiPoint",coordinates:n}},LineString:function(t){for(var n=[],e=t.getCoordinates(),r=0;r<e.length;++r){var l=e[r];n.push(Uh.coordinate.apply(this,[l]))}return{type:"LineString",coordinates:n}},MultiLineString:function(t){for(var n=[],e=0;e<t._geometries.length;++e){var r=t._geometries[e],l=Uh.LineString.apply(this,[r]);n.push(l.coordinates)}return{type:"MultiLineString",coordinates:n}},Polygon:function(t){var n=[],e=Uh.LineString.apply(this,[t._shell]);n.push(e.coordinates);for(var r=0;r<t._holes.length;++r){var l=t._holes[r],i=Uh.LineString.apply(this,[l]);n.push(i.coordinates)}return{type:"Polygon",coordinates:n}},MultiPolygon:function(t){for(var n=[],e=0;e<t._geometries.length;++e){var r=t._geometries[e],l=Uh.Polygon.apply(this,[r]);n.push(l.coordinates)}return{type:"MultiPolygon",coordinates:n}},GeometryCollection:function(t){for(var n=[],e=0;e<t._geometries.length;++e){var r=t._geometries[e],l=r.getGeometryType();n.push(Uh[l].apply(this,[r]))}return{type:"GeometryCollection",geometries:n}}},qh=function(t){this.geometryFactory=t||new kh,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new zh(this.geometryFactory)};qh.prototype.read=function(t){var n=this.parser.read(t);return this.precisionModel.getType()===Lh.FIXED&&this.reducePrecision(n),n},qh.prototype.reducePrecision=function(t){var n,e;if(t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if(t.points)for(n=0,e=t.points.length;n<e;n++)this.precisionModel.makePrecise(t.points[n]);else if(t.geometries)for(n=0,e=t.geometries.length;n<e;n++)this.reducePrecision(t.geometries[n])};var Yh=function(){this.parser=new zh(this.geometryFactory)};Yh.prototype.write=function(t){return this.parser.write(t)};var Xh=function(){},Vh={ON:{configurable:!0},LEFT:{configurable:!0},RIGHT:{configurable:!0}};function Wh(t){this.message=t||""}function Zh(){this.array_=[]}Xh.prototype.interfaces_=function(){return[]},Xh.prototype.getClass=function(){return Xh},Xh.opposite=function(t){return t===Xh.LEFT?Xh.RIGHT:t===Xh.RIGHT?Xh.LEFT:t},Vh.ON.get=function(){return 0},Vh.LEFT.get=function(){return 1},Vh.RIGHT.get=function(){return 2},Object.defineProperties(Xh,Vh),Wh.prototype=new Error,Wh.prototype.name="EmptyStackException",Zh.prototype=new Ma,Zh.prototype.add=function(t){return this.array_.push(t),!0},Zh.prototype.get=function(t){if(t<0||t>=this.size())throw new Error;return this.array_[t]},Zh.prototype.push=function(t){return this.array_.push(t),t},Zh.prototype.pop=function(t){if(0===this.array_.length)throw new Wh;return this.array_.pop()},Zh.prototype.peek=function(){if(0===this.array_.length)throw new Wh;return this.array_[this.array_.length-1]},Zh.prototype.empty=function(){return 0===this.array_.length},Zh.prototype.isEmpty=function(){return this.empty()},Zh.prototype.search=function(t){return this.array_.indexOf(t)},Zh.prototype.size=function(){return this.array_.length},Zh.prototype.toArray=function(){for(var t=[],n=0,e=this.array_.length;n<e;n++)t.push(this.array_[n]);return t};var Hh=function(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null};Hh.prototype.getCoordinate=function(){return this._minCoord},Hh.prototype.getRightmostSide=function(t,n){var e=this.getRightmostSideOfSegment(t,n);return e<0&&(e=this.getRightmostSideOfSegment(t,n-1)),e<0&&(this._minCoord=null,this.checkForRightmostCoordinate(t)),e},Hh.prototype.findRightmostEdgeAtVertex=function(){var t=this._minDe.getEdge().getCoordinates();la.isTrue(this._minIndex>0&&this._minIndex<t.length,"rightmost point expected to be interior vertex of edge");var n=t[this._minIndex-1],e=t[this._minIndex+1],r=ha.computeOrientation(this._minCoord,e,n),l=!1;(n.y<this._minCoord.y&&e.y<this._minCoord.y&&r===ha.COUNTERCLOCKWISE||n.y>this._minCoord.y&&e.y>this._minCoord.y&&r===ha.CLOCKWISE)&&(l=!0),l&&(this._minIndex=this._minIndex-1)},Hh.prototype.getRightmostSideOfSegment=function(t,n){var e=t.getEdge().getCoordinates();if(n<0||n+1>=e.length)return-1;if(e[n].y===e[n+1].y)return-1;var r=Xh.LEFT;return e[n].y<e[n+1].y&&(r=Xh.RIGHT),r},Hh.prototype.getEdge=function(){return this._orientedDe},Hh.prototype.checkForRightmostCoordinate=function(t){for(var n=this,e=t.getEdge().getCoordinates(),r=0;r<e.length-1;r++)(null===n._minCoord||e[r].x>n._minCoord.x)&&(n._minDe=t,n._minIndex=r,n._minCoord=e[r])},Hh.prototype.findRightmostEdgeAtNode=function(){var t=this._minDe.getNode().getEdges();this._minDe=t.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)},Hh.prototype.findEdge=function(t){for(var n=t.iterator();n.hasNext();){var e=n.next();e.isForward()&&this.checkForRightmostCoordinate(e)}la.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),"inconsistency in rightmost processing"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe,this.getRightmostSide(this._minDe,this._minIndex)===Xh.LEFT&&(this._orientedDe=this._minDe.getSym())},Hh.prototype.interfaces_=function(){return[]},Hh.prototype.getClass=function(){return Hh};var Kh=function(t){function n(e,r){t.call(this,n.msgWithCoord(e,r)),this.pt=r?new Ss(r):null,this.name="TopologyException"}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.getCoordinate=function(){return this.pt},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n.msgWithCoord=function(t,n){return n?t:t+" [ "+n+" ]"},n}(ea),Jh=function(){this.array_=[]};Jh.prototype.addLast=function(t){this.array_.push(t)},Jh.prototype.removeFirst=function(){return this.array_.shift()},Jh.prototype.isEmpty=function(){return 0===this.array_.length};var Qh=function(){this._finder=null,this._dirEdgeList=new Ia,this._nodes=new Ia,this._rightMostCoord=null,this._env=null,this._finder=new Hh};Qh.prototype.clearVisitedEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();)t.next().setVisited(!1)},Qh.prototype.getRightmostCoordinate=function(){return this._rightMostCoord},Qh.prototype.computeNodeDepth=function(t){for(var n=null,e=t.getEdges().iterator();e.hasNext();){var r=e.next();if(r.isVisited()||r.getSym().isVisited()){n=r;break}}if(null===n)throw new Kh("unable to find edge to compute depths at "+t.getCoordinate());t.getEdges().computeDepths(n);for(var l=t.getEdges().iterator();l.hasNext();){var i=l.next();i.setVisited(!0),this.copySymDepths(i)}},Qh.prototype.computeDepth=function(t){this.clearVisitedEdges();var n=this._finder.getEdge();n.setEdgeDepths(Xh.RIGHT,t),this.copySymDepths(n),this.computeDepths(n)},Qh.prototype.create=function(t){this.addReachable(t),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()},Qh.prototype.findResultEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){var n=t.next();n.getDepth(Xh.RIGHT)>=1&&n.getDepth(Xh.LEFT)<=0&&!n.isInteriorAreaEdge()&&n.setInResult(!0)}},Qh.prototype.computeDepths=function(t){var n=new Ga,e=new Jh,r=t.getNode();for(e.addLast(r),n.add(r),t.setVisited(!0);!e.isEmpty();){var l=e.removeFirst();n.add(l),this.computeNodeDepth(l);for(var i=l.getEdges().iterator();i.hasNext();){var o=i.next().getSym();if(!o.isVisited()){var u=o.getNode();n.contains(u)||(e.addLast(u),n.add(u))}}}},Qh.prototype.compareTo=function(t){var n=t;return this._rightMostCoord.x<n._rightMostCoord.x?-1:this._rightMostCoord.x>n._rightMostCoord.x?1:0},Qh.prototype.getEnvelope=function(){if(null===this._env){for(var t=new Hs,n=this._dirEdgeList.iterator();n.hasNext();)for(var e=n.next().getEdge().getCoordinates(),r=0;r<e.length-1;r++)t.expandToInclude(e[r]);this._env=t}return this._env},Qh.prototype.addReachable=function(t){var n=new Zh;for(n.add(t);!n.empty();){var e=n.pop();this.add(e,n)}},Qh.prototype.copySymDepths=function(t){var n=t.getSym();n.setDepth(Xh.LEFT,t.getDepth(Xh.RIGHT)),n.setDepth(Xh.RIGHT,t.getDepth(Xh.LEFT))},Qh.prototype.add=function(t,n){t.setVisited(!0),this._nodes.add(t);for(var e=t.getEdges().iterator();e.hasNext();){var r=e.next();this._dirEdgeList.add(r);var l=r.getSym().getNode();l.isVisited()||n.push(l)}},Qh.prototype.getNodes=function(){return this._nodes},Qh.prototype.getDirectedEdges=function(){return this._dirEdgeList},Qh.prototype.interfaces_=function(){return[Es]},Qh.prototype.getClass=function(){return Qh};var $h=function t(){var n=this;if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){var e=arguments[0];this.init(e.length)}else if(Number.isInteger(arguments[0])){var r=arguments[0];this.init(1),this.location[Xh.ON]=r}else if(arguments[0]instanceof t){var l=arguments[0];if(this.init(l.location.length),null!==l)for(var i=0;i<this.location.length;i++)n.location[i]=l.location[i]}}else if(3===arguments.length){var o=arguments[0],u=arguments[1],s=arguments[2];this.init(3),this.location[Xh.ON]=o,this.location[Xh.LEFT]=u,this.location[Xh.RIGHT]=s}};$h.prototype.setAllLocations=function(t){for(var n=0;n<this.location.length;n++)this.location[n]=t},$h.prototype.isNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]!==Ts.NONE)return!1;return!0},$h.prototype.setAllLocationsIfNull=function(t){for(var n=0;n<this.location.length;n++)this.location[n]===Ts.NONE&&(this.location[n]=t)},$h.prototype.isLine=function(){return 1===this.location.length},$h.prototype.merge=function(t){if(t.location.length>this.location.length){var n=new Array(3).fill(null);n[Xh.ON]=this.location[Xh.ON],n[Xh.LEFT]=Ts.NONE,n[Xh.RIGHT]=Ts.NONE,this.location=n}for(var e=0;e<this.location.length;e++)this.location[e]===Ts.NONE&&e<t.location.length&&(this.location[e]=t.location[e])},$h.prototype.getLocations=function(){return this.location},$h.prototype.flip=function(){if(this.location.length<=1)return null;var t=this.location[Xh.LEFT];this.location[Xh.LEFT]=this.location[Xh.RIGHT],this.location[Xh.RIGHT]=t},$h.prototype.toString=function(){var t=new Ds;return this.location.length>1&&t.append(Ts.toLocationSymbol(this.location[Xh.LEFT])),t.append(Ts.toLocationSymbol(this.location[Xh.ON])),this.location.length>1&&t.append(Ts.toLocationSymbol(this.location[Xh.RIGHT])),t.toString()},$h.prototype.setLocations=function(t,n,e){this.location[Xh.ON]=t,this.location[Xh.LEFT]=n,this.location[Xh.RIGHT]=e},$h.prototype.get=function(t){return t<this.location.length?this.location[t]:Ts.NONE},$h.prototype.isArea=function(){return this.location.length>1},$h.prototype.isAnyNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]===Ts.NONE)return!0;return!1},$h.prototype.setLocation=function(){if(1===arguments.length){var t=arguments[0];this.setLocation(Xh.ON,t)}else if(2===arguments.length){var n=arguments[0],e=arguments[1];this.location[n]=e}},$h.prototype.init=function(t){this.location=new Array(t).fill(null),this.setAllLocations(Ts.NONE)},$h.prototype.isEqualOnSide=function(t,n){return this.location[n]===t.location[n]},$h.prototype.allPositionsEqual=function(t){for(var n=0;n<this.location.length;n++)if(this.location[n]!==t)return!1;return!0},$h.prototype.interfaces_=function(){return[]},$h.prototype.getClass=function(){return $h};var tc=function t(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){var n=arguments[0];this.elt[0]=new $h(n),this.elt[1]=new $h(n)}else if(arguments[0]instanceof t){var e=arguments[0];this.elt[0]=new $h(e.elt[0]),this.elt[1]=new $h(e.elt[1])}}else if(2===arguments.length){var r=arguments[0],l=arguments[1];this.elt[0]=new $h(Ts.NONE),this.elt[1]=new $h(Ts.NONE),this.elt[r].setLocation(l)}else if(3===arguments.length){var i=arguments[0],o=arguments[1],u=arguments[2];this.elt[0]=new $h(i,o,u),this.elt[1]=new $h(i,o,u)}else if(4===arguments.length){var s=arguments[0],a=arguments[1],h=arguments[2],c=arguments[3];this.elt[0]=new $h(Ts.NONE,Ts.NONE,Ts.NONE),this.elt[1]=new $h(Ts.NONE,Ts.NONE,Ts.NONE),this.elt[s].setLocations(a,h,c)}};tc.prototype.getGeometryCount=function(){var t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t},tc.prototype.setAllLocations=function(t,n){this.elt[t].setAllLocations(n)},tc.prototype.isNull=function(t){return this.elt[t].isNull()},tc.prototype.setAllLocationsIfNull=function(){if(1===arguments.length){var t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){var n=arguments[0],e=arguments[1];this.elt[n].setAllLocationsIfNull(e)}},tc.prototype.isLine=function(t){return this.elt[t].isLine()},tc.prototype.merge=function(t){for(var n=this,e=0;e<2;e++)null===n.elt[e]&&null!==t.elt[e]?n.elt[e]=new $h(t.elt[e]):n.elt[e].merge(t.elt[e])},tc.prototype.flip=function(){this.elt[0].flip(),this.elt[1].flip()},tc.prototype.getLocation=function(){if(1===arguments.length){var t=arguments[0];return this.elt[t].get(Xh.ON)}if(2===arguments.length){var n=arguments[0],e=arguments[1];return this.elt[n].get(e)}},tc.prototype.toString=function(){var t=new Ds;return null!==this.elt[0]&&(t.append("A:"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(" B:"),t.append(this.elt[1].toString())),t.toString()},tc.prototype.isArea=function(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){var t=arguments[0];return this.elt[t].isArea()}},tc.prototype.isAnyNull=function(t){return this.elt[t].isAnyNull()},tc.prototype.setLocation=function(){if(2===arguments.length){var t=arguments[0],n=arguments[1];this.elt[t].setLocation(Xh.ON,n)}else if(3===arguments.length){var e=arguments[0],r=arguments[1],l=arguments[2];this.elt[e].setLocation(r,l)}},tc.prototype.isEqualOnSide=function(t,n){return this.elt[0].isEqualOnSide(t.elt[0],n)&&this.elt[1].isEqualOnSide(t.elt[1],n)},tc.prototype.allPositionsEqual=function(t,n){return this.elt[t].allPositionsEqual(n)},tc.prototype.toLine=function(t){this.elt[t].isArea()&&(this.elt[t]=new $h(this.elt[t].location[0]))},tc.prototype.interfaces_=function(){return[]},tc.prototype.getClass=function(){return tc},tc.toLineLabel=function(t){for(var n=new tc(Ts.NONE),e=0;e<2;e++)n.setLocation(e,t.getLocation(e));return n};var nc=function(){this._startDe=null,this._maxNodeDegree=-1,this._edges=new Ia,this._pts=new Ia,this._label=new tc(Ts.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new Ia,this._geometryFactory=null;var t=arguments[0],n=arguments[1];this._geometryFactory=n,this.computePoints(t),this.computeRing()};nc.prototype.computeRing=function(){if(null!==this._ring)return null;for(var t=new Array(this._pts.size()).fill(null),n=0;n<this._pts.size();n++)t[n]=this._pts.get(n);this._ring=this._geometryFactory.createLinearRing(t),this._isHole=ha.isCCW(this._ring.getCoordinates())},nc.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},nc.prototype.computePoints=function(t){var n=this;this._startDe=t;var e=t,r=!0;do{if(null===e)throw new Kh("Found null DirectedEdge");if(e.getEdgeRing()===n)throw new Kh("Directed Edge visited twice during ring-building at "+e.getCoordinate());n._edges.add(e);var l=e.getLabel();la.isTrue(l.isArea()),n.mergeLabel(l),n.addPoints(e.getEdge(),e.isForward(),r),r=!1,n.setEdgeRing(e,n),e=n.getNext(e)}while(e!==this._startDe)},nc.prototype.getLinearRing=function(){return this._ring},nc.prototype.getCoordinate=function(t){return this._pts.get(t)},nc.prototype.computeMaxNodeDegree=function(){var t=this;this._maxNodeDegree=0;var n=this._startDe;do{var e=n.getNode().getEdges().getOutgoingDegree(t);e>t._maxNodeDegree&&(t._maxNodeDegree=e),n=t.getNext(n)}while(n!==this._startDe);this._maxNodeDegree*=2},nc.prototype.addPoints=function(t,n,e){var r=t.getCoordinates();if(n){var l=1;e&&(l=0);for(var i=l;i<r.length;i++)this._pts.add(r[i])}else{var o=r.length-2;e&&(o=r.length-1);for(var u=o;u>=0;u--)this._pts.add(r[u])}},nc.prototype.isHole=function(){return this._isHole},nc.prototype.setInResult=function(){var t=this._startDe;do{t.getEdge().setInResult(!0),t=t.getNext()}while(t!==this._startDe)},nc.prototype.containsPoint=function(t){var n=this.getLinearRing();if(!n.getEnvelopeInternal().contains(t))return!1;if(!ha.isPointInRing(t,n.getCoordinates()))return!1;for(var e=this._holes.iterator();e.hasNext();)if(e.next().containsPoint(t))return!1;return!0},nc.prototype.addHole=function(t){this._holes.add(t)},nc.prototype.isShell=function(){return null===this._shell},nc.prototype.getLabel=function(){return this._label},nc.prototype.getEdges=function(){return this._edges},nc.prototype.getMaxNodeDegree=function(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree},nc.prototype.getShell=function(){return this._shell},nc.prototype.mergeLabel=function(){if(1===arguments.length){var t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){var n=arguments[0],e=arguments[1],r=n.getLocation(e,Xh.RIGHT);if(r===Ts.NONE)return null;if(this._label.getLocation(e)===Ts.NONE)return this._label.setLocation(e,r),null}},nc.prototype.setShell=function(t){this._shell=t,null!==t&&t.addHole(this)},nc.prototype.toPolygon=function(t){for(var n=new Array(this._holes.size()).fill(null),e=0;e<this._holes.size();e++)n[e]=this._holes.get(e).getLinearRing();return t.createPolygon(this.getLinearRing(),n)},nc.prototype.interfaces_=function(){return[]},nc.prototype.getClass=function(){return nc};var ec=function(t){function n(){var n=arguments[0],e=arguments[1];t.call(this,n,e)}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.setEdgeRing=function(t,n){t.setMinEdgeRing(n)},n.prototype.getNext=function(t){return t.getNextMin()},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(nc),rc=function(t){function n(){var n=arguments[0],e=arguments[1];t.call(this,n,e)}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.buildMinimalRings=function(){var t=new Ia,n=this._startDe;do{if(null===n.getMinEdgeRing()){var e=new ec(n,this._geometryFactory);t.add(e)}n=n.getNext()}while(n!==this._startDe);return t},n.prototype.setEdgeRing=function(t,n){t.setEdgeRing(n)},n.prototype.linkDirectedEdgesForMinimalEdgeRings=function(){var t=this._startDe;do{t.getNode().getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this._startDe)},n.prototype.getNext=function(t){return t.getNext()},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(nc),lc=function(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._label=t}};lc.prototype.setVisited=function(t){this._isVisited=t},lc.prototype.setInResult=function(t){this._isInResult=t},lc.prototype.isCovered=function(){return this._isCovered},lc.prototype.isCoveredSet=function(){return this._isCoveredSet},lc.prototype.setLabel=function(t){this._label=t},lc.prototype.getLabel=function(){return this._label},lc.prototype.setCovered=function(t){this._isCovered=t,this._isCoveredSet=!0},lc.prototype.updateIM=function(t){la.isTrue(this._label.getGeometryCount()>=2,"found partial label"),this.computeIM(t)},lc.prototype.isInResult=function(){return this._isInResult},lc.prototype.isVisited=function(){return this._isVisited},lc.prototype.interfaces_=function(){return[]},lc.prototype.getClass=function(){return lc};var ic=function(t){function n(){t.call(this),this._coord=null,this._edges=null;var n=arguments[0],e=arguments[1];this._coord=n,this._edges=e,this._label=new tc(0,Ts.NONE)}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.isIncidentEdgeInResult=function(){for(var t=this.getEdges().getEdges().iterator();t.hasNext();)if(t.next().getEdge().isInResult())return!0;return!1},n.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},n.prototype.getCoordinate=function(){return this._coord},n.prototype.print=function(t){t.println("node "+this._coord+" lbl: "+this._label)},n.prototype.computeIM=function(t){},n.prototype.computeMergedLocation=function(t,n){var e=Ts.NONE;if(e=this._label.getLocation(n),!t.isNull(n)){var r=t.getLocation(n);e!==Ts.BOUNDARY&&(e=r)}return e},n.prototype.setLabel=function(){if(2!==arguments.length)return t.prototype.setLabel.apply(this,arguments);var n=arguments[0],e=arguments[1];null===this._label?this._label=new tc(n,e):this._label.setLocation(n,e)},n.prototype.getEdges=function(){return this._edges},n.prototype.mergeLabel=function(){var t=this;if(arguments[0]instanceof n){var e=arguments[0];this.mergeLabel(e._label)}else if(arguments[0]instanceof tc)for(var r=arguments[0],l=0;l<2;l++){var i=t.computeMergedLocation(r,l),o=t._label.getLocation(l);o===Ts.NONE&&t._label.setLocation(l,i)}},n.prototype.add=function(t){this._edges.insert(t),t.setNode(this)},n.prototype.setLabelBoundary=function(t){if(null===this._label)return null;var n=Ts.NONE;null!==this._label&&(n=this._label.getLocation(t));var e=null;switch(n){case Ts.BOUNDARY:e=Ts.INTERIOR;break;case Ts.INTERIOR:default:e=Ts.BOUNDARY}this._label.setLocation(t,e)},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(lc),oc=function(){this.nodeMap=new Va,this.nodeFact=null;var t=arguments[0];this.nodeFact=t};oc.prototype.find=function(t){return this.nodeMap.get(t)},oc.prototype.addNode=function(){if(arguments[0]instanceof Ss){var t=arguments[0],n=this.nodeMap.get(t);return null===n&&(n=this.nodeFact.createNode(t),this.nodeMap.put(t,n)),n}if(arguments[0]instanceof ic){var e=arguments[0],r=this.nodeMap.get(e.getCoordinate());return null===r?(this.nodeMap.put(e.getCoordinate(),e),e):(r.mergeLabel(e),r)}},oc.prototype.print=function(t){for(var n=this.iterator();n.hasNext();)n.next().print(t)},oc.prototype.iterator=function(){return this.nodeMap.values().iterator()},oc.prototype.values=function(){return this.nodeMap.values()},oc.prototype.getBoundaryNodes=function(t){for(var n=new Ia,e=this.iterator();e.hasNext();){var r=e.next();r.getLabel().getLocation(t)===Ts.BOUNDARY&&n.add(r)}return n},oc.prototype.add=function(t){var n=t.getCoordinate();this.addNode(n).add(t)},oc.prototype.interfaces_=function(){return[]},oc.prototype.getClass=function(){return oc};var uc=function(){},sc={NE:{configurable:!0},NW:{configurable:!0},SW:{configurable:!0},SE:{configurable:!0}};uc.prototype.interfaces_=function(){return[]},uc.prototype.getClass=function(){return uc},uc.isNorthern=function(t){return t===uc.NE||t===uc.NW},uc.isOpposite=function(t,n){return t!==n&&2==(t-n+4)%4},uc.commonHalfPlane=function(t,n){if(t===n)return t;if(2==(t-n+4)%4)return-1;var e=t<n?t:n;return 0===e&&3===(t>n?t:n)?3:e},uc.isInHalfPlane=function(t,n){return n===uc.SE?t===uc.SE||t===uc.SW:t===n||t===n+1},uc.quadrant=function(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var t=arguments[0],n=arguments[1];if(0===t&&0===n)throw new bs("Cannot compute the quadrant for point ( "+t+", "+n+" )");return t>=0?n>=0?uc.NE:uc.SE:n>=0?uc.NW:uc.SW}if(arguments[0]instanceof Ss&&arguments[1]instanceof Ss){var e=arguments[0],r=arguments[1];if(r.x===e.x&&r.y===e.y)throw new bs("Cannot compute the quadrant for two identical points "+e);return r.x>=e.x?r.y>=e.y?uc.NE:uc.SE:r.y>=e.y?uc.NW:uc.SW}},sc.NE.get=function(){return 0},sc.NW.get=function(){return 1},sc.SW.get=function(){return 2},sc.SE.get=function(){return 3},Object.defineProperties(uc,sc);var ac=function(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){var t=arguments[0];this._edge=t}else if(3===arguments.length){var n=arguments[0],e=arguments[1],r=arguments[2],l=null;this._edge=n,this.init(e,r),this._label=l}else if(4===arguments.length){var i=arguments[0],o=arguments[1],u=arguments[2],s=arguments[3];this._edge=i,this.init(o,u),this._label=s}};ac.prototype.compareDirection=function(t){return this._dx===t._dx&&this._dy===t._dy?0:this._quadrant>t._quadrant?1:this._quadrant<t._quadrant?-1:ha.computeOrientation(t._p0,t._p1,this._p1)},ac.prototype.getDy=function(){return this._dy},ac.prototype.getCoordinate=function(){return this._p0},ac.prototype.setNode=function(t){this._node=t},ac.prototype.print=function(t){var n=Math.atan2(this._dy,this._dx),e=this.getClass().getName(),r=e.lastIndexOf("."),l=e.substring(r+1);t.print("  "+l+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+n+"   "+this._label)},ac.prototype.compareTo=function(t){var n=t;return this.compareDirection(n)},ac.prototype.getDirectedCoordinate=function(){return this._p1},ac.prototype.getDx=function(){return this._dx},ac.prototype.getLabel=function(){return this._label},ac.prototype.getEdge=function(){return this._edge},ac.prototype.getQuadrant=function(){return this._quadrant},ac.prototype.getNode=function(){return this._node},ac.prototype.toString=function(){var t=Math.atan2(this._dy,this._dx),n=this.getClass().getName(),e=n.lastIndexOf(".");return"  "+n.substring(e+1)+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+t+"   "+this._label},ac.prototype.computeLabel=function(t){},ac.prototype.init=function(t,n){this._p0=t,this._p1=n,this._dx=n.x-t.x,this._dy=n.y-t.y,this._quadrant=uc.quadrant(this._dx,this._dy),la.isTrue(!(0===this._dx&&0===this._dy),"EdgeEnd with identical endpoints found")},ac.prototype.interfaces_=function(){return[Es]},ac.prototype.getClass=function(){return ac};var hc=function(t){function n(){var n=arguments[0],e=arguments[1];if(t.call(this,n),this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999],this._isForward=e,e)this.init(n.getCoordinate(0),n.getCoordinate(1));else{var r=n.getNumPoints()-1;this.init(n.getCoordinate(r),n.getCoordinate(r-1))}this.computeDirectedLabel()}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.getNextMin=function(){return this._nextMin},n.prototype.getDepth=function(t){return this._depth[t]},n.prototype.setVisited=function(t){this._isVisited=t},n.prototype.computeDirectedLabel=function(){this._label=new tc(this._edge.getLabel()),this._isForward||this._label.flip()},n.prototype.getNext=function(){return this._next},n.prototype.setDepth=function(t,n){if(-999!==this._depth[t]&&this._depth[t]!==n)throw new Kh("assigned depths do not match",this.getCoordinate());this._depth[t]=n},n.prototype.isInteriorAreaEdge=function(){for(var t=this,n=!0,e=0;e<2;e++)t._label.isArea(e)&&t._label.getLocation(e,Xh.LEFT)===Ts.INTERIOR&&t._label.getLocation(e,Xh.RIGHT)===Ts.INTERIOR||(n=!1);return n},n.prototype.setNextMin=function(t){this._nextMin=t},n.prototype.print=function(n){t.prototype.print.call(this,n),n.print(" "+this._depth[Xh.LEFT]+"/"+this._depth[Xh.RIGHT]),n.print(" ("+this.getDepthDelta()+")"),this._isInResult&&n.print(" inResult")},n.prototype.setMinEdgeRing=function(t){this._minEdgeRing=t},n.prototype.isLineEdge=function(){var t=this._label.isLine(0)||this._label.isLine(1),n=!this._label.isArea(0)||this._label.allPositionsEqual(0,Ts.EXTERIOR),e=!this._label.isArea(1)||this._label.allPositionsEqual(1,Ts.EXTERIOR);return t&&n&&e},n.prototype.setEdgeRing=function(t){this._edgeRing=t},n.prototype.getMinEdgeRing=function(){return this._minEdgeRing},n.prototype.getDepthDelta=function(){var t=this._edge.getDepthDelta();return this._isForward||(t=-t),t},n.prototype.setInResult=function(t){this._isInResult=t},n.prototype.getSym=function(){return this._sym},n.prototype.isForward=function(){return this._isForward},n.prototype.getEdge=function(){return this._edge},n.prototype.printEdge=function(t){this.print(t),t.print(" "),this._isForward?this._edge.print(t):this._edge.printReverse(t)},n.prototype.setSym=function(t){this._sym=t},n.prototype.setVisitedEdge=function(t){this.setVisited(t),this._sym.setVisited(t)},n.prototype.setEdgeDepths=function(t,n){var e=this.getEdge().getDepthDelta();this._isForward||(e=-e);var r=1;t===Xh.LEFT&&(r=-1);var l=Xh.opposite(t),i=n+e*r;this.setDepth(t,n),this.setDepth(l,i)},n.prototype.getEdgeRing=function(){return this._edgeRing},n.prototype.isInResult=function(){return this._isInResult},n.prototype.setNext=function(t){this._next=t},n.prototype.isVisited=function(){return this._isVisited},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n.depthFactor=function(t,n){return t===Ts.EXTERIOR&&n===Ts.INTERIOR?1:t===Ts.INTERIOR&&n===Ts.EXTERIOR?-1:0},n}(ac),cc=function(){};cc.prototype.createNode=function(t){return new ic(t,null)},cc.prototype.interfaces_=function(){return[]},cc.prototype.getClass=function(){return cc};var fc=function(){if(this._edges=new Ia,this._nodes=null,this._edgeEndList=new Ia,0===arguments.length)this._nodes=new oc(new cc);else if(1===arguments.length){var t=arguments[0];this._nodes=new oc(t)}};fc.prototype.printEdges=function(t){t.println("Edges:");for(var n=0;n<this._edges.size();n++){t.println("edge "+n+":");var e=this._edges.get(n);e.print(t),e.eiList.print(t)}},fc.prototype.find=function(t){return this._nodes.find(t)},fc.prototype.addNode=function(){if(arguments[0]instanceof ic){var t=arguments[0];return this._nodes.addNode(t)}if(arguments[0]instanceof Ss){var n=arguments[0];return this._nodes.addNode(n)}},fc.prototype.getNodeIterator=function(){return this._nodes.iterator()},fc.prototype.linkResultDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();)t.next().getEdges().linkResultDirectedEdges()},fc.prototype.debugPrintln=function(t){Ws.out.println(t)},fc.prototype.isBoundaryNode=function(t,n){var e=this._nodes.find(n);if(null===e)return!1;var r=e.getLabel();return null!==r&&r.getLocation(t)===Ts.BOUNDARY},fc.prototype.linkAllDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();)t.next().getEdges().linkAllDirectedEdges()},fc.prototype.matchInSameDirection=function(t,n,e,r){return!!t.equals(e)&&ha.computeOrientation(t,n,r)===ha.COLLINEAR&&uc.quadrant(t,n)===uc.quadrant(e,r)},fc.prototype.getEdgeEnds=function(){return this._edgeEndList},fc.prototype.debugPrint=function(t){Ws.out.print(t)},fc.prototype.getEdgeIterator=function(){return this._edges.iterator()},fc.prototype.findEdgeInSameDirection=function(t,n){for(var e=this,r=0;r<this._edges.size();r++){var l=e._edges.get(r),i=l.getCoordinates();if(e.matchInSameDirection(t,n,i[0],i[1]))return l;if(e.matchInSameDirection(t,n,i[i.length-1],i[i.length-2]))return l}return null},fc.prototype.insertEdge=function(t){this._edges.add(t)},fc.prototype.findEdgeEnd=function(t){for(var n=this.getEdgeEnds().iterator();n.hasNext();){var e=n.next();if(e.getEdge()===t)return e}return null},fc.prototype.addEdges=function(t){for(var n=this,e=t.iterator();e.hasNext();){var r=e.next();n._edges.add(r);var l=new hc(r,!0),i=new hc(r,!1);l.setSym(i),i.setSym(l),n.add(l),n.add(i)}},fc.prototype.add=function(t){this._nodes.add(t),this._edgeEndList.add(t)},fc.prototype.getNodes=function(){return this._nodes.values()},fc.prototype.findEdge=function(t,n){for(var e=0;e<this._edges.size();e++){var r=this._edges.get(e),l=r.getCoordinates();if(t.equals(l[0])&&n.equals(l[1]))return r}return null},fc.prototype.interfaces_=function(){return[]},fc.prototype.getClass=function(){return fc},fc.linkResultDirectedEdges=function(t){for(var n=t.iterator();n.hasNext();)n.next().getEdges().linkResultDirectedEdges()};var pc=function(){this._geometryFactory=null,this._shellList=new Ia;var t=arguments[0];this._geometryFactory=t};pc.prototype.sortShellsAndHoles=function(t,n,e){for(var r=t.iterator();r.hasNext();){var l=r.next();l.isHole()?e.add(l):n.add(l)}},pc.prototype.computePolygons=function(t){for(var n=new Ia,e=t.iterator();e.hasNext();){var r=e.next().toPolygon(this._geometryFactory);n.add(r)}return n},pc.prototype.placeFreeHoles=function(t,n){for(var e=n.iterator();e.hasNext();){var r=e.next();if(null===r.getShell()){var l=this.findEdgeRingContaining(r,t);if(null===l)throw new Kh("unable to assign hole to a shell",r.getCoordinate(0));r.setShell(l)}}},pc.prototype.buildMinimalEdgeRings=function(t,n,e){for(var r=new Ia,l=t.iterator();l.hasNext();){var i=l.next();if(i.getMaxNodeDegree()>2){i.linkDirectedEdgesForMinimalEdgeRings();var o=i.buildMinimalRings(),u=this.findShell(o);null!==u?(this.placePolygonHoles(u,o),n.add(u)):e.addAll(o)}else r.add(i)}return r},pc.prototype.containsPoint=function(t){for(var n=this._shellList.iterator();n.hasNext();)if(n.next().containsPoint(t))return!0;return!1},pc.prototype.buildMaximalEdgeRings=function(t){for(var n=new Ia,e=t.iterator();e.hasNext();){var r=e.next();if(r.isInResult()&&r.getLabel().isArea()&&null===r.getEdgeRing()){var l=new rc(r,this._geometryFactory);n.add(l),l.setInResult()}}return n},pc.prototype.placePolygonHoles=function(t,n){for(var e=n.iterator();e.hasNext();){var r=e.next();r.isHole()&&r.setShell(t)}},pc.prototype.getPolygons=function(){return this.computePolygons(this._shellList)},pc.prototype.findEdgeRingContaining=function(t,n){for(var e=t.getLinearRing(),r=e.getEnvelopeInternal(),l=e.getCoordinateN(0),i=null,o=null,u=n.iterator();u.hasNext();){var s=u.next(),a=s.getLinearRing(),h=a.getEnvelopeInternal();null!==i&&(o=i.getLinearRing().getEnvelopeInternal());var c=!1;h.contains(r)&&ha.isPointInRing(l,a.getCoordinates())&&(c=!0),c&&(null===i||o.contains(h))&&(i=s)}return i},pc.prototype.findShell=function(t){for(var n=0,e=null,r=t.iterator();r.hasNext();){var l=r.next();l.isHole()||(e=l,n++)}return la.isTrue(n<=1,"found two shells in MinimalEdgeRing list"),e},pc.prototype.add=function(){if(1===arguments.length){var t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){var n=arguments[0],e=arguments[1];fc.linkResultDirectedEdges(e);var r=this.buildMaximalEdgeRings(n),l=new Ia,i=this.buildMinimalEdgeRings(r,this._shellList,l);this.sortShellsAndHoles(i,this._shellList,l),this.placeFreeHoles(this._shellList,l)}},pc.prototype.interfaces_=function(){return[]},pc.prototype.getClass=function(){return pc};var dc=function(){};dc.prototype.getBounds=function(){},dc.prototype.interfaces_=function(){return[]},dc.prototype.getClass=function(){return dc};var gc=function(){this._bounds=null,this._item=null;var t=arguments[0],n=arguments[1];this._bounds=t,this._item=n};gc.prototype.getItem=function(){return this._item},gc.prototype.getBounds=function(){return this._bounds},gc.prototype.interfaces_=function(){return[dc,Ms]},gc.prototype.getClass=function(){return gc};var yc=function(){this._size=null,this._items=null,this._size=0,this._items=new Ia,this._items.add(null)};yc.prototype.poll=function(){if(this.isEmpty())return null;var t=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),t},yc.prototype.size=function(){return this._size},yc.prototype.reorder=function(t){for(var n=this,e=null,r=this._items.get(t);2*t<=this._size&&((e=2*t)!==n._size&&n._items.get(e+1).compareTo(n._items.get(e))<0&&e++,n._items.get(e).compareTo(r)<0);t=e)n._items.set(t,n._items.get(e));this._items.set(t,r)},yc.prototype.clear=function(){this._size=0,this._items.clear()},yc.prototype.isEmpty=function(){return 0===this._size},yc.prototype.add=function(t){this._items.add(null),this._size+=1;var n=this._size;for(this._items.set(0,t);t.compareTo(this._items.get(Math.trunc(n/2)))<0;n/=2)this._items.set(n,this._items.get(Math.trunc(n/2)));this._items.set(n,t)},yc.prototype.interfaces_=function(){return[]},yc.prototype.getClass=function(){return yc};var _c=function(){};_c.prototype.visitItem=function(t){},_c.prototype.interfaces_=function(){return[]},_c.prototype.getClass=function(){return _c};var vc=function(){};vc.prototype.insert=function(t,n){},vc.prototype.remove=function(t,n){},vc.prototype.query=function(){},vc.prototype.interfaces_=function(){return[]},vc.prototype.getClass=function(){return vc};var mc=function(){if(this._childBoundables=new Ia,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._level=t}},bc={serialVersionUID:{configurable:!0}};mc.prototype.getLevel=function(){return this._level},mc.prototype.size=function(){return this._childBoundables.size()},mc.prototype.getChildBoundables=function(){return this._childBoundables},mc.prototype.addChildBoundable=function(t){la.isTrue(null===this._bounds),this._childBoundables.add(t)},mc.prototype.isEmpty=function(){return this._childBoundables.isEmpty()},mc.prototype.getBounds=function(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds},mc.prototype.interfaces_=function(){return[dc,Ms]},mc.prototype.getClass=function(){return mc},bc.serialVersionUID.get=function(){return 0x5a1e55ec41369800},Object.defineProperties(mc,bc);var xc=function(){};xc.reverseOrder=function(){return{compare:function(t,n){return n.compareTo(t)}}},xc.min=function(t){return xc.sort(t),t.get(0)},xc.sort=function(t,n){var e=t.toArray();n?Ja.sort(e,n):Ja.sort(e);for(var r=t.iterator(),l=0,i=e.length;l<i;l++)r.next(),r.set(e[l])},xc.singletonList=function(t){var n=new Ia;return n.add(t),n};var wc=function(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;var t=arguments[0],n=arguments[1],e=arguments[2];this._boundable1=t,this._boundable2=n,this._itemDistance=e,this._distance=this.distance()};wc.prototype.expandToQueue=function(t,n){var e=wc.isComposite(this._boundable1),r=wc.isComposite(this._boundable2);if(e&&r)return wc.area(this._boundable1)>wc.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,t,n),null):(this.expand(this._boundable2,this._boundable1,t,n),null);if(e)return this.expand(this._boundable1,this._boundable2,t,n),null;if(r)return this.expand(this._boundable2,this._boundable1,t,n),null;throw new bs("neither boundable is composite")},wc.prototype.isLeaves=function(){return!(wc.isComposite(this._boundable1)||wc.isComposite(this._boundable2))},wc.prototype.compareTo=function(t){var n=t;return this._distance<n._distance?-1:this._distance>n._distance?1:0},wc.prototype.expand=function(t,n,e,r){for(var l=t.getChildBoundables().iterator();l.hasNext();){var i=l.next(),o=new wc(i,n,this._itemDistance);o.getDistance()<r&&e.add(o)}},wc.prototype.getBoundable=function(t){return 0===t?this._boundable1:this._boundable2},wc.prototype.getDistance=function(){return this._distance},wc.prototype.distance=function(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())},wc.prototype.interfaces_=function(){return[Es]},wc.prototype.getClass=function(){return wc},wc.area=function(t){return t.getBounds().getArea()},wc.isComposite=function(t){return t instanceof mc};var Ec=function t(){if(this._root=null,this._built=!1,this._itemBoundables=new Ia,this._nodeCapacity=null,0===arguments.length){var n=t.DEFAULT_NODE_CAPACITY;this._nodeCapacity=n}else if(1===arguments.length){var e=arguments[0];la.isTrue(e>1,"Node capacity must be greater than 1"),this._nodeCapacity=e}},Cc={IntersectsOp:{configurable:!0},serialVersionUID:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};Ec.prototype.getNodeCapacity=function(){return this._nodeCapacity},Ec.prototype.lastNode=function(t){return t.get(t.size()-1)},Ec.prototype.size=function(){var t=this;if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){for(var n=arguments[0],e=0,r=n.getChildBoundables().iterator();r.hasNext();){var l=r.next();l instanceof mc?e+=t.size(l):l instanceof gc&&(e+=1)}return e}},Ec.prototype.removeItem=function(t,n){for(var e=null,r=t.getChildBoundables().iterator();r.hasNext();){var l=r.next();l instanceof gc&&l.getItem()===n&&(e=l)}return null!==e&&(t.getChildBoundables().remove(e),!0)},Ec.prototype.itemsTree=function(){var t=this;if(0===arguments.length){this.build();var n=this.itemsTree(this._root);return null===n?new Ia:n}if(1===arguments.length){for(var e=arguments[0],r=new Ia,l=e.getChildBoundables().iterator();l.hasNext();){var i=l.next();if(i instanceof mc){var o=t.itemsTree(i);null!==o&&r.add(o)}else i instanceof gc?r.add(i.getItem()):la.shouldNeverReachHere()}return r.size()<=0?null:r}},Ec.prototype.insert=function(t,n){la.isTrue(!this._built,"Cannot insert items into an STR packed R-tree after it has been built."),this._itemBoundables.add(new gc(t,n))},Ec.prototype.boundablesAtLevel=function(){var t=this;if(1===arguments.length){var n=arguments[0],e=new Ia;return this.boundablesAtLevel(n,this._root,e),e}if(3===arguments.length){var r=arguments[0],l=arguments[1],i=arguments[2];if(la.isTrue(r>-2),l.getLevel()===r)return i.add(l),null;for(var o=l.getChildBoundables().iterator();o.hasNext();){var u=o.next();u instanceof mc?t.boundablesAtLevel(r,u,i):(la.isTrue(u instanceof gc),-1===r&&i.add(u))}return null}},Ec.prototype.query=function(){var t=this;if(1===arguments.length){var n=arguments[0];this.build();var e=new Ia;return this.isEmpty()||this.getIntersectsOp().intersects(this._root.getBounds(),n)&&this.query(n,this._root,e),e}if(2===arguments.length){var r=arguments[0],l=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),r)&&this.query(r,this._root,l)}else if(3===arguments.length)if(Ls(arguments[2],_c)&&arguments[0]instanceof Object&&arguments[1]instanceof mc)for(var i=arguments[0],o=arguments[1],u=arguments[2],s=o.getChildBoundables(),a=0;a<s.size();a++){var h=s.get(a);t.getIntersectsOp().intersects(h.getBounds(),i)&&(h instanceof mc?t.query(i,h,u):h instanceof gc?u.visitItem(h.getItem()):la.shouldNeverReachHere())}else if(Ls(arguments[2],Ma)&&arguments[0]instanceof Object&&arguments[1]instanceof mc)for(var c=arguments[0],f=arguments[1],p=arguments[2],d=f.getChildBoundables(),g=0;g<d.size();g++){var y=d.get(g);t.getIntersectsOp().intersects(y.getBounds(),c)&&(y instanceof mc?t.query(c,y,p):y instanceof gc?p.add(y.getItem()):la.shouldNeverReachHere())}},Ec.prototype.build=function(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0},Ec.prototype.getRoot=function(){return this.build(),this._root},Ec.prototype.remove=function(){var t=this;if(2===arguments.length){var n=arguments[0],e=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),n)&&this.remove(n,this._root,e)}if(3===arguments.length){var r=arguments[0],l=arguments[1],i=arguments[2],o=this.removeItem(l,i);if(o)return!0;for(var u=null,s=l.getChildBoundables().iterator();s.hasNext();){var a=s.next();if(t.getIntersectsOp().intersects(a.getBounds(),r)&&a instanceof mc&&(o=t.remove(r,a,i))){u=a;break}}return null!==u&&u.getChildBoundables().isEmpty()&&l.getChildBoundables().remove(u),o}},Ec.prototype.createHigherLevels=function(t,n){la.isTrue(!t.isEmpty());var e=this.createParentBoundables(t,n+1);return 1===e.size()?e.get(0):this.createHigherLevels(e,n+1)},Ec.prototype.depth=function(){var t=this;if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){for(var n=arguments[0],e=0,r=n.getChildBoundables().iterator();r.hasNext();){var l=r.next();if(l instanceof mc){var i=t.depth(l);i>e&&(e=i)}}return e+1}},Ec.prototype.createParentBoundables=function(t,n){var e=this;la.isTrue(!t.isEmpty());var r=new Ia;r.add(this.createNode(n));var l=new Ia(t);xc.sort(l,this.getComparator());for(var i=l.iterator();i.hasNext();){var o=i.next();e.lastNode(r).getChildBoundables().size()===e.getNodeCapacity()&&r.add(e.createNode(n)),e.lastNode(r).addChildBoundable(o)}return r},Ec.prototype.isEmpty=function(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()},Ec.prototype.interfaces_=function(){return[Ms]},Ec.prototype.getClass=function(){return Ec},Ec.compareDoubles=function(t,n){return t>n?1:t<n?-1:0},Cc.IntersectsOp.get=function(){return Oc},Cc.serialVersionUID.get=function(){return-0x35ef64c82d4c5400},Cc.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(Ec,Cc);var Oc=function(){},Mc=function(){};Mc.prototype.distance=function(t,n){},Mc.prototype.interfaces_=function(){return[]},Mc.prototype.getClass=function(){return Mc};var Sc=function(t){function n(e){e=e||n.DEFAULT_NODE_CAPACITY,t.call(this,e)}t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n;var e={STRtreeNode:{configurable:!0},serialVersionUID:{configurable:!0},xComparator:{configurable:!0},yComparator:{configurable:!0},intersectsOp:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};return n.prototype.createParentBoundablesFromVerticalSlices=function(t,n){la.isTrue(t.length>0);for(var e=new Ia,r=0;r<t.length;r++)e.addAll(this.createParentBoundablesFromVerticalSlice(t[r],n));return e},n.prototype.createNode=function(t){return new Ic(t)},n.prototype.size=function(){return 0===arguments.length?t.prototype.size.call(this):t.prototype.size.apply(this,arguments)},n.prototype.insert=function(){if(2!==arguments.length)return t.prototype.insert.apply(this,arguments);var n=arguments[0],e=arguments[1];if(n.isNull())return null;t.prototype.insert.call(this,n,e)},n.prototype.getIntersectsOp=function(){return n.intersectsOp},n.prototype.verticalSlices=function(t,n){for(var e=Math.trunc(Math.ceil(t.size()/n)),r=new Array(n).fill(null),l=t.iterator(),i=0;i<n;i++){r[i]=new Ia;for(var o=0;l.hasNext()&&o<e;){var u=l.next();r[i].add(u),o++}}return r},n.prototype.query=function(){if(1===arguments.length){var n=arguments[0];return t.prototype.query.call(this,n)}if(2===arguments.length){var e=arguments[0],r=arguments[1];t.prototype.query.call(this,e,r)}else if(3===arguments.length)if(Ls(arguments[2],_c)&&arguments[0]instanceof Object&&arguments[1]instanceof mc){var l=arguments[0],i=arguments[1],o=arguments[2];t.prototype.query.call(this,l,i,o)}else if(Ls(arguments[2],Ma)&&arguments[0]instanceof Object&&arguments[1]instanceof mc){var u=arguments[0],s=arguments[1],a=arguments[2];t.prototype.query.call(this,u,s,a)}},n.prototype.getComparator=function(){return n.yComparator},n.prototype.createParentBoundablesFromVerticalSlice=function(n,e){return t.prototype.createParentBoundables.call(this,n,e)},n.prototype.remove=function(){if(2===arguments.length){var n=arguments[0],e=arguments[1];return t.prototype.remove.call(this,n,e)}return t.prototype.remove.apply(this,arguments)},n.prototype.depth=function(){return 0===arguments.length?t.prototype.depth.call(this):t.prototype.depth.apply(this,arguments)},n.prototype.createParentBoundables=function(t,e){la.isTrue(!t.isEmpty());var r=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),l=new Ia(t);xc.sort(l,n.xComparator);var i=this.verticalSlices(l,Math.trunc(Math.ceil(Math.sqrt(r))));return this.createParentBoundablesFromVerticalSlices(i,e)},n.prototype.nearestNeighbour=function(){if(1===arguments.length){if(Ls(arguments[0],Mc)){var t=arguments[0],e=new wc(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(e)}if(arguments[0]instanceof wc){var r=arguments[0];return this.nearestNeighbour(r,xs.POSITIVE_INFINITY)}}else if(2===arguments.length){if(arguments[0]instanceof n&&Ls(arguments[1],Mc)){var l=arguments[0],i=arguments[1],o=new wc(this.getRoot(),l.getRoot(),i);return this.nearestNeighbour(o)}if(arguments[0]instanceof wc&&"number"==typeof arguments[1]){var u=arguments[0],s=arguments[1],a=s,h=null,c=new yc;for(c.add(u);!c.isEmpty()&&a>0;){var f=c.poll(),p=f.getDistance();if(p>=a)break;f.isLeaves()?(a=p,h=f):f.expandToQueue(c,a)}return[h.getBoundable(0).getItem(),h.getBoundable(1).getItem()]}}else if(3===arguments.length){var d=arguments[0],g=arguments[1],y=arguments[2],_=new gc(d,g),v=new wc(this.getRoot(),_,y);return this.nearestNeighbour(v)[0]}},n.prototype.interfaces_=function(){return[vc,Ms]},n.prototype.getClass=function(){return n},n.centreX=function(t){return n.avg(t.getMinX(),t.getMaxX())},n.avg=function(t,n){return(t+n)/2},n.centreY=function(t){return n.avg(t.getMinY(),t.getMaxY())},e.STRtreeNode.get=function(){return Ic},e.serialVersionUID.get=function(){return 0x39920f7d5f261e0},e.xComparator.get=function(){return{interfaces_:function(){return[Os]},compare:function(e,r){return t.compareDoubles(n.centreX(e.getBounds()),n.centreX(r.getBounds()))}}},e.yComparator.get=function(){return{interfaces_:function(){return[Os]},compare:function(e,r){return t.compareDoubles(n.centreY(e.getBounds()),n.centreY(r.getBounds()))}}},e.intersectsOp.get=function(){return{interfaces_:function(){return[t.IntersectsOp]},intersects:function(t,n){return t.intersects(n)}}},e.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(n,e),n}(Ec),Ic=function(t){function n(){var n=arguments[0];t.call(this,n)}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.computeBounds=function(){for(var t=null,n=this.getChildBoundables().iterator();n.hasNext();){var e=n.next();null===t?t=new Hs(e.getBounds()):t.expandToInclude(e.getBounds())}return t},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(mc),Pc=function(){};Pc.prototype.interfaces_=function(){return[]},Pc.prototype.getClass=function(){return Pc},Pc.relativeSign=function(t,n){return t<n?-1:t>n?1:0},Pc.compare=function(t,n,e){if(n.equals2D(e))return 0;var r=Pc.relativeSign(n.x,e.x),l=Pc.relativeSign(n.y,e.y);switch(t){case 0:return Pc.compareValue(r,l);case 1:return Pc.compareValue(l,r);case 2:return Pc.compareValue(l,-r);case 3:return Pc.compareValue(-r,l);case 4:return Pc.compareValue(-r,-l);case 5:return Pc.compareValue(-l,-r);case 6:return Pc.compareValue(-l,r);case 7:return Pc.compareValue(r,-l)}return la.shouldNeverReachHere("invalid octant value"),0},Pc.compareValue=function(t,n){return t<0?-1:t>0?1:n<0?-1:n>0?1:0};var Rc=function(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;var t=arguments[0],n=arguments[1],e=arguments[2],r=arguments[3];this._segString=t,this.coord=new Ss(n),this.segmentIndex=e,this._segmentOctant=r,this._isInterior=!n.equals2D(t.getCoordinate(e))};Rc.prototype.getCoordinate=function(){return this.coord},Rc.prototype.print=function(t){t.print(this.coord),t.print(" seg # = "+this.segmentIndex)},Rc.prototype.compareTo=function(t){var n=t;return this.segmentIndex<n.segmentIndex?-1:this.segmentIndex>n.segmentIndex?1:this.coord.equals2D(n.coord)?0:Pc.compare(this._segmentOctant,this.coord,n.coord)},Rc.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===t},Rc.prototype.isInterior=function(){return this._isInterior},Rc.prototype.interfaces_=function(){return[Es]},Rc.prototype.getClass=function(){return Rc};var Tc=function(){this._nodeMap=new Va,this._edge=null;var t=arguments[0];this._edge=t};Tc.prototype.getSplitCoordinates=function(){var t=new Ra;this.addEndpoints();for(var n=this.iterator(),e=n.next();n.hasNext();){var r=n.next();this.addEdgeCoordinates(e,r,t),e=r}return t.toCoordinateArray()},Tc.prototype.addCollapsedNodes=function(){var t=new Ia;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(var n=t.iterator();n.hasNext();){var e=n.next().intValue();this.add(this._edge.getCoordinate(e),e)}},Tc.prototype.print=function(t){t.println("Intersections:");for(var n=this.iterator();n.hasNext();)n.next().print(t)},Tc.prototype.findCollapsesFromExistingVertices=function(t){for(var n=0;n<this._edge.size()-2;n++){var e=this._edge.getCoordinate(n),r=this._edge.getCoordinate(n+2);e.equals2D(r)&&t.add(new ks(n+1))}},Tc.prototype.addEdgeCoordinates=function(t,n,e){var r=this._edge.getCoordinate(n.segmentIndex),l=n.isInterior()||!n.coord.equals2D(r);e.add(new Ss(t.coord),!1);for(var i=t.segmentIndex+1;i<=n.segmentIndex;i++)e.add(this._edge.getCoordinate(i));l&&e.add(new Ss(n.coord))},Tc.prototype.iterator=function(){return this._nodeMap.values().iterator()},Tc.prototype.addSplitEdges=function(t){this.addEndpoints(),this.addCollapsedNodes();for(var n=this.iterator(),e=n.next();n.hasNext();){var r=n.next(),l=this.createSplitEdge(e,r);t.add(l),e=r}},Tc.prototype.findCollapseIndex=function(t,n,e){if(!t.coord.equals2D(n.coord))return!1;var r=n.segmentIndex-t.segmentIndex;return n.isInterior()||r--,1===r&&(e[0]=t.segmentIndex+1,!0)},Tc.prototype.findCollapsesFromInsertedNodes=function(t){for(var n=new Array(1).fill(null),e=this.iterator(),r=e.next();e.hasNext();){var l=e.next();this.findCollapseIndex(r,l,n)&&t.add(new ks(n[0])),r=l}},Tc.prototype.getEdge=function(){return this._edge},Tc.prototype.addEndpoints=function(){var t=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(t),t)},Tc.prototype.createSplitEdge=function(t,n){var e=n.segmentIndex-t.segmentIndex+2,r=this._edge.getCoordinate(n.segmentIndex),l=n.isInterior()||!n.coord.equals2D(r);l||e--;var i=new Array(e).fill(null),o=0;i[o++]=new Ss(t.coord);for(var u=t.segmentIndex+1;u<=n.segmentIndex;u++)i[o++]=this._edge.getCoordinate(u);return l&&(i[o]=new Ss(n.coord)),new jc(i,this._edge.getData())},Tc.prototype.add=function(t,n){var e=new Rc(this._edge,t,n,this._edge.getSegmentOctant(n)),r=this._nodeMap.get(e);return null!==r?(la.isTrue(r.coord.equals2D(t),"Found equal nodes with different coordinates"),r):(this._nodeMap.put(e,e),e)},Tc.prototype.checkSplitEdgesCorrectness=function(t){var n=this._edge.getCoordinates(),e=t.get(0).getCoordinate(0);if(!e.equals2D(n[0]))throw new ea("bad split edge start point at "+e);var r=t.get(t.size()-1).getCoordinates(),l=r[r.length-1];if(!l.equals2D(n[n.length-1]))throw new ea("bad split edge end point at "+l)},Tc.prototype.interfaces_=function(){return[]},Tc.prototype.getClass=function(){return Tc};var Nc=function(){};Nc.prototype.interfaces_=function(){return[]},Nc.prototype.getClass=function(){return Nc},Nc.octant=function(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){var t=arguments[0],n=arguments[1];if(0===t&&0===n)throw new bs("Cannot compute the octant for point ( "+t+", "+n+" )");var e=Math.abs(t),r=Math.abs(n);return t>=0?n>=0?e>=r?0:1:e>=r?7:6:n>=0?e>=r?3:2:e>=r?4:5}if(arguments[0]instanceof Ss&&arguments[1]instanceof Ss){var l=arguments[0],i=arguments[1],o=i.x-l.x,u=i.y-l.y;if(0===o&&0===u)throw new bs("Cannot compute the octant for two identical points "+l);return Nc.octant(o,u)}};var Lc=function(){};Lc.prototype.getCoordinates=function(){},Lc.prototype.size=function(){},Lc.prototype.getCoordinate=function(t){},Lc.prototype.isClosed=function(){},Lc.prototype.setData=function(t){},Lc.prototype.getData=function(){},Lc.prototype.interfaces_=function(){return[]},Lc.prototype.getClass=function(){return Lc};var Ac=function(){};Ac.prototype.addIntersection=function(t,n){},Ac.prototype.interfaces_=function(){return[Lc]},Ac.prototype.getClass=function(){return Ac};var jc=function(){this._nodeList=new Tc(this),this._pts=null,this._data=null;var t=arguments[0],n=arguments[1];this._pts=t,this._data=n};jc.prototype.getCoordinates=function(){return this._pts},jc.prototype.size=function(){return this._pts.length},jc.prototype.getCoordinate=function(t){return this._pts[t]},jc.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},jc.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))},jc.prototype.setData=function(t){this._data=t},jc.prototype.safeOctant=function(t,n){return t.equals2D(n)?0:Nc.octant(t,n)},jc.prototype.getData=function(){return this._data},jc.prototype.addIntersection=function(){if(2===arguments.length){var t=arguments[0],n=arguments[1];this.addIntersectionNode(t,n)}else if(4===arguments.length){var e=arguments[0],r=arguments[1],l=arguments[3],i=new Ss(e.getIntersection(l));this.addIntersection(i,r)}},jc.prototype.toString=function(){return na.toLineString(new Ih(this._pts))},jc.prototype.getNodeList=function(){return this._nodeList},jc.prototype.addIntersectionNode=function(t,n){var e=n,r=e+1;if(r<this._pts.length){var l=this._pts[r];t.equals2D(l)&&(e=r)}return this._nodeList.add(t,e)},jc.prototype.addIntersections=function(t,n,e){for(var r=0;r<t.getIntersectionNum();r++)this.addIntersection(t,n,e,r)},jc.prototype.interfaces_=function(){return[Ac]},jc.prototype.getClass=function(){return jc},jc.getNodedSubstrings=function(){if(1===arguments.length){var t=arguments[0],n=new Ia;return jc.getNodedSubstrings(t,n),n}if(2===arguments.length)for(var e=arguments[0],r=arguments[1],l=e.iterator();l.hasNext();){var i=l.next();i.getNodeList().addSplitEdges(r)}};var Dc=function(){if(this.p0=null,this.p1=null,0===arguments.length)this.p0=new Ss,this.p1=new Ss;else if(1===arguments.length){var t=arguments[0];this.p0=new Ss(t.p0),this.p1=new Ss(t.p1)}else if(2===arguments.length)this.p0=arguments[0],this.p1=arguments[1];else if(4===arguments.length){var n=arguments[0],e=arguments[1],r=arguments[2],l=arguments[3];this.p0=new Ss(n,e),this.p1=new Ss(r,l)}},kc={serialVersionUID:{configurable:!0}};Dc.prototype.minX=function(){return Math.min(this.p0.x,this.p1.x)},Dc.prototype.orientationIndex=function(){if(arguments[0]instanceof Dc){var t=arguments[0],n=ha.orientationIndex(this.p0,this.p1,t.p0),e=ha.orientationIndex(this.p0,this.p1,t.p1);return n>=0&&e>=0||n<=0&&e<=0?Math.max(n,e):0}if(arguments[0]instanceof Ss){var r=arguments[0];return ha.orientationIndex(this.p0,this.p1,r)}},Dc.prototype.toGeometry=function(t){return t.createLineString([this.p0,this.p1])},Dc.prototype.isVertical=function(){return this.p0.x===this.p1.x},Dc.prototype.equals=function(t){if(!(t instanceof Dc))return!1;var n=t;return this.p0.equals(n.p0)&&this.p1.equals(n.p1)},Dc.prototype.intersection=function(t){var n=new ua;return n.computeIntersection(this.p0,this.p1,t.p0,t.p1),n.hasIntersection()?n.getIntersection(0):null},Dc.prototype.project=function(){if(arguments[0]instanceof Ss){var t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new Ss(t);var n=this.projectionFactor(t),e=new Ss;return e.x=this.p0.x+n*(this.p1.x-this.p0.x),e.y=this.p0.y+n*(this.p1.y-this.p0.y),e}if(arguments[0]instanceof Dc){var r=arguments[0],l=this.projectionFactor(r.p0),i=this.projectionFactor(r.p1);if(l>=1&&i>=1)return null;if(l<=0&&i<=0)return null;var o=this.project(r.p0);l<0&&(o=this.p0),l>1&&(o=this.p1);var u=this.project(r.p1);return i<0&&(u=this.p0),i>1&&(u=this.p1),new Dc(o,u)}},Dc.prototype.normalize=function(){this.p1.compareTo(this.p0)<0&&this.reverse()},Dc.prototype.angle=function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)},Dc.prototype.getCoordinate=function(t){return 0===t?this.p0:this.p1},Dc.prototype.distancePerpendicular=function(t){return ha.distancePointLinePerpendicular(t,this.p0,this.p1)},Dc.prototype.minY=function(){return Math.min(this.p0.y,this.p1.y)},Dc.prototype.midPoint=function(){return Dc.midPoint(this.p0,this.p1)},Dc.prototype.projectionFactor=function(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;var n=this.p1.x-this.p0.x,e=this.p1.y-this.p0.y,r=n*n+e*e;return r<=0?xs.NaN:((t.x-this.p0.x)*n+(t.y-this.p0.y)*e)/r},Dc.prototype.closestPoints=function(t){var n=this.intersection(t);if(null!==n)return[n,n];var e=new Array(2).fill(null),r=xs.MAX_VALUE,l=null,i=this.closestPoint(t.p0);r=i.distance(t.p0),e[0]=i,e[1]=t.p0;var o=this.closestPoint(t.p1);(l=o.distance(t.p1))<r&&(r=l,e[0]=o,e[1]=t.p1);var u=t.closestPoint(this.p0);(l=u.distance(this.p0))<r&&(r=l,e[0]=this.p0,e[1]=u);var s=t.closestPoint(this.p1);return(l=s.distance(this.p1))<r&&(r=l,e[0]=this.p1,e[1]=s),e},Dc.prototype.closestPoint=function(t){var n=this.projectionFactor(t);return n>0&&n<1?this.project(t):this.p0.distance(t)<this.p1.distance(t)?this.p0:this.p1},Dc.prototype.maxX=function(){return Math.max(this.p0.x,this.p1.x)},Dc.prototype.getLength=function(){return this.p0.distance(this.p1)},Dc.prototype.compareTo=function(t){var n=t,e=this.p0.compareTo(n.p0);return 0!==e?e:this.p1.compareTo(n.p1)},Dc.prototype.reverse=function(){var t=this.p0;this.p0=this.p1,this.p1=t},Dc.prototype.equalsTopo=function(t){return this.p0.equals(t.p0)&&(this.p1.equals(t.p1)||this.p0.equals(t.p1))&&this.p1.equals(t.p0)},Dc.prototype.lineIntersection=function(t){try{return Zs.intersection(this.p0,this.p1,t.p0,t.p1)}catch(t){if(!(t instanceof Vs))throw t}return null},Dc.prototype.maxY=function(){return Math.max(this.p0.y,this.p1.y)},Dc.prototype.pointAlongOffset=function(t,n){var e=this.p0.x+t*(this.p1.x-this.p0.x),r=this.p0.y+t*(this.p1.y-this.p0.y),l=this.p1.x-this.p0.x,i=this.p1.y-this.p0.y,o=Math.sqrt(l*l+i*i),u=0,s=0;if(0!==n){if(o<=0)throw new Error("Cannot compute offset from zero-length line segment");u=n*l/o,s=n*i/o}return new Ss(e-s,r+u)},Dc.prototype.setCoordinates=function(){if(1===arguments.length){var t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){var n=arguments[0],e=arguments[1];this.p0.x=n.x,this.p0.y=n.y,this.p1.x=e.x,this.p1.y=e.y}},Dc.prototype.segmentFraction=function(t){var n=this.projectionFactor(t);return n<0?n=0:(n>1||xs.isNaN(n))&&(n=1),n},Dc.prototype.toString=function(){return"LINESTRING( "+this.p0.x+" "+this.p0.y+", "+this.p1.x+" "+this.p1.y+")"},Dc.prototype.isHorizontal=function(){return this.p0.y===this.p1.y},Dc.prototype.distance=function(){if(arguments[0]instanceof Dc){var t=arguments[0];return ha.distanceLineLine(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof Ss){var n=arguments[0];return ha.distancePointLine(n,this.p0,this.p1)}},Dc.prototype.pointAlong=function(t){var n=new Ss;return n.x=this.p0.x+t*(this.p1.x-this.p0.x),n.y=this.p0.y+t*(this.p1.y-this.p0.y),n},Dc.prototype.hashCode=function(){var t=xs.doubleToLongBits(this.p0.x);t^=31*xs.doubleToLongBits(this.p0.y);var n=Math.trunc(t)^Math.trunc(t>>32),e=xs.doubleToLongBits(this.p1.x);return e^=31*xs.doubleToLongBits(this.p1.y),n^Math.trunc(e)^Math.trunc(e>>32)},Dc.prototype.interfaces_=function(){return[Es,Ms]},Dc.prototype.getClass=function(){return Dc},Dc.midPoint=function(t,n){return new Ss((t.x+n.x)/2,(t.y+n.y)/2)},kc.serialVersionUID.get=function(){return 0x2d2172135f411c00},Object.defineProperties(Dc,kc);var Fc=function(){this.tempEnv1=new Hs,this.tempEnv2=new Hs,this._overlapSeg1=new Dc,this._overlapSeg2=new Dc};Fc.prototype.overlap=function(){if(2===arguments.length);else if(4===arguments.length){var t=arguments[0],n=arguments[1],e=arguments[2],r=arguments[3];t.getLineSegment(n,this._overlapSeg1),e.getLineSegment(r,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}},Fc.prototype.interfaces_=function(){return[]},Fc.prototype.getClass=function(){return Fc};var Gc=function(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;var t=arguments[0],n=arguments[1],e=arguments[2],r=arguments[3];this._pts=t,this._start=n,this._end=e,this._context=r};Gc.prototype.getLineSegment=function(t,n){n.p0=this._pts[t],n.p1=this._pts[t+1]},Gc.prototype.computeSelect=function(t,n,e,r){var l=this._pts[n],i=this._pts[e];if(r.tempEnv1.init(l,i),e-n==1)return r.select(this,n),null;if(!t.intersects(r.tempEnv1))return null;var o=Math.trunc((n+e)/2);n<o&&this.computeSelect(t,n,o,r),o<e&&this.computeSelect(t,o,e,r)},Gc.prototype.getCoordinates=function(){for(var t=new Array(this._end-this._start+1).fill(null),n=0,e=this._start;e<=this._end;e++)t[n++]=this._pts[e];return t},Gc.prototype.computeOverlaps=function(t,n){this.computeOverlapsInternal(this._start,this._end,t,t._start,t._end,n)},Gc.prototype.setId=function(t){this._id=t},Gc.prototype.select=function(t,n){this.computeSelect(t,this._start,this._end,n)},Gc.prototype.getEnvelope=function(){if(null===this._env){var t=this._pts[this._start],n=this._pts[this._end];this._env=new Hs(t,n)}return this._env},Gc.prototype.getEndIndex=function(){return this._end},Gc.prototype.getStartIndex=function(){return this._start},Gc.prototype.getContext=function(){return this._context},Gc.prototype.getId=function(){return this._id},Gc.prototype.computeOverlapsInternal=function(t,n,e,r,l,i){var o=this._pts[t],u=this._pts[n],s=e._pts[r],a=e._pts[l];if(n-t==1&&l-r==1)return i.overlap(this,t,e,r),null;if(i.tempEnv1.init(o,u),i.tempEnv2.init(s,a),!i.tempEnv1.intersects(i.tempEnv2))return null;var h=Math.trunc((t+n)/2),c=Math.trunc((r+l)/2);t<h&&(r<c&&this.computeOverlapsInternal(t,h,e,r,c,i),c<l&&this.computeOverlapsInternal(t,h,e,c,l,i)),h<n&&(r<c&&this.computeOverlapsInternal(h,n,e,r,c,i),c<l&&this.computeOverlapsInternal(h,n,e,c,l,i))},Gc.prototype.interfaces_=function(){return[]},Gc.prototype.getClass=function(){return Gc};var zc=function(){};zc.prototype.interfaces_=function(){return[]},zc.prototype.getClass=function(){return zc},zc.getChainStartIndices=function(t){var n=0,e=new Ia;e.add(new ks(n));do{var r=zc.findChainEnd(t,n);e.add(new ks(r)),n=r}while(n<t.length-1);return zc.toIntArray(e)},zc.findChainEnd=function(t,n){for(var e=n;e<t.length-1&&t[e].equals2D(t[e+1]);)e++;if(e>=t.length-1)return t.length-1;for(var r=uc.quadrant(t[e],t[e+1]),l=n+1;l<t.length&&(t[l-1].equals2D(t[l])||uc.quadrant(t[l-1],t[l])===r);)l++;return l-1},zc.getChains=function(){if(1===arguments.length){var t=arguments[0];return zc.getChains(t,null)}if(2===arguments.length){for(var n=arguments[0],e=arguments[1],r=new Ia,l=zc.getChainStartIndices(n),i=0;i<l.length-1;i++){var o=new Gc(n,l[i],l[i+1],e);r.add(o)}return r}},zc.toIntArray=function(t){for(var n=new Array(t.size()).fill(null),e=0;e<n.length;e++)n[e]=t.get(e).intValue();return n};var Bc=function(){};Bc.prototype.computeNodes=function(t){},Bc.prototype.getNodedSubstrings=function(){},Bc.prototype.interfaces_=function(){return[]},Bc.prototype.getClass=function(){return Bc};var Uc=function(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setSegmentIntersector(t)}};Uc.prototype.setSegmentIntersector=function(t){this._segInt=t},Uc.prototype.interfaces_=function(){return[Bc]},Uc.prototype.getClass=function(){return Uc};var qc=function(t){function n(n){n?t.call(this,n):t.call(this),this._monoChains=new Ia,this._index=new Sc,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0}t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n;var e={SegmentOverlapAction:{configurable:!0}};return n.prototype.getMonotoneChains=function(){return this._monoChains},n.prototype.getNodedSubstrings=function(){return jc.getNodedSubstrings(this._nodedSegStrings)},n.prototype.getIndex=function(){return this._index},n.prototype.add=function(t){for(var n=this,e=zc.getChains(t.getCoordinates(),t).iterator();e.hasNext();){var r=e.next();r.setId(n._idCounter++),n._index.insert(r.getEnvelope(),r),n._monoChains.add(r)}},n.prototype.computeNodes=function(t){this._nodedSegStrings=t;for(var n=t.iterator();n.hasNext();)this.add(n.next());this.intersectChains()},n.prototype.intersectChains=function(){for(var t=this,n=new Yc(this._segInt),e=this._monoChains.iterator();e.hasNext();)for(var r=e.next(),l=t._index.query(r.getEnvelope()).iterator();l.hasNext();){var i=l.next();if(i.getId()>r.getId()&&(r.computeOverlaps(i,n),t._nOverlaps++),t._segInt.isDone())return null}},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},e.SegmentOverlapAction.get=function(){return Yc},Object.defineProperties(n,e),n}(Uc),Yc=function(t){function n(){t.call(this),this._si=null;var n=arguments[0];this._si=n}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.overlap=function(){if(4!==arguments.length)return t.prototype.overlap.apply(this,arguments);var n=arguments[0],e=arguments[1],r=arguments[2],l=arguments[3],i=n.getContext(),o=r.getContext();this._si.processIntersections(i,e,o,l)},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(Fc),Xc=function t(){if(this._quadrantSegments=t.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=t.CAP_ROUND,this._joinStyle=t.JOIN_ROUND,this._mitreLimit=t.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=t.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){var n=arguments[0];this.setQuadrantSegments(n)}else if(2===arguments.length){var e=arguments[0],r=arguments[1];this.setQuadrantSegments(e),this.setEndCapStyle(r)}else if(4===arguments.length){var l=arguments[0],i=arguments[1],o=arguments[2],u=arguments[3];this.setQuadrantSegments(l),this.setEndCapStyle(i),this.setJoinStyle(o),this.setMitreLimit(u)}},Vc={CAP_ROUND:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},JOIN_ROUND:{configurable:!0},JOIN_MITRE:{configurable:!0},JOIN_BEVEL:{configurable:!0},DEFAULT_QUADRANT_SEGMENTS:{configurable:!0},DEFAULT_MITRE_LIMIT:{configurable:!0},DEFAULT_SIMPLIFY_FACTOR:{configurable:!0}};Xc.prototype.getEndCapStyle=function(){return this._endCapStyle},Xc.prototype.isSingleSided=function(){return this._isSingleSided},Xc.prototype.setQuadrantSegments=function(t){this._quadrantSegments=t,0===this._quadrantSegments&&(this._joinStyle=Xc.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=Xc.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),t<=0&&(this._quadrantSegments=1),this._joinStyle!==Xc.JOIN_ROUND&&(this._quadrantSegments=Xc.DEFAULT_QUADRANT_SEGMENTS)},Xc.prototype.getJoinStyle=function(){return this._joinStyle},Xc.prototype.setJoinStyle=function(t){this._joinStyle=t},Xc.prototype.setSimplifyFactor=function(t){this._simplifyFactor=t<0?0:t},Xc.prototype.getSimplifyFactor=function(){return this._simplifyFactor},Xc.prototype.getQuadrantSegments=function(){return this._quadrantSegments},Xc.prototype.setEndCapStyle=function(t){this._endCapStyle=t},Xc.prototype.getMitreLimit=function(){return this._mitreLimit},Xc.prototype.setMitreLimit=function(t){this._mitreLimit=t},Xc.prototype.setSingleSided=function(t){this._isSingleSided=t},Xc.prototype.interfaces_=function(){return[]},Xc.prototype.getClass=function(){return Xc},Xc.bufferDistanceError=function(t){var n=Math.PI/2/t;return 1-Math.cos(n/2)},Vc.CAP_ROUND.get=function(){return 1},Vc.CAP_FLAT.get=function(){return 2},Vc.CAP_SQUARE.get=function(){return 3},Vc.JOIN_ROUND.get=function(){return 1},Vc.JOIN_MITRE.get=function(){return 2},Vc.JOIN_BEVEL.get=function(){return 3},Vc.DEFAULT_QUADRANT_SEGMENTS.get=function(){return 8},Vc.DEFAULT_MITRE_LIMIT.get=function(){return 5},Vc.DEFAULT_SIMPLIFY_FACTOR.get=function(){return.01},Object.defineProperties(Xc,Vc);var Wc=function(t){this._distanceTol=null,this._isDeleted=null,this._angleOrientation=ha.COUNTERCLOCKWISE,this._inputLine=t||null},Zc={INIT:{configurable:!0},DELETE:{configurable:!0},KEEP:{configurable:!0},NUM_PTS_TO_CHECK:{configurable:!0}};Wc.prototype.isDeletable=function(t,n,e,r){var l=this._inputLine[t],i=this._inputLine[n],o=this._inputLine[e];return!!this.isConcave(l,i,o)&&!!this.isShallow(l,i,o,r)&&this.isShallowSampled(l,i,t,e,r)},Wc.prototype.deleteShallowConcavities=function(){for(var t=this,n=1,e=this.findNextNonDeletedIndex(n),r=this.findNextNonDeletedIndex(e),l=!1;r<this._inputLine.length;){var i=!1;t.isDeletable(n,e,r,t._distanceTol)&&(t._isDeleted[e]=Wc.DELETE,i=!0,l=!0),n=i?r:e,e=t.findNextNonDeletedIndex(n),r=t.findNextNonDeletedIndex(e)}return l},Wc.prototype.isShallowConcavity=function(t,n,e,r){return ha.computeOrientation(t,n,e)===this._angleOrientation&&ha.distancePointLine(n,t,e)<r},Wc.prototype.isShallowSampled=function(t,n,e,r,l){var i=Math.trunc((r-e)/Wc.NUM_PTS_TO_CHECK);i<=0&&(i=1);for(var o=e;o<r;o+=i)if(!this.isShallow(t,n,this._inputLine[o],l))return!1;return!0},Wc.prototype.isConcave=function(t,n,e){return ha.computeOrientation(t,n,e)===this._angleOrientation},Wc.prototype.simplify=function(t){this._distanceTol=Math.abs(t),t<0&&(this._angleOrientation=ha.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);var n=!1;do{n=this.deleteShallowConcavities()}while(n);return this.collapseLine()},Wc.prototype.findNextNonDeletedIndex=function(t){for(var n=t+1;n<this._inputLine.length&&this._isDeleted[n]===Wc.DELETE;)n++;return n},Wc.prototype.isShallow=function(t,n,e,r){return ha.distancePointLine(n,t,e)<r},Wc.prototype.collapseLine=function(){for(var t=new Ra,n=0;n<this._inputLine.length;n++)this._isDeleted[n]!==Wc.DELETE&&t.add(this._inputLine[n]);return t.toCoordinateArray()},Wc.prototype.interfaces_=function(){return[]},Wc.prototype.getClass=function(){return Wc},Wc.simplify=function(t,n){return new Wc(t).simplify(n)},Zc.INIT.get=function(){return 0},Zc.DELETE.get=function(){return 1},Zc.KEEP.get=function(){return 1},Zc.NUM_PTS_TO_CHECK.get=function(){return 10},Object.defineProperties(Wc,Zc);var Hc=function(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new Ia},Kc={COORDINATE_ARRAY_TYPE:{configurable:!0}};Hc.prototype.getCoordinates=function(){return this._ptList.toArray(Hc.COORDINATE_ARRAY_TYPE)},Hc.prototype.setPrecisionModel=function(t){this._precisionModel=t},Hc.prototype.addPt=function(t){var n=new Ss(t);if(this._precisionModel.makePrecise(n),this.isRedundant(n))return null;this._ptList.add(n)},Hc.prototype.revere=function(){},Hc.prototype.addPts=function(t,n){if(n)for(var e=0;e<t.length;e++)this.addPt(t[e]);else for(var r=t.length-1;r>=0;r--)this.addPt(t[r])},Hc.prototype.isRedundant=function(t){if(this._ptList.size()<1)return!1;var n=this._ptList.get(this._ptList.size()-1);return t.distance(n)<this._minimimVertexDistance},Hc.prototype.toString=function(){return(new kh).createLineString(this.getCoordinates()).toString()},Hc.prototype.closeRing=function(){if(this._ptList.size()<1)return null;var t=new Ss(this._ptList.get(0)),n=this._ptList.get(this._ptList.size()-1);if(t.equals(n))return null;this._ptList.add(t)},Hc.prototype.setMinimumVertexDistance=function(t){this._minimimVertexDistance=t},Hc.prototype.interfaces_=function(){return[]},Hc.prototype.getClass=function(){return Hc},Kc.COORDINATE_ARRAY_TYPE.get=function(){return new Array(0).fill(null)},Object.defineProperties(Hc,Kc);var Jc=function(){},Qc={PI_TIMES_2:{configurable:!0},PI_OVER_2:{configurable:!0},PI_OVER_4:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},CLOCKWISE:{configurable:!0},NONE:{configurable:!0}};Jc.prototype.interfaces_=function(){return[]},Jc.prototype.getClass=function(){return Jc},Jc.toDegrees=function(t){return 180*t/Math.PI},Jc.normalize=function(t){for(;t>Math.PI;)t-=Jc.PI_TIMES_2;for(;t<=-Math.PI;)t+=Jc.PI_TIMES_2;return t},Jc.angle=function(){if(1===arguments.length){var t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){var n=arguments[0],e=arguments[1],r=e.x-n.x,l=e.y-n.y;return Math.atan2(l,r)}},Jc.isAcute=function(t,n,e){var r=t.x-n.x,l=t.y-n.y;return r*(e.x-n.x)+l*(e.y-n.y)>0},Jc.isObtuse=function(t,n,e){var r=t.x-n.x,l=t.y-n.y;return r*(e.x-n.x)+l*(e.y-n.y)<0},Jc.interiorAngle=function(t,n,e){var r=Jc.angle(n,t),l=Jc.angle(n,e);return Math.abs(l-r)},Jc.normalizePositive=function(t){if(t<0){for(;t<0;)t+=Jc.PI_TIMES_2;t>=Jc.PI_TIMES_2&&(t=0)}else{for(;t>=Jc.PI_TIMES_2;)t-=Jc.PI_TIMES_2;t<0&&(t=0)}return t},Jc.angleBetween=function(t,n,e){var r=Jc.angle(n,t),l=Jc.angle(n,e);return Jc.diff(r,l)},Jc.diff=function(t,n){var e=null;return(e=t<n?n-t:t-n)>Math.PI&&(e=2*Math.PI-e),e},Jc.toRadians=function(t){return t*Math.PI/180},Jc.getTurn=function(t,n){var e=Math.sin(n-t);return e>0?Jc.COUNTERCLOCKWISE:e<0?Jc.CLOCKWISE:Jc.NONE},Jc.angleBetweenOriented=function(t,n,e){var r=Jc.angle(n,t),l=Jc.angle(n,e)-r;return l<=-Math.PI?l+Jc.PI_TIMES_2:l>Math.PI?l-Jc.PI_TIMES_2:l},Qc.PI_TIMES_2.get=function(){return 2*Math.PI},Qc.PI_OVER_2.get=function(){return Math.PI/2},Qc.PI_OVER_4.get=function(){return Math.PI/4},Qc.COUNTERCLOCKWISE.get=function(){return ha.COUNTERCLOCKWISE},Qc.CLOCKWISE.get=function(){return ha.CLOCKWISE},Qc.NONE.get=function(){return ha.COLLINEAR},Object.defineProperties(Jc,Qc);var $c=function t(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new Dc,this._seg1=new Dc,this._offset0=new Dc,this._offset1=new Dc,this._side=0,this._hasNarrowConcaveAngle=!1;var n=arguments[0],e=arguments[1],r=arguments[2];this._precisionModel=n,this._bufParams=e,this._li=new ua,this._filletAngleQuantum=Math.PI/2/e.getQuadrantSegments(),e.getQuadrantSegments()>=8&&e.getJoinStyle()===Xc.JOIN_ROUND&&(this._closingSegLengthFactor=t.MAX_CLOSING_SEG_LEN_FACTOR),this.init(r)},tf={OFFSET_SEGMENT_SEPARATION_FACTOR:{configurable:!0},INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},CURVE_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},MAX_CLOSING_SEG_LEN_FACTOR:{configurable:!0}};$c.prototype.addNextSegment=function(t,n){if(this._s0=this._s1,this._s1=this._s2,this._s2=t,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;var e=ha.computeOrientation(this._s0,this._s1,this._s2),r=e===ha.CLOCKWISE&&this._side===Xh.LEFT||e===ha.COUNTERCLOCKWISE&&this._side===Xh.RIGHT;0===e?this.addCollinear(n):r?this.addOutsideTurn(e,n):this.addInsideTurn(e,n)},$c.prototype.addLineEndCap=function(t,n){var e=new Dc(t,n),r=new Dc;this.computeOffsetSegment(e,Xh.LEFT,this._distance,r);var l=new Dc;this.computeOffsetSegment(e,Xh.RIGHT,this._distance,l);var i=n.x-t.x,o=n.y-t.y,u=Math.atan2(o,i);switch(this._bufParams.getEndCapStyle()){case Xc.CAP_ROUND:this._segList.addPt(r.p1),this.addFilletArc(n,u+Math.PI/2,u-Math.PI/2,ha.CLOCKWISE,this._distance),this._segList.addPt(l.p1);break;case Xc.CAP_FLAT:this._segList.addPt(r.p1),this._segList.addPt(l.p1);break;case Xc.CAP_SQUARE:var s=new Ss;s.x=Math.abs(this._distance)*Math.cos(u),s.y=Math.abs(this._distance)*Math.sin(u);var a=new Ss(r.p1.x+s.x,r.p1.y+s.y),h=new Ss(l.p1.x+s.x,l.p1.y+s.y);this._segList.addPt(a),this._segList.addPt(h)}},$c.prototype.getCoordinates=function(){return this._segList.getCoordinates()},$c.prototype.addMitreJoin=function(t,n,e,r){var l=!0,i=null;try{i=Zs.intersection(n.p0,n.p1,e.p0,e.p1),(r<=0?1:i.distance(t)/Math.abs(r))>this._bufParams.getMitreLimit()&&(l=!1)}catch(t){if(!(t instanceof Vs))throw t;i=new Ss(0,0),l=!1}l?this._segList.addPt(i):this.addLimitedMitreJoin(n,e,r,this._bufParams.getMitreLimit())},$c.prototype.addFilletCorner=function(t,n,e,r,l){var i=n.x-t.x,o=n.y-t.y,u=Math.atan2(o,i),s=e.x-t.x,a=e.y-t.y,h=Math.atan2(a,s);r===ha.CLOCKWISE?u<=h&&(u+=2*Math.PI):u>=h&&(u-=2*Math.PI),this._segList.addPt(n),this.addFilletArc(t,u,h,r,l),this._segList.addPt(e)},$c.prototype.addOutsideTurn=function(t,n){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*$c.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===Xc.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===Xc.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(n&&this._segList.addPt(this._offset0.p1),this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,t,this._distance),this._segList.addPt(this._offset1.p0))},$c.prototype.createSquare=function(t){this._segList.addPt(new Ss(t.x+this._distance,t.y+this._distance)),this._segList.addPt(new Ss(t.x+this._distance,t.y-this._distance)),this._segList.addPt(new Ss(t.x-this._distance,t.y-this._distance)),this._segList.addPt(new Ss(t.x-this._distance,t.y+this._distance)),this._segList.closeRing()},$c.prototype.addSegments=function(t,n){this._segList.addPts(t,n)},$c.prototype.addFirstSegment=function(){this._segList.addPt(this._offset1.p0)},$c.prototype.addLastSegment=function(){this._segList.addPt(this._offset1.p1)},$c.prototype.initSideSegments=function(t,n,e){this._s1=t,this._s2=n,this._side=e,this._seg1.setCoordinates(t,n),this.computeOffsetSegment(this._seg1,e,this._distance,this._offset1)},$c.prototype.addLimitedMitreJoin=function(t,n,e,r){var l=this._seg0.p1,i=Jc.angle(l,this._seg0.p0),o=Jc.angleBetweenOriented(this._seg0.p0,l,this._seg1.p1)/2,u=Jc.normalize(i+o),s=Jc.normalize(u+Math.PI),a=r*e,h=e-a*Math.abs(Math.sin(o)),c=l.x+a*Math.cos(s),f=l.y+a*Math.sin(s),p=new Ss(c,f),d=new Dc(l,p),g=d.pointAlongOffset(1,h),y=d.pointAlongOffset(1,-h);this._side===Xh.LEFT?(this._segList.addPt(g),this._segList.addPt(y)):(this._segList.addPt(y),this._segList.addPt(g))},$c.prototype.computeOffsetSegment=function(t,n,e,r){var l=n===Xh.LEFT?1:-1,i=t.p1.x-t.p0.x,o=t.p1.y-t.p0.y,u=Math.sqrt(i*i+o*o),s=l*e*i/u,a=l*e*o/u;r.p0.x=t.p0.x-a,r.p0.y=t.p0.y+s,r.p1.x=t.p1.x-a,r.p1.y=t.p1.y+s},$c.prototype.addFilletArc=function(t,n,e,r,l){var i=r===ha.CLOCKWISE?-1:1,o=Math.abs(n-e),u=Math.trunc(o/this._filletAngleQuantum+.5);if(u<1)return null;for(var s=o/u,a=0,h=new Ss;a<o;){var c=n+i*a;h.x=t.x+l*Math.cos(c),h.y=t.y+l*Math.sin(c),this._segList.addPt(h),a+=s}},$c.prototype.addInsideTurn=function(t,n){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*$c.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){var e=new Ss((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(e);var r=new Ss((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(r)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}},$c.prototype.createCircle=function(t){var n=new Ss(t.x+this._distance,t.y);this._segList.addPt(n),this.addFilletArc(t,0,2*Math.PI,-1,this._distance),this._segList.closeRing()},$c.prototype.addBevelJoin=function(t,n){this._segList.addPt(t.p1),this._segList.addPt(n.p0)},$c.prototype.init=function(t){this._distance=t,this._maxCurveSegmentError=t*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new Hc,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(t*$c.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)},$c.prototype.addCollinear=function(t){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2),this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===Xc.JOIN_BEVEL||this._bufParams.getJoinStyle()===Xc.JOIN_MITRE?(t&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,ha.CLOCKWISE,this._distance))},$c.prototype.closeRing=function(){this._segList.closeRing()},$c.prototype.hasNarrowConcaveAngle=function(){return this._hasNarrowConcaveAngle},$c.prototype.interfaces_=function(){return[]},$c.prototype.getClass=function(){return $c},tf.OFFSET_SEGMENT_SEPARATION_FACTOR.get=function(){return.001},tf.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return.001},tf.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return 1e-6},tf.MAX_CLOSING_SEG_LEN_FACTOR.get=function(){return 80},Object.defineProperties($c,tf);var nf=function(){this._distance=0,this._precisionModel=null,this._bufParams=null;var t=arguments[0],n=arguments[1];this._precisionModel=t,this._bufParams=n};nf.prototype.getOffsetCurve=function(t,n){if(this._distance=n,0===n)return null;var e=n<0,r=Math.abs(n),l=this.getSegGen(r);t.length<=1?this.computePointCurve(t[0],l):this.computeOffsetCurve(t,e,l);var i=l.getCoordinates();return e&&Ta.reverse(i),i},nf.prototype.computeSingleSidedBufferCurve=function(t,n,e){var r=this.simplifyTolerance(this._distance);if(n){e.addSegments(t,!0);var l=Wc.simplify(t,-r),i=l.length-1;e.initSideSegments(l[i],l[i-1],Xh.LEFT),e.addFirstSegment();for(var o=i-2;o>=0;o--)e.addNextSegment(l[o],!0)}else{e.addSegments(t,!1);var u=Wc.simplify(t,r),s=u.length-1;e.initSideSegments(u[0],u[1],Xh.LEFT),e.addFirstSegment();for(var a=2;a<=s;a++)e.addNextSegment(u[a],!0)}e.addLastSegment(),e.closeRing()},nf.prototype.computeRingBufferCurve=function(t,n,e){var r=this.simplifyTolerance(this._distance);n===Xh.RIGHT&&(r=-r);var l=Wc.simplify(t,r),i=l.length-1;e.initSideSegments(l[i-1],l[0],n);for(var o=1;o<=i;o++){var u=1!==o;e.addNextSegment(l[o],u)}e.closeRing()},nf.prototype.computeLineBufferCurve=function(t,n){var e=this.simplifyTolerance(this._distance),r=Wc.simplify(t,e),l=r.length-1;n.initSideSegments(r[0],r[1],Xh.LEFT);for(var i=2;i<=l;i++)n.addNextSegment(r[i],!0);n.addLastSegment(),n.addLineEndCap(r[l-1],r[l]);var o=Wc.simplify(t,-e),u=o.length-1;n.initSideSegments(o[u],o[u-1],Xh.LEFT);for(var s=u-2;s>=0;s--)n.addNextSegment(o[s],!0);n.addLastSegment(),n.addLineEndCap(o[1],o[0]),n.closeRing()},nf.prototype.computePointCurve=function(t,n){switch(this._bufParams.getEndCapStyle()){case Xc.CAP_ROUND:n.createCircle(t);break;case Xc.CAP_SQUARE:n.createSquare(t)}},nf.prototype.getLineCurve=function(t,n){if(this._distance=n,n<0&&!this._bufParams.isSingleSided())return null;if(0===n)return null;var e=Math.abs(n),r=this.getSegGen(e);if(t.length<=1)this.computePointCurve(t[0],r);else if(this._bufParams.isSingleSided()){var l=n<0;this.computeSingleSidedBufferCurve(t,l,r)}else this.computeLineBufferCurve(t,r);return r.getCoordinates()},nf.prototype.getBufferParameters=function(){return this._bufParams},nf.prototype.simplifyTolerance=function(t){return t*this._bufParams.getSimplifyFactor()},nf.prototype.getRingCurve=function(t,n,e){if(this._distance=e,t.length<=2)return this.getLineCurve(t,e);if(0===e)return nf.copyCoordinates(t);var r=this.getSegGen(e);return this.computeRingBufferCurve(t,n,r),r.getCoordinates()},nf.prototype.computeOffsetCurve=function(t,n,e){var r=this.simplifyTolerance(this._distance);if(n){var l=Wc.simplify(t,-r),i=l.length-1;e.initSideSegments(l[i],l[i-1],Xh.LEFT),e.addFirstSegment();for(var o=i-2;o>=0;o--)e.addNextSegment(l[o],!0)}else{var u=Wc.simplify(t,r),s=u.length-1;e.initSideSegments(u[0],u[1],Xh.LEFT),e.addFirstSegment();for(var a=2;a<=s;a++)e.addNextSegment(u[a],!0)}e.addLastSegment()},nf.prototype.getSegGen=function(t){return new $c(this._precisionModel,this._bufParams,t)},nf.prototype.interfaces_=function(){return[]},nf.prototype.getClass=function(){return nf},nf.copyCoordinates=function(t){for(var n=new Array(t.length).fill(null),e=0;e<n.length;e++)n[e]=new Ss(t[e]);return n};var ef=function(){this._subgraphs=null,this._seg=new Dc,this._cga=new ha;var t=arguments[0];this._subgraphs=t},rf={DepthSegment:{configurable:!0}};ef.prototype.findStabbedSegments=function(){var t=this;if(1===arguments.length){for(var n=arguments[0],e=new Ia,r=this._subgraphs.iterator();r.hasNext();){var l=r.next(),i=l.getEnvelope();n.y<i.getMinY()||n.y>i.getMaxY()||t.findStabbedSegments(n,l.getDirectedEdges(),e)}return e}if(3===arguments.length)if(Ls(arguments[2],Ma)&&arguments[0]instanceof Ss&&arguments[1]instanceof hc)for(var o=arguments[0],u=arguments[1],s=arguments[2],a=u.getEdge().getCoordinates(),h=0;h<a.length-1;h++){t._seg.p0=a[h],t._seg.p1=a[h+1],t._seg.p0.y>t._seg.p1.y&&t._seg.reverse();var c=Math.max(t._seg.p0.x,t._seg.p1.x);if(!(c<o.x||t._seg.isHorizontal()||o.y<t._seg.p0.y||o.y>t._seg.p1.y||ha.computeOrientation(t._seg.p0,t._seg.p1,o)===ha.RIGHT)){var f=u.getDepth(Xh.LEFT);t._seg.p0.equals(a[h])||(f=u.getDepth(Xh.RIGHT));var p=new lf(t._seg,f);s.add(p)}}else if(Ls(arguments[2],Ma)&&arguments[0]instanceof Ss&&Ls(arguments[1],Ma))for(var d=arguments[0],g=arguments[1],y=arguments[2],_=g.iterator();_.hasNext();){var v=_.next();v.isForward()&&t.findStabbedSegments(d,v,y)}},ef.prototype.getDepth=function(t){var n=this.findStabbedSegments(t);return 0===n.size()?0:xc.min(n)._leftDepth},ef.prototype.interfaces_=function(){return[]},ef.prototype.getClass=function(){return ef},rf.DepthSegment.get=function(){return lf},Object.defineProperties(ef,rf);var lf=function(){this._upwardSeg=null,this._leftDepth=null;var t=arguments[0],n=arguments[1];this._upwardSeg=new Dc(t),this._leftDepth=n};lf.prototype.compareTo=function(t){var n=t;if(this._upwardSeg.minX()>=n._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=n._upwardSeg.minX())return-1;var e=this._upwardSeg.orientationIndex(n._upwardSeg);return 0!==e||0!=(e=-1*n._upwardSeg.orientationIndex(this._upwardSeg))?e:this._upwardSeg.compareTo(n._upwardSeg)},lf.prototype.compareX=function(t,n){var e=t.p0.compareTo(n.p0);return 0!==e?e:t.p1.compareTo(n.p1)},lf.prototype.toString=function(){return this._upwardSeg.toString()},lf.prototype.interfaces_=function(){return[Es]},lf.prototype.getClass=function(){return lf};var of=function(t,n,e){this.p0=t||null,this.p1=n||null,this.p2=e||null};of.prototype.area=function(){return of.area(this.p0,this.p1,this.p2)},of.prototype.signedArea=function(){return of.signedArea(this.p0,this.p1,this.p2)},of.prototype.interpolateZ=function(t){if(null===t)throw new bs("Supplied point is null.");return of.interpolateZ(t,this.p0,this.p1,this.p2)},of.prototype.longestSideLength=function(){return of.longestSideLength(this.p0,this.p1,this.p2)},of.prototype.isAcute=function(){return of.isAcute(this.p0,this.p1,this.p2)},of.prototype.circumcentre=function(){return of.circumcentre(this.p0,this.p1,this.p2)},of.prototype.area3D=function(){return of.area3D(this.p0,this.p1,this.p2)},of.prototype.centroid=function(){return of.centroid(this.p0,this.p1,this.p2)},of.prototype.inCentre=function(){return of.inCentre(this.p0,this.p1,this.p2)},of.prototype.interfaces_=function(){return[]},of.prototype.getClass=function(){return of},of.area=function(t,n,e){return Math.abs(((e.x-t.x)*(n.y-t.y)-(n.x-t.x)*(e.y-t.y))/2)},of.signedArea=function(t,n,e){return((e.x-t.x)*(n.y-t.y)-(n.x-t.x)*(e.y-t.y))/2},of.det=function(t,n,e,r){return t*r-n*e},of.interpolateZ=function(t,n,e,r){var l=n.x,i=n.y,o=e.x-l,u=r.x-l,s=e.y-i,a=r.y-i,h=o*a-u*s,c=t.x-l,f=t.y-i,p=(a*c-u*f)/h,d=(-s*c+o*f)/h;return n.z+p*(e.z-n.z)+d*(r.z-n.z)},of.longestSideLength=function(t,n,e){var r=t.distance(n),l=n.distance(e),i=e.distance(t),o=r;return l>o&&(o=l),i>o&&(o=i),o},of.isAcute=function(t,n,e){return!!Jc.isAcute(t,n,e)&&!!Jc.isAcute(n,e,t)&&!!Jc.isAcute(e,t,n)},of.circumcentre=function(t,n,e){var r=e.x,l=e.y,i=t.x-r,o=t.y-l,u=n.x-r,s=n.y-l,a=2*of.det(i,o,u,s),h=of.det(o,i*i+o*o,s,u*u+s*s),c=of.det(i,i*i+o*o,u,u*u+s*s);return new Ss(r-h/a,l+c/a)},of.perpendicularBisector=function(t,n){var e=n.x-t.x,r=n.y-t.y,l=new Zs(t.x+e/2,t.y+r/2,1),i=new Zs(t.x-r+e/2,t.y+e+r/2,1);return new Zs(l,i)},of.angleBisector=function(t,n,e){var r=n.distance(t),l=r/(r+n.distance(e)),i=e.x-t.x,o=e.y-t.y;return new Ss(t.x+l*i,t.y+l*o)},of.area3D=function(t,n,e){var r=n.x-t.x,l=n.y-t.y,i=n.z-t.z,o=e.x-t.x,u=e.y-t.y,s=e.z-t.z,a=l*s-i*u,h=i*o-r*s,c=r*u-l*o,f=a*a+h*h+c*c;return Math.sqrt(f)/2},of.centroid=function(t,n,e){var r=(t.x+n.x+e.x)/3,l=(t.y+n.y+e.y)/3;return new Ss(r,l)},of.inCentre=function(t,n,e){var r=n.distance(e),l=t.distance(e),i=t.distance(n),o=r+l+i,u=(r*t.x+l*n.x+i*e.x)/o,s=(r*t.y+l*n.y+i*e.y)/o;return new Ss(u,s)};var uf=function(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new Ia;var t=arguments[0],n=arguments[1],e=arguments[2];this._inputGeom=t,this._distance=n,this._curveBuilder=e};uf.prototype.addPoint=function(t){if(this._distance<=0)return null;var n=t.getCoordinates(),e=this._curveBuilder.getLineCurve(n,this._distance);this.addCurve(e,Ts.EXTERIOR,Ts.INTERIOR)},uf.prototype.addPolygon=function(t){var n=this,e=this._distance,r=Xh.LEFT;this._distance<0&&(e=-this._distance,r=Xh.RIGHT);var l=t.getExteriorRing(),i=Ta.removeRepeatedPoints(l.getCoordinates());if(this._distance<0&&this.isErodedCompletely(l,this._distance))return null;if(this._distance<=0&&i.length<3)return null;this.addPolygonRing(i,e,r,Ts.EXTERIOR,Ts.INTERIOR);for(var o=0;o<t.getNumInteriorRing();o++){var u=t.getInteriorRingN(o),s=Ta.removeRepeatedPoints(u.getCoordinates());n._distance>0&&n.isErodedCompletely(u,-n._distance)||n.addPolygonRing(s,e,Xh.opposite(r),Ts.INTERIOR,Ts.EXTERIOR)}},uf.prototype.isTriangleErodedCompletely=function(t,n){var e=new of(t[0],t[1],t[2]),r=e.inCentre();return ha.distancePointLine(r,e.p0,e.p1)<Math.abs(n)},uf.prototype.addLineString=function(t){if(this._distance<=0&&!this._curveBuilder.getBufferParameters().isSingleSided())return null;var n=Ta.removeRepeatedPoints(t.getCoordinates()),e=this._curveBuilder.getLineCurve(n,this._distance);this.addCurve(e,Ts.EXTERIOR,Ts.INTERIOR)},uf.prototype.addCurve=function(t,n,e){if(null===t||t.length<2)return null;var r=new jc(t,new tc(0,Ts.BOUNDARY,n,e));this._curveList.add(r)},uf.prototype.getCurves=function(){return this.add(this._inputGeom),this._curveList},uf.prototype.addPolygonRing=function(t,n,e,r,l){if(0===n&&t.length<xh.MINIMUM_VALID_SIZE)return null;var i=r,o=l;t.length>=xh.MINIMUM_VALID_SIZE&&ha.isCCW(t)&&(i=l,o=r,e=Xh.opposite(e));var u=this._curveBuilder.getRingCurve(t,e,n);this.addCurve(u,i,o)},uf.prototype.add=function(t){if(t.isEmpty())return null;t instanceof mh?this.addPolygon(t):t instanceof gh?this.addLineString(t):t instanceof _h?this.addPoint(t):(t instanceof bh||t instanceof rh||t instanceof wh||t instanceof eh)&&this.addCollection(t)},uf.prototype.isErodedCompletely=function(t,n){var e=t.getCoordinates();if(e.length<4)return n<0;if(4===e.length)return this.isTriangleErodedCompletely(e,n);var r=t.getEnvelopeInternal(),l=Math.min(r.getHeight(),r.getWidth());return n<0&&2*Math.abs(n)>l},uf.prototype.addCollection=function(t){for(var n=0;n<t.getNumGeometries();n++){var e=t.getGeometryN(n);this.add(e)}},uf.prototype.interfaces_=function(){return[]},uf.prototype.getClass=function(){return uf};var sf=function(){};sf.prototype.locate=function(t){},sf.prototype.interfaces_=function(){return[]},sf.prototype.getClass=function(){return sf};var af=function(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;var t=arguments[0];this._parent=t,this._atStart=!0,this._index=0,this._max=t.getNumGeometries()};af.prototype.next=function(){if(this._atStart)return this._atStart=!1,af.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new Sa;var t=this._parent.getGeometryN(this._index++);return t instanceof eh?(this._subcollectionIterator=new af(t),this._subcollectionIterator.next()):t},af.prototype.remove=function(){throw new Error(this.getClass().getName())},af.prototype.hasNext=function(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)},af.prototype.interfaces_=function(){return[Oa]},af.prototype.getClass=function(){return af},af.isAtomic=function(t){return!(t instanceof eh)};var hf=function(){this._geom=null;var t=arguments[0];this._geom=t};hf.prototype.locate=function(t){return hf.locate(t,this._geom)},hf.prototype.interfaces_=function(){return[sf]},hf.prototype.getClass=function(){return hf},hf.isPointInRing=function(t,n){return!!n.getEnvelopeInternal().intersects(t)&&ha.isPointInRing(t,n.getCoordinates())},hf.containsPointInPolygon=function(t,n){if(n.isEmpty())return!1;var e=n.getExteriorRing();if(!hf.isPointInRing(t,e))return!1;for(var r=0;r<n.getNumInteriorRing();r++){var l=n.getInteriorRingN(r);if(hf.isPointInRing(t,l))return!1}return!0},hf.containsPoint=function(t,n){if(n instanceof mh)return hf.containsPointInPolygon(t,n);if(n instanceof eh)for(var e=new af(n);e.hasNext();){var r=e.next();if(r!==n&&hf.containsPoint(t,r))return!0}return!1},hf.locate=function(t,n){return n.isEmpty()?Ts.EXTERIOR:hf.containsPoint(t,n)?Ts.INTERIOR:Ts.EXTERIOR};var cf=function(){this._edgeMap=new Va,this._edgeList=null,this._ptInAreaLocation=[Ts.NONE,Ts.NONE]};cf.prototype.getNextCW=function(t){this.getEdges();var n=this._edgeList.indexOf(t),e=n-1;return 0===n&&(e=this._edgeList.size()-1),this._edgeList.get(e)},cf.prototype.propagateSideLabels=function(t){for(var n=Ts.NONE,e=this.iterator();e.hasNext();){var r=e.next().getLabel();r.isArea(t)&&r.getLocation(t,Xh.LEFT)!==Ts.NONE&&(n=r.getLocation(t,Xh.LEFT))}if(n===Ts.NONE)return null;for(var l=n,i=this.iterator();i.hasNext();){var o=i.next(),u=o.getLabel();if(u.getLocation(t,Xh.ON)===Ts.NONE&&u.setLocation(t,Xh.ON,l),u.isArea(t)){var s=u.getLocation(t,Xh.LEFT),a=u.getLocation(t,Xh.RIGHT);if(a!==Ts.NONE){if(a!==l)throw new Kh("side location conflict",o.getCoordinate());s===Ts.NONE&&la.shouldNeverReachHere("found single null side (at "+o.getCoordinate()+")"),l=s}else la.isTrue(u.getLocation(t,Xh.LEFT)===Ts.NONE,"found single null side"),u.setLocation(t,Xh.RIGHT,l),u.setLocation(t,Xh.LEFT,l)}}},cf.prototype.getCoordinate=function(){var t=this.iterator();return t.hasNext()?t.next().getCoordinate():null},cf.prototype.print=function(t){Ws.out.println("EdgeEndStar:   "+this.getCoordinate());for(var n=this.iterator();n.hasNext();)n.next().print(t)},cf.prototype.isAreaLabelsConsistent=function(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)},cf.prototype.checkAreaLabelsConsistent=function(t){var n=this.getEdges();if(n.size()<=0)return!0;var e=n.size()-1,r=n.get(e).getLabel().getLocation(t,Xh.LEFT);la.isTrue(r!==Ts.NONE,"Found unlabelled area edge");for(var l=r,i=this.iterator();i.hasNext();){var o=i.next().getLabel();la.isTrue(o.isArea(t),"Found non-area edge");var u=o.getLocation(t,Xh.LEFT),s=o.getLocation(t,Xh.RIGHT);if(u===s)return!1;if(s!==l)return!1;l=u}return!0},cf.prototype.findIndex=function(t){this.iterator();for(var n=0;n<this._edgeList.size();n++)if(this._edgeList.get(n)===t)return n;return-1},cf.prototype.iterator=function(){return this.getEdges().iterator()},cf.prototype.getEdges=function(){return null===this._edgeList&&(this._edgeList=new Ia(this._edgeMap.values())),this._edgeList},cf.prototype.getLocation=function(t,n,e){return this._ptInAreaLocation[t]===Ts.NONE&&(this._ptInAreaLocation[t]=hf.locate(n,e[t].getGeometry())),this._ptInAreaLocation[t]},cf.prototype.toString=function(){var t=new Ds;t.append("EdgeEndStar:   "+this.getCoordinate()),t.append("\n");for(var n=this.iterator();n.hasNext();){var e=n.next();t.append(e),t.append("\n")}return t.toString()},cf.prototype.computeEdgeEndLabels=function(t){for(var n=this.iterator();n.hasNext();)n.next().computeLabel(t)},cf.prototype.computeLabelling=function(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var n=[!1,!1],e=this.iterator();e.hasNext();)for(var r=e.next().getLabel(),l=0;l<2;l++)r.isLine(l)&&r.getLocation(l)===Ts.BOUNDARY&&(n[l]=!0);for(var i=this.iterator();i.hasNext();)for(var o=i.next(),u=o.getLabel(),s=0;s<2;s++)if(u.isAnyNull(s)){var a=Ts.NONE;if(n[s])a=Ts.EXTERIOR;else{var h=o.getCoordinate();a=this.getLocation(s,h,t)}u.setAllLocationsIfNull(s,a)}},cf.prototype.getDegree=function(){return this._edgeMap.size()},cf.prototype.insertEdgeEnd=function(t,n){this._edgeMap.put(t,n),this._edgeList=null},cf.prototype.interfaces_=function(){return[]},cf.prototype.getClass=function(){return cf};var ff=function(t){function n(){t.call(this),this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.linkResultDirectedEdges=function(){var t=this;this.getResultAreaEdges();for(var n=null,e=null,r=this._SCANNING_FOR_INCOMING,l=0;l<this._resultAreaEdgeList.size();l++){var i=t._resultAreaEdgeList.get(l),o=i.getSym();if(i.getLabel().isArea())switch(null===n&&i.isInResult()&&(n=i),r){case t._SCANNING_FOR_INCOMING:if(!o.isInResult())continue;e=o,r=t._LINKING_TO_OUTGOING;break;case t._LINKING_TO_OUTGOING:if(!i.isInResult())continue;e.setNext(i),r=t._SCANNING_FOR_INCOMING}}if(r===this._LINKING_TO_OUTGOING){if(null===n)throw new Kh("no outgoing dirEdge found",this.getCoordinate());la.isTrue(n.isInResult(),"unable to link last incoming dirEdge"),e.setNext(n)}},n.prototype.insert=function(t){var n=t;this.insertEdgeEnd(n,n)},n.prototype.getRightmostEdge=function(){var t=this.getEdges(),n=t.size();if(n<1)return null;var e=t.get(0);if(1===n)return e;var r=t.get(n-1),l=e.getQuadrant(),i=r.getQuadrant();return uc.isNorthern(l)&&uc.isNorthern(i)?e:uc.isNorthern(l)||uc.isNorthern(i)?0!==e.getDy()?e:0!==r.getDy()?r:(la.shouldNeverReachHere("found two horizontal edges incident on node"),null):r},n.prototype.print=function(t){Ws.out.println("DirectedEdgeStar: "+this.getCoordinate());for(var n=this.iterator();n.hasNext();){var e=n.next();t.print("out "),e.print(t),t.println(),t.print("in "),e.getSym().print(t),t.println()}},n.prototype.getResultAreaEdges=function(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new Ia;for(var t=this.iterator();t.hasNext();){var n=t.next();(n.isInResult()||n.getSym().isInResult())&&this._resultAreaEdgeList.add(n)}return this._resultAreaEdgeList},n.prototype.updateLabelling=function(t){for(var n=this.iterator();n.hasNext();){var e=n.next().getLabel();e.setAllLocationsIfNull(0,t.getLocation(0)),e.setAllLocationsIfNull(1,t.getLocation(1))}},n.prototype.linkAllDirectedEdges=function(){this.getEdges();for(var t=null,n=null,e=this._edgeList.size()-1;e>=0;e--){var r=this._edgeList.get(e),l=r.getSym();null===n&&(n=l),null!==t&&l.setNext(t),t=r}n.setNext(t)},n.prototype.computeDepths=function(){var t=this;if(1===arguments.length){var n=arguments[0],e=this.findIndex(n),r=n.getDepth(Xh.LEFT),l=n.getDepth(Xh.RIGHT),i=this.computeDepths(e+1,this._edgeList.size(),r),o=this.computeDepths(0,e,i);if(o!==l)throw new Kh("depth mismatch at "+n.getCoordinate())}else if(3===arguments.length){for(var u=arguments[0],s=arguments[1],a=arguments[2],h=a,c=u;c<s;c++){var f=t._edgeList.get(c);f.setEdgeDepths(Xh.RIGHT,h),h=f.getDepth(Xh.LEFT)}return h}},n.prototype.mergeSymLabels=function(){for(var t=this.iterator();t.hasNext();){var n=t.next();n.getLabel().merge(n.getSym().getLabel())}},n.prototype.linkMinimalDirectedEdges=function(t){for(var n=this,e=null,r=null,l=this._SCANNING_FOR_INCOMING,i=this._resultAreaEdgeList.size()-1;i>=0;i--){var o=n._resultAreaEdgeList.get(i),u=o.getSym();switch(null===e&&o.getEdgeRing()===t&&(e=o),l){case n._SCANNING_FOR_INCOMING:if(u.getEdgeRing()!==t)continue;r=u,l=n._LINKING_TO_OUTGOING;break;case n._LINKING_TO_OUTGOING:if(o.getEdgeRing()!==t)continue;r.setNextMin(o),l=n._SCANNING_FOR_INCOMING}}l===this._LINKING_TO_OUTGOING&&(la.isTrue(null!==e,"found null for first outgoing dirEdge"),la.isTrue(e.getEdgeRing()===t,"unable to link last incoming dirEdge"),r.setNextMin(e))},n.prototype.getOutgoingDegree=function(){if(0===arguments.length){for(var t=0,n=this.iterator();n.hasNext();){var e=n.next();e.isInResult()&&t++}return t}if(1===arguments.length){for(var r=arguments[0],l=0,i=this.iterator();i.hasNext();){var o=i.next();o.getEdgeRing()===r&&l++}return l}},n.prototype.getLabel=function(){return this._label},n.prototype.findCoveredLineEdges=function(){for(var t=Ts.NONE,n=this.iterator();n.hasNext();){var e=n.next(),r=e.getSym();if(!e.isLineEdge()){if(e.isInResult()){t=Ts.INTERIOR;break}if(r.isInResult()){t=Ts.EXTERIOR;break}}}if(t===Ts.NONE)return null;for(var l=t,i=this.iterator();i.hasNext();){var o=i.next(),u=o.getSym();o.isLineEdge()?o.getEdge().setCovered(l===Ts.INTERIOR):(o.isInResult()&&(l=Ts.EXTERIOR),u.isInResult()&&(l=Ts.INTERIOR))}},n.prototype.computeLabelling=function(n){t.prototype.computeLabelling.call(this,n),this._label=new tc(Ts.NONE);for(var e=this.iterator();e.hasNext();)for(var r=e.next().getEdge().getLabel(),l=0;l<2;l++){var i=r.getLocation(l);i!==Ts.INTERIOR&&i!==Ts.BOUNDARY||this._label.setLocation(l,Ts.INTERIOR)}},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(cf),pf=function(t){function n(){t.apply(this,arguments)}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.createNode=function(t){return new ic(t,new ff)},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(cc),df=function t(){this._pts=null,this._orientation=null;var n=arguments[0];this._pts=n,this._orientation=t.orientation(n)};df.prototype.compareTo=function(t){var n=t;return df.compareOriented(this._pts,this._orientation,n._pts,n._orientation)},df.prototype.interfaces_=function(){return[Es]},df.prototype.getClass=function(){return df},df.orientation=function(t){return 1===Ta.increasingDirection(t)},df.compareOriented=function(t,n,e,r){for(var l=n?1:-1,i=r?1:-1,o=n?t.length:-1,u=r?e.length:-1,s=n?0:t.length-1,a=r?0:e.length-1;;){var h=t[s].compareTo(e[a]);if(0!==h)return h;var c=(s+=l)===o,f=(a+=i)===u;if(c&&!f)return-1;if(!c&&f)return 1;if(c&&f)return 0}};var gf=function(){this._edges=new Ia,this._ocaMap=new Va};gf.prototype.print=function(t){t.print("MULTILINESTRING ( ");for(var n=0;n<this._edges.size();n++){var e=this._edges.get(n);n>0&&t.print(","),t.print("(");for(var r=e.getCoordinates(),l=0;l<r.length;l++)l>0&&t.print(","),t.print(r[l].x+" "+r[l].y);t.println(")")}t.print(")  ")},gf.prototype.addAll=function(t){for(var n=t.iterator();n.hasNext();)this.add(n.next())},gf.prototype.findEdgeIndex=function(t){for(var n=0;n<this._edges.size();n++)if(this._edges.get(n).equals(t))return n;return-1},gf.prototype.iterator=function(){return this._edges.iterator()},gf.prototype.getEdges=function(){return this._edges},gf.prototype.get=function(t){return this._edges.get(t)},gf.prototype.findEqualEdge=function(t){var n=new df(t.getCoordinates());return this._ocaMap.get(n)},gf.prototype.add=function(t){this._edges.add(t);var n=new df(t.getCoordinates());this._ocaMap.put(n,t)},gf.prototype.interfaces_=function(){return[]},gf.prototype.getClass=function(){return gf};var yf=function(){};yf.prototype.processIntersections=function(t,n,e,r){},yf.prototype.isDone=function(){},yf.prototype.interfaces_=function(){return[]},yf.prototype.getClass=function(){return yf};var _f=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var t=arguments[0];this._li=t};_f.prototype.isTrivialIntersection=function(t,n,e,r){if(t===e&&1===this._li.getIntersectionNum()){if(_f.isAdjacentSegments(n,r))return!0;if(t.isClosed()){var l=t.size()-1;if(0===n&&r===l||0===r&&n===l)return!0}}return!1},_f.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},_f.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},_f.prototype.getLineIntersector=function(){return this._li},_f.prototype.hasProperIntersection=function(){return this._hasProper},_f.prototype.processIntersections=function(t,n,e,r){if(t===e&&n===r)return null;this.numTests++;var l=t.getCoordinates()[n],i=t.getCoordinates()[n+1],o=e.getCoordinates()[r],u=e.getCoordinates()[r+1];this._li.computeIntersection(l,i,o,u),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(t,n,e,r)||(this._hasIntersection=!0,t.addIntersections(this._li,n,0),e.addIntersections(this._li,r,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))},_f.prototype.hasIntersection=function(){return this._hasIntersection},_f.prototype.isDone=function(){return!1},_f.prototype.hasInteriorIntersection=function(){return this._hasInterior},_f.prototype.interfaces_=function(){return[yf]},_f.prototype.getClass=function(){return _f},_f.isAdjacentSegments=function(t,n){return 1===Math.abs(t-n)};var vf=function(){this.coord=null,this.segmentIndex=null,this.dist=null;var t=arguments[0],n=arguments[1],e=arguments[2];this.coord=new Ss(t),this.segmentIndex=n,this.dist=e};vf.prototype.getSegmentIndex=function(){return this.segmentIndex},vf.prototype.getCoordinate=function(){return this.coord},vf.prototype.print=function(t){t.print(this.coord),t.print(" seg # = "+this.segmentIndex),t.println(" dist = "+this.dist)},vf.prototype.compareTo=function(t){var n=t;return this.compare(n.segmentIndex,n.dist)},vf.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===t},vf.prototype.toString=function(){return this.coord+" seg # = "+this.segmentIndex+" dist = "+this.dist},vf.prototype.getDistance=function(){return this.dist},vf.prototype.compare=function(t,n){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<n?-1:this.dist>n?1:0},vf.prototype.interfaces_=function(){return[Es]},vf.prototype.getClass=function(){return vf};var mf=function(){this._nodeMap=new Va,this.edge=null;var t=arguments[0];this.edge=t};mf.prototype.print=function(t){t.println("Intersections:");for(var n=this.iterator();n.hasNext();)n.next().print(t)},mf.prototype.iterator=function(){return this._nodeMap.values().iterator()},mf.prototype.addSplitEdges=function(t){this.addEndpoints();for(var n=this.iterator(),e=n.next();n.hasNext();){var r=n.next(),l=this.createSplitEdge(e,r);t.add(l),e=r}},mf.prototype.addEndpoints=function(){var t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)},mf.prototype.createSplitEdge=function(t,n){var e=n.segmentIndex-t.segmentIndex+2,r=this.edge.pts[n.segmentIndex],l=n.dist>0||!n.coord.equals2D(r);l||e--;var i=new Array(e).fill(null),o=0;i[o++]=new Ss(t.coord);for(var u=t.segmentIndex+1;u<=n.segmentIndex;u++)i[o++]=this.edge.pts[u];return l&&(i[o]=n.coord),new Cf(i,new tc(this.edge._label))},mf.prototype.add=function(t,n,e){var r=new vf(t,n,e),l=this._nodeMap.get(r);return null!==l?l:(this._nodeMap.put(r,r),r)},mf.prototype.isIntersection=function(t){for(var n=this.iterator();n.hasNext();)if(n.next().coord.equals(t))return!0;return!1},mf.prototype.interfaces_=function(){return[]},mf.prototype.getClass=function(){return mf};var bf=function(){};bf.prototype.getChainStartIndices=function(t){var n=0,e=new Ia;e.add(new ks(n));do{var r=this.findChainEnd(t,n);e.add(new ks(r)),n=r}while(n<t.length-1);return bf.toIntArray(e)},bf.prototype.findChainEnd=function(t,n){for(var e=uc.quadrant(t[n],t[n+1]),r=n+1;r<t.length&&uc.quadrant(t[r-1],t[r])===e;)r++;return r-1},bf.prototype.interfaces_=function(){return[]},bf.prototype.getClass=function(){return bf},bf.toIntArray=function(t){for(var n=new Array(t.size()).fill(null),e=0;e<n.length;e++)n[e]=t.get(e).intValue();return n};var xf=function(){this.e=null,this.pts=null,this.startIndex=null,this.env1=new Hs,this.env2=new Hs;var t=arguments[0];this.e=t,this.pts=t.getCoordinates();var n=new bf;this.startIndex=n.getChainStartIndices(this.pts)};xf.prototype.getCoordinates=function(){return this.pts},xf.prototype.getMaxX=function(t){var n=this.pts[this.startIndex[t]].x,e=this.pts[this.startIndex[t+1]].x;return n>e?n:e},xf.prototype.getMinX=function(t){var n=this.pts[this.startIndex[t]].x,e=this.pts[this.startIndex[t+1]].x;return n<e?n:e},xf.prototype.computeIntersectsForChain=function(){if(4===arguments.length){var t=arguments[0],n=arguments[1],e=arguments[2],r=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],n,n.startIndex[e],n.startIndex[e+1],r)}else if(6===arguments.length){var l=arguments[0],i=arguments[1],o=arguments[2],u=arguments[3],s=arguments[4],a=arguments[5],h=this.pts[l],c=this.pts[i],f=o.pts[u],p=o.pts[s];if(i-l==1&&s-u==1)return a.addIntersections(this.e,l,o.e,u),null;if(this.env1.init(h,c),this.env2.init(f,p),!this.env1.intersects(this.env2))return null;var d=Math.trunc((l+i)/2),g=Math.trunc((u+s)/2);l<d&&(u<g&&this.computeIntersectsForChain(l,d,o,u,g,a),g<s&&this.computeIntersectsForChain(l,d,o,g,s,a)),d<i&&(u<g&&this.computeIntersectsForChain(d,i,o,u,g,a),g<s&&this.computeIntersectsForChain(d,i,o,g,s,a))}},xf.prototype.getStartIndexes=function(){return this.startIndex},xf.prototype.computeIntersects=function(t,n){for(var e=0;e<this.startIndex.length-1;e++)for(var r=0;r<t.startIndex.length-1;r++)this.computeIntersectsForChain(e,t,r,n)},xf.prototype.interfaces_=function(){return[]},xf.prototype.getClass=function(){return xf};var wf=function t(){this._depth=Array(2).fill().map((function(){return Array(3)}));for(var n=0;n<2;n++)for(var e=0;e<3;e++)this._depth[n][e]=t.NULL_VALUE},Ef={NULL_VALUE:{configurable:!0}};wf.prototype.getDepth=function(t,n){return this._depth[t][n]},wf.prototype.setDepth=function(t,n,e){this._depth[t][n]=e},wf.prototype.isNull=function(){var t=this;if(0===arguments.length){for(var n=0;n<2;n++)for(var e=0;e<3;e++)if(t._depth[n][e]!==wf.NULL_VALUE)return!1;return!0}if(1===arguments.length){var r=arguments[0];return this._depth[r][1]===wf.NULL_VALUE}if(2===arguments.length){var l=arguments[0],i=arguments[1];return this._depth[l][i]===wf.NULL_VALUE}},wf.prototype.normalize=function(){for(var t=this,n=0;n<2;n++)if(!t.isNull(n)){var e=t._depth[n][1];t._depth[n][2]<e&&(e=t._depth[n][2]),e<0&&(e=0);for(var r=1;r<3;r++){var l=0;t._depth[n][r]>e&&(l=1),t._depth[n][r]=l}}},wf.prototype.getDelta=function(t){return this._depth[t][Xh.RIGHT]-this._depth[t][Xh.LEFT]},wf.prototype.getLocation=function(t,n){return this._depth[t][n]<=0?Ts.EXTERIOR:Ts.INTERIOR},wf.prototype.toString=function(){return"A: "+this._depth[0][1]+","+this._depth[0][2]+" B: "+this._depth[1][1]+","+this._depth[1][2]},wf.prototype.add=function(){var t=this;if(1===arguments.length)for(var n=arguments[0],e=0;e<2;e++)for(var r=1;r<3;r++){var l=n.getLocation(e,r);l!==Ts.EXTERIOR&&l!==Ts.INTERIOR||(t.isNull(e,r)?t._depth[e][r]=wf.depthAtLocation(l):t._depth[e][r]+=wf.depthAtLocation(l))}else if(3===arguments.length){var i=arguments[0],o=arguments[1],u=arguments[2];u===Ts.INTERIOR&&this._depth[i][o]++}},wf.prototype.interfaces_=function(){return[]},wf.prototype.getClass=function(){return wf},wf.depthAtLocation=function(t){return t===Ts.EXTERIOR?0:t===Ts.INTERIOR?1:wf.NULL_VALUE},Ef.NULL_VALUE.get=function(){return-1},Object.defineProperties(wf,Ef);var Cf=function(t){function n(){if(t.call(this),this.pts=null,this._env=null,this.eiList=new mf(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new wf,this._depthDelta=0,1===arguments.length){var e=arguments[0];n.call(this,e,null)}else if(2===arguments.length){var r=arguments[0],l=arguments[1];this.pts=r,this._label=l}}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.getDepth=function(){return this._depth},n.prototype.getCollapsedEdge=function(){var t=new Array(2).fill(null);return t[0]=this.pts[0],t[1]=this.pts[1],new n(t,tc.toLineLabel(this._label))},n.prototype.isIsolated=function(){return this._isIsolated},n.prototype.getCoordinates=function(){return this.pts},n.prototype.setIsolated=function(t){this._isIsolated=t},n.prototype.setName=function(t){this._name=t},n.prototype.equals=function(t){if(!(t instanceof n))return!1;var e=t;if(this.pts.length!==e.pts.length)return!1;for(var r=!0,l=!0,i=this.pts.length,o=0;o<this.pts.length;o++)if(this.pts[o].equals2D(e.pts[o])||(r=!1),this.pts[o].equals2D(e.pts[--i])||(l=!1),!r&&!l)return!1;return!0},n.prototype.getCoordinate=function(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){var t=arguments[0];return this.pts[t]}},n.prototype.print=function(t){t.print("edge "+this._name+": "),t.print("LINESTRING (");for(var n=0;n<this.pts.length;n++)n>0&&t.print(","),t.print(this.pts[n].x+" "+this.pts[n].y);t.print(")  "+this._label+" "+this._depthDelta)},n.prototype.computeIM=function(t){n.updateIM(this._label,t)},n.prototype.isCollapsed=function(){return!!this._label.isArea()&&3===this.pts.length&&!!this.pts[0].equals(this.pts[2])},n.prototype.isClosed=function(){return this.pts[0].equals(this.pts[this.pts.length-1])},n.prototype.getMaximumSegmentIndex=function(){return this.pts.length-1},n.prototype.getDepthDelta=function(){return this._depthDelta},n.prototype.getNumPoints=function(){return this.pts.length},n.prototype.printReverse=function(t){t.print("edge "+this._name+": ");for(var n=this.pts.length-1;n>=0;n--)t.print(this.pts[n]+" ");t.println("")},n.prototype.getMonotoneChainEdge=function(){return null===this._mce&&(this._mce=new xf(this)),this._mce},n.prototype.getEnvelope=function(){if(null===this._env){this._env=new Hs;for(var t=0;t<this.pts.length;t++)this._env.expandToInclude(this.pts[t])}return this._env},n.prototype.addIntersection=function(t,n,e,r){var l=new Ss(t.getIntersection(r)),i=n,o=t.getEdgeDistance(e,r),u=i+1;if(u<this.pts.length){var s=this.pts[u];l.equals2D(s)&&(i=u,o=0)}this.eiList.add(l,i,o)},n.prototype.toString=function(){var t=new Ds;t.append("edge "+this._name+": "),t.append("LINESTRING (");for(var n=0;n<this.pts.length;n++)n>0&&t.append(","),t.append(this.pts[n].x+" "+this.pts[n].y);return t.append(")  "+this._label+" "+this._depthDelta),t.toString()},n.prototype.isPointwiseEqual=function(t){if(this.pts.length!==t.pts.length)return!1;for(var n=0;n<this.pts.length;n++)if(!this.pts[n].equals2D(t.pts[n]))return!1;return!0},n.prototype.setDepthDelta=function(t){this._depthDelta=t},n.prototype.getEdgeIntersectionList=function(){return this.eiList},n.prototype.addIntersections=function(t,n,e){for(var r=0;r<t.getIntersectionNum();r++)this.addIntersection(t,n,e,r)},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n.updateIM=function(){if(2!==arguments.length)return t.prototype.updateIM.apply(this,arguments);var n=arguments[0],e=arguments[1];e.setAtLeastIfValid(n.getLocation(0,Xh.ON),n.getLocation(1,Xh.ON),1),n.isArea()&&(e.setAtLeastIfValid(n.getLocation(0,Xh.LEFT),n.getLocation(1,Xh.LEFT),2),e.setAtLeastIfValid(n.getLocation(0,Xh.RIGHT),n.getLocation(1,Xh.RIGHT),2))},n}(lc),Of=function(t){this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new gf,this._bufParams=t||null};Of.prototype.setWorkingPrecisionModel=function(t){this._workingPrecisionModel=t},Of.prototype.insertUniqueEdge=function(t){var n=this._edgeList.findEqualEdge(t);if(null!==n){var e=n.getLabel(),r=t.getLabel();n.isPointwiseEqual(t)||(r=new tc(t.getLabel())).flip(),e.merge(r);var l=Of.depthDelta(r),i=n.getDepthDelta()+l;n.setDepthDelta(i)}else this._edgeList.add(t),t.setDepthDelta(Of.depthDelta(t.getLabel()))},Of.prototype.buildSubgraphs=function(t,n){for(var e=new Ia,r=t.iterator();r.hasNext();){var l=r.next(),i=l.getRightmostCoordinate(),o=new ef(e).getDepth(i);l.computeDepth(o),l.findResultEdges(),e.add(l),n.add(l.getDirectedEdges(),l.getNodes())}},Of.prototype.createSubgraphs=function(t){for(var n=new Ia,e=t.getNodes().iterator();e.hasNext();){var r=e.next();if(!r.isVisited()){var l=new Qh;l.create(r),n.add(l)}}return xc.sort(n,xc.reverseOrder()),n},Of.prototype.createEmptyResultGeometry=function(){return this._geomFact.createPolygon()},Of.prototype.getNoder=function(t){if(null!==this._workingNoder)return this._workingNoder;var n=new qc,e=new ua;return e.setPrecisionModel(t),n.setSegmentIntersector(new _f(e)),n},Of.prototype.buffer=function(t,n){var e=this._workingPrecisionModel;null===e&&(e=t.getPrecisionModel()),this._geomFact=t.getFactory();var r=new nf(e,this._bufParams),l=new uf(t,n,r).getCurves();if(l.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(l,e),this._graph=new fc(new pf),this._graph.addEdges(this._edgeList.getEdges());var i=this.createSubgraphs(this._graph),o=new pc(this._geomFact);this.buildSubgraphs(i,o);var u=o.getPolygons();return u.size()<=0?this.createEmptyResultGeometry():this._geomFact.buildGeometry(u)},Of.prototype.computeNodedEdges=function(t,n){var e=this.getNoder(n);e.computeNodes(t);for(var r=e.getNodedSubstrings().iterator();r.hasNext();){var l=r.next(),i=l.getCoordinates();if(2!==i.length||!i[0].equals2D(i[1])){var o=l.getData(),u=new Cf(l.getCoordinates(),new tc(o));this.insertUniqueEdge(u)}}},Of.prototype.setNoder=function(t){this._workingNoder=t},Of.prototype.interfaces_=function(){return[]},Of.prototype.getClass=function(){return Of},Of.depthDelta=function(t){var n=t.getLocation(0,Xh.LEFT),e=t.getLocation(0,Xh.RIGHT);return n===Ts.INTERIOR&&e===Ts.EXTERIOR?1:n===Ts.EXTERIOR&&e===Ts.INTERIOR?-1:0},Of.convertSegStrings=function(t){for(var n=new kh,e=new Ia;t.hasNext();){var r=t.next(),l=n.createLineString(r.getCoordinates());e.add(l)}return n.buildGeometry(e)};var Mf=function(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){var t=arguments[0],n=arguments[1];this._noder=t,this._scaleFactor=n,this._offsetX=0,this._offsetY=0,this._isScaled=!this.isIntegerPrecision()}else if(4===arguments.length){var e=arguments[0],r=arguments[1],l=arguments[2],i=arguments[3];this._noder=e,this._scaleFactor=r,this._offsetX=l,this._offsetY=i,this._isScaled=!this.isIntegerPrecision()}};Mf.prototype.rescale=function(){var t=this;if(Ls(arguments[0],Ea))for(var n=arguments[0],e=n.iterator();e.hasNext();){var r=e.next();t.rescale(r.getCoordinates())}else if(arguments[0]instanceof Array){for(var l=arguments[0],i=0;i<l.length;i++)l[i].x=l[i].x/t._scaleFactor+t._offsetX,l[i].y=l[i].y/t._scaleFactor+t._offsetY;2===l.length&&l[0].equals2D(l[1])&&Ws.out.println(l)}},Mf.prototype.scale=function(){var t=this;if(Ls(arguments[0],Ea)){for(var n=arguments[0],e=new Ia,r=n.iterator();r.hasNext();){var l=r.next();e.add(new jc(t.scale(l.getCoordinates()),l.getData()))}return e}if(arguments[0]instanceof Array){for(var i=arguments[0],o=new Array(i.length).fill(null),u=0;u<i.length;u++)o[u]=new Ss(Math.round((i[u].x-t._offsetX)*t._scaleFactor),Math.round((i[u].y-t._offsetY)*t._scaleFactor),i[u].z);var s=Ta.removeRepeatedPoints(o);return s}},Mf.prototype.isIntegerPrecision=function(){return 1===this._scaleFactor},Mf.prototype.getNodedSubstrings=function(){var t=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(t),t},Mf.prototype.computeNodes=function(t){var n=t;this._isScaled&&(n=this.scale(t)),this._noder.computeNodes(n)},Mf.prototype.interfaces_=function(){return[Bc]},Mf.prototype.getClass=function(){return Mf};var Sf=function(){this._li=new ua,this._segStrings=null;var t=arguments[0];this._segStrings=t},If={fact:{configurable:!0}};Sf.prototype.checkEndPtVertexIntersections=function(){var t=this;if(0===arguments.length)for(var n=this._segStrings.iterator();n.hasNext();){var e=n.next(),r=e.getCoordinates();t.checkEndPtVertexIntersections(r[0],t._segStrings),t.checkEndPtVertexIntersections(r[r.length-1],t._segStrings)}else if(2===arguments.length)for(var l=arguments[0],i=arguments[1],o=i.iterator();o.hasNext();)for(var u=o.next(),s=u.getCoordinates(),a=1;a<s.length-1;a++)if(s[a].equals(l))throw new ea("found endpt/interior pt intersection at index "+a+" :pt "+l)},Sf.prototype.checkInteriorIntersections=function(){var t=this;if(0===arguments.length)for(var n=this._segStrings.iterator();n.hasNext();)for(var e=n.next(),r=this._segStrings.iterator();r.hasNext();){var l=r.next();t.checkInteriorIntersections(e,l)}else if(2===arguments.length)for(var i=arguments[0],o=arguments[1],u=i.getCoordinates(),s=o.getCoordinates(),a=0;a<u.length-1;a++)for(var h=0;h<s.length-1;h++)t.checkInteriorIntersections(i,a,o,h);else if(4===arguments.length){var c=arguments[0],f=arguments[1],p=arguments[2],d=arguments[3];if(c===p&&f===d)return null;var g=c.getCoordinates()[f],y=c.getCoordinates()[f+1],_=p.getCoordinates()[d],v=p.getCoordinates()[d+1];if(this._li.computeIntersection(g,y,_,v),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,g,y)||this.hasInteriorIntersection(this._li,_,v)))throw new ea("found non-noded intersection at "+g+"-"+y+" and "+_+"-"+v)}},Sf.prototype.checkValid=function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()},Sf.prototype.checkCollapses=function(){var t=this;if(0===arguments.length)for(var n=this._segStrings.iterator();n.hasNext();){var e=n.next();t.checkCollapses(e)}else if(1===arguments.length)for(var r=arguments[0],l=r.getCoordinates(),i=0;i<l.length-2;i++)t.checkCollapse(l[i],l[i+1],l[i+2])},Sf.prototype.hasInteriorIntersection=function(t,n,e){for(var r=0;r<t.getIntersectionNum();r++){var l=t.getIntersection(r);if(!l.equals(n)&&!l.equals(e))return!0}return!1},Sf.prototype.checkCollapse=function(t,n,e){if(t.equals(e))throw new ea("found non-noded collapse at "+Sf.fact.createLineString([t,n,e]))},Sf.prototype.interfaces_=function(){return[]},Sf.prototype.getClass=function(){return Sf},If.fact.get=function(){return new kh},Object.defineProperties(Sf,If);var Pf=function(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;var t=arguments[0],n=arguments[1],e=arguments[2];if(this._originalPt=t,this._pt=t,this._scaleFactor=n,this._li=e,n<=0)throw new bs("Scale factor must be non-zero");1!==n&&(this._pt=new Ss(this.scale(t.x),this.scale(t.y)),this._p0Scaled=new Ss,this._p1Scaled=new Ss),this.initCorners(this._pt)},Rf={SAFE_ENV_EXPANSION_FACTOR:{configurable:!0}};Pf.prototype.intersectsScaled=function(t,n){var e=Math.min(t.x,n.x),r=Math.max(t.x,n.x),l=Math.min(t.y,n.y),i=Math.max(t.y,n.y),o=this._maxx<e||this._minx>r||this._maxy<l||this._miny>i;if(o)return!1;var u=this.intersectsToleranceSquare(t,n);return la.isTrue(!(o&&u),"Found bad envelope test"),u},Pf.prototype.initCorners=function(t){var n=.5;this._minx=t.x-n,this._maxx=t.x+n,this._miny=t.y-n,this._maxy=t.y+n,this._corner[0]=new Ss(this._maxx,this._maxy),this._corner[1]=new Ss(this._minx,this._maxy),this._corner[2]=new Ss(this._minx,this._miny),this._corner[3]=new Ss(this._maxx,this._miny)},Pf.prototype.intersects=function(t,n){return 1===this._scaleFactor?this.intersectsScaled(t,n):(this.copyScaled(t,this._p0Scaled),this.copyScaled(n,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))},Pf.prototype.scale=function(t){return Math.round(t*this._scaleFactor)},Pf.prototype.getCoordinate=function(){return this._originalPt},Pf.prototype.copyScaled=function(t,n){n.x=this.scale(t.x),n.y=this.scale(t.y)},Pf.prototype.getSafeEnvelope=function(){if(null===this._safeEnv){var t=Pf.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new Hs(this._originalPt.x-t,this._originalPt.x+t,this._originalPt.y-t,this._originalPt.y+t)}return this._safeEnv},Pf.prototype.intersectsPixelClosure=function(t,n){return this._li.computeIntersection(t,n,this._corner[0],this._corner[1]),!!(this._li.hasIntersection()||(this._li.computeIntersection(t,n,this._corner[1],this._corner[2]),this._li.hasIntersection()||(this._li.computeIntersection(t,n,this._corner[2],this._corner[3]),this._li.hasIntersection()||(this._li.computeIntersection(t,n,this._corner[3],this._corner[0]),this._li.hasIntersection()))))},Pf.prototype.intersectsToleranceSquare=function(t,n){var e=!1,r=!1;return this._li.computeIntersection(t,n,this._corner[0],this._corner[1]),!!(this._li.isProper()||(this._li.computeIntersection(t,n,this._corner[1],this._corner[2]),this._li.isProper()||(this._li.hasIntersection()&&(e=!0),this._li.computeIntersection(t,n,this._corner[2],this._corner[3]),this._li.isProper()||(this._li.hasIntersection()&&(r=!0),this._li.computeIntersection(t,n,this._corner[3],this._corner[0]),this._li.isProper()||e&&r||t.equals(this._pt)||n.equals(this._pt)))))},Pf.prototype.addSnappedNode=function(t,n){var e=t.getCoordinate(n),r=t.getCoordinate(n+1);return!!this.intersects(e,r)&&(t.addIntersection(this.getCoordinate(),n),!0)},Pf.prototype.interfaces_=function(){return[]},Pf.prototype.getClass=function(){return Pf},Rf.SAFE_ENV_EXPANSION_FACTOR.get=function(){return.75},Object.defineProperties(Pf,Rf);var Tf=function(){this.tempEnv1=new Hs,this.selectedSegment=new Dc};Tf.prototype.select=function(){if(1===arguments.length);else if(2===arguments.length){var t=arguments[0],n=arguments[1];t.getLineSegment(n,this.selectedSegment),this.select(this.selectedSegment)}},Tf.prototype.interfaces_=function(){return[]},Tf.prototype.getClass=function(){return Tf};var Nf=function(){this._index=null;var t=arguments[0];this._index=t},Lf={HotPixelSnapAction:{configurable:!0}};Nf.prototype.snap=function(){if(1===arguments.length){var t=arguments[0];return this.snap(t,null,-1)}if(3===arguments.length){var n=arguments[0],e=arguments[1],r=arguments[2],l=n.getSafeEnvelope(),i=new Af(n,e,r);return this._index.query(l,{interfaces_:function(){return[_c]},visitItem:function(t){t.select(l,i)}}),i.isNodeAdded()}},Nf.prototype.interfaces_=function(){return[]},Nf.prototype.getClass=function(){return Nf},Lf.HotPixelSnapAction.get=function(){return Af},Object.defineProperties(Nf,Lf);var Af=function(t){function n(){t.call(this),this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;var n=arguments[0],e=arguments[1],r=arguments[2];this._hotPixel=n,this._parentEdge=e,this._hotPixelVertexIndex=r}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.isNodeAdded=function(){return this._isNodeAdded},n.prototype.select=function(){if(2!==arguments.length)return t.prototype.select.apply(this,arguments);var n=arguments[0],e=arguments[1],r=n.getContext();if(null!==this._parentEdge&&r===this._parentEdge&&e===this._hotPixelVertexIndex)return null;this._isNodeAdded=this._hotPixel.addSnappedNode(r,e)},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(Tf),jf=function(){this._li=null,this._interiorIntersections=null;var t=arguments[0];this._li=t,this._interiorIntersections=new Ia};jf.prototype.processIntersections=function(t,n,e,r){if(t===e&&n===r)return null;var l=t.getCoordinates()[n],i=t.getCoordinates()[n+1],o=e.getCoordinates()[r],u=e.getCoordinates()[r+1];if(this._li.computeIntersection(l,i,o,u),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(var s=0;s<this._li.getIntersectionNum();s++)this._interiorIntersections.add(this._li.getIntersection(s));t.addIntersections(this._li,n,0),e.addIntersections(this._li,r,1)}},jf.prototype.isDone=function(){return!1},jf.prototype.getInteriorIntersections=function(){return this._interiorIntersections},jf.prototype.interfaces_=function(){return[yf]},jf.prototype.getClass=function(){return jf};var Df=function(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;var t=arguments[0];this._pm=t,this._li=new ua,this._li.setPrecisionModel(t),this._scaleFactor=t.getScale()};Df.prototype.checkCorrectness=function(t){var n=jc.getNodedSubstrings(t),e=new Sf(n);try{e.checkValid()}catch(t){if(!(t instanceof Xs))throw t;t.printStackTrace()}},Df.prototype.getNodedSubstrings=function(){return jc.getNodedSubstrings(this._nodedSegStrings)},Df.prototype.snapRound=function(t,n){var e=this.findInteriorIntersections(t,n);this.computeIntersectionSnaps(e),this.computeVertexSnaps(t)},Df.prototype.findInteriorIntersections=function(t,n){var e=new jf(n);return this._noder.setSegmentIntersector(e),this._noder.computeNodes(t),e.getInteriorIntersections()},Df.prototype.computeVertexSnaps=function(){var t=this;if(Ls(arguments[0],Ea))for(var n=arguments[0],e=n.iterator();e.hasNext();){var r=e.next();t.computeVertexSnaps(r)}else if(arguments[0]instanceof jc)for(var l=arguments[0],i=l.getCoordinates(),o=0;o<i.length;o++){var u=new Pf(i[o],t._scaleFactor,t._li),s=t._pointSnapper.snap(u,l,o);s&&l.addIntersection(i[o],o)}},Df.prototype.computeNodes=function(t){this._nodedSegStrings=t,this._noder=new qc,this._pointSnapper=new Nf(this._noder.getIndex()),this.snapRound(t,this._li)},Df.prototype.computeIntersectionSnaps=function(t){for(var n=this,e=t.iterator();e.hasNext();){var r=e.next(),l=new Pf(r,n._scaleFactor,n._li);n._pointSnapper.snap(l)}},Df.prototype.interfaces_=function(){return[Bc]},Df.prototype.getClass=function(){return Df};var kf=function(){if(this._argGeom=null,this._distance=null,this._bufParams=new Xc,this._resultGeometry=null,this._saveException=null,1===arguments.length){var t=arguments[0];this._argGeom=t}else if(2===arguments.length){var n=arguments[0],e=arguments[1];this._argGeom=n,this._bufParams=e}},Ff={CAP_ROUND:{configurable:!0},CAP_BUTT:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},MAX_PRECISION_DIGITS:{configurable:!0}};kf.prototype.bufferFixedPrecision=function(t){var n=new Mf(new Df(new Lh(1)),t.getScale()),e=new Of(this._bufParams);e.setWorkingPrecisionModel(t),e.setNoder(n),this._resultGeometry=e.buffer(this._argGeom,this._distance)},kf.prototype.bufferReducedPrecision=function(){var t=this;if(0===arguments.length){for(var n=kf.MAX_PRECISION_DIGITS;n>=0;n--){try{t.bufferReducedPrecision(n)}catch(n){if(!(n instanceof Kh))throw n;t._saveException=n}if(null!==t._resultGeometry)return null}throw this._saveException}if(1===arguments.length){var e=arguments[0],r=kf.precisionScaleFactor(this._argGeom,this._distance,e),l=new Lh(r);this.bufferFixedPrecision(l)}},kf.prototype.computeGeometry=function(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;var t=this._argGeom.getFactory().getPrecisionModel();t.getType()===Lh.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()},kf.prototype.setQuadrantSegments=function(t){this._bufParams.setQuadrantSegments(t)},kf.prototype.bufferOriginalPrecision=function(){try{var t=new Of(this._bufParams);this._resultGeometry=t.buffer(this._argGeom,this._distance)}catch(t){if(!(t instanceof ea))throw t;this._saveException=t}},kf.prototype.getResultGeometry=function(t){return this._distance=t,this.computeGeometry(),this._resultGeometry},kf.prototype.setEndCapStyle=function(t){this._bufParams.setEndCapStyle(t)},kf.prototype.interfaces_=function(){return[]},kf.prototype.getClass=function(){return kf},kf.bufferOp=function(){if(2===arguments.length){var t=arguments[0],n=arguments[1],e=new kf(t),r=e.getResultGeometry(n);return r}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof pa&&"number"==typeof arguments[1]){var l=arguments[0],i=arguments[1],o=arguments[2],u=new kf(l);u.setQuadrantSegments(o);var s=u.getResultGeometry(i);return s}if(arguments[2]instanceof Xc&&arguments[0]instanceof pa&&"number"==typeof arguments[1]){var a=arguments[0],h=arguments[1],c=arguments[2],f=new kf(a,c),p=f.getResultGeometry(h);return p}}else if(4===arguments.length){var d=arguments[0],g=arguments[1],y=arguments[2],_=arguments[3],v=new kf(d);v.setQuadrantSegments(y),v.setEndCapStyle(_);var m=v.getResultGeometry(g);return m}},kf.precisionScaleFactor=function(t,n,e){var r=t.getEnvelopeInternal(),l=As.max(Math.abs(r.getMaxX()),Math.abs(r.getMaxY()),Math.abs(r.getMinX()),Math.abs(r.getMinY()))+2*(n>0?n:0),i=e-Math.trunc(Math.log(l)/Math.log(10)+1);return Math.pow(10,i)},Ff.CAP_ROUND.get=function(){return Xc.CAP_ROUND},Ff.CAP_BUTT.get=function(){return Xc.CAP_FLAT},Ff.CAP_FLAT.get=function(){return Xc.CAP_FLAT},Ff.CAP_SQUARE.get=function(){return Xc.CAP_SQUARE},Ff.MAX_PRECISION_DIGITS.get=function(){return 12},Object.defineProperties(kf,Ff);var Gf=function(){this._pt=[new Ss,new Ss],this._distance=xs.NaN,this._isNull=!0};Gf.prototype.getCoordinates=function(){return this._pt},Gf.prototype.getCoordinate=function(t){return this._pt[t]},Gf.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var n=arguments[0],e=arguments[1];if(this._isNull)return this.initialize(n,e),null;var r=n.distance(e);r<this._distance&&this.initialize(n,e,r)}},Gf.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],n=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(n),this._distance=t.distance(n),this._isNull=!1}else if(3===arguments.length){var e=arguments[0],r=arguments[1],l=arguments[2];this._pt[0].setCoordinate(e),this._pt[1].setCoordinate(r),this._distance=l,this._isNull=!1}},Gf.prototype.getDistance=function(){return this._distance},Gf.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var n=arguments[0],e=arguments[1];if(this._isNull)return this.initialize(n,e),null;var r=n.distance(e);r>this._distance&&this.initialize(n,e,r)}},Gf.prototype.interfaces_=function(){return[]},Gf.prototype.getClass=function(){return Gf};var zf=function(){};zf.prototype.interfaces_=function(){return[]},zf.prototype.getClass=function(){return zf},zf.computeDistance=function(){if(arguments[2]instanceof Gf&&arguments[0]instanceof gh&&arguments[1]instanceof Ss)for(var t=arguments[0],n=arguments[1],e=arguments[2],r=t.getCoordinates(),l=new Dc,i=0;i<r.length-1;i++){l.setCoordinates(r[i],r[i+1]);var o=l.closestPoint(n);e.setMinimum(o,n)}else if(arguments[2]instanceof Gf&&arguments[0]instanceof mh&&arguments[1]instanceof Ss){var u=arguments[0],s=arguments[1],a=arguments[2];zf.computeDistance(u.getExteriorRing(),s,a);for(var h=0;h<u.getNumInteriorRing();h++)zf.computeDistance(u.getInteriorRingN(h),s,a)}else if(arguments[2]instanceof Gf&&arguments[0]instanceof pa&&arguments[1]instanceof Ss){var c=arguments[0],f=arguments[1],p=arguments[2];if(c instanceof gh)zf.computeDistance(c,f,p);else if(c instanceof mh)zf.computeDistance(c,f,p);else if(c instanceof eh)for(var d=c,g=0;g<d.getNumGeometries();g++){var y=d.getGeometryN(g);zf.computeDistance(y,f,p)}else p.setMinimum(c.getCoordinate(),f)}else if(arguments[2]instanceof Gf&&arguments[0]instanceof Dc&&arguments[1]instanceof Ss){var _=arguments[0],v=arguments[1],m=arguments[2],b=_.closestPoint(v);m.setMinimum(b,v)}};var Bf=function(t){this._maxPtDist=new Gf,this._inputGeom=t||null},Uf={MaxPointDistanceFilter:{configurable:!0},MaxMidpointDistanceFilter:{configurable:!0}};Bf.prototype.computeMaxMidpointDistance=function(t){var n=new Yf(this._inputGeom);t.apply(n),this._maxPtDist.setMaximum(n.getMaxPointDistance())},Bf.prototype.computeMaxVertexDistance=function(t){var n=new qf(this._inputGeom);t.apply(n),this._maxPtDist.setMaximum(n.getMaxPointDistance())},Bf.prototype.findDistance=function(t){return this.computeMaxVertexDistance(t),this.computeMaxMidpointDistance(t),this._maxPtDist.getDistance()},Bf.prototype.getDistancePoints=function(){return this._maxPtDist},Bf.prototype.interfaces_=function(){return[]},Bf.prototype.getClass=function(){return Bf},Uf.MaxPointDistanceFilter.get=function(){return qf},Uf.MaxMidpointDistanceFilter.get=function(){return Yf},Object.defineProperties(Bf,Uf);var qf=function(t){this._maxPtDist=new Gf,this._minPtDist=new Gf,this._geom=t||null};qf.prototype.filter=function(t){this._minPtDist.initialize(),zf.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},qf.prototype.getMaxPointDistance=function(){return this._maxPtDist},qf.prototype.interfaces_=function(){return[ya]},qf.prototype.getClass=function(){return qf};var Yf=function(t){this._maxPtDist=new Gf,this._minPtDist=new Gf,this._geom=t||null};Yf.prototype.filter=function(t,n){if(0===n)return null;var e=t.getCoordinate(n-1),r=t.getCoordinate(n),l=new Ss((e.x+r.x)/2,(e.y+r.y)/2);this._minPtDist.initialize(),zf.computeDistance(this._geom,l,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Yf.prototype.isDone=function(){return!1},Yf.prototype.isGeometryChanged=function(){return!1},Yf.prototype.getMaxPointDistance=function(){return this._maxPtDist},Yf.prototype.interfaces_=function(){return[nh]},Yf.prototype.getClass=function(){return Yf};var Xf=function(t){this._comps=t||null};Xf.prototype.filter=function(t){t instanceof mh&&this._comps.add(t)},Xf.prototype.interfaces_=function(){return[th]},Xf.prototype.getClass=function(){return Xf},Xf.getPolygons=function(){if(1===arguments.length){var t=arguments[0];return Xf.getPolygons(t,new Ia)}if(2===arguments.length){var n=arguments[0],e=arguments[1];return n instanceof mh?e.add(n):n instanceof eh&&n.apply(new Xf(e)),e}};var Vf=function(){if(this._lines=null,this._isForcedToLineString=!1,1===arguments.length){var t=arguments[0];this._lines=t}else if(2===arguments.length){var n=arguments[0],e=arguments[1];this._lines=n,this._isForcedToLineString=e}};Vf.prototype.filter=function(t){if(this._isForcedToLineString&&t instanceof xh){var n=t.getFactory().createLineString(t.getCoordinateSequence());return this._lines.add(n),null}t instanceof gh&&this._lines.add(t)},Vf.prototype.setForceToLineString=function(t){this._isForcedToLineString=t},Vf.prototype.interfaces_=function(){return[fa]},Vf.prototype.getClass=function(){return Vf},Vf.getGeometry=function(){if(1===arguments.length){var t=arguments[0];return t.getFactory().buildGeometry(Vf.getLines(t))}if(2===arguments.length){var n=arguments[0],e=arguments[1];return n.getFactory().buildGeometry(Vf.getLines(n,e))}},Vf.getLines=function(){if(1===arguments.length){var t=arguments[0];return Vf.getLines(t,!1)}if(2===arguments.length){if(Ls(arguments[0],Ea)&&Ls(arguments[1],Ea)){for(var n=arguments[0],e=arguments[1],r=n.iterator();r.hasNext();){var l=r.next();Vf.getLines(l,e)}return e}if(arguments[0]instanceof pa&&"boolean"==typeof arguments[1]){var i=arguments[0],o=arguments[1],u=new Ia;return i.apply(new Vf(u,o)),u}if(arguments[0]instanceof pa&&Ls(arguments[1],Ea)){var s=arguments[0],a=arguments[1];return s instanceof gh?a.add(s):s.apply(new Vf(a)),a}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&Ls(arguments[0],Ea)&&Ls(arguments[1],Ea)){for(var h=arguments[0],c=arguments[1],f=arguments[2],p=h.iterator();p.hasNext();){var d=p.next();Vf.getLines(d,c,f)}return c}if("boolean"==typeof arguments[2]&&arguments[0]instanceof pa&&Ls(arguments[1],Ea)){var g=arguments[0],y=arguments[1],_=arguments[2];return g.apply(new Vf(y,_)),y}}};var Wf=function(){if(this._boundaryRule=_a.OGC_SFS_BOUNDARY_RULE,this._isIn=null,this._numBoundaries=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];if(null===t)throw new bs("Rule must be non-null");this._boundaryRule=t}};Wf.prototype.locateInternal=function(){var t=this;if(arguments[0]instanceof Ss&&arguments[1]instanceof mh){var n=arguments[0],e=arguments[1];if(e.isEmpty())return Ts.EXTERIOR;var r=e.getExteriorRing(),l=this.locateInPolygonRing(n,r);if(l===Ts.EXTERIOR)return Ts.EXTERIOR;if(l===Ts.BOUNDARY)return Ts.BOUNDARY;for(var i=0;i<e.getNumInteriorRing();i++){var o=e.getInteriorRingN(i),u=t.locateInPolygonRing(n,o);if(u===Ts.INTERIOR)return Ts.EXTERIOR;if(u===Ts.BOUNDARY)return Ts.BOUNDARY}return Ts.INTERIOR}if(arguments[0]instanceof Ss&&arguments[1]instanceof gh){var s=arguments[0],a=arguments[1];if(!a.getEnvelopeInternal().intersects(s))return Ts.EXTERIOR;var h=a.getCoordinates();return a.isClosed()||!s.equals(h[0])&&!s.equals(h[h.length-1])?ha.isOnLine(s,h)?Ts.INTERIOR:Ts.EXTERIOR:Ts.BOUNDARY}if(arguments[0]instanceof Ss&&arguments[1]instanceof _h){var c=arguments[0],f=arguments[1],p=f.getCoordinate();return p.equals2D(c)?Ts.INTERIOR:Ts.EXTERIOR}},Wf.prototype.locateInPolygonRing=function(t,n){return n.getEnvelopeInternal().intersects(t)?ha.locatePointInRing(t,n.getCoordinates()):Ts.EXTERIOR},Wf.prototype.intersects=function(t,n){return this.locate(t,n)!==Ts.EXTERIOR},Wf.prototype.updateLocationInfo=function(t){t===Ts.INTERIOR&&(this._isIn=!0),t===Ts.BOUNDARY&&this._numBoundaries++},Wf.prototype.computeLocation=function(t,n){var e=this;if(n instanceof _h&&this.updateLocationInfo(this.locateInternal(t,n)),n instanceof gh)this.updateLocationInfo(this.locateInternal(t,n));else if(n instanceof mh)this.updateLocationInfo(this.locateInternal(t,n));else if(n instanceof rh)for(var r=n,l=0;l<r.getNumGeometries();l++){var i=r.getGeometryN(l);e.updateLocationInfo(e.locateInternal(t,i))}else if(n instanceof wh)for(var o=n,u=0;u<o.getNumGeometries();u++){var s=o.getGeometryN(u);e.updateLocationInfo(e.locateInternal(t,s))}else if(n instanceof eh)for(var a=new af(n);a.hasNext();){var h=a.next();h!==n&&e.computeLocation(t,h)}},Wf.prototype.locate=function(t,n){return n.isEmpty()?Ts.EXTERIOR:n instanceof gh||n instanceof mh?this.locateInternal(t,n):(this._isIn=!1,this._numBoundaries=0,this.computeLocation(t,n),this._boundaryRule.isInBoundary(this._numBoundaries)?Ts.BOUNDARY:this._numBoundaries>0||this._isIn?Ts.INTERIOR:Ts.EXTERIOR)},Wf.prototype.interfaces_=function(){return[]},Wf.prototype.getClass=function(){return Wf};var Zf=function t(){if(this._component=null,this._segIndex=null,this._pt=null,2===arguments.length){var n=arguments[0],e=arguments[1];t.call(this,n,t.INSIDE_AREA,e)}else if(3===arguments.length){var r=arguments[0],l=arguments[1],i=arguments[2];this._component=r,this._segIndex=l,this._pt=i}},Hf={INSIDE_AREA:{configurable:!0}};Zf.prototype.isInsideArea=function(){return this._segIndex===Zf.INSIDE_AREA},Zf.prototype.getCoordinate=function(){return this._pt},Zf.prototype.getGeometryComponent=function(){return this._component},Zf.prototype.getSegmentIndex=function(){return this._segIndex},Zf.prototype.interfaces_=function(){return[]},Zf.prototype.getClass=function(){return Zf},Hf.INSIDE_AREA.get=function(){return-1},Object.defineProperties(Zf,Hf);var Kf=function(t){this._pts=t||null};Kf.prototype.filter=function(t){t instanceof _h&&this._pts.add(t)},Kf.prototype.interfaces_=function(){return[th]},Kf.prototype.getClass=function(){return Kf},Kf.getPoints=function(){if(1===arguments.length){var t=arguments[0];return t instanceof _h?xc.singletonList(t):Kf.getPoints(t,new Ia)}if(2===arguments.length){var n=arguments[0],e=arguments[1];return n instanceof _h?e.add(n):n instanceof eh&&n.apply(new Kf(e)),e}};var Jf=function(){this._locations=null;var t=arguments[0];this._locations=t};Jf.prototype.filter=function(t){(t instanceof _h||t instanceof gh||t instanceof mh)&&this._locations.add(new Zf(t,0,t.getCoordinate()))},Jf.prototype.interfaces_=function(){return[th]},Jf.prototype.getClass=function(){return Jf},Jf.getLocations=function(t){var n=new Ia;return t.apply(new Jf(n)),n};var Qf=function(){if(this._geom=null,this._terminateDistance=0,this._ptLocator=new Wf,this._minDistanceLocation=null,this._minDistance=xs.MAX_VALUE,2===arguments.length){var t=arguments[0],n=arguments[1];this._geom=[t,n],this._terminateDistance=0}else if(3===arguments.length){var e=arguments[0],r=arguments[1],l=arguments[2];this._geom=new Array(2).fill(null),this._geom[0]=e,this._geom[1]=r,this._terminateDistance=l}};Qf.prototype.computeContainmentDistance=function(){var t=this;if(0===arguments.length){var n=new Array(2).fill(null);if(this.computeContainmentDistance(0,n),this._minDistance<=this._terminateDistance)return null;this.computeContainmentDistance(1,n)}else if(2===arguments.length){var e=arguments[0],r=arguments[1],l=1-e,i=Xf.getPolygons(this._geom[e]);if(i.size()>0){var o=Jf.getLocations(this._geom[l]);if(this.computeContainmentDistance(o,i,r),this._minDistance<=this._terminateDistance)return this._minDistanceLocation[l]=r[0],this._minDistanceLocation[e]=r[1],null}}else if(3===arguments.length)if(arguments[2]instanceof Array&&Ls(arguments[0],Ma)&&Ls(arguments[1],Ma)){for(var u=arguments[0],s=arguments[1],a=arguments[2],h=0;h<u.size();h++)for(var c=u.get(h),f=0;f<s.size();f++)if(t.computeContainmentDistance(c,s.get(f),a),t._minDistance<=t._terminateDistance)return null}else if(arguments[2]instanceof Array&&arguments[0]instanceof Zf&&arguments[1]instanceof mh){var p=arguments[0],d=arguments[1],g=arguments[2],y=p.getCoordinate();if(Ts.EXTERIOR!==this._ptLocator.locate(y,d))return this._minDistance=0,g[0]=p,g[1]=new Zf(d,y),null}},Qf.prototype.computeMinDistanceLinesPoints=function(t,n,e){for(var r=this,l=0;l<t.size();l++)for(var i=t.get(l),o=0;o<n.size();o++){var u=n.get(o);if(r.computeMinDistance(i,u,e),r._minDistance<=r._terminateDistance)return null}},Qf.prototype.computeFacetDistance=function(){var t=new Array(2).fill(null),n=Vf.getLines(this._geom[0]),e=Vf.getLines(this._geom[1]),r=Kf.getPoints(this._geom[0]),l=Kf.getPoints(this._geom[1]);return this.computeMinDistanceLines(n,e,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(n,l,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(e,r,t),this.updateMinDistance(t,!0),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistancePoints(r,l,t),void this.updateMinDistance(t,!1))))},Qf.prototype.nearestLocations=function(){return this.computeMinDistance(),this._minDistanceLocation},Qf.prototype.updateMinDistance=function(t,n){if(null===t[0])return null;n?(this._minDistanceLocation[0]=t[1],this._minDistanceLocation[1]=t[0]):(this._minDistanceLocation[0]=t[0],this._minDistanceLocation[1]=t[1])},Qf.prototype.nearestPoints=function(){return this.computeMinDistance(),[this._minDistanceLocation[0].getCoordinate(),this._minDistanceLocation[1].getCoordinate()]},Qf.prototype.computeMinDistance=function(){var t=this;if(0===arguments.length){if(null!==this._minDistanceLocation)return null;if(this._minDistanceLocation=new Array(2).fill(null),this.computeContainmentDistance(),this._minDistance<=this._terminateDistance)return null;this.computeFacetDistance()}else if(3===arguments.length)if(arguments[2]instanceof Array&&arguments[0]instanceof gh&&arguments[1]instanceof _h){var n=arguments[0],e=arguments[1],r=arguments[2];if(n.getEnvelopeInternal().distance(e.getEnvelopeInternal())>this._minDistance)return null;for(var l=n.getCoordinates(),i=e.getCoordinate(),o=0;o<l.length-1;o++){var u=ha.distancePointLine(i,l[o],l[o+1]);if(u<t._minDistance){t._minDistance=u;var s=new Dc(l[o],l[o+1]),a=s.closestPoint(i);r[0]=new Zf(n,o,a),r[1]=new Zf(e,0,i)}if(t._minDistance<=t._terminateDistance)return null}}else if(arguments[2]instanceof Array&&arguments[0]instanceof gh&&arguments[1]instanceof gh){var h=arguments[0],c=arguments[1],f=arguments[2];if(h.getEnvelopeInternal().distance(c.getEnvelopeInternal())>this._minDistance)return null;for(var p=h.getCoordinates(),d=c.getCoordinates(),g=0;g<p.length-1;g++)for(var y=0;y<d.length-1;y++){var _=ha.distanceLineLine(p[g],p[g+1],d[y],d[y+1]);if(_<t._minDistance){t._minDistance=_;var v=new Dc(p[g],p[g+1]),m=new Dc(d[y],d[y+1]),b=v.closestPoints(m);f[0]=new Zf(h,g,b[0]),f[1]=new Zf(c,y,b[1])}if(t._minDistance<=t._terminateDistance)return null}}},Qf.prototype.computeMinDistancePoints=function(t,n,e){for(var r=this,l=0;l<t.size();l++)for(var i=t.get(l),o=0;o<n.size();o++){var u=n.get(o),s=i.getCoordinate().distance(u.getCoordinate());if(s<r._minDistance&&(r._minDistance=s,e[0]=new Zf(i,0,i.getCoordinate()),e[1]=new Zf(u,0,u.getCoordinate())),r._minDistance<=r._terminateDistance)return null}},Qf.prototype.distance=function(){if(null===this._geom[0]||null===this._geom[1])throw new bs("null geometries are not supported");return this._geom[0].isEmpty()||this._geom[1].isEmpty()?0:(this.computeMinDistance(),this._minDistance)},Qf.prototype.computeMinDistanceLines=function(t,n,e){for(var r=this,l=0;l<t.size();l++)for(var i=t.get(l),o=0;o<n.size();o++){var u=n.get(o);if(r.computeMinDistance(i,u,e),r._minDistance<=r._terminateDistance)return null}},Qf.prototype.interfaces_=function(){return[]},Qf.prototype.getClass=function(){return Qf},Qf.distance=function(t,n){return new Qf(t,n).distance()},Qf.isWithinDistance=function(t,n,e){return new Qf(t,n,e).distance()<=e},Qf.nearestPoints=function(t,n){return new Qf(t,n).nearestPoints()};var $f=function(){this._pt=[new Ss,new Ss],this._distance=xs.NaN,this._isNull=!0};$f.prototype.getCoordinates=function(){return this._pt},$f.prototype.getCoordinate=function(t){return this._pt[t]},$f.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var n=arguments[0],e=arguments[1];if(this._isNull)return this.initialize(n,e),null;var r=n.distance(e);r<this._distance&&this.initialize(n,e,r)}},$f.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],n=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(n),this._distance=t.distance(n),this._isNull=!1}else if(3===arguments.length){var e=arguments[0],r=arguments[1],l=arguments[2];this._pt[0].setCoordinate(e),this._pt[1].setCoordinate(r),this._distance=l,this._isNull=!1}},$f.prototype.toString=function(){return na.toLineString(this._pt[0],this._pt[1])},$f.prototype.getDistance=function(){return this._distance},$f.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var n=arguments[0],e=arguments[1];if(this._isNull)return this.initialize(n,e),null;var r=n.distance(e);r>this._distance&&this.initialize(n,e,r)}},$f.prototype.interfaces_=function(){return[]},$f.prototype.getClass=function(){return $f};var tp=function(){};tp.prototype.interfaces_=function(){return[]},tp.prototype.getClass=function(){return tp},tp.computeDistance=function(){if(arguments[2]instanceof $f&&arguments[0]instanceof gh&&arguments[1]instanceof Ss)for(var t=arguments[0],n=arguments[1],e=arguments[2],r=new Dc,l=t.getCoordinates(),i=0;i<l.length-1;i++){r.setCoordinates(l[i],l[i+1]);var o=r.closestPoint(n);e.setMinimum(o,n)}else if(arguments[2]instanceof $f&&arguments[0]instanceof mh&&arguments[1]instanceof Ss){var u=arguments[0],s=arguments[1],a=arguments[2];tp.computeDistance(u.getExteriorRing(),s,a);for(var h=0;h<u.getNumInteriorRing();h++)tp.computeDistance(u.getInteriorRingN(h),s,a)}else if(arguments[2]instanceof $f&&arguments[0]instanceof pa&&arguments[1]instanceof Ss){var c=arguments[0],f=arguments[1],p=arguments[2];if(c instanceof gh)tp.computeDistance(c,f,p);else if(c instanceof mh)tp.computeDistance(c,f,p);else if(c instanceof eh)for(var d=c,g=0;g<d.getNumGeometries();g++){var y=d.getGeometryN(g);tp.computeDistance(y,f,p)}else p.setMinimum(c.getCoordinate(),f)}else if(arguments[2]instanceof $f&&arguments[0]instanceof Dc&&arguments[1]instanceof Ss){var _=arguments[0],v=arguments[1],m=arguments[2],b=_.closestPoint(v);m.setMinimum(b,v)}};var np=function(){this._g0=null,this._g1=null,this._ptDist=new $f,this._densifyFrac=0;var t=arguments[0],n=arguments[1];this._g0=t,this._g1=n},ep={MaxPointDistanceFilter:{configurable:!0},MaxDensifiedByFractionDistanceFilter:{configurable:!0}};np.prototype.getCoordinates=function(){return this._ptDist.getCoordinates()},np.prototype.setDensifyFraction=function(t){if(t>1||t<=0)throw new bs("Fraction is not in range (0.0 - 1.0]");this._densifyFrac=t},np.prototype.compute=function(t,n){this.computeOrientedDistance(t,n,this._ptDist),this.computeOrientedDistance(n,t,this._ptDist)},np.prototype.distance=function(){return this.compute(this._g0,this._g1),this._ptDist.getDistance()},np.prototype.computeOrientedDistance=function(t,n,e){var r=new rp(n);if(t.apply(r),e.setMaximum(r.getMaxPointDistance()),this._densifyFrac>0){var l=new lp(n,this._densifyFrac);t.apply(l),e.setMaximum(l.getMaxPointDistance())}},np.prototype.orientedDistance=function(){return this.computeOrientedDistance(this._g0,this._g1,this._ptDist),this._ptDist.getDistance()},np.prototype.interfaces_=function(){return[]},np.prototype.getClass=function(){return np},np.distance=function(){if(2===arguments.length){var t=arguments[0],n=arguments[1],e=new np(t,n);return e.distance()}if(3===arguments.length){var r=arguments[0],l=arguments[1],i=arguments[2],o=new np(r,l);return o.setDensifyFraction(i),o.distance()}},ep.MaxPointDistanceFilter.get=function(){return rp},ep.MaxDensifiedByFractionDistanceFilter.get=function(){return lp},Object.defineProperties(np,ep);var rp=function(){this._maxPtDist=new $f,this._minPtDist=new $f,this._euclideanDist=new tp,this._geom=null;var t=arguments[0];this._geom=t};rp.prototype.filter=function(t){this._minPtDist.initialize(),tp.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},rp.prototype.getMaxPointDistance=function(){return this._maxPtDist},rp.prototype.interfaces_=function(){return[ya]},rp.prototype.getClass=function(){return rp};var lp=function(){this._maxPtDist=new $f,this._minPtDist=new $f,this._geom=null,this._numSubSegs=0;var t=arguments[0],n=arguments[1];this._geom=t,this._numSubSegs=Math.trunc(Math.round(1/n))};lp.prototype.filter=function(t,n){var e=this;if(0===n)return null;for(var r=t.getCoordinate(n-1),l=t.getCoordinate(n),i=(l.x-r.x)/this._numSubSegs,o=(l.y-r.y)/this._numSubSegs,u=0;u<this._numSubSegs;u++){var s=r.x+u*i,a=r.y+u*o,h=new Ss(s,a);e._minPtDist.initialize(),tp.computeDistance(e._geom,h,e._minPtDist),e._maxPtDist.setMaximum(e._minPtDist)}},lp.prototype.isDone=function(){return!1},lp.prototype.isGeometryChanged=function(){return!1},lp.prototype.getMaxPointDistance=function(){return this._maxPtDist},lp.prototype.interfaces_=function(){return[nh]},lp.prototype.getClass=function(){return lp};var ip=function(t,n,e){this._minValidDistance=null,this._maxValidDistance=null,this._minDistanceFound=null,this._maxDistanceFound=null,this._isValid=!0,this._errMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._bufDistance=n||null,this._result=e||null},op={VERBOSE:{configurable:!0},MAX_DISTANCE_DIFF_FRAC:{configurable:!0}};ip.prototype.checkMaximumDistance=function(t,n,e){var r=new np(n,t);if(r.setDensifyFraction(.25),this._maxDistanceFound=r.orientedDistance(),this._maxDistanceFound>e){this._isValid=!1;var l=r.getCoordinates();this._errorLocation=l[1],this._errorIndicator=t.getFactory().createLineString(l),this._errMsg="Distance between buffer curve and input is too large ("+this._maxDistanceFound+" at "+na.toLineString(l[0],l[1])+")"}},ip.prototype.isValid=function(){var t=Math.abs(this._bufDistance),n=ip.MAX_DISTANCE_DIFF_FRAC*t;return this._minValidDistance=t-n,this._maxValidDistance=t+n,!(!this._input.isEmpty()&&!this._result.isEmpty())||(this._bufDistance>0?this.checkPositiveValid():this.checkNegativeValid(),ip.VERBOSE&&Ws.out.println("Min Dist= "+this._minDistanceFound+"  err= "+(1-this._minDistanceFound/this._bufDistance)+"  Max Dist= "+this._maxDistanceFound+"  err= "+(this._maxDistanceFound/this._bufDistance-1)),this._isValid)},ip.prototype.checkNegativeValid=function(){if(!(this._input instanceof mh||this._input instanceof wh||this._input instanceof eh))return null;var t=this.getPolygonLines(this._input);if(this.checkMinimumDistance(t,this._result,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(t,this._result,this._maxValidDistance)},ip.prototype.getErrorIndicator=function(){return this._errorIndicator},ip.prototype.checkMinimumDistance=function(t,n,e){var r=new Qf(t,n,e);if(this._minDistanceFound=r.distance(),this._minDistanceFound<e){this._isValid=!1;var l=r.nearestPoints();this._errorLocation=r.nearestPoints()[1],this._errorIndicator=t.getFactory().createLineString(l),this._errMsg="Distance between buffer curve and input is too small ("+this._minDistanceFound+" at "+na.toLineString(l[0],l[1])+" )"}},ip.prototype.checkPositiveValid=function(){var t=this._result.getBoundary();if(this.checkMinimumDistance(this._input,t,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(this._input,t,this._maxValidDistance)},ip.prototype.getErrorLocation=function(){return this._errorLocation},ip.prototype.getPolygonLines=function(t){for(var n=new Ia,e=new Vf(n),r=Xf.getPolygons(t).iterator();r.hasNext();)r.next().apply(e);return t.getFactory().buildGeometry(n)},ip.prototype.getErrorMessage=function(){return this._errMsg},ip.prototype.interfaces_=function(){return[]},ip.prototype.getClass=function(){return ip},op.VERBOSE.get=function(){return!1},op.MAX_DISTANCE_DIFF_FRAC.get=function(){return.012},Object.defineProperties(ip,op);var up=function(t,n,e){this._isValid=!0,this._errorMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._distance=n||null,this._result=e||null},sp={VERBOSE:{configurable:!0},MAX_ENV_DIFF_FRAC:{configurable:!0}};up.prototype.isValid=function(){return this.checkPolygonal(),this._isValid?(this.checkExpectedEmpty(),this._isValid?(this.checkEnvelope(),this._isValid?(this.checkArea(),this._isValid?(this.checkDistance(),this._isValid):this._isValid):this._isValid):this._isValid):this._isValid},up.prototype.checkEnvelope=function(){if(this._distance<0)return null;var t=this._distance*up.MAX_ENV_DIFF_FRAC;0===t&&(t=.001);var n=new Hs(this._input.getEnvelopeInternal());n.expandBy(this._distance);var e=new Hs(this._result.getEnvelopeInternal());e.expandBy(t),e.contains(n)||(this._isValid=!1,this._errorMsg="Buffer envelope is incorrect",this._errorIndicator=this._input.getFactory().toGeometry(e)),this.report("Envelope")},up.prototype.checkDistance=function(){var t=new ip(this._input,this._distance,this._result);t.isValid()||(this._isValid=!1,this._errorMsg=t.getErrorMessage(),this._errorLocation=t.getErrorLocation(),this._errorIndicator=t.getErrorIndicator()),this.report("Distance")},up.prototype.checkArea=function(){var t=this._input.getArea(),n=this._result.getArea();this._distance>0&&t>n&&(this._isValid=!1,this._errorMsg="Area of positive buffer is smaller than input",this._errorIndicator=this._result),this._distance<0&&t<n&&(this._isValid=!1,this._errorMsg="Area of negative buffer is larger than input",this._errorIndicator=this._result),this.report("Area")},up.prototype.checkPolygonal=function(){this._result instanceof mh||this._result instanceof wh||(this._isValid=!1),this._errorMsg="Result is not polygonal",this._errorIndicator=this._result,this.report("Polygonal")},up.prototype.getErrorIndicator=function(){return this._errorIndicator},up.prototype.getErrorLocation=function(){return this._errorLocation},up.prototype.checkExpectedEmpty=function(){return this._input.getDimension()>=2||this._distance>0?null:(this._result.isEmpty()||(this._isValid=!1,this._errorMsg="Result is non-empty",this._errorIndicator=this._result),void this.report("ExpectedEmpty"))},up.prototype.report=function(t){if(!up.VERBOSE)return null;Ws.out.println("Check "+t+": "+(this._isValid?"passed":"FAILED"))},up.prototype.getErrorMessage=function(){return this._errorMsg},up.prototype.interfaces_=function(){return[]},up.prototype.getClass=function(){return up},up.isValidMsg=function(t,n,e){var r=new up(t,n,e);return r.isValid()?null:r.getErrorMessage()},up.isValid=function(t,n,e){return!!new up(t,n,e).isValid()},sp.VERBOSE.get=function(){return!1},sp.MAX_ENV_DIFF_FRAC.get=function(){return.012},Object.defineProperties(up,sp);var ap=function(){this._pts=null,this._data=null;var t=arguments[0],n=arguments[1];this._pts=t,this._data=n};ap.prototype.getCoordinates=function(){return this._pts},ap.prototype.size=function(){return this._pts.length},ap.prototype.getCoordinate=function(t){return this._pts[t]},ap.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},ap.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:Nc.octant(this.getCoordinate(t),this.getCoordinate(t+1))},ap.prototype.setData=function(t){this._data=t},ap.prototype.getData=function(){return this._data},ap.prototype.toString=function(){return na.toLineString(new Ih(this._pts))},ap.prototype.interfaces_=function(){return[Lc]},ap.prototype.getClass=function(){return ap};var hp=function(){this._findAllIntersections=!1,this._isCheckEndSegmentsOnly=!1,this._li=null,this._interiorIntersection=null,this._intSegments=null,this._intersections=new Ia,this._intersectionCount=0,this._keepIntersections=!0;var t=arguments[0];this._li=t,this._interiorIntersection=null};hp.prototype.getInteriorIntersection=function(){return this._interiorIntersection},hp.prototype.setCheckEndSegmentsOnly=function(t){this._isCheckEndSegmentsOnly=t},hp.prototype.getIntersectionSegments=function(){return this._intSegments},hp.prototype.count=function(){return this._intersectionCount},hp.prototype.getIntersections=function(){return this._intersections},hp.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},hp.prototype.setKeepIntersections=function(t){this._keepIntersections=t},hp.prototype.processIntersections=function(t,n,e,r){if(!this._findAllIntersections&&this.hasIntersection())return null;if(t===e&&n===r)return null;if(this._isCheckEndSegmentsOnly&&!this.isEndSegment(t,n)&&!this.isEndSegment(e,r))return null;var l=t.getCoordinates()[n],i=t.getCoordinates()[n+1],o=e.getCoordinates()[r],u=e.getCoordinates()[r+1];this._li.computeIntersection(l,i,o,u),this._li.hasIntersection()&&this._li.isInteriorIntersection()&&(this._intSegments=new Array(4).fill(null),this._intSegments[0]=l,this._intSegments[1]=i,this._intSegments[2]=o,this._intSegments[3]=u,this._interiorIntersection=this._li.getIntersection(0),this._keepIntersections&&this._intersections.add(this._interiorIntersection),this._intersectionCount++)},hp.prototype.isEndSegment=function(t,n){return 0===n||n>=t.size()-2},hp.prototype.hasIntersection=function(){return null!==this._interiorIntersection},hp.prototype.isDone=function(){return!this._findAllIntersections&&null!==this._interiorIntersection},hp.prototype.interfaces_=function(){return[yf]},hp.prototype.getClass=function(){return hp},hp.createAllIntersectionsFinder=function(t){var n=new hp(t);return n.setFindAllIntersections(!0),n},hp.createAnyIntersectionFinder=function(t){return new hp(t)},hp.createIntersectionCounter=function(t){var n=new hp(t);return n.setFindAllIntersections(!0),n.setKeepIntersections(!1),n};var cp=function(){this._li=new ua,this._segStrings=null,this._findAllIntersections=!1,this._segInt=null,this._isValid=!0;var t=arguments[0];this._segStrings=t};cp.prototype.execute=function(){if(null!==this._segInt)return null;this.checkInteriorIntersections()},cp.prototype.getIntersections=function(){return this._segInt.getIntersections()},cp.prototype.isValid=function(){return this.execute(),this._isValid},cp.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},cp.prototype.checkInteriorIntersections=function(){this._isValid=!0,this._segInt=new hp(this._li),this._segInt.setFindAllIntersections(this._findAllIntersections);var t=new qc;if(t.setSegmentIntersector(this._segInt),t.computeNodes(this._segStrings),this._segInt.hasIntersection())return this._isValid=!1,null},cp.prototype.checkValid=function(){if(this.execute(),!this._isValid)throw new Kh(this.getErrorMessage(),this._segInt.getInteriorIntersection())},cp.prototype.getErrorMessage=function(){if(this._isValid)return"no intersections found";var t=this._segInt.getIntersectionSegments();return"found non-noded intersection between "+na.toLineString(t[0],t[1])+" and "+na.toLineString(t[2],t[3])},cp.prototype.interfaces_=function(){return[]},cp.prototype.getClass=function(){return cp},cp.computeIntersections=function(t){var n=new cp(t);return n.setFindAllIntersections(!0),n.isValid(),n.getIntersections()};var fp=function t(){this._nv=null;var n=arguments[0];this._nv=new cp(t.toSegmentStrings(n))};fp.prototype.checkValid=function(){this._nv.checkValid()},fp.prototype.interfaces_=function(){return[]},fp.prototype.getClass=function(){return fp},fp.toSegmentStrings=function(t){for(var n=new Ia,e=t.iterator();e.hasNext();){var r=e.next();n.add(new ap(r.getCoordinates(),r))}return n},fp.checkValid=function(t){new fp(t).checkValid()};var pp=function(t){this._mapOp=t};pp.prototype.map=function(t){for(var n=new Ia,e=0;e<t.getNumGeometries();e++){var r=this._mapOp.map(t.getGeometryN(e));r.isEmpty()||n.add(r)}return t.getFactory().createGeometryCollection(kh.toGeometryArray(n))},pp.prototype.interfaces_=function(){return[]},pp.prototype.getClass=function(){return pp},pp.map=function(t,n){return new pp(n).map(t)};var dp=function(){this._op=null,this._geometryFactory=null,this._ptLocator=null,this._lineEdgesList=new Ia,this._resultLineList=new Ia;var t=arguments[0],n=arguments[1],e=arguments[2];this._op=t,this._geometryFactory=n,this._ptLocator=e};dp.prototype.collectLines=function(t){for(var n=this,e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var r=e.next();n.collectLineEdge(r,t,n._lineEdgesList),n.collectBoundaryTouchEdge(r,t,n._lineEdgesList)}},dp.prototype.labelIsolatedLine=function(t,n){var e=this._ptLocator.locate(t.getCoordinate(),this._op.getArgGeometry(n));t.getLabel().setLocation(n,e)},dp.prototype.build=function(t){return this.findCoveredLineEdges(),this.collectLines(t),this.buildLines(t),this._resultLineList},dp.prototype.collectLineEdge=function(t,n,e){var r=t.getLabel(),l=t.getEdge();t.isLineEdge()&&(t.isVisited()||!Zp.isResultOfOp(r,n)||l.isCovered()||(e.add(l),t.setVisitedEdge(!0)))},dp.prototype.findCoveredLineEdges=function(){for(var t=this._op.getGraph().getNodes().iterator();t.hasNext();)t.next().getEdges().findCoveredLineEdges();for(var n=this._op.getGraph().getEdgeEnds().iterator();n.hasNext();){var e=n.next(),r=e.getEdge();if(e.isLineEdge()&&!r.isCoveredSet()){var l=this._op.isCoveredByA(e.getCoordinate());r.setCovered(l)}}},dp.prototype.labelIsolatedLines=function(t){for(var n=t.iterator();n.hasNext();){var e=n.next(),r=e.getLabel();e.isIsolated()&&(r.isNull(0)?this.labelIsolatedLine(e,0):this.labelIsolatedLine(e,1))}},dp.prototype.buildLines=function(t){for(var n=this._lineEdgesList.iterator();n.hasNext();){var e=n.next(),r=this._geometryFactory.createLineString(e.getCoordinates());this._resultLineList.add(r),e.setInResult(!0)}},dp.prototype.collectBoundaryTouchEdge=function(t,n,e){var r=t.getLabel();return t.isLineEdge()||t.isVisited()||t.isInteriorAreaEdge()||t.getEdge().isInResult()?null:(la.isTrue(!(t.isInResult()||t.getSym().isInResult())||!t.getEdge().isInResult()),void(Zp.isResultOfOp(r,n)&&n===Zp.INTERSECTION&&(e.add(t.getEdge()),t.setVisitedEdge(!0))))},dp.prototype.interfaces_=function(){return[]},dp.prototype.getClass=function(){return dp};var gp=function(){this._op=null,this._geometryFactory=null,this._resultPointList=new Ia;var t=arguments[0],n=arguments[1];this._op=t,this._geometryFactory=n};gp.prototype.filterCoveredNodeToPoint=function(t){var n=t.getCoordinate();if(!this._op.isCoveredByLA(n)){var e=this._geometryFactory.createPoint(n);this._resultPointList.add(e)}},gp.prototype.extractNonCoveredResultNodes=function(t){for(var n=this._op.getGraph().getNodes().iterator();n.hasNext();){var e=n.next();if(!(e.isInResult()||e.isIncidentEdgeInResult()||0!==e.getEdges().getDegree()&&t!==Zp.INTERSECTION)){var r=e.getLabel();Zp.isResultOfOp(r,t)&&this.filterCoveredNodeToPoint(e)}}},gp.prototype.build=function(t){return this.extractNonCoveredResultNodes(t),this._resultPointList},gp.prototype.interfaces_=function(){return[]},gp.prototype.getClass=function(){return gp};var yp=function(){this._inputGeom=null,this._factory=null,this._pruneEmptyGeometry=!0,this._preserveGeometryCollectionType=!0,this._preserveCollections=!1,this._preserveType=!1};yp.prototype.transformPoint=function(t,n){return this._factory.createPoint(this.transformCoordinates(t.getCoordinateSequence(),t))},yp.prototype.transformPolygon=function(t,n){var e=!0,r=this.transformLinearRing(t.getExteriorRing(),t);null!==r&&r instanceof xh&&!r.isEmpty()||(e=!1);for(var l=new Ia,i=0;i<t.getNumInteriorRing();i++){var o=this.transformLinearRing(t.getInteriorRingN(i),t);null===o||o.isEmpty()||(o instanceof xh||(e=!1),l.add(o))}if(e)return this._factory.createPolygon(r,l.toArray([]));var u=new Ia;return null!==r&&u.add(r),u.addAll(l),this._factory.buildGeometry(u)},yp.prototype.createCoordinateSequence=function(t){return this._factory.getCoordinateSequenceFactory().create(t)},yp.prototype.getInputGeometry=function(){return this._inputGeom},yp.prototype.transformMultiLineString=function(t,n){for(var e=new Ia,r=0;r<t.getNumGeometries();r++){var l=this.transformLineString(t.getGeometryN(r),t);null!==l&&(l.isEmpty()||e.add(l))}return this._factory.buildGeometry(e)},yp.prototype.transformCoordinates=function(t,n){return this.copy(t)},yp.prototype.transformLineString=function(t,n){return this._factory.createLineString(this.transformCoordinates(t.getCoordinateSequence(),t))},yp.prototype.transformMultiPoint=function(t,n){for(var e=new Ia,r=0;r<t.getNumGeometries();r++){var l=this.transformPoint(t.getGeometryN(r),t);null!==l&&(l.isEmpty()||e.add(l))}return this._factory.buildGeometry(e)},yp.prototype.transformMultiPolygon=function(t,n){for(var e=new Ia,r=0;r<t.getNumGeometries();r++){var l=this.transformPolygon(t.getGeometryN(r),t);null!==l&&(l.isEmpty()||e.add(l))}return this._factory.buildGeometry(e)},yp.prototype.copy=function(t){return t.copy()},yp.prototype.transformGeometryCollection=function(t,n){for(var e=new Ia,r=0;r<t.getNumGeometries();r++){var l=this.transform(t.getGeometryN(r));null!==l&&(this._pruneEmptyGeometry&&l.isEmpty()||e.add(l))}return this._preserveGeometryCollectionType?this._factory.createGeometryCollection(kh.toGeometryArray(e)):this._factory.buildGeometry(e)},yp.prototype.transform=function(t){if(this._inputGeom=t,this._factory=t.getFactory(),t instanceof _h)return this.transformPoint(t,null);if(t instanceof bh)return this.transformMultiPoint(t,null);if(t instanceof xh)return this.transformLinearRing(t,null);if(t instanceof gh)return this.transformLineString(t,null);if(t instanceof rh)return this.transformMultiLineString(t,null);if(t instanceof mh)return this.transformPolygon(t,null);if(t instanceof wh)return this.transformMultiPolygon(t,null);if(t instanceof eh)return this.transformGeometryCollection(t,null);throw new bs("Unknown Geometry subtype: "+t.getClass().getName())},yp.prototype.transformLinearRing=function(t,n){var e=this.transformCoordinates(t.getCoordinateSequence(),t);if(null===e)return this._factory.createLinearRing(null);var r=e.size();return r>0&&r<4&&!this._preserveType?this._factory.createLineString(e):this._factory.createLinearRing(e)},yp.prototype.interfaces_=function(){return[]},yp.prototype.getClass=function(){return yp};var _p=function t(){if(this._snapTolerance=0,this._srcPts=null,this._seg=new Dc,this._allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof gh&&"number"==typeof arguments[1]){var n=arguments[0],e=arguments[1];t.call(this,n.getCoordinates(),e)}else if(arguments[0]instanceof Array&&"number"==typeof arguments[1]){var r=arguments[0],l=arguments[1];this._srcPts=r,this._isClosed=t.isClosed(r),this._snapTolerance=l}};_p.prototype.snapVertices=function(t,n){for(var e=this._isClosed?t.size()-1:t.size(),r=0;r<e;r++){var l=t.get(r),i=this.findSnapForVertex(l,n);null!==i&&(t.set(r,new Ss(i)),0===r&&this._isClosed&&t.set(t.size()-1,new Ss(i)))}},_p.prototype.findSnapForVertex=function(t,n){for(var e=0;e<n.length;e++){if(t.equals2D(n[e]))return null;if(t.distance(n[e])<this._snapTolerance)return n[e]}return null},_p.prototype.snapTo=function(t){var n=new Ra(this._srcPts);return this.snapVertices(n,t),this.snapSegments(n,t),n.toCoordinateArray()},_p.prototype.snapSegments=function(t,n){if(0===n.length)return null;var e=n.length;n[0].equals2D(n[n.length-1])&&(e=n.length-1);for(var r=0;r<e;r++){var l=n[r],i=this.findSegmentIndexToSnap(l,t);i>=0&&t.add(i+1,new Ss(l),!1)}},_p.prototype.findSegmentIndexToSnap=function(t,n){for(var e=this,r=xs.MAX_VALUE,l=-1,i=0;i<n.size()-1;i++){if(e._seg.p0=n.get(i),e._seg.p1=n.get(i+1),e._seg.p0.equals2D(t)||e._seg.p1.equals2D(t)){if(e._allowSnappingToSourceVertices)continue;return-1}var o=e._seg.distance(t);o<e._snapTolerance&&o<r&&(r=o,l=i)}return l},_p.prototype.setAllowSnappingToSourceVertices=function(t){this._allowSnappingToSourceVertices=t},_p.prototype.interfaces_=function(){return[]},_p.prototype.getClass=function(){return _p},_p.isClosed=function(t){return!(t.length<=1)&&t[0].equals2D(t[t.length-1])};var vp=function(t){this._srcGeom=t||null},mp={SNAP_PRECISION_FACTOR:{configurable:!0}};vp.prototype.snapTo=function(t,n){var e=this.extractTargetCoordinates(t);return new bp(n,e).transform(this._srcGeom)},vp.prototype.snapToSelf=function(t,n){var e=this.extractTargetCoordinates(this._srcGeom),r=new bp(t,e,!0).transform(this._srcGeom),l=r;return n&&Ls(l,vh)&&(l=r.buffer(0)),l},vp.prototype.computeSnapTolerance=function(t){return this.computeMinimumSegmentLength(t)/10},vp.prototype.extractTargetCoordinates=function(t){for(var n=new Ha,e=t.getCoordinates(),r=0;r<e.length;r++)n.add(e[r]);return n.toArray(new Array(0).fill(null))},vp.prototype.computeMinimumSegmentLength=function(t){for(var n=xs.MAX_VALUE,e=0;e<t.length-1;e++){var r=t[e].distance(t[e+1]);r<n&&(n=r)}return n},vp.prototype.interfaces_=function(){return[]},vp.prototype.getClass=function(){return vp},vp.snap=function(t,n,e){var r=new Array(2).fill(null),l=new vp(t);r[0]=l.snapTo(n,e);var i=new vp(n);return r[1]=i.snapTo(r[0],e),r},vp.computeOverlaySnapTolerance=function(){if(1===arguments.length){var t=arguments[0],n=vp.computeSizeBasedSnapTolerance(t),e=t.getPrecisionModel();if(e.getType()===Lh.FIXED){var r=1/e.getScale()*2/1.415;r>n&&(n=r)}return n}if(2===arguments.length){var l=arguments[0],i=arguments[1];return Math.min(vp.computeOverlaySnapTolerance(l),vp.computeOverlaySnapTolerance(i))}},vp.computeSizeBasedSnapTolerance=function(t){var n=t.getEnvelopeInternal();return Math.min(n.getHeight(),n.getWidth())*vp.SNAP_PRECISION_FACTOR},vp.snapToSelf=function(t,n,e){return new vp(t).snapToSelf(n,e)},mp.SNAP_PRECISION_FACTOR.get=function(){return 1e-9},Object.defineProperties(vp,mp);var bp=function(t){function n(n,e,r){t.call(this),this._snapTolerance=n||null,this._snapPts=e||null,this._isSelfSnap=void 0!==r&&r}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.snapLine=function(t,n){var e=new _p(t,this._snapTolerance);return e.setAllowSnappingToSourceVertices(this._isSelfSnap),e.snapTo(n)},n.prototype.transformCoordinates=function(t,n){var e=t.toCoordinateArray(),r=this.snapLine(e,this._snapPts);return this._factory.getCoordinateSequenceFactory().create(r)},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(yp),xp=function(){this._isFirst=!0,this._commonMantissaBitsCount=53,this._commonBits=0,this._commonSignExp=null};xp.prototype.getCommon=function(){return xs.longBitsToDouble(this._commonBits)},xp.prototype.add=function(t){var n=xs.doubleToLongBits(t);return this._isFirst?(this._commonBits=n,this._commonSignExp=xp.signExpBits(this._commonBits),this._isFirst=!1,null):xp.signExpBits(n)!==this._commonSignExp?(this._commonBits=0,null):(this._commonMantissaBitsCount=xp.numCommonMostSigMantissaBits(this._commonBits,n),void(this._commonBits=xp.zeroLowerBits(this._commonBits,64-(12+this._commonMantissaBitsCount))))},xp.prototype.toString=function(){if(1===arguments.length){var t=arguments[0],n=xs.longBitsToDouble(t),e=xs.toBinaryString(t),r="0000000000000000000000000000000000000000000000000000000000000000"+e,l=r.substring(r.length-64),i=l.substring(0,1)+"  "+l.substring(1,12)+"(exp) "+l.substring(12)+" [ "+n+" ]";return i}},xp.prototype.interfaces_=function(){return[]},xp.prototype.getClass=function(){return xp},xp.getBit=function(t,n){return 0!=(t&1<<n)?1:0},xp.signExpBits=function(t){return t>>52},xp.zeroLowerBits=function(t,n){return t&~((1<<n)-1)},xp.numCommonMostSigMantissaBits=function(t,n){for(var e=0,r=52;r>=0;r--){if(xp.getBit(t,r)!==xp.getBit(n,r))return e;e++}return 52};var wp=function(){this._commonCoord=null,this._ccFilter=new Cp},Ep={CommonCoordinateFilter:{configurable:!0},Translater:{configurable:!0}};wp.prototype.addCommonBits=function(t){var n=new Op(this._commonCoord);t.apply(n),t.geometryChanged()},wp.prototype.removeCommonBits=function(t){if(0===this._commonCoord.x&&0===this._commonCoord.y)return t;var n=new Ss(this._commonCoord);n.x=-n.x,n.y=-n.y;var e=new Op(n);return t.apply(e),t.geometryChanged(),t},wp.prototype.getCommonCoordinate=function(){return this._commonCoord},wp.prototype.add=function(t){t.apply(this._ccFilter),this._commonCoord=this._ccFilter.getCommonCoordinate()},wp.prototype.interfaces_=function(){return[]},wp.prototype.getClass=function(){return wp},Ep.CommonCoordinateFilter.get=function(){return Cp},Ep.Translater.get=function(){return Op},Object.defineProperties(wp,Ep);var Cp=function(){this._commonBitsX=new xp,this._commonBitsY=new xp};Cp.prototype.filter=function(t){this._commonBitsX.add(t.x),this._commonBitsY.add(t.y)},Cp.prototype.getCommonCoordinate=function(){return new Ss(this._commonBitsX.getCommon(),this._commonBitsY.getCommon())},Cp.prototype.interfaces_=function(){return[ya]},Cp.prototype.getClass=function(){return Cp};var Op=function(){this.trans=null;var t=arguments[0];this.trans=t};Op.prototype.filter=function(t,n){var e=t.getOrdinate(n,0)+this.trans.x,r=t.getOrdinate(n,1)+this.trans.y;t.setOrdinate(n,0,e),t.setOrdinate(n,1,r)},Op.prototype.isDone=function(){return!1},Op.prototype.isGeometryChanged=function(){return!0},Op.prototype.interfaces_=function(){return[nh]},Op.prototype.getClass=function(){return Op};var Mp=function(t,n){this._geom=new Array(2).fill(null),this._snapTolerance=null,this._cbr=null,this._geom[0]=t,this._geom[1]=n,this.computeSnapTolerance()};Mp.prototype.selfSnap=function(t){return new vp(t).snapTo(t,this._snapTolerance)},Mp.prototype.removeCommonBits=function(t){this._cbr=new wp,this._cbr.add(t[0]),this._cbr.add(t[1]);var n=new Array(2).fill(null);return n[0]=this._cbr.removeCommonBits(t[0].copy()),n[1]=this._cbr.removeCommonBits(t[1].copy()),n},Mp.prototype.prepareResult=function(t){return this._cbr.addCommonBits(t),t},Mp.prototype.getResultGeometry=function(t){var n=this.snap(this._geom),e=Zp.overlayOp(n[0],n[1],t);return this.prepareResult(e)},Mp.prototype.checkValid=function(t){t.isValid()||Ws.out.println("Snapped geometry is invalid")},Mp.prototype.computeSnapTolerance=function(){this._snapTolerance=vp.computeOverlaySnapTolerance(this._geom[0],this._geom[1])},Mp.prototype.snap=function(t){var n=this.removeCommonBits(t);return vp.snap(n[0],n[1],this._snapTolerance)},Mp.prototype.interfaces_=function(){return[]},Mp.prototype.getClass=function(){return Mp},Mp.overlayOp=function(t,n,e){return new Mp(t,n).getResultGeometry(e)},Mp.union=function(t,n){return Mp.overlayOp(t,n,Zp.UNION)},Mp.intersection=function(t,n){return Mp.overlayOp(t,n,Zp.INTERSECTION)},Mp.symDifference=function(t,n){return Mp.overlayOp(t,n,Zp.SYMDIFFERENCE)},Mp.difference=function(t,n){return Mp.overlayOp(t,n,Zp.DIFFERENCE)};var Sp=function(t,n){this._geom=new Array(2).fill(null),this._geom[0]=t,this._geom[1]=n};Sp.prototype.getResultGeometry=function(t){var n=null,e=!1,r=null;try{n=Zp.overlayOp(this._geom[0],this._geom[1],t),e=!0}catch(t){if(!(t instanceof ea))throw t;r=t}if(!e)try{n=Mp.overlayOp(this._geom[0],this._geom[1],t)}catch(t){throw t instanceof ea?r:t}return n},Sp.prototype.interfaces_=function(){return[]},Sp.prototype.getClass=function(){return Sp},Sp.overlayOp=function(t,n,e){return new Sp(t,n).getResultGeometry(e)},Sp.union=function(t,n){return Sp.overlayOp(t,n,Zp.UNION)},Sp.intersection=function(t,n){return Sp.overlayOp(t,n,Zp.INTERSECTION)},Sp.symDifference=function(t,n){return Sp.overlayOp(t,n,Zp.SYMDIFFERENCE)},Sp.difference=function(t,n){return Sp.overlayOp(t,n,Zp.DIFFERENCE)};var Ip=function(){this.mce=null,this.chainIndex=null;var t=arguments[0],n=arguments[1];this.mce=t,this.chainIndex=n};Ip.prototype.computeIntersections=function(t,n){this.mce.computeIntersectsForChain(this.chainIndex,t.mce,t.chainIndex,n)},Ip.prototype.interfaces_=function(){return[]},Ip.prototype.getClass=function(){return Ip};var Pp=function t(){if(this._label=null,this._xValue=null,this._eventType=null,this._insertEvent=null,this._deleteEventIndex=null,this._obj=null,2===arguments.length){var n=arguments[0],e=arguments[1];this._eventType=t.DELETE,this._xValue=n,this._insertEvent=e}else if(3===arguments.length){var r=arguments[0],l=arguments[1],i=arguments[2];this._eventType=t.INSERT,this._label=r,this._xValue=l,this._obj=i}},Rp={INSERT:{configurable:!0},DELETE:{configurable:!0}};Pp.prototype.isDelete=function(){return this._eventType===Pp.DELETE},Pp.prototype.setDeleteEventIndex=function(t){this._deleteEventIndex=t},Pp.prototype.getObject=function(){return this._obj},Pp.prototype.compareTo=function(t){var n=t;return this._xValue<n._xValue?-1:this._xValue>n._xValue?1:this._eventType<n._eventType?-1:this._eventType>n._eventType?1:0},Pp.prototype.getInsertEvent=function(){return this._insertEvent},Pp.prototype.isInsert=function(){return this._eventType===Pp.INSERT},Pp.prototype.isSameLabel=function(t){return null!==this._label&&this._label===t._label},Pp.prototype.getDeleteEventIndex=function(){return this._deleteEventIndex},Pp.prototype.interfaces_=function(){return[Es]},Pp.prototype.getClass=function(){return Pp},Rp.INSERT.get=function(){return 1},Rp.DELETE.get=function(){return 2},Object.defineProperties(Pp,Rp);var Tp=function(){};Tp.prototype.interfaces_=function(){return[]},Tp.prototype.getClass=function(){return Tp};var Np=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._properIntersectionPoint=null,this._li=null,this._includeProper=null,this._recordIsolated=null,this._isSelfIntersection=null,this._numIntersections=0,this.numTests=0,this._bdyNodes=null,this._isDone=!1,this._isDoneWhenProperInt=!1;var t=arguments[0],n=arguments[1],e=arguments[2];this._li=t,this._includeProper=n,this._recordIsolated=e};Np.prototype.isTrivialIntersection=function(t,n,e,r){if(t===e&&1===this._li.getIntersectionNum()){if(Np.isAdjacentSegments(n,r))return!0;if(t.isClosed()){var l=t.getNumPoints()-1;if(0===n&&r===l||0===r&&n===l)return!0}}return!1},Np.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},Np.prototype.setIsDoneIfProperInt=function(t){this._isDoneWhenProperInt=t},Np.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},Np.prototype.isBoundaryPointInternal=function(t,n){for(var e=n.iterator();e.hasNext();){var r=e.next().getCoordinate();if(t.isIntersection(r))return!0}return!1},Np.prototype.hasProperIntersection=function(){return this._hasProper},Np.prototype.hasIntersection=function(){return this._hasIntersection},Np.prototype.isDone=function(){return this._isDone},Np.prototype.isBoundaryPoint=function(t,n){return!(null===n||!this.isBoundaryPointInternal(t,n[0])&&!this.isBoundaryPointInternal(t,n[1]))},Np.prototype.setBoundaryNodes=function(t,n){this._bdyNodes=new Array(2).fill(null),this._bdyNodes[0]=t,this._bdyNodes[1]=n},Np.prototype.addIntersections=function(t,n,e,r){if(t===e&&n===r)return null;this.numTests++;var l=t.getCoordinates()[n],i=t.getCoordinates()[n+1],o=e.getCoordinates()[r],u=e.getCoordinates()[r+1];this._li.computeIntersection(l,i,o,u),this._li.hasIntersection()&&(this._recordIsolated&&(t.setIsolated(!1),e.setIsolated(!1)),this._numIntersections++,this.isTrivialIntersection(t,n,e,r)||(this._hasIntersection=!0,!this._includeProper&&this._li.isProper()||(t.addIntersections(this._li,n,0),e.addIntersections(this._li,r,1)),this._li.isProper()&&(this._properIntersectionPoint=this._li.getIntersection(0).copy(),this._hasProper=!0,this._isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this._li,this._bdyNodes)||(this._hasProperInterior=!0))))},Np.prototype.interfaces_=function(){return[]},Np.prototype.getClass=function(){return Np},Np.isAdjacentSegments=function(t,n){return 1===Math.abs(t-n)};var Lp=function(t){function n(){t.call(this),this.events=new Ia,this.nOverlaps=null}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.prepareEvents=function(){xc.sort(this.events);for(var t=0;t<this.events.size();t++){var n=this.events.get(t);n.isDelete()&&n.getInsertEvent().setDeleteEventIndex(t)}},n.prototype.computeIntersections=function(){var t=this;if(1===arguments.length){var n=arguments[0];this.nOverlaps=0,this.prepareEvents();for(var e=0;e<this.events.size();e++){var r=t.events.get(e);if(r.isInsert()&&t.processOverlaps(e,r.getDeleteEventIndex(),r,n),n.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof Np&&Ls(arguments[0],Ma)&&Ls(arguments[1],Ma)){var l=arguments[0],i=arguments[1],o=arguments[2];this.addEdges(l,l),this.addEdges(i,i),this.computeIntersections(o)}else if("boolean"==typeof arguments[2]&&Ls(arguments[0],Ma)&&arguments[1]instanceof Np){var u=arguments[0],s=arguments[1],a=arguments[2];a?this.addEdges(u,null):this.addEdges(u),this.computeIntersections(s)}},n.prototype.addEdge=function(t,n){for(var e=t.getMonotoneChainEdge(),r=e.getStartIndexes(),l=0;l<r.length-1;l++){var i=new Ip(e,l),o=new Pp(n,e.getMinX(l),i);this.events.add(o),this.events.add(new Pp(e.getMaxX(l),o))}},n.prototype.processOverlaps=function(t,n,e,r){for(var l=e.getObject(),i=t;i<n;i++){var o=this.events.get(i);if(o.isInsert()){var u=o.getObject();e.isSameLabel(o)||(l.computeIntersections(u,r),this.nOverlaps++)}}},n.prototype.addEdges=function(){var t=this;if(1===arguments.length)for(var n=arguments[0],e=n.iterator();e.hasNext();){var r=e.next();t.addEdge(r,r)}else if(2===arguments.length)for(var l=arguments[0],i=arguments[1],o=l.iterator();o.hasNext();){var u=o.next();t.addEdge(u,i)}},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(Tp),Ap=function(){this._min=xs.POSITIVE_INFINITY,this._max=xs.NEGATIVE_INFINITY},jp={NodeComparator:{configurable:!0}};Ap.prototype.getMin=function(){return this._min},Ap.prototype.intersects=function(t,n){return!(this._min>n||this._max<t)},Ap.prototype.getMax=function(){return this._max},Ap.prototype.toString=function(){return na.toLineString(new Ss(this._min,0),new Ss(this._max,0))},Ap.prototype.interfaces_=function(){return[]},Ap.prototype.getClass=function(){return Ap},jp.NodeComparator.get=function(){return Dp},Object.defineProperties(Ap,jp);var Dp=function(){};Dp.prototype.compare=function(t,n){var e=t,r=n,l=(e._min+e._max)/2,i=(r._min+r._max)/2;return l<i?-1:l>i?1:0},Dp.prototype.interfaces_=function(){return[Os]},Dp.prototype.getClass=function(){return Dp};var kp=function(t){function n(){t.call(this),this._item=null;var n=arguments[0],e=arguments[1],r=arguments[2];this._min=n,this._max=e,this._item=r}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.query=function(t,n,e){if(!this.intersects(t,n))return null;e.visitItem(this._item)},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(Ap),Fp=function(t){function n(){t.call(this),this._node1=null,this._node2=null;var n=arguments[0],e=arguments[1];this._node1=n,this._node2=e,this.buildExtent(this._node1,this._node2)}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.buildExtent=function(t,n){this._min=Math.min(t._min,n._min),this._max=Math.max(t._max,n._max)},n.prototype.query=function(t,n,e){if(!this.intersects(t,n))return null;null!==this._node1&&this._node1.query(t,n,e),null!==this._node2&&this._node2.query(t,n,e)},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(Ap),Gp=function(){this._leaves=new Ia,this._root=null,this._level=0};Gp.prototype.buildTree=function(){xc.sort(this._leaves,new Ap.NodeComparator);for(var t=this._leaves,n=null,e=new Ia;;){if(this.buildLevel(t,e),1===e.size())return e.get(0);n=t,t=e,e=n}},Gp.prototype.insert=function(t,n,e){if(null!==this._root)throw new Error("Index cannot be added to once it has been queried");this._leaves.add(new kp(t,n,e))},Gp.prototype.query=function(t,n,e){this.init(),this._root.query(t,n,e)},Gp.prototype.buildRoot=function(){if(null!==this._root)return null;this._root=this.buildTree()},Gp.prototype.printNode=function(t){Ws.out.println(na.toLineString(new Ss(t._min,this._level),new Ss(t._max,this._level)))},Gp.prototype.init=function(){if(null!==this._root)return null;this.buildRoot()},Gp.prototype.buildLevel=function(t,n){this._level++,n.clear();for(var e=0;e<t.size();e+=2){var r=t.get(e);if(null===(e+1<t.size()?t.get(e):null))n.add(r);else{var l=new Fp(t.get(e),t.get(e+1));n.add(l)}}},Gp.prototype.interfaces_=function(){return[]},Gp.prototype.getClass=function(){return Gp};var zp=function(){this._items=new Ia};zp.prototype.visitItem=function(t){this._items.add(t)},zp.prototype.getItems=function(){return this._items},zp.prototype.interfaces_=function(){return[_c]},zp.prototype.getClass=function(){return zp};var Bp=function(){this._index=null;var t=arguments[0];if(!Ls(t,vh))throw new bs("Argument must be Polygonal");this._index=new Yp(t)},Up={SegmentVisitor:{configurable:!0},IntervalIndexedGeometry:{configurable:!0}};Bp.prototype.locate=function(t){var n=new aa(t),e=new qp(n);return this._index.query(t.y,t.y,e),n.getLocation()},Bp.prototype.interfaces_=function(){return[sf]},Bp.prototype.getClass=function(){return Bp},Up.SegmentVisitor.get=function(){return qp},Up.IntervalIndexedGeometry.get=function(){return Yp},Object.defineProperties(Bp,Up);var qp=function(){this._counter=null;var t=arguments[0];this._counter=t};qp.prototype.visitItem=function(t){var n=t;this._counter.countSegment(n.getCoordinate(0),n.getCoordinate(1))},qp.prototype.interfaces_=function(){return[_c]},qp.prototype.getClass=function(){return qp};var Yp=function(){this._index=new Gp;var t=arguments[0];this.init(t)};Yp.prototype.init=function(t){for(var n=Vf.getLines(t).iterator();n.hasNext();){var e=n.next().getCoordinates();this.addLine(e)}},Yp.prototype.addLine=function(t){for(var n=1;n<t.length;n++){var e=new Dc(t[n-1],t[n]),r=Math.min(e.p0.y,e.p1.y),l=Math.max(e.p0.y,e.p1.y);this._index.insert(r,l,e)}},Yp.prototype.query=function(){if(2===arguments.length){var t=arguments[0],n=arguments[1],e=new zp;return this._index.query(t,n,e),e.getItems()}if(3===arguments.length){var r=arguments[0],l=arguments[1],i=arguments[2];this._index.query(r,l,i)}},Yp.prototype.interfaces_=function(){return[]},Yp.prototype.getClass=function(){return Yp};var Xp=function(t){function n(){if(t.call(this),this._parentGeom=null,this._lineEdgeMap=new Nh,this._boundaryNodeRule=null,this._useBoundaryDeterminationRule=!0,this._argIndex=null,this._boundaryNodes=null,this._hasTooFewPoints=!1,this._invalidPoint=null,this._areaPtLocator=null,this._ptLocator=new Wf,2===arguments.length){var n=arguments[0],e=arguments[1],r=_a.OGC_SFS_BOUNDARY_RULE;this._argIndex=n,this._parentGeom=e,this._boundaryNodeRule=r,null!==e&&this.add(e)}else if(3===arguments.length){var l=arguments[0],i=arguments[1],o=arguments[2];this._argIndex=l,this._parentGeom=i,this._boundaryNodeRule=o,null!==i&&this.add(i)}}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.insertBoundaryPoint=function(t,e){var r=this._nodes.addNode(e).getLabel(),l=1;r.getLocation(t,Xh.ON)===Ts.BOUNDARY&&l++;var i=n.determineBoundary(this._boundaryNodeRule,l);r.setLocation(t,i)},n.prototype.computeSelfNodes=function(){if(2===arguments.length){var t=arguments[0],n=arguments[1];return this.computeSelfNodes(t,n,!1)}if(3===arguments.length){var e=arguments[0],r=arguments[1],l=arguments[2],i=new Np(e,!0,!1);i.setIsDoneIfProperInt(l);var o=this.createEdgeSetIntersector(),u=this._parentGeom instanceof xh||this._parentGeom instanceof mh||this._parentGeom instanceof wh,s=r||!u;return o.computeIntersections(this._edges,i,s),this.addSelfIntersectionNodes(this._argIndex),i}},n.prototype.computeSplitEdges=function(t){for(var n=this._edges.iterator();n.hasNext();)n.next().eiList.addSplitEdges(t)},n.prototype.computeEdgeIntersections=function(t,n,e){var r=new Np(n,e,!0);return r.setBoundaryNodes(this.getBoundaryNodes(),t.getBoundaryNodes()),this.createEdgeSetIntersector().computeIntersections(this._edges,t._edges,r),r},n.prototype.getGeometry=function(){return this._parentGeom},n.prototype.getBoundaryNodeRule=function(){return this._boundaryNodeRule},n.prototype.hasTooFewPoints=function(){return this._hasTooFewPoints},n.prototype.addPoint=function(){if(arguments[0]instanceof _h){var t=arguments[0],n=t.getCoordinate();this.insertPoint(this._argIndex,n,Ts.INTERIOR)}else if(arguments[0]instanceof Ss){var e=arguments[0];this.insertPoint(this._argIndex,e,Ts.INTERIOR)}},n.prototype.addPolygon=function(t){this.addPolygonRing(t.getExteriorRing(),Ts.EXTERIOR,Ts.INTERIOR);for(var n=0;n<t.getNumInteriorRing();n++){var e=t.getInteriorRingN(n);this.addPolygonRing(e,Ts.INTERIOR,Ts.EXTERIOR)}},n.prototype.addEdge=function(t){this.insertEdge(t);var n=t.getCoordinates();this.insertPoint(this._argIndex,n[0],Ts.BOUNDARY),this.insertPoint(this._argIndex,n[n.length-1],Ts.BOUNDARY)},n.prototype.addLineString=function(t){var n=Ta.removeRepeatedPoints(t.getCoordinates());if(n.length<2)return this._hasTooFewPoints=!0,this._invalidPoint=n[0],null;var e=new Cf(n,new tc(this._argIndex,Ts.INTERIOR));this._lineEdgeMap.put(t,e),this.insertEdge(e),la.isTrue(n.length>=2,"found LineString with single point"),this.insertBoundaryPoint(this._argIndex,n[0]),this.insertBoundaryPoint(this._argIndex,n[n.length-1])},n.prototype.getInvalidPoint=function(){return this._invalidPoint},n.prototype.getBoundaryPoints=function(){for(var t=this.getBoundaryNodes(),n=new Array(t.size()).fill(null),e=0,r=t.iterator();r.hasNext();){var l=r.next();n[e++]=l.getCoordinate().copy()}return n},n.prototype.getBoundaryNodes=function(){return null===this._boundaryNodes&&(this._boundaryNodes=this._nodes.getBoundaryNodes(this._argIndex)),this._boundaryNodes},n.prototype.addSelfIntersectionNode=function(t,n,e){if(this.isBoundaryNode(t,n))return null;e===Ts.BOUNDARY&&this._useBoundaryDeterminationRule?this.insertBoundaryPoint(t,n):this.insertPoint(t,n,e)},n.prototype.addPolygonRing=function(t,n,e){if(t.isEmpty())return null;var r=Ta.removeRepeatedPoints(t.getCoordinates());if(r.length<4)return this._hasTooFewPoints=!0,this._invalidPoint=r[0],null;var l=n,i=e;ha.isCCW(r)&&(l=e,i=n);var o=new Cf(r,new tc(this._argIndex,Ts.BOUNDARY,l,i));this._lineEdgeMap.put(t,o),this.insertEdge(o),this.insertPoint(this._argIndex,r[0],Ts.BOUNDARY)},n.prototype.insertPoint=function(t,n,e){var r=this._nodes.addNode(n),l=r.getLabel();null===l?r._label=new tc(t,e):l.setLocation(t,e)},n.prototype.createEdgeSetIntersector=function(){return new Lp},n.prototype.addSelfIntersectionNodes=function(t){for(var n=this._edges.iterator();n.hasNext();)for(var e=n.next(),r=e.getLabel().getLocation(t),l=e.eiList.iterator();l.hasNext();){var i=l.next();this.addSelfIntersectionNode(t,i.coord,r)}},n.prototype.add=function(){if(1!==arguments.length)return t.prototype.add.apply(this,arguments);var n=arguments[0];if(n.isEmpty())return null;if(n instanceof wh&&(this._useBoundaryDeterminationRule=!1),n instanceof mh)this.addPolygon(n);else if(n instanceof gh)this.addLineString(n);else if(n instanceof _h)this.addPoint(n);else if(n instanceof bh)this.addCollection(n);else if(n instanceof rh)this.addCollection(n);else if(n instanceof wh)this.addCollection(n);else{if(!(n instanceof eh))throw new Error(n.getClass().getName());this.addCollection(n)}},n.prototype.addCollection=function(t){for(var n=0;n<t.getNumGeometries();n++){var e=t.getGeometryN(n);this.add(e)}},n.prototype.locate=function(t){return Ls(this._parentGeom,vh)&&this._parentGeom.getNumGeometries()>50?(null===this._areaPtLocator&&(this._areaPtLocator=new Bp(this._parentGeom)),this._areaPtLocator.locate(t)):this._ptLocator.locate(t,this._parentGeom)},n.prototype.findEdge=function(){if(1===arguments.length){var n=arguments[0];return this._lineEdgeMap.get(n)}return t.prototype.findEdge.apply(this,arguments)},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n.determineBoundary=function(t,n){return t.isInBoundary(n)?Ts.BOUNDARY:Ts.INTERIOR},n}(fc),Vp=function(){if(this._li=new ua,this._resultPrecisionModel=null,this._arg=null,1===arguments.length){var t=arguments[0];this.setComputationPrecision(t.getPrecisionModel()),this._arg=new Array(1).fill(null),this._arg[0]=new Xp(0,t)}else if(2===arguments.length){var n=arguments[0],e=arguments[1],r=_a.OGC_SFS_BOUNDARY_RULE;n.getPrecisionModel().compareTo(e.getPrecisionModel())>=0?this.setComputationPrecision(n.getPrecisionModel()):this.setComputationPrecision(e.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Xp(0,n,r),this._arg[1]=new Xp(1,e,r)}else if(3===arguments.length){var l=arguments[0],i=arguments[1],o=arguments[2];l.getPrecisionModel().compareTo(i.getPrecisionModel())>=0?this.setComputationPrecision(l.getPrecisionModel()):this.setComputationPrecision(i.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Xp(0,l,o),this._arg[1]=new Xp(1,i,o)}};Vp.prototype.getArgGeometry=function(t){return this._arg[t].getGeometry()},Vp.prototype.setComputationPrecision=function(t){this._resultPrecisionModel=t,this._li.setPrecisionModel(this._resultPrecisionModel)},Vp.prototype.interfaces_=function(){return[]},Vp.prototype.getClass=function(){return Vp};var Wp=function(){};Wp.prototype.interfaces_=function(){return[]},Wp.prototype.getClass=function(){return Wp},Wp.map=function(){if(arguments[0]instanceof pa&&Ls(arguments[1],Wp.MapOp)){for(var t=arguments[0],n=arguments[1],e=new Ia,r=0;r<t.getNumGeometries();r++){var l=n.map(t.getGeometryN(r));null!==l&&e.add(l)}return t.getFactory().buildGeometry(e)}if(Ls(arguments[0],Ea)&&Ls(arguments[1],Wp.MapOp)){for(var i=arguments[0],o=arguments[1],u=new Ia,s=i.iterator();s.hasNext();){var a=s.next(),h=o.map(a);null!==h&&u.add(h)}return u}},Wp.MapOp=function(){};var Zp=function(t){function n(){var n=arguments[0],e=arguments[1];t.call(this,n,e),this._ptLocator=new Wf,this._geomFact=null,this._resultGeom=null,this._graph=null,this._edgeList=new gf,this._resultPolyList=new Ia,this._resultLineList=new Ia,this._resultPointList=new Ia,this._graph=new fc(new pf),this._geomFact=n.getFactory()}return t&&(n.__proto__=t),n.prototype=Object.create(t&&t.prototype),n.prototype.constructor=n,n.prototype.insertUniqueEdge=function(t){var n=this._edgeList.findEqualEdge(t);if(null!==n){var e=n.getLabel(),r=t.getLabel();n.isPointwiseEqual(t)||(r=new tc(t.getLabel())).flip();var l=n.getDepth();l.isNull()&&l.add(e),l.add(r),e.merge(r)}else this._edgeList.add(t)},n.prototype.getGraph=function(){return this._graph},n.prototype.cancelDuplicateResultEdges=function(){for(var t=this._graph.getEdgeEnds().iterator();t.hasNext();){var n=t.next(),e=n.getSym();n.isInResult()&&e.isInResult()&&(n.setInResult(!1),e.setInResult(!1))}},n.prototype.isCoveredByLA=function(t){return!!this.isCovered(t,this._resultLineList)||!!this.isCovered(t,this._resultPolyList)},n.prototype.computeGeometry=function(t,e,r,l){var i=new Ia;return i.addAll(t),i.addAll(e),i.addAll(r),i.isEmpty()?n.createEmptyResult(l,this._arg[0].getGeometry(),this._arg[1].getGeometry(),this._geomFact):this._geomFact.buildGeometry(i)},n.prototype.mergeSymLabels=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();)t.next().getEdges().mergeSymLabels()},n.prototype.isCovered=function(t,n){for(var e=n.iterator();e.hasNext();){var r=e.next();if(this._ptLocator.locate(t,r)!==Ts.EXTERIOR)return!0}return!1},n.prototype.replaceCollapsedEdges=function(){for(var t=new Ia,n=this._edgeList.iterator();n.hasNext();){var e=n.next();e.isCollapsed()&&(n.remove(),t.add(e.getCollapsedEdge()))}this._edgeList.addAll(t)},n.prototype.updateNodeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var n=t.next(),e=n.getEdges().getLabel();n.getLabel().merge(e)}},n.prototype.getResultGeometry=function(t){return this.computeOverlay(t),this._resultGeom},n.prototype.insertUniqueEdges=function(t){for(var n=t.iterator();n.hasNext();){var e=n.next();this.insertUniqueEdge(e)}},n.prototype.computeOverlay=function(t){this.copyPoints(0),this.copyPoints(1),this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1),this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!0);var n=new Ia;this._arg[0].computeSplitEdges(n),this._arg[1].computeSplitEdges(n),this.insertUniqueEdges(n),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),fp.checkValid(this._edgeList.getEdges()),this._graph.addEdges(this._edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(t),this.cancelDuplicateResultEdges();var e=new pc(this._geomFact);e.add(this._graph),this._resultPolyList=e.getPolygons();var r=new dp(this,this._geomFact,this._ptLocator);this._resultLineList=r.build(t);var l=new gp(this,this._geomFact,this._ptLocator);this._resultPointList=l.build(t),this._resultGeom=this.computeGeometry(this._resultPointList,this._resultLineList,this._resultPolyList,t)},n.prototype.labelIncompleteNode=function(t,n){var e=this._ptLocator.locate(t.getCoordinate(),this._arg[n].getGeometry());t.getLabel().setLocation(n,e)},n.prototype.copyPoints=function(t){for(var n=this._arg[t].getNodeIterator();n.hasNext();){var e=n.next();this._graph.addNode(e.getCoordinate()).setLabel(t,e.getLabel().getLocation(t))}},n.prototype.findResultAreaEdges=function(t){for(var e=this._graph.getEdgeEnds().iterator();e.hasNext();){var r=e.next(),l=r.getLabel();l.isArea()&&!r.isInteriorAreaEdge()&&n.isResultOfOp(l.getLocation(0,Xh.RIGHT),l.getLocation(1,Xh.RIGHT),t)&&r.setInResult(!0)}},n.prototype.computeLabelsFromDepths=function(){for(var t=this._edgeList.iterator();t.hasNext();){var n=t.next(),e=n.getLabel(),r=n.getDepth();if(!r.isNull()){r.normalize();for(var l=0;l<2;l++)e.isNull(l)||!e.isArea()||r.isNull(l)||(0===r.getDelta(l)?e.toLine(l):(la.isTrue(!r.isNull(l,Xh.LEFT),"depth of LEFT side has not been initialized"),e.setLocation(l,Xh.LEFT,r.getLocation(l,Xh.LEFT)),la.isTrue(!r.isNull(l,Xh.RIGHT),"depth of RIGHT side has not been initialized"),e.setLocation(l,Xh.RIGHT,r.getLocation(l,Xh.RIGHT))))}}},n.prototype.computeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();)t.next().getEdges().computeLabelling(this._arg);this.mergeSymLabels(),this.updateNodeLabelling()},n.prototype.labelIncompleteNodes=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var n=t.next(),e=n.getLabel();n.isIsolated()&&(e.isNull(0)?this.labelIncompleteNode(n,0):this.labelIncompleteNode(n,1)),n.getEdges().updateLabelling(e)}},n.prototype.isCoveredByA=function(t){return!!this.isCovered(t,this._resultPolyList)},n.prototype.interfaces_=function(){return[]},n.prototype.getClass=function(){return n},n}(Vp);Zp.overlayOp=function(t,n,e){return new Zp(t,n).getResultGeometry(e)},Zp.intersection=function(t,n){if(t.isEmpty()||n.isEmpty())return Zp.createEmptyResult(Zp.INTERSECTION,t,n,t.getFactory());if(t.isGeometryCollection()){var e=n;return pp.map(t,{interfaces_:function(){return[Wp.MapOp]},map:function(t){return t.intersection(e)}})}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(n),Sp.overlayOp(t,n,Zp.INTERSECTION)},Zp.symDifference=function(t,n){if(t.isEmpty()||n.isEmpty()){if(t.isEmpty()&&n.isEmpty())return Zp.createEmptyResult(Zp.SYMDIFFERENCE,t,n,t.getFactory());if(t.isEmpty())return n.copy();if(n.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(n),Sp.overlayOp(t,n,Zp.SYMDIFFERENCE)},Zp.resultDimension=function(t,n,e){var r=n.getDimension(),l=e.getDimension(),i=-1;switch(t){case Zp.INTERSECTION:i=Math.min(r,l);break;case Zp.UNION:i=Math.max(r,l);break;case Zp.DIFFERENCE:i=r;break;case Zp.SYMDIFFERENCE:i=Math.max(r,l)}return i},Zp.createEmptyResult=function(t,n,e,r){var l=null;switch(Zp.resultDimension(t,n,e)){case-1:l=r.createGeometryCollection(new Array(0).fill(null));break;case 0:l=r.createPoint();break;case 1:l=r.createLineString();break;case 2:l=r.createPolygon()}return l},Zp.difference=function(t,n){return t.isEmpty()?Zp.createEmptyResult(Zp.DIFFERENCE,t,n,t.getFactory()):n.isEmpty()?t.copy():(t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(n),Sp.overlayOp(t,n,Zp.DIFFERENCE))},Zp.isResultOfOp=function(){if(2===arguments.length){var t=arguments[0],n=arguments[1],e=t.getLocation(0),r=t.getLocation(1);return Zp.isResultOfOp(e,r,n)}if(3===arguments.length){var l=arguments[0],i=arguments[1],o=arguments[2];switch(l===Ts.BOUNDARY&&(l=Ts.INTERIOR),i===Ts.BOUNDARY&&(i=Ts.INTERIOR),o){case Zp.INTERSECTION:return l===Ts.INTERIOR&&i===Ts.INTERIOR;case Zp.UNION:return l===Ts.INTERIOR||i===Ts.INTERIOR;case Zp.DIFFERENCE:return l===Ts.INTERIOR&&i!==Ts.INTERIOR;case Zp.SYMDIFFERENCE:return l===Ts.INTERIOR&&i!==Ts.INTERIOR||l!==Ts.INTERIOR&&i===Ts.INTERIOR}return!1}},Zp.INTERSECTION=1,Zp.UNION=2,Zp.DIFFERENCE=3,Zp.SYMDIFFERENCE=4;var Hp=function(){this._g=null,this._boundaryDistanceTolerance=null,this._linework=null,this._ptLocator=new Wf,this._seg=new Dc;var t=arguments[0],n=arguments[1];this._g=t,this._boundaryDistanceTolerance=n,this._linework=this.extractLinework(t)};Hp.prototype.isWithinToleranceOfBoundary=function(t){for(var n=this,e=0;e<this._linework.getNumGeometries();e++)for(var r=n._linework.getGeometryN(e).getCoordinateSequence(),l=0;l<r.size()-1;l++)if(r.getCoordinate(l,n._seg.p0),r.getCoordinate(l+1,n._seg.p1),n._seg.distance(t)<=n._boundaryDistanceTolerance)return!0;return!1},Hp.prototype.getLocation=function(t){return this.isWithinToleranceOfBoundary(t)?Ts.BOUNDARY:this._ptLocator.locate(t,this._g)},Hp.prototype.extractLinework=function(t){var n=new Kp;t.apply(n);var e=n.getLinework(),r=kh.toLineStringArray(e);return t.getFactory().createMultiLineString(r)},Hp.prototype.interfaces_=function(){return[]},Hp.prototype.getClass=function(){return Hp};var Kp=function(){this._linework=null,this._linework=new Ia};Kp.prototype.getLinework=function(){return this._linework},Kp.prototype.filter=function(t){if(t instanceof mh){var n=t;this._linework.add(n.getExteriorRing());for(var e=0;e<n.getNumInteriorRing();e++)this._linework.add(n.getInteriorRingN(e))}},Kp.prototype.interfaces_=function(){return[th]},Kp.prototype.getClass=function(){return Kp};var Jp=function(){this._g=null,this._doLeft=!0,this._doRight=!0;var t=arguments[0];this._g=t};Jp.prototype.extractPoints=function(t,n,e){for(var r=t.getCoordinates(),l=0;l<r.length-1;l++)this.computeOffsetPoints(r[l],r[l+1],n,e)},Jp.prototype.setSidesToGenerate=function(t,n){this._doLeft=t,this._doRight=n},Jp.prototype.getPoints=function(t){for(var n=new Ia,e=Vf.getLines(this._g).iterator();e.hasNext();){var r=e.next();this.extractPoints(r,t,n)}return n},Jp.prototype.computeOffsetPoints=function(t,n,e,r){var l=n.x-t.x,i=n.y-t.y,o=Math.sqrt(l*l+i*i),u=e*l/o,s=e*i/o,a=(n.x+t.x)/2,h=(n.y+t.y)/2;if(this._doLeft){var c=new Ss(a-s,h+u);r.add(c)}if(this._doRight){var f=new Ss(a+s,h-u);r.add(f)}},Jp.prototype.interfaces_=function(){return[]},Jp.prototype.getClass=function(){return Jp};var Qp=function t(){this._geom=null,this._locFinder=null,this._location=new Array(3).fill(null),this._invalidLocation=null,this._boundaryDistanceTolerance=t.TOLERANCE,this._testCoords=new Ia;var n=arguments[0],e=arguments[1],r=arguments[2];this._boundaryDistanceTolerance=t.computeBoundaryDistanceTolerance(n,e),this._geom=[n,e,r],this._locFinder=[new Hp(this._geom[0],this._boundaryDistanceTolerance),new Hp(this._geom[1],this._boundaryDistanceTolerance),new Hp(this._geom[2],this._boundaryDistanceTolerance)]},$p={TOLERANCE:{configurable:!0}};Qp.prototype.reportResult=function(t,n,e){Ws.out.println("Overlay result invalid - A:"+Ts.toLocationSymbol(n[0])+" B:"+Ts.toLocationSymbol(n[1])+" expected:"+(e?"i":"e")+" actual:"+Ts.toLocationSymbol(n[2]))},Qp.prototype.isValid=function(t){return this.addTestPts(this._geom[0]),this.addTestPts(this._geom[1]),this.checkValid(t)},Qp.prototype.checkValid=function(){var t=this;if(1===arguments.length){for(var n=arguments[0],e=0;e<this._testCoords.size();e++){var r=t._testCoords.get(e);if(!t.checkValid(n,r))return t._invalidLocation=r,!1}return!0}if(2===arguments.length){var l=arguments[0],i=arguments[1];return this._location[0]=this._locFinder[0].getLocation(i),this._location[1]=this._locFinder[1].getLocation(i),this._location[2]=this._locFinder[2].getLocation(i),!!Qp.hasLocation(this._location,Ts.BOUNDARY)||this.isValidResult(l,this._location)}},Qp.prototype.addTestPts=function(t){var n=new Jp(t);this._testCoords.addAll(n.getPoints(5*this._boundaryDistanceTolerance))},Qp.prototype.isValidResult=function(t,n){var e=Zp.isResultOfOp(n[0],n[1],t),r=!(e^n[2]===Ts.INTERIOR);return r||this.reportResult(t,n,e),r},Qp.prototype.getInvalidLocation=function(){return this._invalidLocation},Qp.prototype.interfaces_=function(){return[]},Qp.prototype.getClass=function(){return Qp},Qp.hasLocation=function(t,n){for(var e=0;e<3;e++)if(t[e]===n)return!0;return!1},Qp.computeBoundaryDistanceTolerance=function(t,n){return Math.min(vp.computeSizeBasedSnapTolerance(t),vp.computeSizeBasedSnapTolerance(n))},Qp.isValid=function(t,n,e,r){return new Qp(t,n,r).isValid(e)},$p.TOLERANCE.get=function(){return 1e-6},Object.defineProperties(Qp,$p);var td=function t(n){this._geomFactory=null,this._skipEmpty=!1,this._inputGeoms=null,this._geomFactory=t.extractFactory(n),this._inputGeoms=n};td.prototype.extractElements=function(t,n){if(null===t)return null;for(var e=0;e<t.getNumGeometries();e++){var r=t.getGeometryN(e);this._skipEmpty&&r.isEmpty()||n.add(r)}},td.prototype.combine=function(){for(var t=new Ia,n=this._inputGeoms.iterator();n.hasNext();){var e=n.next();this.extractElements(e,t)}return 0===t.size()?null!==this._geomFactory?this._geomFactory.createGeometryCollection(null):null:this._geomFactory.buildGeometry(t)},td.prototype.interfaces_=function(){return[]},td.prototype.getClass=function(){return td},td.combine=function(){if(1===arguments.length){var t=arguments[0],n=new td(t);return n.combine()}if(2===arguments.length){var e=arguments[0],r=arguments[1],l=new td(td.createList(e,r));return l.combine()}if(3===arguments.length){var i=arguments[0],o=arguments[1],u=arguments[2],s=new td(td.createList(i,o,u));return s.combine()}},td.extractFactory=function(t){return t.isEmpty()?null:t.iterator().next().getFactory()},td.createList=function(){if(2===arguments.length){var t=arguments[0],n=arguments[1],e=new Ia;return e.add(t),e.add(n),e}if(3===arguments.length){var r=arguments[0],l=arguments[1],i=arguments[2],o=new Ia;return o.add(r),o.add(l),o.add(i),o}};var nd=function(){this._inputPolys=null,this._geomFactory=null;var t=arguments[0];this._inputPolys=t,null===this._inputPolys&&(this._inputPolys=new Ia)},ed={STRTREE_NODE_CAPACITY:{configurable:!0}};nd.prototype.reduceToGeometries=function(t){for(var n=new Ia,e=t.iterator();e.hasNext();){var r=e.next(),l=null;Ls(r,Ma)?l=this.unionTree(r):r instanceof pa&&(l=r),n.add(l)}return n},nd.prototype.extractByEnvelope=function(t,n,e){for(var r=new Ia,l=0;l<n.getNumGeometries();l++){var i=n.getGeometryN(l);i.getEnvelopeInternal().intersects(t)?r.add(i):e.add(i)}return this._geomFactory.buildGeometry(r)},nd.prototype.unionOptimized=function(t,n){var e=t.getEnvelopeInternal(),r=n.getEnvelopeInternal();if(!e.intersects(r))return td.combine(t,n);if(t.getNumGeometries()<=1&&n.getNumGeometries()<=1)return this.unionActual(t,n);var l=e.intersection(r);return this.unionUsingEnvelopeIntersection(t,n,l)},nd.prototype.union=function(){if(null===this._inputPolys)throw new Error("union() method cannot be called twice");if(this._inputPolys.isEmpty())return null;this._geomFactory=this._inputPolys.iterator().next().getFactory();for(var t=new Sc(nd.STRTREE_NODE_CAPACITY),n=this._inputPolys.iterator();n.hasNext();){var e=n.next();t.insert(e.getEnvelopeInternal(),e)}this._inputPolys=null;var r=t.itemsTree();return this.unionTree(r)},nd.prototype.binaryUnion=function(){if(1===arguments.length){var t=arguments[0];return this.binaryUnion(t,0,t.size())}if(3===arguments.length){var n=arguments[0],e=arguments[1],r=arguments[2];if(r-e<=1){var l=nd.getGeometry(n,e);return this.unionSafe(l,null)}if(r-e==2)return this.unionSafe(nd.getGeometry(n,e),nd.getGeometry(n,e+1));var i=Math.trunc((r+e)/2),o=this.binaryUnion(n,e,i),u=this.binaryUnion(n,i,r);return this.unionSafe(o,u)}},nd.prototype.repeatedUnion=function(t){for(var n=null,e=t.iterator();e.hasNext();){var r=e.next();n=null===n?r.copy():n.union(r)}return n},nd.prototype.unionSafe=function(t,n){return null===t&&null===n?null:null===t?n.copy():null===n?t.copy():this.unionOptimized(t,n)},nd.prototype.unionActual=function(t,n){return nd.restrictToPolygons(t.union(n))},nd.prototype.unionTree=function(t){var n=this.reduceToGeometries(t);return this.binaryUnion(n)},nd.prototype.unionUsingEnvelopeIntersection=function(t,n,e){var r=new Ia,l=this.extractByEnvelope(e,t,r),i=this.extractByEnvelope(e,n,r),o=this.unionActual(l,i);return r.add(o),td.combine(r)},nd.prototype.bufferUnion=function(){if(1===arguments.length){var t=arguments[0],n=t.get(0).getFactory(),e=n.buildGeometry(t),r=e.buffer(0);return r}if(2===arguments.length){var l=arguments[0],i=arguments[1],o=l.getFactory(),u=o.createGeometryCollection([l,i]),s=u.buffer(0);return s}},nd.prototype.interfaces_=function(){return[]},nd.prototype.getClass=function(){return nd},nd.restrictToPolygons=function(t){if(Ls(t,vh))return t;var n=Xf.getPolygons(t);return 1===n.size()?n.get(0):t.getFactory().createMultiPolygon(kh.toPolygonArray(n))},nd.getGeometry=function(t,n){return n>=t.size()?null:t.get(n)},nd.union=function(t){return new nd(t).union()},ed.STRTREE_NODE_CAPACITY.get=function(){return 4},Object.defineProperties(nd,ed);var rd=function(){};function ld(){return new id}function id(){this.reset()}rd.prototype.interfaces_=function(){return[]},rd.prototype.getClass=function(){return rd},rd.union=function(t,n){if(t.isEmpty()||n.isEmpty()){if(t.isEmpty()&&n.isEmpty())return Zp.createEmptyResult(Zp.UNION,t,n,t.getFactory());if(t.isEmpty())return n.copy();if(n.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(n),Sp.overlayOp(t,n,Zp.UNION)},id.prototype={constructor:id,reset:function(){this.s=this.t=0},add:function(t){ud(od,t,this.t),ud(this,od.s,this.s),this.s?this.t+=od.t:this.s=od.t},valueOf:function(){return this.s}};var od=new id;function ud(t,n,e){var r=t.s=n+e,l=r-n,i=r-l;t.t=n-i+(e-l)}var sd=1e-6,ad=Math.PI,hd=ad/2,cd=ad/4,fd=2*ad,pd=180/ad,dd=ad/180,gd=Math.abs,yd=Math.atan,_d=Math.atan2,vd=Math.cos,md=Math.sin,bd=Math.sqrt;function xd(t){return t>1?0:t<-1?ad:Math.acos(t)}function wd(t){return t>1?hd:t<-1?-hd:Math.asin(t)}function Ed(){}function Cd(t,n){t&&Id.hasOwnProperty(t.type)&&Id[t.type](t,n)}var Od,Md,Sd={Feature:function(t,n){Cd(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,l=e.length;++r<l;)Cd(e[r].geometry,n)}},Id={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,l=e.length;++r<l;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){Pd(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,l=e.length;++r<l;)Pd(e[r],n,0)},Polygon:function(t,n){Rd(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,l=e.length;++r<l;)Rd(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,l=e.length;++r<l;)Cd(e[r],n)}};function Pd(t,n,e){var r,l=-1,i=t.length-e;for(n.lineStart();++l<i;)r=t[l],n.point(r[0],r[1],r[2]);n.lineEnd()}function Rd(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)Pd(t[e],n,1);n.polygonEnd()}function Td(t){return[_d(t[1],t[0]),wd(t[2])]}function Nd(t){var n=t[0],e=t[1],r=vd(e);return[r*vd(n),r*md(n),md(e)]}function Ld(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function Ad(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function jd(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function Dd(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function kd(t){var n=bd(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}function Fd(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return(e=n.invert(e,r))&&t.invert(e[0],e[1])}),e}function Gd(t,n){return[t>ad?t-fd:t<-ad?t+fd:t,n]}function zd(t){return function(n,e){return[(n+=t)>ad?n-fd:n<-ad?n+fd:n,e]}}function Bd(t){var n=zd(t);return n.invert=zd(-t),n}function Ud(t,n){var e=vd(t),r=md(t),l=vd(n),i=md(n);function o(t,n){var o=vd(n),u=vd(t)*o,s=md(t)*o,a=md(n),h=a*e+u*r;return[_d(s*l-h*i,u*e-a*r),wd(h*l+s*i)]}return o.invert=function(t,n){var o=vd(n),u=vd(t)*o,s=md(t)*o,a=md(n),h=a*l-s*i;return[_d(s*l+a*i,u*e+h*r),wd(h*e-u*r)]},o}function qd(t,n){(n=Nd(n))[0]-=t,kd(n);var e=xd(-n[1]);return((-n[2]<0?-e:e)+fd-sd)%fd}function Yd(){var t,n=[];return{point:function(n,e){t.push([n,e])},lineStart:function(){n.push(t=[])},lineEnd:Ed,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}}function Xd(t,n){return gd(t[0]-n[0])<sd&&gd(t[1]-n[1])<sd}function Vd(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function Wd(t,n,e,r,l){var i,o,u=[],s=[];if(t.forEach((function(t){if(!((n=t.length-1)<=0)){var n,e,r=t[0],o=t[n];if(Xd(r,o)){for(l.lineStart(),i=0;i<n;++i)l.point((r=t[i])[0],r[1]);l.lineEnd()}else u.push(e=new Vd(r,t,null,!0)),s.push(e.o=new Vd(r,null,e,!1)),u.push(e=new Vd(o,t,null,!1)),s.push(e.o=new Vd(o,null,e,!0))}})),u.length){for(s.sort(n),Zd(u),Zd(s),i=0,o=s.length;i<o;++i)s[i].e=e=!e;for(var a,h,c=u[0];;){for(var f=c,p=!0;f.v;)if((f=f.n)===c)return;a=f.z,l.lineStart();do{if(f.v=f.o.v=!0,f.e){if(p)for(i=0,o=a.length;i<o;++i)l.point((h=a[i])[0],h[1]);else r(f.x,f.n.x,1,l);f=f.n}else{if(p)for(a=f.p.z,i=a.length-1;i>=0;--i)l.point((h=a[i])[0],h[1]);else r(f.x,f.p.x,-1,l);f=f.p}a=(f=f.o).z,p=!p}while(!f.v);l.lineEnd()}}}function Zd(t){if(n=t.length){for(var n,e,r=0,l=t[0];++r<n;)l.n=e=t[r],e.p=l,l=e;l.n=e=t[0],e.p=l}}function Hd(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}function Kd(t){for(var n,e,r,l=t.length,i=-1,o=0;++i<l;)o+=t[i].length;for(e=new Array(o);--l>=0;)for(n=(r=t[l]).length;--n>=0;)e[--o]=r[n];return e}ld(),ld(),ld(),Gd.invert=Gd,1===(Od=Hd).length&&(Md=Od,Od=function(t,n){return Hd(Md(t),n)});var Jd=1e9,Qd=-Jd;function $d(t,n,e,r){function l(l,i){return t<=l&&l<=e&&n<=i&&i<=r}function i(l,i,u,a){var h=0,c=0;if(null==l||(h=o(l,u))!==(c=o(i,u))||s(l,i)<0^u>0)do{a.point(0===h||3===h?t:e,h>1?r:n)}while((h=(h+u+4)%4)!==c);else a.point(i[0],i[1])}function o(r,l){return gd(r[0]-t)<sd?l>0?0:3:gd(r[0]-e)<sd?l>0?2:1:gd(r[1]-n)<sd?l>0?1:0:l>0?3:2}function u(t,n){return s(t.x,n.x)}function s(t,n){var e=o(t,1),r=o(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(o){var s,a,h,c,f,p,d,g,y,_,v,m=o,b=Yd(),x={point:w,lineStart:function(){x.point=E,a&&a.push(h=[]),_=!0,y=!1,d=g=NaN},lineEnd:function(){s&&(E(c,f),p&&y&&b.rejoin(),s.push(b.result())),x.point=w,y&&m.lineEnd()},polygonStart:function(){m=b,s=[],a=[],v=!0},polygonEnd:function(){var n=function(){for(var n=0,e=0,l=a.length;e<l;++e)for(var i,o,u=a[e],s=1,h=u.length,c=u[0],f=c[0],p=c[1];s<h;++s)i=f,o=p,f=(c=u[s])[0],p=c[1],o<=r?p>r&&(f-i)*(r-o)>(p-o)*(t-i)&&++n:p<=r&&(f-i)*(r-o)<(p-o)*(t-i)&&--n;return n}(),e=v&&n,l=(s=Kd(s)).length;(e||l)&&(o.polygonStart(),e&&(o.lineStart(),i(null,null,1,o),o.lineEnd()),l&&Wd(s,u,n,i,o),o.polygonEnd()),m=o,s=a=h=null}};function w(t,n){l(t,n)&&m.point(t,n)}function E(i,o){var u=l(i,o);if(a&&h.push([i,o]),_)c=i,f=o,p=u,_=!1,u&&(m.lineStart(),m.point(i,o));else if(u&&y)m.point(i,o);else{var s=[d=Math.max(Qd,Math.min(Jd,d)),g=Math.max(Qd,Math.min(Jd,g))],b=[i=Math.max(Qd,Math.min(Jd,i)),o=Math.max(Qd,Math.min(Jd,o))];!function(t,n,e,r,l,i){var o,u=t[0],s=t[1],a=0,h=1,c=n[0]-u,f=n[1]-s;if(o=e-u,c||!(o>0)){if(o/=c,c<0){if(o<a)return;o<h&&(h=o)}else if(c>0){if(o>h)return;o>a&&(a=o)}if(o=l-u,c||!(o<0)){if(o/=c,c<0){if(o>h)return;o>a&&(a=o)}else if(c>0){if(o<a)return;o<h&&(h=o)}if(o=r-s,f||!(o>0)){if(o/=f,f<0){if(o<a)return;o<h&&(h=o)}else if(f>0){if(o>h)return;o>a&&(a=o)}if(o=i-s,f||!(o<0)){if(o/=f,f<0){if(o>h)return;o>a&&(a=o)}else if(f>0){if(o<a)return;o<h&&(h=o)}return a>0&&(t[0]=u+a*c,t[1]=s+a*f),h<1&&(n[0]=u+h*c,n[1]=s+h*f),!0}}}}}(s,b,t,n,e,r)?u&&(m.lineStart(),m.point(i,o),v=!1):(y||(m.lineStart(),m.point(s[0],s[1])),m.point(b[0],b[1]),u||m.lineEnd(),v=!1)}d=i,g=o,y=u}return x}}var tg=ld();function ng(t){return t}ld(),ld(),ld();var eg=1/0,rg=eg,lg=-eg,ig=lg,og={point:function(t,n){t<eg&&(eg=t),t>lg&&(lg=t),n<rg&&(rg=n),n>ig&&(ig=n)},lineStart:Ed,lineEnd:Ed,polygonStart:Ed,polygonEnd:Ed,result:function(){var t=[[eg,rg],[lg,ig]];return lg=ig=-(rg=eg=1/0),t}};function ug(t,n,e,r){return function(l,i){var o,u,s,a=n(i),h=l.invert(r[0],r[1]),c=Yd(),f=n(c),p=!1,d={point:g,lineStart:_,lineEnd:v,polygonStart:function(){d.point=m,d.lineStart=b,d.lineEnd=x,u=[],o=[]},polygonEnd:function(){d.point=g,d.lineStart=_,d.lineEnd=v,u=Kd(u);var t=function(t,n){var e=n[0],r=n[1],l=[md(e),-vd(e),0],i=0,o=0;tg.reset();for(var u=0,s=t.length;u<s;++u)if(h=(a=t[u]).length)for(var a,h,c=a[h-1],f=c[0],p=c[1]/2+cd,d=md(p),g=vd(p),y=0;y<h;++y,f=v,d=b,g=x,c=_){var _=a[y],v=_[0],m=_[1]/2+cd,b=md(m),x=vd(m),w=v-f,E=w>=0?1:-1,C=E*w,O=C>ad,M=d*b;if(tg.add(_d(M*E*md(C),g*x+M*vd(C))),i+=O?w+E*fd:w,O^f>=e^v>=e){var S=Ad(Nd(c),Nd(_));kd(S);var I=Ad(l,S);kd(I);var P=(O^w>=0?-1:1)*wd(I[2]);(r>P||r===P&&(S[0]||S[1]))&&(o+=O^w>=0?1:-1)}}return(i<-1e-6||i<sd&&tg<-1e-6)^1&o}(o,h);u.length?(p||(i.polygonStart(),p=!0),Wd(u,ag,t,e,i)):t&&(p||(i.polygonStart(),p=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),p&&(i.polygonEnd(),p=!1),u=o=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function g(n,e){var r=l(n,e);t(n=r[0],e=r[1])&&i.point(n,e)}function y(t,n){var e=l(t,n);a.point(e[0],e[1])}function _(){d.point=y,a.lineStart()}function v(){d.point=g,a.lineEnd()}function m(t,n){s.push([t,n]);var e=l(t,n);f.point(e[0],e[1])}function b(){f.lineStart(),s=[]}function x(){m(s[0][0],s[0][1]),f.lineEnd();var t,n,e,r,l=f.clean(),a=c.result(),h=a.length;if(s.pop(),o.push(s),s=null,h)if(1&l){if((n=(e=a[0]).length-1)>0){for(p||(i.polygonStart(),p=!0),i.lineStart(),t=0;t<n;++t)i.point((r=e[t])[0],r[1]);i.lineEnd()}}else h>1&&2&l&&a.push(a.pop().concat(a.shift())),u.push(a.filter(sg))}return d}}function sg(t){return t.length>1}function ag(t,n){return((t=t.x)[0]<0?t[1]-hd-sd:hd-t[1])-((n=n.x)[0]<0?n[1]-hd-sd:hd-n[1])}ld();var hg=ug((function(){return!0}),(function(t){var n,e=NaN,r=NaN,l=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(i,o){var u=i>0?ad:-ad,s=gd(i-e);gd(s-ad)<sd?(t.point(e,r=(r+o)/2>0?hd:-hd),t.point(l,r),t.lineEnd(),t.lineStart(),t.point(u,r),t.point(i,r),n=0):l!==u&&s>=ad&&(gd(e-l)<sd&&(e-=l*sd),gd(i-u)<sd&&(i-=u*sd),r=function(t,n,e,r){var l,i,o=md(t-e);return gd(o)>sd?yd((md(n)*(i=vd(r))*md(e)-md(r)*(l=vd(n))*md(t))/(l*i*o)):(n+r)/2}(e,r,i,o),t.point(l,r),t.lineEnd(),t.lineStart(),t.point(u,r),n=0),t.point(e=i,r=o),l=u},lineEnd:function(){t.lineEnd(),e=r=NaN},clean:function(){return 2-n}}}),(function(t,n,e,r){var l;if(null==t)l=e*hd,r.point(-ad,l),r.point(0,l),r.point(ad,l),r.point(ad,0),r.point(ad,-l),r.point(0,-l),r.point(-ad,-l),r.point(-ad,0),r.point(-ad,l);else if(gd(t[0]-n[0])>sd){var i=t[0]<n[0]?ad:-ad;l=e*i/2,r.point(-i,l),r.point(0,l),r.point(i,l)}else r.point(n[0],n[1])}),[-ad,-hd]);function cg(t,n){var e=vd(t),r=e>0,l=gd(e)>sd;function i(t,n){return vd(t)*vd(n)>e}function o(t,n,r){var l=[1,0,0],i=Ad(Nd(t),Nd(n)),o=Ld(i,i),u=i[0],s=o-u*u;if(!s)return!r&&t;var a=e*o/s,h=-e*u/s,c=Ad(l,i),f=Dd(l,a);jd(f,Dd(i,h));var p=c,d=Ld(f,p),g=Ld(p,p),y=d*d-g*(Ld(f,f)-1);if(!(y<0)){var _=bd(y),v=Dd(p,(-d-_)/g);if(jd(v,f),v=Td(v),!r)return v;var m,b=t[0],x=n[0],w=t[1],E=n[1];x<b&&(m=b,b=x,x=m);var C=x-b,O=gd(C-ad)<sd;if(!O&&E<w&&(m=w,w=E,E=m),O||C<sd?O?w+E>0^v[1]<(gd(v[0]-b)<sd?w:E):w<=v[1]&&v[1]<=E:C>ad^(b<=v[0]&&v[0]<=x)){var M=Dd(p,(-d+_)/g);return jd(M,f),[v,Td(M)]}}}function u(n,e){var l=r?t:ad-t,i=0;return n<-l?i|=1:n>l&&(i|=2),e<-l?i|=4:e>l&&(i|=8),i}return ug(i,(function(t){var n,e,s,a,h;return{lineStart:function(){a=s=!1,h=1},point:function(c,f){var p,d=[c,f],g=i(c,f),y=r?g?0:u(c,f):g?u(c+(c<0?ad:-ad),f):0;if(!n&&(a=s=g)&&t.lineStart(),g!==s&&(!(p=o(n,d))||Xd(n,p)||Xd(d,p))&&(d[0]+=sd,d[1]+=sd,g=i(d[0],d[1])),g!==s)h=0,g?(t.lineStart(),p=o(d,n),t.point(p[0],p[1])):(p=o(n,d),t.point(p[0],p[1]),t.lineEnd()),n=p;else if(l&&n&&r^g){var _;y&e||!(_=o(d,n,!0))||(h=0,r?(t.lineStart(),t.point(_[0][0],_[0][1]),t.point(_[1][0],_[1][1]),t.lineEnd()):(t.point(_[1][0],_[1][1]),t.lineEnd(),t.lineStart(),t.point(_[0][0],_[0][1])))}!g||n&&Xd(n,d)||t.point(d[0],d[1]),n=d,s=g,e=y},lineEnd:function(){s&&t.lineEnd(),n=null},clean:function(){return h|(a&&s)<<1}}}),(function(e,r,l,i){!function(t,n,e,r,l,i){if(e){var o=vd(n),u=md(n),s=r*e;null==l?(l=n+r*fd,i=n-s/2):(l=qd(o,l),i=qd(o,i),(r>0?l<i:l>i)&&(l+=r*fd));for(var a,h=l;r>0?h>i:h<i;h-=s)a=Td([o,-u*vd(h),-u*md(h)]),t.point(a[0],a[1])}}(i,t,n,l,e,r)}),r?[0,-t]:[-ad,t-ad])}function fg(t){return function(n){var e=new pg;for(var r in t)e[r]=t[r];return e.stream=n,e}}function pg(){}function dg(t,n,e){var r=n[1][0]-n[0][0],l=n[1][1]-n[0][1],i=t.clipExtent&&t.clipExtent();t.scale(150).translate([0,0]),null!=i&&t.clipExtent(null),function(t,n){t&&Sd.hasOwnProperty(t.type)?Sd[t.type](t,n):Cd(t,n)}(e,t.stream(og));var o=og.result(),u=Math.min(r/(o[1][0]-o[0][0]),l/(o[1][1]-o[0][1])),s=+n[0][0]+(r-u*(o[1][0]+o[0][0]))/2,a=+n[0][1]+(l-u*(o[1][1]+o[0][1]))/2;return null!=i&&t.clipExtent(i),t.scale(150*u).translate([s,a])}pg.prototype={constructor:pg,point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var gg=vd(30*dd);function yg(t,n){return+n?function(t,n){function e(r,l,i,o,u,s,a,h,c,f,p,d,g,y){var _=a-r,v=h-l,m=_*_+v*v;if(m>4*n&&g--){var b=o+f,x=u+p,w=s+d,E=bd(b*b+x*x+w*w),C=wd(w/=E),O=gd(gd(w)-1)<sd||gd(i-c)<sd?(i+c)/2:_d(x,b),M=t(O,C),S=M[0],I=M[1],P=S-r,R=I-l,T=v*P-_*R;(T*T/m>n||gd((_*P+v*R)/m-.5)>.3||o*f+u*p+s*d<gg)&&(e(r,l,i,o,u,s,S,I,O,b/=E,x/=E,w,g,y),y.point(S,I),e(S,I,O,b,x,w,a,h,c,f,p,d,g,y))}}return function(n){var r,l,i,o,u,s,a,h,c,f,p,d,g={point:y,lineStart:_,lineEnd:m,polygonStart:function(){n.polygonStart(),g.lineStart=b},polygonEnd:function(){n.polygonEnd(),g.lineStart=_}};function y(e,r){e=t(e,r),n.point(e[0],e[1])}function _(){h=NaN,g.point=v,n.lineStart()}function v(r,l){var i=Nd([r,l]),o=t(r,l);e(h,c,a,f,p,d,h=o[0],c=o[1],a=r,f=i[0],p=i[1],d=i[2],16,n),n.point(h,c)}function m(){g.point=y,n.lineEnd()}function b(){_(),g.point=x,g.lineEnd=w}function x(t,n){v(r=t,n),l=h,i=c,o=f,u=p,s=d,g.point=v}function w(){e(h,c,a,f,p,d,l,i,r,o,u,s,16,n),g.lineEnd=m,m()}return g}}(t,n):function(t){return fg({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}(t)}var _g=fg({point:function(t,n){this.stream.point(t*dd,n*dd)}}),vg=function(t,n){var e=vd(t),r=vd(n),l=function(t){return(t=xd(t))&&t/md(t)}(e*r);return[l*r*md(t),l*md(n)]};function mg(){return function(t){return function(t){var n,e,r,l,i,o,u,s,a,h,c=150,f=480,p=250,d=0,g=0,y=0,_=0,v=0,m=null,b=hg,x=null,w=ng,E=.5,C=yg(S,E);function O(t){return[(t=i(t[0]*dd,t[1]*dd))[0]*c+e,r-t[1]*c]}function M(t){return(t=i.invert((t[0]-e)/c,(r-t[1])/c))&&[t[0]*pd,t[1]*pd]}function S(t,l){return[(t=n(t,l))[0]*c+e,r-t[1]*c]}function I(){i=Fd(l=function(t,n,e){return(t%=fd)?n||e?Fd(Bd(t),Ud(n,e)):Bd(t):n||e?Ud(n,e):Gd}(y,_,v),n);var t=n(d,g);return e=f-t[0]*c,r=p+t[1]*c,P()}function P(){return a=h=null,O}return O.stream=function(t){return a&&h===t?a:a=_g(b(l,C(w(h=t))))},O.clipAngle=function(t){return arguments.length?(b=+t?cg(m=t*dd,6*dd):(m=null,hg),P()):m*pd},O.clipExtent=function(t){return arguments.length?(w=null==t?(x=o=u=s=null,ng):$d(x=+t[0][0],o=+t[0][1],u=+t[1][0],s=+t[1][1]),P()):null==x?null:[[x,o],[u,s]]},O.scale=function(t){return arguments.length?(c=+t,I()):c},O.translate=function(t){return arguments.length?(f=+t[0],p=+t[1],I()):[f,p]},O.center=function(t){return arguments.length?(d=t[0]%360*dd,g=t[1]%360*dd,I()):[d*pd,g*pd]},O.rotate=function(t){return arguments.length?(y=t[0]%360*dd,_=t[1]%360*dd,v=t.length>2?t[2]%360*dd:0,I()):[y*pd,_*pd,v*pd]},O.precision=function(t){return arguments.length?(C=yg(S,E=t*t),P()):bd(E)},O.fitExtent=function(t,n){return dg(O,t,n)},O.fitSize=function(t,n){return function(t,n,e){return dg(t,[[0,0],n],e)}(O,t,n)},function(){return n=t.apply(this,arguments),O.invert=n.invert&&M,I()}}((function(){return t}))()}(vg).scale(79.4188).clipAngle(179.999)}function bg(t,e,r,l){var o=t.properties||{},u="Feature"===t.type?t.geometry:t;if("GeometryCollection"===u.type){var s=[];return G(t,(function(t){var n=bg(t,e,r,l);n&&s.push(n)})),p(s)}var a=function(t){var e=ae(t).geometry.coordinates,r=[-e[0],-e[1]];return mg().rotate(r).scale(n)}(u),h={type:u.type,coordinates:xg(u.coordinates,a)},c=(new qh).read(h),f=m(b(e,r),"meters"),d=kf.bufferOp(c,f,l);if(!function t(n){return Array.isArray(n[0])?t(n[0]):isNaN(n[0])}((d=(new Yh).write(d)).coordinates))return i({type:d.type,coordinates:wg(d.coordinates,a)},o)}function xg(t,n){return"object"!=typeof t[0]?n(t):t.map((function(t){return xg(t,n)}))}function wg(t,n){return"object"!=typeof t[0]?n.invert(t):t.map((function(t){return wg(t,n)}))}function Eg(t,n,e){void 0===e&&(e={});var r=rt(t),l=rt(n),i=vs.intersection(r.coordinates,l.coordinates);return 0===i.length?null:1===i.length?a(i[0],e.properties):y(i,e.properties)}function Cg(t,n,e){void 0===e&&(e={});var r=JSON.stringify(e.properties||{}),l=t[0],i=t[1],o=t[2],u=t[3],s=(i+u)/2,a=(l+o)/2,h=2*n/_n([l,s],[o,s],e)*(o-l),c=2*n/_n([a,i],[a,u],e)*(u-i),f=h/2,d=2*f,g=Math.sqrt(3)/2*c,y=o-l,_=u-i,v=3/4*d,m=g,b=(y-d)/(d-f/2),x=Math.floor(b),w=(x*v-f/2-y)/2-f/2+v/2,E=Math.floor((_-g)/g),C=(_-E*g)/2,O=E*g-_>g/2;O&&(C-=g/4);for(var M=[],S=[],I=0;I<6;I++){var P=2*Math.PI/6*I;M.push(Math.cos(P)),S.push(Math.sin(P))}for(var R=[],T=0;T<=x;T++)for(var N=0;N<=E;N++){var L=T%2==1;if(!(0===N&&L||0===N&&O)){var A=T*v+l-w,j=N*m+i+C;if(L&&(j-=g/2),!0===e.triangles)Mg([A,j],h/2,c/2,JSON.parse(r),M,S).forEach((function(t){e.mask?Eg(e.mask,t)&&R.push(t):R.push(t)}));else{var D=Og([A,j],h/2,c/2,JSON.parse(r),M,S);e.mask?Eg(e.mask,D)&&R.push(D):R.push(D)}}}return p(R)}function Og(t,n,e,r,l,i){for(var o=[],u=0;u<6;u++){var s=t[0]+n*l[u],h=t[1]+e*i[u];o.push([s,h])}return o.push(o[0].slice()),a([o],r)}function Mg(t,n,e,r,l,i){for(var o=[],u=0;u<6;u++){var s=[];s.push(t),s.push([t[0]+n*l[u],t[1]+e*i[u]]),s.push([t[0]+n*l[(u+1)%6],t[1]+e*i[(u+1)%6]]),s.push(t),o.push(a([s],r))}return o}function Sg(t){return y(t)}function Ig(t,n,e){return void 0===e&&(e={}),function(t,n,e,r){void 0===r&&(r={});for(var l=[],i=t[0],o=t[1],u=t[2],s=t[3],h=n/_n([i,o],[u,o],r)*(u-i),c=e/_n([i,o],[i,s],r)*(s-o),f=u-i,d=s-o,g=Math.floor(f/h),y=Math.floor(d/c),_=(d-y*c)/2,v=i+(f-g*h)/2,m=0;m<g;m++){for(var b=o+_,x=0;x<y;x++){var w=a([[[v,b],[v,b+c],[v+h,b+c],[v+h,b],[v,b]]],r.properties);r.mask?to(r.mask,w)&&l.push(w):l.push(w),b+=c}v+=h}return p(l)}(t,n,n,e)}function Pg(t,n,e){void 0===e&&(e={});for(var r=[],l=n/_n([t[0],t[1]],[t[2],t[1]],e)*(t[2]-t[0]),i=n/_n([t[0],t[1]],[t[0],t[3]],e)*(t[3]-t[1]),o=0,u=t[0];u<=t[2];){for(var s=0,h=t[1];h<=t[3];){var c=null,f=null;o%2==0&&s%2==0?(c=a([[[u,h],[u,h+i],[u+l,h],[u,h]]],e.properties),f=a([[[u,h+i],[u+l,h+i],[u+l,h],[u,h+i]]],e.properties)):o%2==0&&s%2==1?(c=a([[[u,h],[u+l,h+i],[u+l,h],[u,h]]],e.properties),f=a([[[u,h],[u,h+i],[u+l,h+i],[u,h]]],e.properties)):s%2==0&&o%2==1?(c=a([[[u,h],[u,h+i],[u+l,h+i],[u,h]]],e.properties),f=a([[[u,h],[u+l,h+i],[u+l,h],[u,h]]],e.properties)):s%2==1&&o%2==1&&(c=a([[[u,h],[u,h+i],[u+l,h],[u,h]]],e.properties),f=a([[[u,h+i],[u+l,h+i],[u+l,h],[u,h+i]]],e.properties)),e.mask?(Eg(e.mask,c)&&r.push(c),Eg(e.mask,f)&&r.push(f)):(r.push(c),r.push(f)),h+=i,s++}o++,u+=l}return p(r)}vg.invert=function(t,n){var e=bd(t*t+n*n),r=e,l=md(r),i=vd(r);return[_d(t*l,e*i),wd(e&&n*l/e)]},t.along=function(t,n,e){void 0===e&&(e={});for(var r=rt(t).coordinates,l=0,i=0;i<r.length&&!(n>=l&&i===r.length-1);i++){if(l>=n){var o=n-l;if(o){var s=se(r[i],r[i-1])-180;return oe(r[i],o,s,e)}return u(r[i])}l+=_n(r[i],r[i+1],e)}return u(r[r.length-1])},t.angle=function(t,n,e,r){if(void 0===r&&(r={}),!I(r))throw new Error("options is invalid");if(!t)throw new Error("startPoint is required");if(!n)throw new Error("midPoint is required");if(!e)throw new Error("endPoint is required");var l=t,i=n,o=e,u=w(!0!==r.mercator?se(l,i):_l(l,i)),s=w(!0!==r.mercator?se(o,i):_l(o,i)),a=Math.abs(u-s);return!0===r.explementary?360-a:a},t.applyFilter=Tu,t.area=br,t.areaFactors=l,t.bbox=K,t.bboxClip=function(t,n){var e=rt(t),r=e.type,l="Feature"===t.type?t.properties:{},i=e.coordinates;switch(r){case"LineString":case"MultiLineString":var o=[];return"LineString"===r&&(i=[i]),i.forEach((function(t){!function(t,n,e){var r,l,i,o,u,s=t.length,a=al(t[0],n),h=[];for(e||(e=[]),r=1;r<s;r++){for(o=t[r-1],l=i=al(u=t[r],n);;){if(!(a|l)){h.push(o),l!==i?(h.push(u),r<s-1&&(e.push(h),h=[])):r===s-1&&h.push(u);break}if(a&l)break;a?a=al(o=sl(o,u,a,n),n):l=al(u=sl(o,u,l,n),n)}a=i}h.length&&e.push(h)}(t,n,o)})),1===o.length?c(o[0],l):d(o,l);case"Polygon":return a(hl(i,n),l);case"MultiPolygon":return y(i.map((function(t){return hl(t,n)})),l);default:throw new Error("geometry "+r+" not supported")}},t.bboxPolygon=re,t.bearing=se,t.bearingToAngle=w,t.bearingToAzimuth=w,t.bezier=ee,t.bezierSpline=ee,t.booleanClockwise=El,t.booleanContains=function(t,n){var e=rt(t),r=rt(n),l=e.type,i=r.type,o=e.coordinates,u=r.coordinates;switch(l){case"Point":switch(i){case"Point":return qi(o,u);default:throw new Error("feature2 "+i+" geometry not supported")}case"MultiPoint":switch(i){case"Point":return function(t,n){var e,r=!1;for(e=0;e<t.coordinates.length;e++)if(qi(t.coordinates[e],n.coordinates)){r=!0;break}return r}(e,r);case"MultiPoint":return function(t,n){for(var e=0,r=n.coordinates;e<r.length;e++){for(var l=r[e],i=!1,o=0,u=t.coordinates;o<u.length;o++)if(qi(l,u[o])){i=!0;break}if(!i)return!1}return!0}(e,r);default:throw new Error("feature2 "+i+" geometry not supported")}case"LineString":switch(i){case"Point":return Mr(r,e,{ignoreEndVertices:!0});case"LineString":return function(t,n){for(var e=!1,r=0,l=n.coordinates;r<l.length;r++){var i=l[r];if(Mr({type:"Point",coordinates:i},t,{ignoreEndVertices:!0})&&(e=!0),!Mr({type:"Point",coordinates:i},t,{ignoreEndVertices:!1}))return!1}return e}(e,r);case"MultiPoint":return function(t,n){for(var e=!1,r=0,l=n.coordinates;r<l.length;r++){var i=l[r];if(Mr(i,t,{ignoreEndVertices:!0})&&(e=!0),!Mr(i,t))return!1}return!!e}(e,r);default:throw new Error("feature2 "+i+" geometry not supported")}case"Polygon":switch(i){case"Point":return dn(r,e,{ignoreBoundary:!0});case"LineString":return function(t,n){var e=!1,r=0;if(!Ui(K(t),K(n)))return!1;for(;r<n.coordinates.length-1;r++)if(dn({type:"Point",coordinates:Yi(n.coordinates[r],n.coordinates[r+1])},t,{ignoreBoundary:!0})){e=!0;break}return e}(e,r);case"Polygon":return function(t,n){if("Feature"===t.type&&null===t.geometry)return!1;if("Feature"===n.type&&null===n.geometry)return!1;if(!Ui(K(t),K(n)))return!1;for(var e=0,r=rt(n).coordinates;e<r.length;e++)for(var l=0,i=r[e];l<i.length;l++)if(!dn(i[l],t))return!1;return!0}(e,r);case"MultiPoint":return function(t,n){for(var e=0,r=n.coordinates;e<r.length;e++)if(!dn(r[e],t,{ignoreBoundary:!0}))return!1;return!0}(e,r);default:throw new Error("feature2 "+i+" geometry not supported")}default:throw new Error("feature1 "+l+" geometry not supported")}},t.booleanCrosses=function(t,n){var e=rt(t),r=rt(n),l=e.type,i=r.type;switch(l){case"MultiPoint":switch(i){case"LineString":return Xi(e,r);case"Polygon":return Wi(e,r);default:throw new Error("feature2 "+i+" geometry not supported")}case"LineString":switch(i){case"MultiPoint":return Xi(r,e);case"LineString":return function(t,n){if(hr(t,n).features.length>0)for(var e=0;e<t.coordinates.length-1;e++)for(var r=0;r<n.coordinates.length-1;r++){var l=!0;if(0!==r&&r!==n.coordinates.length-2||(l=!1),Zi(t.coordinates[e],t.coordinates[e+1],n.coordinates[r],l))return!0}return!1}(e,r);case"Polygon":return Vi(e,r);default:throw new Error("feature2 "+i+" geometry not supported")}case"Polygon":switch(i){case"MultiPoint":return Wi(r,e);case"LineString":return Vi(r,e);default:throw new Error("feature2 "+i+" geometry not supported")}default:throw new Error("feature1 "+l+" geometry not supported")}},t.booleanDisjoint=Fi,t.booleanEqual=function(t,n){return rt(t).type===rt(n).type&&new $i({precision:6}).compare(Xn(t),Xn(n))},t.booleanIntersects=to,t.booleanOverlap=function(t,n){var e=rt(t),r=rt(n),l=e.type,i=r.type;if("MultiPoint"===l&&"MultiPoint"!==i||("LineString"===l||"MultiLineString"===l)&&"LineString"!==i&&"MultiLineString"!==i||("Polygon"===l||"MultiPolygon"===l)&&"Polygon"!==i&&"MultiPolygon"!==i)throw new Error("features must be of the same type");if("Point"===l)throw new Error("Point geometry not supported");if(new $i({precision:6}).compare(t,n))return!1;var o=0;switch(l){case"MultiPoint":for(var u=0;u<e.coordinates.length;u++)for(var s=0;s<r.coordinates.length;s++){var a=e.coordinates[u],h=r.coordinates[s];if(a[0]===h[0]&&a[1]===h[1])return!0}return!1;case"LineString":case"MultiLineString":q(t,(function(t){q(n,(function(n){dl(t,n).features.length&&o++}))}));break;case"Polygon":case"MultiPolygon":q(t,(function(t){q(n,(function(n){hr(t,n).features.length&&o++}))}))}return o>0},t.booleanParallel=function(t,n){if(!t)throw new Error("line1 is required");if(!n)throw new Error("line2 is required");if("LineString"!==po(t,"line1"))throw new Error("line1 must be a LineString");if("LineString"!==po(n,"line2"))throw new Error("line2 must be a LineString");for(var e=Ge(Xn(t)).features,r=Ge(Xn(n)).features,l=0;l<e.length;l++){var i=e[l].geometry.coordinates;if(!r[l])break;if(!fo(i,r[l].geometry.coordinates))return!1}return!0},t.booleanPointInPolygon=dn,t.booleanPointOnLine=Mr,t.booleanWithin=Ir,t.buffer=function(t,n,e){var r=(e=e||{}).units||"kilometers",l=e.steps||8;if(!t)throw new Error("geojson is required");if("object"!=typeof e)throw new Error("options must be an object");if("number"!=typeof l)throw new Error("steps must be an number");if(void 0===n)throw new Error("radius is required");if(l<=0)throw new Error("steps must be greater than 0");var i=[];switch(t.type){case"GeometryCollection":return G(t,(function(t){var e=bg(t,n,r,l);e&&i.push(e)})),p(i);case"FeatureCollection":return D(t,(function(t){var e=bg(t,n,r,l);e&&D(e,(function(t){t&&i.push(t)}))})),p(i)}return bg(t,n,r,l)},t.center=ae,t.centerMean=uu,t.centerMedian=function(t,n){if(void 0===n&&(n={}),!I(n=n||{}))throw new Error("options is invalid");var e=n.counter||10;if(!S(e))throw new Error("counter must be a number");var r=n.weight,l=uu(t,{weight:n.weight}),i=p([]);D(t,(function(t){var n;i.features.push(he(t,{properties:{weight:null===(n=t.properties)||void 0===n?void 0:n[r]}}))}));var o={tolerance:n.tolerance,medianCandidates:[]};return function t(n,e,r,l,i){var o=l.tolerance||.001,s=0,a=0,h=0,c=0;if(D(r,(function(t){var e,r=null===(e=t.properties)||void 0===e?void 0:e.weight,l=null==r?1:r;if(!S(l=Number(l)))throw new Error("weight value must be a number");if(l>0){c+=1;var i=l*_n(t,n);0===i&&(i=1);var o=l/i;s+=t.geometry.coordinates[0]*o,a+=t.geometry.coordinates[1]*o,h+=o}})),c<1)throw new Error("no features to measure");var f=s/h,p=a/h;return 1===c||0===i||Math.abs(f-e[0])<o&&Math.abs(p-e[1])<o?u([f,p],{medianCandidates:l.medianCandidates}):(l.medianCandidates.push([f,p]),t([f,p],n,r,l,i-1))}(l.geometry.coordinates,[0,0],i,o,e)},t.centerOfMass=function t(n,e){switch(void 0===e&&(e={}),lt(n)){case"Point":return u(J(n),e.properties);case"Polygon":var r=[];N(n,(function(t){r.push(t)}));var l,i,o,s,a,h,c,f,p=he(n,{properties:e.properties}),d=p.geometry.coordinates,g=0,y=0,_=0,v=r.map((function(t){return[t[0]-d[0],t[1]-d[1]]}));for(l=0;l<r.length-1;l++)s=(i=v[l])[0],h=i[1],a=(o=v[l+1])[0],_+=f=s*(c=o[1])-a*h,g+=(s+a)*f,y+=(h+c)*f;if(0===_)return p;var m=1/(.5*_*6);return u([d[0]+m*g,d[1]+m*y],e.properties);default:var b=pn(n);return b?t(b,{properties:e.properties}):he(n,{properties:e.properties})}},t.centroid=he,t.circle=ue,t.cleanCoords=Xn,t.clone=wn,t.clusterEach=Iu,t.clusterReduce=Pu,t.clusters=Au,t.clustersDbscan=function(t,n,e){void 0===e&&(e={}),!0!==e.mutate&&(t=wn(t)),e.minPoints=e.minPoints||3;var r=new io.DBSCAN,l=r.run(F(t),O(n,e.units),e.minPoints,_n),i=-1;return l.forEach((function(n){i++,n.forEach((function(n){var e=t.features[n];e.properties||(e.properties={}),e.properties.cluster=i,e.properties.dbscan="core"}))})),r.noise.forEach((function(n){var e=t.features[n];e.properties||(e.properties={}),e.properties.cluster?e.properties.dbscan="edge":e.properties.dbscan="noise"})),t},t.clustersKmeans=function(t,n){void 0===n&&(n={});var e=t.features.length;n.numberOfClusters=n.numberOfClusters||Math.round(Math.sqrt(e/2)),n.numberOfClusters>e&&(n.numberOfClusters=e),!0!==n.mutate&&(t=wn(t));var r=F(t),l=r.slice(0,n.numberOfClusters),i=co(r,n.numberOfClusters,l),o={};return i.centroids.forEach((function(t,n){o[n]=t})),D(t,(function(t,n){var e=i.idxs[n];t.properties.cluster=e,t.properties.centroid=o[e]})),t},t.collect=function(t,n,e,r){var l=Et(6),i=n.features.map((function(t){var n;return{minX:t.geometry.coordinates[0],minY:t.geometry.coordinates[1],maxX:t.geometry.coordinates[0],maxY:t.geometry.coordinates[1],property:null===(n=t.properties)||void 0===n?void 0:n[e]}}));return l.load(i),t.features.forEach((function(t){t.properties||(t.properties={});var n=K(t),e=l.search({minX:n[0],minY:n[1],maxX:n[2],maxY:n[3]}),i=[];e.forEach((function(n){dn([n.minX,n.minY],t)&&i.push(n.property)})),t.properties[r]=i})),t},t.collectionOf=et,t.combine=function(t){var n={MultiPoint:{coordinates:[],properties:[]},MultiLineString:{coordinates:[],properties:[]},MultiPolygon:{coordinates:[],properties:[]}};return D(t,(function(t){var e,r,l,i;switch(null===(i=t.geometry)||void 0===i?void 0:i.type){case"Point":n.MultiPoint.coordinates.push(t.geometry.coordinates),n.MultiPoint.properties.push(t.properties);break;case"MultiPoint":(e=n.MultiPoint.coordinates).push.apply(e,t.geometry.coordinates),n.MultiPoint.properties.push(t.properties);break;case"LineString":n.MultiLineString.coordinates.push(t.geometry.coordinates),n.MultiLineString.properties.push(t.properties);break;case"MultiLineString":(r=n.MultiLineString.coordinates).push.apply(r,t.geometry.coordinates),n.MultiLineString.properties.push(t.properties);break;case"Polygon":n.MultiPolygon.coordinates.push(t.geometry.coordinates),n.MultiPolygon.properties.push(t.properties);break;case"MultiPolygon":(l=n.MultiPolygon.coordinates).push.apply(l,t.geometry.coordinates),n.MultiPolygon.properties.push(t.properties)}})),p(Object.keys(n).filter((function(t){return n[t].coordinates.length})).sort().map((function(t){return i({type:t,coordinates:n[t].coordinates},{collectedProperties:n[t].properties})})))},t.concave=function(t,n){void 0===n&&(n={});var e=n.maxEdge||1/0,r=vn(function(t){var n=[],e={};return D(t,(function(t){if(t.geometry){var r=t.geometry.coordinates.join("-");Object.prototype.hasOwnProperty.call(e,r)||(n.push(t),e[r]=!0)}})),p(n)}(t));if(r.features=r.features.filter((function(t){var r=t.geometry.coordinates[0][0],l=t.geometry.coordinates[0][1],i=t.geometry.coordinates[0][2],o=_n(r,l,n),u=_n(l,i,n),s=_n(r,i,n);return o<=e&&u<=e&&s<=e})),r.features.length<1)return null;var l=Yn(r);return 1===l.coordinates.length&&(l.coordinates=l.coordinates[0],l.type="Polygon"),i(l)},t.containsNumber=$,t.convertArea=M,t.convertDistance=O,t.convertLength=O,t.convex=pn,t.coordAll=F,t.coordEach=N,t.coordReduce=L,t.createBins=Ru,t.degrees2radians=C,t.degreesToRadians=C,t.destination=oe,t.difference=function(t,n){var e=rt(t),r=rt(n),l=t.properties||{},i=vs.difference(e.coordinates,r.coordinates);return 0===i.length?null:1===i.length?a(i[0],l):y(i,l)},t.dissolve=function(t,n){if(!I(n=n||{}))throw new Error("options is invalid");var e=n.propertyName;et(t,"Polygon","dissolve");var r=[];if(!n.propertyName)return Ar(y(vs.union.apply(null,t.features.map((function(t){return t.geometry.coordinates})))));var l={};D(t,(function(t){Object.prototype.hasOwnProperty.call(l,t.properties[e])||(l[t.properties[e]]=[]),l[t.properties[e]].push(t)}));for(var i=Object.keys(l),o=0;o<i.length;o++){var u=y(vs.union.apply(null,l[i[o]].map((function(t){return t.geometry.coordinates}))));u.properties[e]=i[o],r.push(u)}return Ar(p(r))},t.distance=_n,t.distanceToDegrees=x,t.distanceToRadians=b,t.distanceWeight=fu,t.earthRadius=n,t.ellipse=iu,t.envelope=le,t.explode=ce,t.factors=e,t.feature=i,t.featureCollection=p,t.featureEach=D,t.featureOf=nt,t.featureReduce=k,t.filterProperties=Lu,t.findPoint=Z,t.findSegment=W,t.flatten=Ar,t.flattenEach=B,t.flattenReduce=U,t.flip=function(t,n){if(!I(n=n||{}))throw new Error("options is invalid");var e=n.mutate;if(!t)throw new Error("geojson is required");return!1!==e&&void 0!==e||(t=wn(t)),N(t,(function(t){var n=t[0],e=t[1];t[0]=e,t[1]=n})),t},t.geojsonType=tt,t.geomEach=G,t.geomReduce=z,t.geometry=o,t.geometryCollection=_,t.getCluster=Su,t.getCoord=J,t.getCoords=Q,t.getGeom=rt,t.getType=lt,t.greatCircle=function(t,n,e){if("object"!=typeof(e=e||{}))throw new Error("options is invalid");var r=e.properties,l=e.npoints,i=e.offset;return t=J(t),n=J(n),r=r||{},l=l||100,i=i||10,new Zr({x:t[0],y:t[1]},{x:n[0],y:n[1]},r).Arc(l,{offset:i}).json()},t.helpers=T,t.hexGrid=Cg,t.inside=dn,t.interpolate=function(t,n,e){if("object"!=typeof(e=e||{}))throw new Error("options is invalid");var r=e.gridType,l=e.property,i=e.weight;if(!t)throw new Error("points is required");if(et(t,"Point","input must contain Points"),!n)throw new Error("cellSize is required");if(void 0!==i&&"number"!=typeof i)throw new Error("weight must be a number");l=l||"elevation",r=r||"square",i=i||1;var o,u=K(t);switch(r){case"point":case"points":o=Nr(u,n,e);break;case"square":case"squares":o=Ig(u,n,e);break;case"hex":case"hexes":o=Cg(u,n,e);break;case"triangle":case"triangles":o=Pg(u,n,e);break;default:throw new Error("invalid gridType")}var s=[];return D(o,(function(n){var o=0,u=0;D(t,(function(t){var s,a=_n("point"===r?n:he(n),t,e);if(void 0!==l&&(s=t.properties[l]),void 0===s&&(s=t.geometry.coordinates[2]),void 0===s)throw new Error("zValue is missing");0===a&&(o=s);var h=1/Math.pow(a,i);u+=h,o+=h*s}));var a=wn(n);a.properties[l]=o/u,s.push(a)})),p(s)},t.intersect=Eg,t.invariant=it,t.isNumber=S,t.isObject=I,t.isobands=function(t,n,e){if(!I(e=e||{}))throw new Error("options is invalid");var r=e.zProperty||"elevation",l=e.commonProperties||{},i=e.breaksProperties||[];if(et(t,"Point","Input must contain Points"),!n)throw new Error("breaks is required");if(!Array.isArray(n))throw new Error("breaks is not an Array");if(!I(l))throw new Error("commonProperties is not an Object");if(!Array.isArray(i))throw new Error("breaksProperties is not an Array");var o=function(t,n){if(!I(n=n||{}))throw new Error("options is invalid");var e=n.zProperty||"elevation",r=n.flip,l=n.flags;et(t,"Point","input must contain Points");for(var i=function(t,n){var e={};return D(t,(function(t){var n=Q(t)[1];e[n]||(e[n]=[]),e[n].push(t)})),Object.keys(e).map((function(t){return e[t].sort((function(t,n){return Q(t)[0]-Q(n)[0]}))})).sort((function(t,e){return n?Q(t[0])[1]-Q(e[0])[1]:Q(e[0])[1]-Q(t[0])[1]}))}
/*!
     * @license GNU Affero General Public License.
     * Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>
     * v. 1.2.0
     * https://github.com/RaumZeit/MarchingSquares.js
     *
     * MarchingSquaresJS is free software: you can redistribute it and/or modify
     * it under the terms of the GNU Affero General Public License as published by
     * the Free Software Foundation, either version 3 of the License, or
     * (at your option) any later version.
     *
     * MarchingSquaresJS is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     * GNU Affero General Public License for more details.
     *
     * As additional permission under GNU Affero General Public License version 3
     * section 7, third-party projects (personal or commercial) may distribute,
     * include, or link against UNMODIFIED VERSIONS of MarchingSquaresJS without the
     * requirement that said third-party project for that reason alone becomes
     * subject to any requirement of the GNU Affero General Public License version 3.
     * Any modifications to MarchingSquaresJS, however, must be shared with the public
     * and made available.
     *
     * In summary this:
     * - allows you to use MarchingSquaresJS at no cost
     * - allows you to use MarchingSquaresJS for both personal and commercial purposes
     * - allows you to distribute UNMODIFIED VERSIONS of MarchingSquaresJS under any
     *   license as long as this license notice is included
     * - enables you to keep the source code of your program that uses MarchingSquaresJS
     *   undisclosed
     * - forces you to share any modifications you have made to MarchingSquaresJS,
     *   e.g. bug-fixes
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with MarchingSquaresJS.  If not, see <http://www.gnu.org/licenses/>.
     */(t,r),o=[],u=0;u<i.length;u++){for(var s=i[u],a=[],h=0;h<s.length;h++){var c=s[h];c.properties[e]?a.push(c.properties[e]):a.push(0),!0===l&&(c.properties.matrixPosition=[u,h])}o.push(a)}return o}(t,{zProperty:r,flip:!0}),u=function(t,n,e){for(var r=[],l=1;l<n.length;l++){var i=+n[l-1],o=+n[l],u=Ei(wi(Pl(t,i,o-i))),s={};s.groupedRings=u,s[e]=i+"-"+o,r.push(s)}return r}(o,n,r);return p((u=function(t,n,e){var r=K(e),l=r[2]-r[0],i=r[3]-r[1],o=r[0],u=r[1],s=n[0].length-1,a=n.length-1,h=l/s,c=i/a,f=function(t){t[0]=t[0]*h+o,t[1]=t[1]*c+u};return t.forEach((function(t){t.groupedRings.forEach((function(t){t.forEach((function(t){t.forEach(f)}))}))})),t}(u,o,t)).map((function(t,n){if(i[n]&&!I(i[n]))throw new Error("Each mappedProperty is required to be an Object");var e=ht({},l,i[n]);return e[r]=t[r],y(t.groupedRings,e)})))},t.isolines=function(t,n,e){if(!I(e=e||{}))throw new Error("options is invalid");var r=e.zProperty||"elevation",l=e.commonProperties||{},i=e.breaksProperties||[];if(et(t,"Point","Input must contain Points"),!n)throw new Error("breaks is required");if(!Array.isArray(n))throw new Error("breaks must be an Array");if(!I(l))throw new Error("commonProperties must be an Object");if(!Array.isArray(i))throw new Error("breaksProperties must be an Array");var o=function(t,n){if(!I(n=n||{}))throw new Error("options is invalid");var e=n.zProperty||"elevation",r=n.flip,l=n.flags;et(t,"Point","input must contain Points");for(var i=function(t,n){var e={};return D(t,(function(t){var n=Q(t)[1];e[n]||(e[n]=[]),e[n].push(t)})),Object.keys(e).map((function(t){return e[t].sort((function(t,n){return Q(t)[0]-Q(n)[0]}))})).sort((function(t,e){return n?Q(t[0])[1]-Q(e[0])[1]:Q(e[0])[1]-Q(t[0])[1]}))}(t,r),o=[],u=0;u<i.length;u++){for(var s=i[u],a=[],h=0;h<s.length;h++){var c=s[h];c.properties[e]?a.push(c.properties[e]):a.push(0),!0===l&&(c.properties.matrixPosition=[u,h])}o.push(a)}return o}(t,{zProperty:r,flip:!0});return p(function(t,n,e){var r=K(e),l=r[2]-r[0],i=r[3]-r[1],o=r[0],u=r[1],s=n[0].length-1,a=n.length-1,h=l/s,c=i/a,f=function(t){t[0]=t[0]*h+o,t[1]=t[1]*c+u};return t.forEach((function(t){N(t,f)})),t}(function(t,n,e,r,l){for(var i=[],o=1;o<n.length;o++){var u=+n[o],s=ht({},r,l[o]);s[e]=u;var a=d(pt(t,u),s);i.push(a)}return i}(o,n,r,l,i),o,t))},t.kinks=function(t){var n,e,r={type:"FeatureCollection",features:[]};if("LineString"===(e="Feature"===t.type?t.geometry:t).type)n=[e.coordinates];else if("MultiLineString"===e.type)n=e.coordinates;else if("MultiPolygon"===e.type)n=[].concat.apply([],e.coordinates);else{if("Polygon"!==e.type)throw new Error("Input must be a LineString, MultiLineString, Polygon, or MultiPolygon Feature or Geometry");n=e.coordinates}return n.forEach((function(t){n.forEach((function(n){for(var e=0;e<t.length-1;e++)for(var l=e;l<n.length-1;l++){if(t===n){if(1===Math.abs(e-l))continue;if(0===e&&l===t.length-2&&t[e][0]===t[t.length-1][0]&&t[e][1]===t[t.length-1][1])continue}var i=_r(t[e][0],t[e][1],t[e+1][0],t[e+1][1],n[l][0],n[l][1],n[l+1][0],n[l+1][1]);i&&r.features.push(u([i[0],i[1]]))}}))})),r},t.length=Cr,t.lengthToDegrees=x,t.lengthToRadians=b,t.lineArc=$r,t.lineChunk=function(t,n,e){if(!I(e=e||{}))throw new Error("options is invalid");var r=e.units,l=e.reverse;if(!t)throw new Error("geojson is required");if(n<=0)throw new Error("segmentLength must be greater than 0");var i=[];return B(t,(function(t){l&&(t.geometry.coordinates=t.geometry.coordinates.reverse()),function(t,n,e,r){var l=Cr(t,{units:e});if(l<=n)return r(t);var i=l/n;Number.isInteger(i)||(i=Math.floor(i)+1);for(var o=0;o<i;o++)r(Or(t,n*o,n*(o+1),{units:e}))}(t,n,r,(function(t){i.push(t)}))})),p(i)},t.lineDistance=Cr,t.lineEach=X,t.lineIntersect=hr,t.lineOffset=function(t,n,e){if(!I(e=e||{}))throw new Error("options is invalid");var r=e.units;if(!t)throw new Error("geojson is required");if(null==n||isNaN(n))throw new Error("distance is required");var l=lt(t),i=t.properties;switch(l){case"LineString":return Ti(t,n,r);case"MultiLineString":var o=[];return B(t,(function(t){o.push(Ti(t,n,r).geometry.coordinates)})),d(o,i);default:throw new Error("geometry "+l+" is not supported")}},t.lineOverlap=dl,t.lineReduce=V,t.lineSegment=Ge,t.lineSlice=function(t,n,e){var r=Q(e);if("LineString"!==lt(e))throw new Error("line must be a LineString");for(var l,i=fr(e,t),o=fr(e,n),u=[(l=i.properties.index<=o.properties.index?[i,o]:[o,i])[0].geometry.coordinates],s=l[0].properties.index+1;s<l[1].properties.index+1;s++)u.push(r[s]);return u.push(l[1].geometry.coordinates),c(u,e.properties)},t.lineSliceAlong=Or,t.lineSplit=function(t,n){if(!t)throw new Error("line is required");if(!n)throw new Error("splitter is required");var e=lt(t),r=lt(n);if("LineString"!==e)throw new Error("line must be LineString");if("FeatureCollection"===r)throw new Error("splitter cannot be a FeatureCollection");if("GeometryCollection"===r)throw new Error("splitter cannot be a GeometryCollection");var l=Lr(n,{precision:7});switch(r){case"Point":return Kr(t,l);case"MultiPoint":return Hr(t,l);case"LineString":case"MultiLineString":case"Polygon":case"MultiPolygon":return Hr(t,hr(t,l))}},t.lineString=c,t.lineStringToPolygon=ll,t.lineStrings=f,t.lineToPolygon=ll,t.mask=function(t,n){var e,r=function(t){return a(t&&t.geometry.coordinates||[[[180,90],[-180,90],[-180,-90],[180,-90],[180,90]]])}(n);return("FeatureCollection"===t.type?Sg(2===(e=t).features.length?vs.union(e.features[0].geometry.coordinates,e.features[1].geometry.coordinates):vs.union.apply(vs,e.features.map((function(t){return t.geometry.coordinates})))):Sg(vs.union(t.geometry.coordinates))).geometry.coordinates.forEach((function(t){r.geometry.coordinates.push(t[0])})),r},t.meta=H,t.midpoint=function(t,n){return oe(t,_n(t,n)/2,se(t,n))},t.moranIndex=function(t,n){var e=n.inputField,r=n.threshold||1e5,l=n.p||2,i=n.binary||!1,o=fu(t,{alpha:n.alpha||-1,binary:i,p:l,standardization:n.standardization||!0,threshold:r}),u=[];D(t,(function(t){var n=t.properties||{};u.push(n[e])}));for(var s=pu(u),a=function(t){for(var n=pu(t),e=0,r=0,l=t;r<l.length;r++){var i=l[r];e+=Math.pow(i-n,2)}return e/t.length}(u),h=0,c=0,f=0,p=0,d=o.length,g=0;g<d;g++){for(var y=0,_=0;_<d;_++)h+=o[g][_]*(u[g]-s)*(u[_]-s),c+=o[g][_],f+=Math.pow(o[g][_]+o[_][g],2),y+=o[g][_]+o[_][g];p+=Math.pow(y,2)}var v=h/c/a,m=-1/(d-1),b=(d*d*(f*=.5)-d*p+c*c*3)/((d-1)*(d+1)*(c*c))-m*m,x=Math.sqrt(b);return{expectedMoranIndex:m,moranIndex:v,stdNorm:x,zNorm:(v-m)/x}},t.multiLineString=d,t.multiPoint=g,t.multiPolygon=y,t.nearest=Fe,t.nearestPoint=Fe,t.nearestPointOnLine=fr,t.nearestPointToLine=function(t,n,e){void 0===e&&(e={});var r=e.units,l=e.properties||{},i=function(t){var n=[];switch(t.geometry?t.geometry.type:t.type){case"GeometryCollection":return G(t,(function(t){"Point"===t.type&&n.push({type:"Feature",properties:{},geometry:t})})),{type:"FeatureCollection",features:n};case"FeatureCollection":return t.features=t.features.filter((function(t){return"Point"===t.geometry.type})),t;default:throw new Error("points must be a Point Collection")}}(t);if(!i.features.length)throw new Error("points must contain features");if(!n)throw new Error("line is required");if("LineString"!==lt(n))throw new Error("line must be a LineString");var o=1/0,u=null;return D(i,(function(t){var e=dr(t,n,{units:r});e<o&&(o=e,u=t)})),u&&(u.properties=ht({dist:o},u.properties,l)),u},t.planepoint=function(t,n){var e=J(t),r=rt(n).coordinates[0];if(r.length<4)throw new Error("OuterRing of a Polygon must have 4 or more Positions.");var l=n.properties||{},i=l.a,o=l.b,u=l.c,s=e[0],a=e[1],h=r[0][0],c=r[0][1],f=void 0!==i?i:r[0][2],p=r[1][0],d=r[1][1],g=void 0!==o?o:r[1][2],y=r[2][0],_=r[2][1],v=void 0!==u?u:r[2][2];return(v*(s-h)*(a-d)+f*(s-p)*(a-_)+g*(s-y)*(a-c)-g*(s-h)*(a-_)-v*(s-p)*(a-c)-f*(s-y)*(a-d))/((s-h)*(a-d)+(s-p)*(a-_)+(s-y)*(a-c)-(s-h)*(a-_)-(s-p)*(a-c)-(s-y)*(a-d))},t.point=u,t.pointGrid=Nr,t.pointOnFeature=vr,t.pointOnLine=fr,t.pointOnSurface=vr,t.pointToLineDistance=dr,t.points=s,t.pointsWithinPolygon=yn,t.polygon=a,t.polygonSmooth=function(t,n){var e=[],r=n.iterations||1;if(!t)throw new Error("inputPolys is required");return G(t,(function(t,n,l){var i,o,u;switch(t.type){case"Polygon":i=[[]];for(var s=0;s<r;s++)u=[[]],o=t,s>0&&(o=a(i).geometry),au(o,u),i=u.slice(0);e.push(a(i,l));break;case"MultiPolygon":i=[[[]]];for(var h=0;h<r;h++)u=[[[]]],o=t,h>0&&(o=y(i).geometry),hu(o,u),i=u.slice(0);e.push(y(i,l));break;default:throw new Error("geometry is invalid, must be Polygon or MultiPolygon")}})),p(e)},t.polygonTangents=function(t,n){var e,r,l,i,o=Q(t),s=Q(n),a=K(n),h=0,c=null;switch(o[0]>a[0]&&o[0]<a[2]&&o[1]>a[1]&&o[1]<a[3]&&(h=(c=Fe(t,ce(n))).properties.featureIndex),lt(n)){case"Polygon":e=s[0][h],r=s[0][0],null!==c&&c.geometry.coordinates[1]<o[1]&&(r=s[0][h]),i=wl(s[0][0],s[0][s[0].length-1],o);var f=bl(s[0],o,i,l,e,r);e=f[0],r=f[1];break;case"MultiPolygon":for(var d=0,g=0,y=0,_=0;_<s[0].length;_++){d=_;for(var v=!1,m=0;m<s[0][_].length;m++){if(g=m,y===h){v=!0;break}y++}if(v)break}e=s[0][d][g],r=s[0][d][g],i=wl(s[0][0][0],s[0][0][s[0][0].length-1],o),s.forEach((function(t){var n=bl(t[0],o,i,l,e,r);e=n[0],r=n[1]}))}return p([u(e),u(r)])},t.polygonToLine=nl,t.polygonToLineString=nl,t.polygonize=function(t){var n=ki.fromGeoJson(t);n.deleteDangles(),n.deleteCutEdges();var e=[],r=[];return n.getEdgeRings().filter((function(t){return t.isValid()})).forEach((function(t){t.isHole()?e.push(t):r.push(t)})),e.forEach((function(t){Di.findEdgeRingContaining(t,r)&&r.push(t)})),p(r.map((function(t){return t.toPolygon()})))},t.polygons=h,t.projection=mu,t.propEach=A,t.propReduce=j,t.propertiesContainsFilter=Nu,t.radians2degrees=E,t.radiansToDegrees=E,t.radiansToDistance=m,t.radiansToLength=m,t.random=Mu,t.randomLineString=Eu,t.randomPoint=xu,t.randomPolygon=wu,t.randomPosition=bu,t.rewind=function(t,n){if(!I(n=n||{}))throw new Error("options is invalid");var e=n.reverse||!1,r=n.mutate||!1;if(!t)throw new Error("<geojson> is required");if("boolean"!=typeof e)throw new Error("<reverse> must be a boolean");if("boolean"!=typeof r)throw new Error("<mutate> must be a boolean");!1===r&&(t=wn(t));var l=[];switch(t.type){case"GeometryCollection":return G(t,(function(t){Cl(t,e)})),t;case"FeatureCollection":return D(t,(function(t){D(Cl(t,e),(function(t){l.push(t)}))})),p(l)}return Cl(t,e)},t.rhumbBearing=_l,t.rhumbDestination=ml,t.rhumbDistance=pr,t.round=v,t.sample=function(t,n){if(!t)throw new Error("featurecollection is required");if(null==n)throw new Error("num is required");if("number"!=typeof n)throw new Error("num must be a number");return p(function(t,n){for(var e,r,l=t.slice(0),i=t.length,o=i-n;i-- >o;)e=l[r=Math.floor((i+1)*Math.random())],l[r]=l[i],l[i]=e;return l.slice(o)}(t.features,n))},t.sector=function(t,n,e,r,l){if(!I(l=l||{}))throw new Error("options is invalid");var i=l.properties;if(!t)throw new Error("center is required");if(null==e)throw new Error("bearing1 is required");if(null==r)throw new Error("bearing2 is required");if(!n)throw new Error("radius is required");if("object"!=typeof l)throw new Error("options must be an object");if(yl(e)===yl(r))return ue(t,n,l);var o=Q(t),u=$r(t,n,e,r,l),s=[[o]];return N(u,(function(t){s[0].push(t)})),s[0].push(o),a(s,i)},t.segmentEach=q,t.segmentReduce=Y,t.shortestPath=function(t,n,e){if(!I(e=e||{}))throw new Error("options is invalid");var r=e.resolution,l=e.minDistance,o=e.obstacles||p([]);if(!t)throw new Error("start is required");if(!n)throw new Error("end is required");if(r&&!S(r)||r<=0)throw new Error("options.resolution must be a number, greater than 0");if(l)throw new Error("options.minDistance is not yet implemented");var s=J(t),a=J(n);switch(t=u(s),n=u(a),lt(o)){case"FeatureCollection":if(0===o.features.length)return c([s,a]);break;case"Polygon":o=p([i(rt(o))]);break;default:throw new Error("invalid obstacles")}var h=o;h.features.push(t),h.features.push(n);var f=K(Si(re(K(h)),1.15));r||(r=_n([f[0],f[1]],[f[2],f[1]],e)/100),h.features.pop(),h.features.pop();for(var d=f[0],g=f[1],y=f[2],_=f[3],v=r/_n([d,g],[y,g],e)*(y-d),m=r/_n([d,g],[d,_],e)*(_-g),b=y-d,x=_-g,w=Math.floor(b/v),E=Math.floor(x/m),C=(b-w*v)/2,O=[],M=[],P=[],R=[],T=1/0,N=1/0,L=_-(x-E*m)/2,A=0;L>=g;){for(var j=[],D=[],k=d+C,F=0;k<=y;){var G=u([k,L]),z=bo(G,o);j.push(z?0:1),D.push(k+"|"+L);var B=_n(G,t);!z&&B<T&&(T=B,P={x:F,y:A});var U=_n(G,n);!z&&U<N&&(N=U,R={x:F,y:A}),k+=v,F++}M.push(j),O.push(D),L-=m,A++}var q=new _o(M,{diagonal:!0}),Y=q.grid[P.y][P.x],X=q.grid[R.y][R.x],V=yo.search(q,Y,X),W=[s];return V.forEach((function(t){var n=O[t.x][t.y].split("|");W.push([+n[0],+n[1]])})),W.push(a),Xn(c(W))},t.simplify=function(t,n){if(!I(n=n||{}))throw new Error("options is invalid");var e=void 0!==n.tolerance?n.tolerance:1,r=n.highQuality||!1,l=n.mutate||!1;if(!t)throw new Error("geojson is required");if(e&&e<0)throw new Error("invalid tolerance");return!0!==l&&(t=wn(t)),G(t,(function(t){!function(t,n,e){var r=t.type;if("Point"===r||"MultiPoint"===r)return t;Xn(t,!0);var l=t.coordinates;switch(r){case"LineString":t.coordinates=Qn(l,n,e);break;case"MultiLineString":t.coordinates=l.map((function(t){return Qn(t,n,e)}));break;case"Polygon":t.coordinates=$n(l,n,e);break;case"MultiPolygon":t.coordinates=l.map((function(t){return $n(t,n,e)}))}}(t,e,r)})),t},t.square=ie,t.squareGrid=Ig,t.standardDeviationalEllipse=function(t,n){if(!I(n=n||{}))throw new Error("options is invalid");var e=n.steps||64,r=n.weight,l=n.properties||{};if(!S(e))throw new Error("steps must be a number");if(!I(l))throw new Error("properties must be a number");var i=F(t).length,o=uu(t,{weight:r}),u=0,s=0,a=0;D(t,(function(t){var n=t.properties[r]||1,e=su(Q(t),Q(o));u+=Math.pow(e.x,2)*n,s+=Math.pow(e.y,2)*n,a+=e.x*e.y*n}));var h=u-s,c=Math.sqrt(Math.pow(h,2)+4*Math.pow(a,2)),f=2*a,d=Math.atan((h+c)/f),g=180*d/Math.PI,y=0,_=0,v=0;D(t,(function(t){var n=t.properties[r]||1,e=su(Q(t),Q(o));y+=Math.pow(e.x*Math.cos(d)-e.y*Math.sin(d),2)*n,_+=Math.pow(e.x*Math.sin(d)+e.y*Math.cos(d),2)*n,v+=n}));var m=Math.sqrt(2*y/v),b=Math.sqrt(2*_/v),x=iu(o,m,b,{units:"degrees",angle:g,steps:e,properties:l}),w=yn(t,p([x])),E={meanCenterCoordinates:Q(o),semiMajorAxis:m,semiMinorAxis:b,numberOfFeatures:i,angle:g,percentageWithinEllipse:100*F(w).length/i};return x.properties.standardDeviationalEllipse=E,x},t.tag=function(t,n,e,r){return t=wn(t),n=wn(n),D(t,(function(t){t.properties||(t.properties={}),D(n,(function(n){void 0===t.properties[r]&&dn(t,n)&&(t.properties[r]=n.properties[e])}))})),t},t.tesselate=function(t){if(!t.geometry||"Polygon"!==t.geometry.type&&"MultiPolygon"!==t.geometry.type)throw new Error("input must be a Polygon or MultiPolygon");var n={type:"FeatureCollection",features:[]};return"Polygon"===t.geometry.type?n.features=ke(t.geometry.coordinates):t.geometry.coordinates.forEach((function(t){n.features=n.features.concat(ke(t))})),n},t.tin=vn,t.toMercator=du,t.toWgs84=gu,t.transformRotate=Mi,t.transformScale=Si,t.transformTranslate=function(t,n,e,r){if(!I(r=r||{}))throw new Error("options is invalid");var l=r.units,i=r.zTranslation,o=r.mutate;if(!t)throw new Error("geojson is required");if(null==n||isNaN(n))throw new Error("distance is required");if(i&&"number"!=typeof i&&isNaN(i))throw new Error("zTranslation is not a number");if(i=void 0!==i?i:0,0===n&&0===i)return t;if(null==e||isNaN(e))throw new Error("direction is required");return n<0&&(n=-n,e+=180),!1!==o&&void 0!==o||(t=wn(t)),N(t,(function(t){var r=Q(ml(t,n,e,{units:l}));t[0]=r[0],t[1]=r[1],i&&3===t.length&&(t[2]+=i)})),t},t.triangleGrid=Pg,t.truncate=Lr,t.union=function(t,n,e){void 0===e&&(e={});var r=rt(t),l=rt(n),i=vs.union(r.coordinates,l.coordinates);return 0===i.length?null:1===i.length?a(i[0],e.properties):y(i,e.properties)},t.unitsFactors=r,t.unkinkPolygon=function(t){var n=[];return B(t,(function(t){"Polygon"===t.geometry.type&&D(Dr(t),(function(e){n.push(a(e.geometry.coordinates,t.properties))}))})),p(n)},t.validateBBox=P,t.validateId=R,t.voronoi=function(t,n){if(!I(n=n||{}))throw new Error("options is invalid");var e=n.bbox||[-180,-85,180,85];if(!t)throw new Error("points is required");if(!Array.isArray(e))throw new Error("bbox is invalid");return et(t,"Point","points"),p(function(){var t=wo,n=Eo,e=null;function r(r){return new ru(r.map((function(e,l){var i=[Math.round(t(e,l,r)/tu)*tu,Math.round(n(e,l,r)/tu)*tu];return i.index=l,i.data=e,i})),e)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(n){return arguments.length?(t="function"==typeof n?n:xo(+n),r):t},r.y=function(t){return arguments.length?(n="function"==typeof t?t:xo(+t),r):n},r.extent=function(t){return arguments.length?(e=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):e&&[[e[0][0],e[0][1]],[e[1][0],e[1][1]]]},r.size=function(t){return arguments.length?(e=null==t?null:[[0,0],[+t[0],+t[1]]],r):e&&[e[1][0]-e[0][0],e[1][1]-e[0][1]]},r}().x((function(t){return t.geometry.coordinates[0]})).y((function(t){return t.geometry.coordinates[1]})).extent([[e[0],e[1]],[e[2],e[3]]]).polygons(t.features).map(lu))},t.within=yn,Object.defineProperty(t,"__esModule",{value:!0})}(n)},function(t,n,e){"use strict";var r,l=e(257),i=e(237),o=e(270),u=e(278),s=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),a=function(t){function n(n,e,r){var l=t.call(this)||this;if(void 0!==r&&void 0===e)l.setFlatCoordinates(r,n);else{var i=e||0;l.setCenterAndRadius(n,i,r)}return l}return s(n,t),n.prototype.clone=function(){var t=new n(this.flatCoordinates.slice(),void 0,this.layout);return t.applyProperties(this),t},n.prototype.closestPointXY=function(t,n,e,r){var l=this.flatCoordinates,i=t-l[0],o=n-l[1],u=i*i+o*o;if(u<r){if(0===u)for(var s=0;s<this.stride;++s)e[s]=l[s];else{var a=this.getRadius()/Math.sqrt(u);e[0]=l[0]+a*i,e[1]=l[1]+a*o;for(s=2;s<this.stride;++s)e[s]=l[s]}return e.length=this.stride,u}return r},n.prototype.containsXY=function(t,n){var e=this.flatCoordinates,r=t-e[0],l=n-e[1];return r*r+l*l<=this.getRadiusSquared_()},n.prototype.getCenter=function(){return this.flatCoordinates.slice(0,this.stride)},n.prototype.computeExtent=function(t){var n=this.flatCoordinates,e=n[this.stride]-n[0];return Object(i.k)(n[0]-e,n[1]-e,n[0]+e,n[1]+e,t)},n.prototype.getRadius=function(){return Math.sqrt(this.getRadiusSquared_())},n.prototype.getRadiusSquared_=function(){var t=this.flatCoordinates[this.stride]-this.flatCoordinates[0],n=this.flatCoordinates[this.stride+1]-this.flatCoordinates[1];return t*t+n*n},n.prototype.getType=function(){return"Circle"},n.prototype.intersectsExtent=function(t){var n=this.getExtent();if(Object(i.F)(t,n)){var e=this.getCenter();return t[0]<=e[0]&&t[2]>=e[0]||(t[1]<=e[1]&&t[3]>=e[1]||Object(i.s)(t,this.intersectsCoordinate.bind(this)))}return!1},n.prototype.setCenter=function(t){var n=this.stride,e=this.flatCoordinates[n]-this.flatCoordinates[0],r=t.slice();r[n]=r[0]+e;for(var l=1;l<n;++l)r[n+l]=t[l];this.setFlatCoordinates(this.layout,r),this.changed()},n.prototype.setCenterAndRadius=function(t,n,e){this.setLayout(e,t,0),this.flatCoordinates||(this.flatCoordinates=[]);var r=this.flatCoordinates,l=Object(o.a)(r,0,t,this.stride);r[l++]=r[0]+n;for(var i=1,u=this.stride;i<u;++i)r[l++]=r[i];r.length=l,this.changed()},n.prototype.getCoordinates=function(){return null},n.prototype.setCoordinates=function(t,n){},n.prototype.setRadius=function(t){this.flatCoordinates[this.stride]=this.flatCoordinates[0]+t,this.changed()},n.prototype.rotate=function(t,n){var e=this.getCenter(),r=this.getStride();this.setCenter(Object(u.a)(e,0,e.length,r,t,n,e)),this.changed()},n.prototype.translate=function(t,n){var e=this.getCenter(),r=this.getStride();this.setCenter(Object(u.d)(e,0,e.length,r,t,n,e)),this.changed()},n}(l.a);a.prototype.transform,n.a=a},,,,,,,,,,function(t,n,e){"use strict";e.r(n),e.d(n,"default",(function(){return i}));var r=new Uint8Array(0);function l(t,n){if(!t.length)return n;if(!n.length)return t;var e=new Uint8Array(t.length+n.length);return e.set(t),e.set(n,t.length),e}function i(t){return"function"==typeof t.slice?t:new o("function"==typeof t.read?t:t.getReader())}function o(t){this._source=t,this._array=r,this._index=0}o.prototype.read=function(){var t=this,n=t._array.subarray(t._index);return t._source.read().then((function(e){return t._array=r,t._index=0,e.done?n.length>0?{done:!1,value:n}:{done:!0,value:void 0}:{done:!1,value:l(n,e.value)}}))},o.prototype.slice=function(t){if((t|=0)<0)throw new Error("invalid length");var n=this,e=this._array.length-this._index;if(this._index+t<=this._array.length)return Promise.resolve(this._array.subarray(this._index,this._index+=t));var l=new Uint8Array(t);return l.set(this._array.subarray(this._index)),function i(){return n._source.read().then((function(o){return o.done?(n._array=r,n._index=0,e>0?l.subarray(0,e):null):e+o.value.length>=t?(n._array=o.value,n._index=t-e,l.set(o.value.subarray(0,t-e),e),l):(l.set(o.value,e),e+=o.value.length,i())}))}()},o.prototype.cancel=function(){return this._source.cancel()}},function(t,n,e){"use strict";e.r(n),e.d(n,"default",(function(){return o}));var r=e(315),l=function(t){return fetch(t).then((function(t){return t.body&&t.body.getReader?t.body.getReader():t.arrayBuffer().then(r.default)}))},i=function(t){return new Promise((function(n,e){var l=new XMLHttpRequest;l.responseType="arraybuffer",l.onload=function(){n(Object(r.default)(l.response))},l.onerror=e,l.ontimeout=e,l.open("GET",t,!0),l.send()}))};function o(t){return("function"==typeof fetch?l:i)(t)}},,,,function(t,n,e){"use strict";var r,l=e(308),i=e(240),o=e(337),u=e(237),s=e(245),a=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function e(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)});function h(t){for(var n=[],e=0,r=t.length;e<r;++e)n.push(t[e].clone());return n}var c=function(t){function n(n){var e=t.call(this)||this;return e.geometries_=n||null,e.changeEventsKeys_=[],e.listenGeometriesChange_(),e}return a(n,t),n.prototype.unlistenGeometriesChange_=function(){this.changeEventsKeys_.forEach(s.c),this.changeEventsKeys_.length=0},n.prototype.listenGeometriesChange_=function(){if(this.geometries_)for(var t=0,n=this.geometries_.length;t<n;++t)this.changeEventsKeys_.push(Object(s.a)(this.geometries_[t],i.a.CHANGE,this.changed,this))},n.prototype.clone=function(){var t=new n(null);return t.setGeometries(this.geometries_),t.applyProperties(this),t},n.prototype.closestPointXY=function(t,n,e,r){if(r<Object(u.e)(this.getExtent(),t,n))return r;for(var l=this.geometries_,i=0,o=l.length;i<o;++i)r=l[i].closestPointXY(t,n,e,r);return r},n.prototype.containsXY=function(t,n){for(var e=this.geometries_,r=0,l=e.length;r<l;++r)if(e[r].containsXY(t,n))return!0;return!1},n.prototype.computeExtent=function(t){Object(u.l)(t);for(var n=this.geometries_,e=0,r=n.length;e<r;++e)Object(u.p)(t,n[e].getExtent());return t},n.prototype.getGeometries=function(){return h(this.geometries_)},n.prototype.getGeometriesArray=function(){return this.geometries_},n.prototype.getGeometriesArrayRecursive=function(){for(var t=[],n=this.geometries_,e=0,r=n.length;e<r;++e)n[e].getType()===this.getType()?t=t.concat(n[e].getGeometriesArrayRecursive()):t.push(n[e]);return t},n.prototype.getSimplifiedGeometry=function(t){if(this.simplifiedGeometryRevision!==this.getRevision()&&(this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),t<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&t<this.simplifiedGeometryMaxMinSquaredTolerance)return this;for(var e=[],r=this.geometries_,l=!1,i=0,o=r.length;i<o;++i){var u=r[i],s=u.getSimplifiedGeometry(t);e.push(s),s!==u&&(l=!0)}if(l){var a=new n(null);return a.setGeometriesArray(e),a}return this.simplifiedGeometryMaxMinSquaredTolerance=t,this},n.prototype.getType=function(){return"GeometryCollection"},n.prototype.intersectsExtent=function(t){for(var n=this.geometries_,e=0,r=n.length;e<r;++e)if(n[e].intersectsExtent(t))return!0;return!1},n.prototype.isEmpty=function(){return 0===this.geometries_.length},n.prototype.rotate=function(t,n){for(var e=this.geometries_,r=0,l=e.length;r<l;++r)e[r].rotate(t,n);this.changed()},n.prototype.scale=function(t,n,e){var r=e;r||(r=Object(u.w)(this.getExtent()));for(var l=this.geometries_,i=0,o=l.length;i<o;++i)l[i].scale(t,n,r);this.changed()},n.prototype.setGeometries=function(t){this.setGeometriesArray(h(t))},n.prototype.setGeometriesArray=function(t){this.unlistenGeometriesChange_(),this.geometries_=t,this.listenGeometriesChange_(),this.changed()},n.prototype.applyTransform=function(t){for(var n=this.geometries_,e=0,r=n.length;e<r;++e)n[e].applyTransform(t);this.changed()},n.prototype.translate=function(t,n){for(var e=this.geometries_,r=0,l=e.length;r<l;++r)e[r].translate(t,n);this.changed()},n.prototype.disposeInternal=function(){this.unlistenGeometriesChange_(),t.prototype.disposeInternal.call(this)},n}(o.a),f=e(256),p=e(238),d=e(242),g=e(241),y=function(){function t(){this.dataProjection=void 0,this.defaultFeatureProjection=void 0,this.supportedMediaTypes=null}return t.prototype.getReadOptions=function(t,n){var e;if(n){var r=n.dataProjection?Object(g.get)(n.dataProjection):this.readProjection(t);n.extent&&r&&r.getUnits()===f.b.TILE_PIXELS&&(r=Object(g.get)(r)).setWorldExtent(n.extent),e={dataProjection:r,featureProjection:n.featureProjection}}return this.adaptOptions(e)},t.prototype.adaptOptions=function(t){return Object(d.a)({dataProjection:this.dataProjection,featureProjection:this.defaultFeatureProjection},t)},t.prototype.getType=function(){return Object(p.b)()},t.prototype.readFeature=function(t,n){return Object(p.b)()},t.prototype.readFeatures=function(t,n){return Object(p.b)()},t.prototype.readGeometry=function(t,n){return Object(p.b)()},t.prototype.readProjection=function(t){return Object(p.b)()},t.prototype.writeFeature=function(t,n){return Object(p.b)()},t.prototype.writeFeatures=function(t,n){return Object(p.b)()},t.prototype.writeGeometry=function(t,n){return Object(p.b)()},t}();function _(t,n,e){var r,l=e?Object(g.get)(e.featureProjection):null,i=e?Object(g.get)(e.dataProjection):null;if(r=l&&i&&!Object(g.equivalent)(l,i)?(n?t.clone():t).transform(n?l:i,n?i:l):t,n&&e&&void 0!==e.decimals){var o=Math.pow(10,e.decimals);r===t&&(r=t.clone()),r.applyTransform((function(t){for(var n=0,e=t.length;n<e;++n)t[n]=Math.round(t[n]*o)/o;return t}))}return r}var v=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}();function m(t){if("string"==typeof t){var n=JSON.parse(t);return n||null}return null!==t?t:null}var b=function(t){function n(){return t.call(this)||this}return v(n,t),n.prototype.getType=function(){return"json"},n.prototype.readFeature=function(t,n){return this.readFeatureFromObject(m(t),this.getReadOptions(t,n))},n.prototype.readFeatures=function(t,n){return this.readFeaturesFromObject(m(t),this.getReadOptions(t,n))},n.prototype.readFeatureFromObject=function(t,n){return Object(p.b)()},n.prototype.readFeaturesFromObject=function(t,n){return Object(p.b)()},n.prototype.readGeometry=function(t,n){return this.readGeometryFromObject(m(t),this.getReadOptions(t,n))},n.prototype.readGeometryFromObject=function(t,n){return Object(p.b)()},n.prototype.readProjection=function(t){return this.readProjectionFromObject(m(t))},n.prototype.readProjectionFromObject=function(t){return Object(p.b)()},n.prototype.writeFeature=function(t,n){return JSON.stringify(this.writeFeatureObject(t,n))},n.prototype.writeFeatureObject=function(t,n){return Object(p.b)()},n.prototype.writeFeatures=function(t,n){return JSON.stringify(this.writeFeaturesObject(t,n))},n.prototype.writeFeaturesObject=function(t,n){return Object(p.b)()},n.prototype.writeGeometry=function(t,n){return JSON.stringify(this.writeGeometryObject(t,n))},n.prototype.writeGeometryObject=function(t,n){return Object(p.b)()},n}(y),x=e(298),w=e(282),E=e(257),C=e(292),O=e(270),M=e(283),S=e(243),I=e(277),P=e(335),R=e(293),T=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),N=function(t){function n(n,e,r){var l=t.call(this)||this;if(l.ends_=[],l.maxDelta_=-1,l.maxDeltaRevision_=-1,Array.isArray(n[0]))l.setCoordinates(n,e);else if(void 0!==e&&r)l.setFlatCoordinates(e,n),l.ends_=r;else{for(var i=l.getLayout(),o=n,u=[],s=[],a=0,h=o.length;a<h;++a){var c=o[a];0===a&&(i=c.getLayout()),Object(S.c)(u,c.getFlatCoordinates()),s.push(u.length)}l.setFlatCoordinates(i,u),l.ends_=s}return l}return T(n,t),n.prototype.appendLineString=function(t){this.flatCoordinates?Object(S.c)(this.flatCoordinates,t.getFlatCoordinates().slice()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()},n.prototype.clone=function(){var t=new n(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return t.applyProperties(this),t},n.prototype.closestPointXY=function(t,n,e,r){return r<Object(u.e)(this.getExtent(),t,n)?r:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(Object(C.a)(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Object(C.b)(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,t,n,e,r))},n.prototype.getCoordinateAtM=function(t,n,e){if(this.layout!=w.a.XYM&&this.layout!=w.a.XYZM||0===this.flatCoordinates.length)return null;var r=void 0!==n&&n,l=void 0!==e&&e;return Object(P.c)(this.flatCoordinates,0,this.ends_,this.stride,t,r,l)},n.prototype.getCoordinates=function(){return Object(I.b)(this.flatCoordinates,0,this.ends_,this.stride)},n.prototype.getEnds=function(){return this.ends_},n.prototype.getLineString=function(t){return t<0||this.ends_.length<=t?null:new x.default(this.flatCoordinates.slice(0===t?0:this.ends_[t-1],this.ends_[t]),this.layout)},n.prototype.getLineStrings=function(){for(var t=this.flatCoordinates,n=this.ends_,e=this.layout,r=[],l=0,i=0,o=n.length;i<o;++i){var u=n[i],s=new x.default(t.slice(l,u),e);r.push(s),l=u}return r},n.prototype.getFlatMidpoints=function(){for(var t=[],n=this.flatCoordinates,e=0,r=this.ends_,l=this.stride,i=0,o=r.length;i<o;++i){var u=r[i],s=Object(P.a)(n,e,u,l,.5);Object(S.c)(t,s),e=u}return t},n.prototype.getSimplifiedGeometryInternal=function(t){var e=[],r=[];return e.length=Object(M.b)(this.flatCoordinates,0,this.ends_,this.stride,t,e,0,r),new n(e,w.a.XY,r)},n.prototype.getType=function(){return"MultiLineString"},n.prototype.intersectsExtent=function(t){return Object(R.b)(this.flatCoordinates,0,this.ends_,this.stride,t)},n.prototype.setCoordinates=function(t,n){this.setLayout(n,t,2),this.flatCoordinates||(this.flatCoordinates=[]);var e=Object(O.c)(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=0===e.length?0:e[e.length-1],this.changed()},n}(E.a),L=e(300),A=e(239),j=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),D=function(t){function n(n,e){var r=t.call(this)||this;return e&&!Array.isArray(n[0])?r.setFlatCoordinates(e,n):r.setCoordinates(n,e),r}return j(n,t),n.prototype.appendPoint=function(t){this.flatCoordinates?Object(S.c)(this.flatCoordinates,t.getFlatCoordinates()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.changed()},n.prototype.clone=function(){var t=new n(this.flatCoordinates.slice(),this.layout);return t.applyProperties(this),t},n.prototype.closestPointXY=function(t,n,e,r){if(r<Object(u.e)(this.getExtent(),t,n))return r;for(var l=this.flatCoordinates,i=this.stride,o=0,s=l.length;o<s;o+=i){var a=Object(A.i)(t,n,l[o],l[o+1]);if(a<r){r=a;for(var h=0;h<i;++h)e[h]=l[o+h];e.length=i}}return r},n.prototype.getCoordinates=function(){return Object(I.a)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},n.prototype.getPoint=function(t){var n=this.flatCoordinates?this.flatCoordinates.length/this.stride:0;return t<0||n<=t?null:new L.a(this.flatCoordinates.slice(t*this.stride,(t+1)*this.stride),this.layout)},n.prototype.getPoints=function(){for(var t=this.flatCoordinates,n=this.layout,e=this.stride,r=[],l=0,i=t.length;l<i;l+=e){var o=new L.a(t.slice(l,l+e),n);r.push(o)}return r},n.prototype.getType=function(){return"MultiPoint"},n.prototype.intersectsExtent=function(t){for(var n=this.flatCoordinates,e=this.stride,r=0,l=n.length;r<l;r+=e){var i=n[r],o=n[r+1];if(Object(u.h)(t,i,o))return!0}return!1},n.prototype.setCoordinates=function(t,n){this.setLayout(n,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=Object(O.b)(this.flatCoordinates,0,t,this.stride),this.changed()},n}(E.a),k=e(296),F=e(338),G=e(362),z=e(306);var B=e(299),U=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),q=function(t){function n(n,e,r){var l=t.call(this)||this;if(l.endss_=[],l.flatInteriorPointsRevision_=-1,l.flatInteriorPoints_=null,l.maxDelta_=-1,l.maxDeltaRevision_=-1,l.orientedRevision_=-1,l.orientedFlatCoordinates_=null,!r&&!Array.isArray(n[0])){for(var i=l.getLayout(),o=n,u=[],s=[],a=0,h=o.length;a<h;++a){var c=o[a];0===a&&(i=c.getLayout());for(var f=u.length,p=c.getEnds(),d=0,g=p.length;d<g;++d)p[d]+=f;Object(S.c)(u,c.getFlatCoordinates()),s.push(p)}e=i,n=u,r=s}return void 0!==e&&r?(l.setFlatCoordinates(e,n),l.endss_=r):l.setCoordinates(n,e),l}return U(n,t),n.prototype.appendPolygon=function(t){var n;if(this.flatCoordinates){var e=this.flatCoordinates.length;Object(S.c)(this.flatCoordinates,t.getFlatCoordinates());for(var r=0,l=(n=t.getEnds().slice()).length;r<l;++r)n[r]+=e}else this.flatCoordinates=t.getFlatCoordinates().slice(),n=t.getEnds().slice(),this.endss_.push();this.endss_.push(n),this.changed()},n.prototype.clone=function(){for(var t=this.endss_.length,e=new Array(t),r=0;r<t;++r)e[r]=this.endss_[r].slice();var l=new n(this.flatCoordinates.slice(),this.layout,e);return l.applyProperties(this),l},n.prototype.closestPointXY=function(t,n,e,r){return r<Object(u.e)(this.getExtent(),t,n)?r:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(Object(C.f)(this.flatCoordinates,0,this.endss_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Object(C.c)(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,this.maxDelta_,!0,t,n,e,r))},n.prototype.containsXY=function(t,n){return Object(B.d)(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t,n)},n.prototype.getArea=function(){return Object(z.c)(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride)},n.prototype.getCoordinates=function(t){var n;return void 0!==t?(n=this.getOrientedFlatCoordinates().slice(),Object(G.d)(n,0,this.endss_,this.stride,t)):n=this.flatCoordinates,Object(I.c)(n,0,this.endss_,this.stride)},n.prototype.getEndss=function(){return this.endss_},n.prototype.getFlatInteriorPoints=function(){if(this.flatInteriorPointsRevision_!=this.getRevision()){var t=function(t,n,e,r){for(var l=[],i=Object(u.j)(),o=0,s=e.length;o<s;++o){var a=e[o];i=Object(u.n)(t,n,a[0],r),l.push((i[0]+i[2])/2,(i[1]+i[3])/2),n=a[a.length-1]}return l}(this.flatCoordinates,0,this.endss_,this.stride);this.flatInteriorPoints_=Object(F.b)(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t),this.flatInteriorPointsRevision_=this.getRevision()}return this.flatInteriorPoints_},n.prototype.getInteriorPoints=function(){return new D(this.getFlatInteriorPoints().slice(),w.a.XYM)},n.prototype.getOrientedFlatCoordinates=function(){if(this.orientedRevision_!=this.getRevision()){var t=this.flatCoordinates;Object(G.b)(t,0,this.endss_,this.stride)?this.orientedFlatCoordinates_=t:(this.orientedFlatCoordinates_=t.slice(),this.orientedFlatCoordinates_.length=Object(G.d)(this.orientedFlatCoordinates_,0,this.endss_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_},n.prototype.getSimplifiedGeometryInternal=function(t){var e=[],r=[];return e.length=Object(M.d)(this.flatCoordinates,0,this.endss_,this.stride,Math.sqrt(t),e,0,r),new n(e,w.a.XY,r)},n.prototype.getPolygon=function(t){if(t<0||this.endss_.length<=t)return null;var n;if(0===t)n=0;else{var e=this.endss_[t-1];n=e[e.length-1]}var r=this.endss_[t].slice(),l=r[r.length-1];if(0!==n)for(var i=0,o=r.length;i<o;++i)r[i]-=n;return new k.a(this.flatCoordinates.slice(n,l),this.layout,r)},n.prototype.getPolygons=function(){for(var t=this.layout,n=this.flatCoordinates,e=this.endss_,r=[],l=0,i=0,o=e.length;i<o;++i){var u=e[i].slice(),s=u[u.length-1];if(0!==l)for(var a=0,h=u.length;a<h;++a)u[a]-=l;var c=new k.a(n.slice(l,s),t,u);r.push(c),l=s}return r},n.prototype.getType=function(){return"MultiPolygon"},n.prototype.intersectsExtent=function(t){return Object(R.e)(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t)},n.prototype.setCoordinates=function(t,n){this.setLayout(n,t,3),this.flatCoordinates||(this.flatCoordinates=[]);var e=Object(O.d)(this.flatCoordinates,0,t,this.stride,this.endss_);if(0===e.length)this.flatCoordinates.length=0;else{var r=e[e.length-1];this.flatCoordinates.length=0===r.length?0:r[r.length-1]}this.changed()},n}(E.a),Y=e(244),X=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),V=function(t){function n(n){var e=this,r=n||{};return(e=t.call(this)||this).dataProjection=Object(g.get)(r.dataProjection?r.dataProjection:"EPSG:4326"),r.featureProjection&&(e.defaultFeatureProjection=Object(g.get)(r.featureProjection)),e.geometryName_=r.geometryName,e.extractGeometryName_=r.extractGeometryName,e.supportedMediaTypes=["application/geo+json","application/vnd.geo+json"],e}return X(n,t),n.prototype.readFeatureFromObject=function(t,n){var e=null,r=W((e="Feature"===t.type?t:{type:"Feature",geometry:t,properties:null}).geometry,n),i=new l.default;return this.geometryName_?i.setGeometryName(this.geometryName_):this.extractGeometryName_&&"geometry_name"in e!==void 0&&i.setGeometryName(e.geometry_name),i.setGeometry(r),"id"in e&&i.setId(e.id),e.properties&&i.setProperties(e.properties,!0),i},n.prototype.readFeaturesFromObject=function(t,n){var e=null;if("FeatureCollection"===t.type){e=[];for(var r=t.features,l=0,i=r.length;l<i;++l)e.push(this.readFeatureFromObject(r[l],n))}else e=[this.readFeatureFromObject(t,n)];return e},n.prototype.readGeometryFromObject=function(t,n){return W(t,n)},n.prototype.readProjectionFromObject=function(t){var n,e=t.crs;return e?"name"==e.type?n=Object(g.get)(e.properties.name):"EPSG"===e.type?n=Object(g.get)("EPSG:"+e.properties.code):Object(Y.a)(!1,36):n=this.dataProjection,n},n.prototype.writeFeatureObject=function(t,n){n=this.adaptOptions(n);var e={type:"Feature",geometry:null,properties:null},r=t.getId();if(void 0!==r&&(e.id=r),!t.hasProperties())return e;var l=t.getProperties(),i=t.getGeometry();return i&&(e.geometry=Z(i,n),delete l[t.getGeometryName()]),Object(d.d)(l)||(e.properties=l),e},n.prototype.writeFeaturesObject=function(t,n){n=this.adaptOptions(n);for(var e=[],r=0,l=t.length;r<l;++r)e.push(this.writeFeatureObject(t[r],n));return{type:"FeatureCollection",features:e}},n.prototype.writeGeometryObject=function(t,n){return Z(t,this.adaptOptions(n))},n}(b);function W(t,n){if(!t)return null;var e;switch(t.type){case"Point":e=function(t){return new L.a(t.coordinates)}(t);break;case"LineString":e=function(t){return new x.default(t.coordinates)}(t);break;case"Polygon":e=function(t){return new k.a(t.coordinates)}(t);break;case"MultiPoint":e=function(t){return new D(t.coordinates)}(t);break;case"MultiLineString":e=function(t){return new N(t.coordinates)}(t);break;case"MultiPolygon":e=function(t){return new q(t.coordinates)}(t);break;case"GeometryCollection":e=function(t,n){var e=t.geometries.map((function(t){return W(t,n)}));return new c(e)}(t);break;default:throw new Error("Unsupported GeoJSON type: "+t.type)}return _(e,!1,n)}function Z(t,n){var e,r=(t=_(t,!0,n)).getType();switch(r){case"Point":e=function(t,n){return{type:"Point",coordinates:t.getCoordinates()}}(t);break;case"LineString":e=function(t,n){return{type:"LineString",coordinates:t.getCoordinates()}}(t);break;case"Polygon":e=function(t,n){var e;n&&(e=n.rightHanded);return{type:"Polygon",coordinates:t.getCoordinates(e)}}(t,n);break;case"MultiPoint":e=function(t,n){return{type:"MultiPoint",coordinates:t.getCoordinates()}}(t);break;case"MultiLineString":e=function(t,n){return{type:"MultiLineString",coordinates:t.getCoordinates()}}(t);break;case"MultiPolygon":e=function(t,n){var e;n&&(e=n.rightHanded);return{type:"MultiPolygon",coordinates:t.getCoordinates(e)}}(t,n);break;case"GeometryCollection":e=function(t,n){return{type:"GeometryCollection",geometries:t.getGeometriesArray().map((function(t){var e=Object(d.a)({},n);return delete e.featureProjection,Z(t,e)}))}}(t,n);break;case"Circle":e={type:"GeometryCollection",geometries:[]};break;default:throw new Error("Unsupported geometry type: "+r)}return e}n.a=V}])]);